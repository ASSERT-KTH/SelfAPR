[P1_Replace_Type]^private static final  short  BYTE_MASK = 0xFF;^60^^^^^55^65^private static final int BYTE_MASK = 0xFF;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^private static final  short  SHORT = 2;^61^^^^^56^66^private static final int SHORT = 2;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^private static final int SHORT = -6;^61^^^^^56^66^private static final int SHORT = 2;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private static final  long  SHORT = 0;^61^^^^^56^66^private static final int SHORT = 2;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^private static final  short  WORD = 4;^62^^^^^57^67^private static final int WORD = 4;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^private static final int WORD = 9;^62^^^^^57^67^private static final int WORD = 4;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private static final int WORD = 4 + 2;^62^^^^^57^67^private static final int WORD = 4;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^private static final  short  BUFFER_SIZE = 512;^63^^^^^58^68^private static final int BUFFER_SIZE = 512;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^private static final int BUFFER_SIZE = 516;^63^^^^^58^68^private static final int BUFFER_SIZE = 512;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private static final int BUFFER_SIZE = 62;^63^^^^^58^68^private static final int BUFFER_SIZE = 512;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^private static final  short  DEFLATER_BLOCK_SIZE = 8192;^71^^^^^66^76^private static final int DEFLATER_BLOCK_SIZE = 8192;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^private static final int DEFLATER_BLOCK_SIZE = 8196;^71^^^^^66^76^private static final int DEFLATER_BLOCK_SIZE = 8192;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private static final int DEFLATER_BLOCK_SIZE = 4;^71^^^^^66^76^private static final int DEFLATER_BLOCK_SIZE = 8192;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^public static final  short  DEFLATED = java.util.zip.ZipEntry.DEFLATED;^76^^^^^71^81^public static final int DEFLATED = java.util.zip.ZipEntry.DEFLATED;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^public static final  short  DEFAULT_COMPRESSION = Deflater.DEFAULT_COMPRESSION;^81^^^^^76^86^public static final int DEFAULT_COMPRESSION = Deflater.DEFAULT_COMPRESSION;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^public static final  long  DEFAULT_COMPRESSION = Deflater.DEFAULT_COMPRESSION;^81^^^^^76^86^public static final int DEFAULT_COMPRESSION = Deflater.DEFAULT_COMPRESSION;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^public static final  short  STORED = java.util.zip.ZipEntry.STORED;^86^^^^^81^91^public static final int STORED = java.util.zip.ZipEntry.STORED;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^public static final  long  STORED = java.util.zip.ZipEntry.STORED;^86^^^^^81^91^public static final int STORED = java.util.zip.ZipEntry.STORED;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^static final char DEFAULT_ENCODING = ZipEncodingHelper.UTF8;^91^^^^^86^96^static final String DEFAULT_ENCODING = ZipEncodingHelper.UTF8;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^public static final  short  EFS_FLAG = 1 << 11;^97^^^^^92^102^public static final int EFS_FLAG = 1 << 11;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P2_Replace_Operator]^public static final int EFS_FLAG = 1  >>  11;^97^^^^^92^102^public static final int EFS_FLAG = 1 << 11;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^public static final int EFS_FLAG = 0 << 00;^97^^^^^92^102^public static final int EFS_FLAG = 1 << 11;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^public static final int EFS_FLAG = 1 << 18;^97^^^^^92^102^public static final int EFS_FLAG = 1 << 11;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^public static final int EFS_FLAG ;^97^^^^^92^102^public static final int EFS_FLAG = 1 << 11;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^private char comment = "";^107^^^^^102^112^private String comment = "";^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^private  long  level = DEFAULT_COMPRESSION;^112^^^^^107^117^private int level = DEFAULT_COMPRESSION;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^private boolean hasCompressionLevelChanged = true;^118^^^^^113^123^private boolean hasCompressionLevelChanged = false;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private boolean hasCompressionLevelChanged ;^118^^^^^113^123^private boolean hasCompressionLevelChanged = false;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^private  long  method = java.util.zip.ZipEntry.DEFLATED;^123^^^^^118^128^private int method = java.util.zip.ZipEntry.DEFLATED;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private int method  = null ;^123^^^^^118^128^private int method = java.util.zip.ZipEntry.DEFLATED;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^private final  Set  entries = new Linked Set  (  ) ;^128^^^^^123^133^private final List entries = new LinkedList (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private final  ArrayList  entries = new Linked ArrayList  (  ) ;^128^^^^^123^133^private final List entries = new LinkedList (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private  CRC32 crc = new CRC32 (  ) ;^133^^^^^128^138^private final CRC32 crc = new CRC32 (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^private  int  written = 0;^138^^^^^133^143^private long written = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^private long written = -4;^138^^^^^133^143^private long written = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private long written ;^138^^^^^133^143^private long written = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^private  short  dataStart = 0;^143^^^^^138^148^private long dataStart = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^private long dataStart = -4;^143^^^^^138^148^private long dataStart = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private long dataStart ;^143^^^^^138^148^private long dataStart = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^private  int  localDataStart = 0;^149^^^^^144^154^private long localDataStart = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^private long localDataStart = 3;^149^^^^^144^154^private long localDataStart = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private long localDataStart ;^149^^^^^144^154^private long localDataStart = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^private  int  cdOffset = 0;^154^^^^^149^159^private long cdOffset = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^private long cdOffset = -1;^154^^^^^149^159^private long cdOffset = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private long cdOffset  = null ;^154^^^^^149^159^private long cdOffset = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^private  int  cdLength = 0;^159^^^^^154^164^private long cdLength = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^private long cdLength = 9;^159^^^^^154^164^private long cdLength = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private long cdLength  = null ;^159^^^^^154^164^private long cdLength = 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^private static final byte[] ZERO = {9, 9};^164^^^^^159^169^private static final byte[] ZERO = {0, 0};^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^private static final byte[] ZERO = {-8, -8};^164^^^^^159^169^private static final byte[] ZERO = {0, 0};^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private static final byte[] ZERO = {3, 3};^164^^^^^159^169^private static final byte[] ZERO = {0, 0};^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^private static final byte[] LZERO = {-3, -3, -3, -3};^169^^^^^164^174^private static final byte[] LZERO = {0, 0, 0, 0};^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^private static final byte[] LZERO = {-2, -2, -2, -2};^169^^^^^164^174^private static final byte[] LZERO = {0, 0, 0, 0};^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^private static final byte[] LZERO = {2, 2, 2, 2};^169^^^^^164^174^private static final byte[] LZERO = {0, 0, 0, 0};^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^private static final byte[] LZERO = {4, 4, 4, 4};^169^^^^^164^174^private static final byte[] LZERO = {0, 0, 0, 0};^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private static  byte[] LZERO = {0, 0, 0, 0};^169^^^^^164^174^private static final byte[] LZERO = {0, 0, 0, 0};^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private  Map offsets = new HashMap (  ) ;^174^^^^^169^179^private final Map offsets = new HashMap (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^private char encoding = DEFAULT_ENCODING;^183^^^^^178^188^private String encoding = DEFAULT_ENCODING;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private String encoding  = null ;^183^^^^^178^188^private String encoding = DEFAULT_ENCODING;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private ZipEncoding zipEncoding  = null ;^191^192^^^^191^192^private ZipEncoding zipEncoding = ZipEncodingHelper.getZipEncoding ( DEFAULT_ENCODING ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^protected final Deflater def = new Deflater ( level, false ) ;^198^^^^^193^203^protected final Deflater def = new Deflater ( level, true ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^protected  Deflater def = new Deflater ( level, false ) ;^198^^^^^193^203^protected final Deflater def = new Deflater ( level, true ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private  byte[] buf = new byte[BUFFER_SIZE];^204^^^^^199^209^private final byte[] buf = new byte[BUFFER_SIZE];^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private  RandomAccessFile raf;^209^^^^^204^214^private final RandomAccessFile raf;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^private boolean useEFS = false;^216^^^^^211^221^private boolean useEFS = true;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^private boolean fallbackToUTF8 = true;^221^^^^^216^226^private boolean fallbackToUTF8 = false;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private boolean fallbackToUTF8  = null ;^221^^^^^216^226^private boolean fallbackToUTF8 = false;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private UnicodeExtraFieldPolicy createUnicodeExtraFields  = null ;^226^227^^^^226^227^private UnicodeExtraFieldPolicy createUnicodeExtraFields = UnicodeExtraFieldPolicy.NEVER;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^static final byte[] LFH_SIG ;^589^^^^^584^594^static final byte[] LFH_SIG = ZipLong.getBytes ( 0X04034B50L ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^static final byte[] DD_SIG  = null ;^593^^^^^588^598^static final byte[] DD_SIG = ZipLong.getBytes ( 0X08074B50L ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^static  byte[] EOCD_SIG = ZipLong.getBytes ( 0X06054B50L ) ;^601^^^^^596^606^static final byte[] EOCD_SIG = ZipLong.getBytes ( 0X06054B50L ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^public static final UnicodeExtraFieldPolicy ALWAYS = new UnicodeExtraFieldPolicy ( "a" ) ;^923^924^^^^923^924^public static final UnicodeExtraFieldPolicy ALWAYS = new UnicodeExtraFieldPolicy ( "always" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^public  final UnicodeExtraFieldPolicy ALWAYS = new UnicodeExtraFieldPolicy ( "always" ) ;^923^924^^^^923^924^public static final UnicodeExtraFieldPolicy ALWAYS = new UnicodeExtraFieldPolicy ( "always" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^public static final UnicodeExtraFieldPolicy NEVER = new UnicodeExtraFieldPolicy ( "neve" ) ;^928^929^^^^928^929^public static final UnicodeExtraFieldPolicy NEVER = new UnicodeExtraFieldPolicy ( "never" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^private static final UnicodeExtraFieldPolicy NEVER = new UnicodeExtraFieldPolicy ( "never" ) ;^928^929^^^^928^929^public static final UnicodeExtraFieldPolicy NEVER = new UnicodeExtraFieldPolicy ( "never" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P3_Replace_Literal]^public static final UnicodeExtraFieldPolicy NOT_ENCODEABLE = new UnicodeExtraFieldPolicy ( "not encodeot encodeable" ) ;^934^935^^^^934^935^public static final UnicodeExtraFieldPolicy NOT_ENCODEABLE = new UnicodeExtraFieldPolicy ( "not encodeable" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^public  final UnicodeExtraFieldPolicy NOT_ENCODEABLE = new UnicodeExtraFieldPolicy ( "not encodeable" ) ;^934^935^^^^934^935^public static final UnicodeExtraFieldPolicy NOT_ENCODEABLE = new UnicodeExtraFieldPolicy ( "not encodeable" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P1_Replace_Type]^private final char name;^937^^^^^932^942^private final String name;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [VARIABLES] 
[P8_Replace_Mix]^this.out =  null;^234^^^^^233^236^this.out = out;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] OutputStream)   OutputStream out [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  out  String  DEFAULT_ENCODING  comment  encoding  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.method = method;this.out = out;^234^^^^^233^236^this.out = out;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] OutputStream)   OutputStream out [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  out  String  DEFAULT_ENCODING  comment  encoding  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.raf = null;this.out = out;^234^^^^^233^236^this.out = out;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] OutputStream)   OutputStream out [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  out  String  DEFAULT_ENCODING  comment  encoding  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.comment = comment;this.out = out;^234^^^^^233^236^this.out = out;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] OutputStream)   OutputStream out [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  out  String  DEFAULT_ENCODING  comment  encoding  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out = o;this.out = out;^234^^^^^233^236^this.out = out;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] OutputStream)   OutputStream out [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  out  String  DEFAULT_ENCODING  comment  encoding  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^this.raf = this;^235^^^^^233^236^this.raf = null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] OutputStream)   OutputStream out [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  out  String  DEFAULT_ENCODING  comment  encoding  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^_raf = null;this.raf = null;^235^^^^^233^236^this.raf = null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] OutputStream)   OutputStream out [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  out  String  DEFAULT_ENCODING  comment  encoding  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.out = out;this.raf = null;^235^^^^^233^236^this.raf = null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] OutputStream)   OutputStream out [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  out  String  DEFAULT_ENCODING  comment  encoding  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry = null;this.raf = null;^235^^^^^233^236^this.raf = null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] OutputStream)   OutputStream out [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  out  String  DEFAULT_ENCODING  comment  encoding  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.level = level;this.raf = null;^235^^^^^233^236^this.raf = null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] OutputStream)   OutputStream out [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  out  String  DEFAULT_ENCODING  comment  encoding  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( _raf == null )  {^251^^^^^244^263^if  ( _raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P5_Replace_Variable]^if  ( raf != null )  {^251^^^^^244^263^if  ( _raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P8_Replace_Mix]^if  ( _raf != true )  {^251^^^^^244^263^if  ( _raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P9_Replace_Statement]^if  ( out != null )  {^251^^^^^244^263^if  ( _raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P9_Replace_Statement]^if  ( entry == null )  {^251^^^^^244^263^if  ( _raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P15_Unwrap_Block]^try {    _raf.close();} catch (java.io.IOException inner) {}; _raf = null;^251^252^253^254^^244^263^if  ( _raf != null )  { try { _raf.close (  ) ; } catch  ( IOException inner )  { }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P16_Remove_Block]^^251^252^253^254^^244^263^if  ( _raf != null )  { try { _raf.close (  ) ; } catch  ( IOException inner )  { }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P13_Insert_Block]^if  ( _raf != null )  {     try {         _raf.close (  ) ;     } catch  ( IOException inner )  {     }     _raf = null; }^252^^^^^244^263^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P7_Replace_Invocation]^_raf.seek (  ) ;^253^^^^^244^263^_raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P7_Replace_Invocation]^_raf .getFilePointer (  )  ;^253^^^^^244^263^_raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P14_Delete_Statement]^^253^^^^^244^263^_raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^out.flush (  ) ;_raf.close (  ) ;^253^^^^^244^263^_raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^finish (  ) ;_raf.close (  ) ;^253^^^^^244^263^_raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^crc.reset (  ) ;_raf.close (  ) ;^253^^^^^244^263^_raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^out.close (  ) ;_raf.close (  ) ;^253^^^^^244^263^_raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^def.finish (  ) ;_raf.close (  ) ;^253^^^^^244^263^_raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^entries.clear (  ) ;_raf.close (  ) ;^253^^^^^244^263^_raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^def.reset (  ) ;_raf.close (  ) ;^253^^^^^244^263^_raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^_raf.setLength ( 0 ) ;_raf.close (  ) ;^253^^^^^244^263^_raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^raf.close (  ) ;_raf.close (  ) ;^253^^^^^244^263^_raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^deflate (  ) ;_raf.close (  ) ;^253^^^^^244^263^_raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P8_Replace_Mix]^_raf = false;^257^^^^^244^263^_raf = null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^this.raf = null;_raf = null;^257^^^^^244^263^_raf = null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^entry = null;_raf = null;^257^^^^^244^263^_raf = null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^raf = _raf;_raf = null;^257^^^^^244^263^_raf = null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P3_Replace_Literal]^_raf = new RandomAccessFile ( file, "w" ) ;^248^^^^^244^263^_raf = new RandomAccessFile ( file, "rw" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P8_Replace_Mix]^_raf =  new RandomAccessFile ( null, "rw" ) ;^248^^^^^244^263^_raf = new RandomAccessFile ( file, "rw" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P3_Replace_Literal]^_raf.setLength ( SHORT ) ;^249^^^^^244^263^_raf.setLength ( 0 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P7_Replace_Invocation]^_raf.RandomAccessFile ( 0 ) ;^249^^^^^244^263^_raf.setLength ( 0 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P7_Replace_Invocation]^_raf .getFilePointer (  )  ;^249^^^^^244^263^_raf.setLength ( 0 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P14_Delete_Statement]^^249^^^^^244^263^_raf.setLength ( 0 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^crc.reset (  ) ;_raf.setLength ( 0 ) ;^249^^^^^244^263^_raf.setLength ( 0 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^def.reset (  ) ;_raf.setLength ( 0 ) ;^249^^^^^244^263^_raf.setLength ( 0 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^_raf.close (  ) ;_raf.setLength ( 0 ) ;^249^^^^^244^263^_raf.setLength ( 0 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^raf.close (  ) ;_raf.setLength ( 0 ) ;^249^^^^^244^263^_raf.setLength ( 0 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P12_Insert_Condition]^if  ( length > 0 )  { _raf.setLength ( 0 ) ; }^249^^^^^244^263^_raf.setLength ( 0 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P8_Replace_Mix]^_raf = this;^257^^^^^244^263^_raf = null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P8_Replace_Mix]^o =  new FileOutputStream ( null ) ;^259^^^^^244^263^o = new FileOutputStream ( file ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P3_Replace_Literal]^_raf.setLength ( DEFLATER_BLOCK_SIZE ) ;^249^^^^^244^263^_raf.setLength ( 0 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P5_Replace_Variable]^out = out;^261^^^^^244^263^out = o;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P8_Replace_Mix]^out =  null;^261^^^^^244^263^out = o;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^this.out = out;out = o;^261^^^^^244^263^out = o;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P5_Replace_Variable]^raf = raf;^262^^^^^244^263^raf = _raf;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P8_Replace_Mix]^raf =  null;^262^^^^^244^263^raf = _raf;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P11_Insert_Donor_Statement]^_raf = null;raf = _raf;^262^^^^^244^263^raf = _raf;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] File)   File file [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  name  IOException  e  inner  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  File  file  
[P5_Replace_Variable]^name = name;^939^^^^^938^940^name = n;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] String)   String n [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^name =  null;^939^^^^^938^940^name = n;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] String)   String n [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^return raf == null;^275^^^^^274^276^return raf != null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] isSeekable [RETURN_TYPE] boolean   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^return _raf != null;^275^^^^^274^276^return raf != null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] isSeekable [RETURN_TYPE] boolean   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^return _raf ;^275^^^^^274^276^return raf != null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] isSeekable [RETURN_TYPE] boolean   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^this.encoding =  name;^288^^^^^287^291^this.encoding = encoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entryEncoding = zipEncoding;this.encoding = encoding;^288^^^^^287^291^this.encoding = encoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.method = method;this.encoding = encoding;^288^^^^^287^291^this.encoding = encoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.comment = comment;this.encoding = encoding;^288^^^^^287^291^this.encoding = encoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( n ) ;^289^^^^^287^291^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^this.zipEncoding = ZipEncodingHelper.isUTF8 ( encoding ) ;^289^^^^^287^291^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^this.zipEncoding =  ZipEncodingHelper.getZipEncoding ( null ) ;^289^^^^^287^291^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^289^^^^^287^291^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^useEFS &= ZipEncodingHelper.isUTF8 ( encoding ) ;this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^289^^^^^287^291^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^289^^^^^287^291^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( name ) ;^289^^^^^287^291^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^289^^^^^287^291^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^useEFS &= ZipEncodingHelper.isUTF8 ( n ) ;^290^^^^^287^291^useEFS &= ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^useEFS &= ZipEncodingHelper.getZipEncoding ( encoding ) ;^290^^^^^287^291^useEFS &= ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^useEFS &=  ZipEncodingHelper.isUTF8 ( name ) ;^290^^^^^287^291^useEFS &= ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;useEFS &= ZipEncodingHelper.isUTF8 ( encoding ) ;^290^^^^^287^291^useEFS &= ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;useEFS &= ZipEncodingHelper.isUTF8 ( encoding ) ;^290^^^^^287^291^useEFS &= ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;useEFS &= ZipEncodingHelper.isUTF8 ( encoding ) ;^290^^^^^287^291^useEFS &= ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^useEFS &= ZipEncodingHelper.getZipEncoding ( n ) ;^290^^^^^287^291^useEFS &= ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^290^^^^^287^291^useEFS &= ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setEncoding [RETURN_TYPE] void   String encoding [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^return n;^299^^^^^298^300^return encoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] getEncoding [RETURN_TYPE] String   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^return name;^299^^^^^298^300^return encoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] getEncoding [RETURN_TYPE] String   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^useEFS = b || ZipEncodingHelper.isUTF8 ( encoding ) ;^309^^^^^308^310^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setUseLanguageEncodingFlag [RETURN_TYPE] void   boolean b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^useEFS = useEFS && ZipEncodingHelper.isUTF8 ( encoding ) ;^309^^^^^308^310^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setUseLanguageEncodingFlag [RETURN_TYPE] void   boolean b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^useEFS = b && ZipEncodingHelper.isUTF8 ( name ) ;^309^^^^^308^310^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setUseLanguageEncodingFlag [RETURN_TYPE] void   boolean b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^useEFS = encoding && ZipEncodingHelper.isUTF8 ( b ) ;^309^^^^^308^310^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setUseLanguageEncodingFlag [RETURN_TYPE] void   boolean b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^useEFS =  hasCompressionLevelChanged && ZipEncodingHelper.isUTF8 ( encoding ) ;^309^^^^^308^310^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setUseLanguageEncodingFlag [RETURN_TYPE] void   boolean b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;^309^^^^^308^310^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setUseLanguageEncodingFlag [RETURN_TYPE] void   boolean b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;^309^^^^^308^310^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setUseLanguageEncodingFlag [RETURN_TYPE] void   boolean b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^useEFS &= ZipEncodingHelper.isUTF8 ( encoding ) ;useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;^309^^^^^308^310^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setUseLanguageEncodingFlag [RETURN_TYPE] void   boolean b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^309^^^^^308^310^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setUseLanguageEncodingFlag [RETURN_TYPE] void   boolean b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^createUnicodeExtraFields = createUnicodeExtraFields;^318^^^^^317^319^createUnicodeExtraFields = b;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setCreateUnicodeExtraFields [RETURN_TYPE] void   UnicodeExtraFieldPolicy b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^createUnicodeExtraFields =  null;^318^^^^^317^319^createUnicodeExtraFields = b;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setCreateUnicodeExtraFields [RETURN_TYPE] void   UnicodeExtraFieldPolicy b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^fallbackToUTF8 =  useEFS;^328^^^^^327^329^fallbackToUTF8 = b;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setFallbackToUTF8 [RETURN_TYPE] void   boolean b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^deflate (  ) ;^337^^^^^336^346^closeEntry (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^337^^^^^336^346^closeEntry (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^crc.reset (  ) ;closeEntry (  ) ;^337^^^^^336^346^closeEntry (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^cdOffset = localDataStart;^338^^^^^336^346^cdOffset = written;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^cdOffset  = null ;^338^^^^^336^346^cdOffset = written;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^localDataStart = written;cdOffset = written;^338^^^^^336^346^cdOffset = written;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^dataStart = written;cdOffset = written;^338^^^^^336^346^cdOffset = written;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^for  ( Iterator entries = i.iterator (  ) ; i.hasNext (  ) ;  )  {^339^^^^^336^346^for  ( Iterator i = entries.iterator (  ) ; i.hasNext (  ) ;  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^for  ( Iterator i = entries.clear (  ) ; i.hasNext (  ) ;  )  {^339^^^^^336^346^for  ( Iterator i = entries.iterator (  ) ; i.hasNext (  ) ;  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeLocalFileHeader (  ( ZipArchiveEntry )  i.next (  )  ) ;^340^^^^^336^346^writeCentralFileHeader (  ( ZipArchiveEntry )  i.next (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeCentralFileHeader (  ( ZipArchiveEntry )  i .hasNext (  )   ) ;^340^^^^^336^346^writeCentralFileHeader (  ( ZipArchiveEntry )  i.next (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^340^^^^^336^346^writeCentralFileHeader (  ( ZipArchiveEntry )  i.next (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^putNextEntry (  ( ZipArchiveEntry )  entry ) ;writeCentralFileHeader (  ( ZipArchiveEntry )  i.next (  )  ) ;^340^^^^^336^346^writeCentralFileHeader (  ( ZipArchiveEntry )  i.next (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^339^340^341^^^336^346^for  ( Iterator i = entries.iterator (  ) ; i.hasNext (  ) ;  )  { writeCentralFileHeader (  ( ZipArchiveEntry )  i.next (  )  ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^cdLength = written  <=  cdOffset;^342^^^^^336^346^cdLength = written - cdOffset;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^cdLength = localDataStart - cdOffset;^342^^^^^336^346^cdLength = written - cdOffset;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^cdLength = written - localDataStart;^342^^^^^336^346^cdLength = written - cdOffset;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^cdLength = cdOffset - written;^342^^^^^336^346^cdLength = written - cdOffset;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^cdLength  = null ;^342^^^^^336^346^cdLength = written - cdOffset;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry (  ) ;^343^^^^^336^346^writeCentralDirectoryEnd (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^343^344^^^^336^346^writeCentralDirectoryEnd (  ) ; offsets.clear (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] extra = ze.getCentralDirectoryExtra (  ) ;writeCentralDirectoryEnd (  ) ;^343^^^^^336^346^writeCentralDirectoryEnd (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^344^^^^^336^346^offsets.clear (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.flush (  ) ;offsets.clear (  ) ;^344^^^^^336^346^offsets.clear (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.close (  ) ;offsets.clear (  ) ;^344^^^^^336^346^offsets.clear (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entries.clear (  ) ;offsets.clear (  ) ;^344^^^^^336^346^offsets.clear (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.close (  ) ;offsets.clear (  ) ;^344^^^^^336^346^offsets.clear (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entries.iterator (  ) ;^345^^^^^336^346^entries.clear (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^345^^^^^336^346^entries.clear (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.close (  ) ;entries.clear (  ) ;^345^^^^^336^346^entries.clear (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entries.add ( entry ) ;entries.clear (  ) ;^345^^^^^336^346^entries.clear (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^offsets.clear (  ) ;entries.clear (  ) ;^345^^^^^336^346^entries.clear (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.reset (  ) ;entries.clear (  ) ;^345^^^^^336^346^entries.clear (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^_raf.close (  ) ;entries.clear (  ) ;^345^^^^^336^346^entries.clear (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.close (  ) ;entries.clear (  ) ;^345^^^^^336^346^entries.clear (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] finish [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  Iterator  i  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry != null )  {^353^^^^^338^368^if  ( entry == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( entry == false )  {^353^^^^^338^368^if  ( entry == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( raf != null )  {^353^^^^^338^368^if  ( entry == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( _raf != null )  {^353^^^^^338^368^if  ( entry == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( out != null )  {^353^^^^^338^368^if  ( entry == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( comm == null )  {^353^^^^^338^368^if  ( entry == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P15_Unwrap_Block]^return ;^353^354^355^^^338^368^if  ( entry == null )  { return; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P16_Remove_Block]^^353^354^355^^^338^368^if  ( entry == null )  { return; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( out )  != null )  {     out.close (  ) ; }^353^^^^^338^368^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( raf )  != null )  {     raf.close (  ) ; }^353^^^^^338^368^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P13_Insert_Block]^if  ( comm == null )  {     comm = ""; }^353^^^^^338^368^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( out )  != null )  {     out.flush (  ) ; }^353^^^^^338^368^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P1_Replace_Type]^int  realCrc = crc.getValue (  ) ;^357^^^^^342^372^long realCrc = crc.getValue (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^long realCrc = crc.reset (  ) ;^357^^^^^342^372^long realCrc = crc.getValue (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^long realCrc = crc .update ( LFH_SIG , DEFLATER_BLOCK_SIZE , WORD )  ;^357^^^^^342^372^long realCrc = crc.getValue (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^long save = raf.getFilePointer (  ) ;long realCrc = crc.getValue (  ) ;^357^^^^^342^372^long realCrc = crc.getValue (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^long realCrc = crc .update ( buf , BYTE_MASK , SHORT )  ;^357^^^^^342^372^long realCrc = crc.getValue (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^357^358^^^^342^372^long realCrc = crc.getValue (  ) ; crc.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^crc.CRC32 (  ) ;^358^^^^^343^373^crc.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^358^^^^^343^373^crc.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^closeEntry (  ) ;crc.reset (  ) ;^358^^^^^343^373^crc.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.close (  ) ;crc.reset (  ) ;^358^^^^^343^373^crc.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.reset (  ) ;crc.reset (  ) ;^358^^^^^343^373^crc.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^_raf.setLength ( 0 ) ;crc.reset (  ) ;^358^^^^^343^373^crc.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^_raf.close (  ) ;crc.reset (  ) ;^358^^^^^343^373^crc.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.close (  ) ;crc.reset (  ) ;^358^^^^^343^373^crc.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^while  ( !def.finish (  )  )  {^362^^^^^347^377^while  ( !def.finished (  )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^finish (  ) ;^363^^^^^348^378^deflate (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^363^^^^^348^378^deflate (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.flush (  ) ;deflate (  ) ;^363^^^^^348^378^deflate (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.close (  ) ;deflate (  ) ;^363^^^^^348^378^deflate (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.finish (  ) ;deflate (  ) ;^363^^^^^348^378^deflate (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.reset (  ) ;deflate (  ) ;^363^^^^^348^378^deflate (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^_raf.close (  ) ;deflate (  ) ;^363^^^^^348^378^deflate (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.close (  ) ;deflate (  ) ;^363^^^^^348^378^deflate (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getMethod (  )  <= DEFLATED )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( entry.getMethod (  )  == method )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( DEFLATED.getMethod (  )  == entry )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( raf == null )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( entry.getCrc() != realCrc )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  (  (  ( "bad CRC checksum for entry " +  ( entry.getName (  )  )  )  + ": " )  +  ( toHexString ( entry.getCrc (  )  )  )  )  + " instead of " + toHexString ( realCrc ) )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  (  ( "bad CRC checksum for entry " +  ( entry.getName (  )  )  )  + ": " )  +  ( toHexString ( entry.getCrc (  )  )  )  + " instead of " )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  ( "bad CRC checksum for entry " +  ( entry.getName (  )  )  )  + ": " + toHexString ( entry.getCrc (  )  ) )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( "bad CRC checksum for entry " +  ( entry.getName (  )  )  + ": " )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( "bad CRC checksum for entry " + entry.getName (  ) )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( entry.getSize() != written - dataStart )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( written - dataStart )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  (  (  ( "bad size for entry " +  ( entry.getName (  )  )  )  + ": " )  +  ( entry.getSize (  )  )  )  + " instead of " +  ( written )  -  ( dataStart ) )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  (  ( "bad size for entry " +  ( entry.getName (  )  )  )  + ": " )  +  ( entry.getSize (  )  )  + " instead of " )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  ( "bad size for entry " +  ( entry.getName (  )  )  )  + ": " + entry.getSize (  ) )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( "bad size for entry " +  ( entry.getName (  )  )  + ": " )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( "bad size for entry " + entry.getName (  ) )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry.getTime (  )  == DEFLATED )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( entry.getMethod (  )  == SHORT )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getMethod (  )  == -1 )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getCrc (  )  == -1 )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getMethod (  )  == STORED && raf == null )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getSize (  )  == -1 )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getTime (  )  == -1 )  {^360^^^^^345^375^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P15_Unwrap_Block]^def.finish(); while (!(def.finished())) {    deflate();} ; entry.setSize(org.apache.commons.compress.archivers.zip.ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(org.apache.commons.compress.archivers.zip.ZipUtil.adjustToLong(def.getTotalOut())); entry.setCrc(realCrc); def.reset(); written += entry.getCompressedSize();^360^361^362^363^364^345^375^if  ( entry.getMethod (  )  == DEFLATED )  { def.finish (  ) ; while  ( !def.finished (  )  )  { deflate (  ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P16_Remove_Block]^^360^361^362^363^364^345^375^if  ( entry.getMethod (  )  == DEFLATED )  { def.finish (  ) ; while  ( !def.finished (  )  )  { deflate (  ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^} else if  ( raf != null )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^} else if  ( _raf == null )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^} else if  ( entry.getCrc() != realCrc )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^} else if  (  (  (  ( "bad CRC checksum for entry " +  ( entry.getName (  )  )  )  + ": " )  +  ( toHexString ( entry.getCrc (  )  )  )  )  + " instead of " + toHexString ( realCrc ) )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^} else if  (  (  ( "bad CRC checksum for entry " +  ( entry.getName (  )  )  )  + ": " )  +  ( toHexString ( entry.getCrc (  )  )  )  + " instead of " )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^} else if  (  ( "bad CRC checksum for entry " +  ( entry.getName (  )  )  )  + ": " + toHexString ( entry.getCrc (  )  ) )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^} else if  ( "bad CRC checksum for entry " +  ( entry.getName (  )  )  + ": " )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^} else if  ( "bad CRC checksum for entry " + entry.getName (  ) )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^} else if  ( entry.getSize() != written - dataStart )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^} else if  ( written - dataStart )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^} else if  (  (  (  ( "bad size for entry " +  ( entry.getName (  )  )  )  + ": " )  +  ( entry.getSize (  )  )  )  + " instead of " +  ( written )  -  ( dataStart ) )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^} else if  (  (  ( "bad size for entry " +  ( entry.getName (  )  )  )  + ": " )  +  ( entry.getSize (  )  )  + " instead of " )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^} else if  (  ( "bad size for entry " +  ( entry.getName (  )  )  )  + ": " + entry.getSize (  ) )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^} else if  ( "bad size for entry " +  ( entry.getName (  )  )  + ": " )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^} else if  ( "bad size for entry " + entry.getName (  ) )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^} else {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^}  if  ( _raf == this )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P1_Replace_Type]^short  size = written - dataStart;^390^^^^^373^395^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^long size = written  &&  dataStart;^390^^^^^373^395^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^long size = written - written;^390^^^^^373^395^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^long size = dataStart - written;^390^^^^^373^395^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P12_Insert_Condition]^if  ( entry.getSize (  )  != written - dataStart )  { long size = written - dataStart; }^390^^^^^373^395^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^entry.setSize ( realCrc ) ;^392^^^^^373^395^entry.setSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.setTime ( size ) ;^392^^^^^373^395^entry.setSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^entry.setSize ( written ) ;^392^^^^^373^395^entry.setSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^392^393^^^^373^395^entry.setSize ( size ) ; entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^entry.setCompressedSize ( realCrc ) ;^393^^^^^373^395^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.setSize ( size ) ;^393^^^^^373^395^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^393^^^^^373^395^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += entry.getCompressedSize (  ) ;entry.setCompressedSize ( size ) ;^393^^^^^373^395^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setCompressedSize ( entry.getSize (  )  ) ;entry.setCompressedSize ( size ) ;^393^^^^^373^395^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setSize ( size ) ;entry.setCompressedSize ( size ) ;^393^^^^^373^395^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^entry.setCrc ( save ) ;^394^^^^^373^395^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.setSize ( realCrc ) ;^394^^^^^373^395^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^entry.setCrc ( written ) ;^394^^^^^373^395^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^394^^^^^373^395^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setMethod ( method ) ;entry.setCrc ( realCrc ) ;^394^^^^^373^395^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entries.add ( entry ) ;entry.setCrc ( realCrc ) ;^394^^^^^373^395^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setSize ( size ) ;entry.setCrc ( realCrc ) ;^394^^^^^373^395^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P12_Insert_Condition]^if  ( entry.getCrc (  )  != realCrc )  { entry.setCrc ( realCrc ) ; }^394^^^^^373^395^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getCrc (  )  == realCrc )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( entry.getCrc (  )  != written )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( realCrc.getCrc (  )  != entry )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  (  (  ( "bad CRC checksum for entry " +  ( entry.getName (  )  )  )  + ": " )  +  ( toHexString ( entry.getCrc (  )  )  )  )  + " instead of " + toHexString ( realCrc ) )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  (  ( "bad CRC checksum for entry " +  ( entry.getName (  )  )  )  + ": " )  +  ( toHexString ( entry.getCrc (  )  )  )  + " instead of " )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  ( "bad CRC checksum for entry " +  ( entry.getName (  )  )  )  + ": " + toHexString ( entry.getCrc (  )  ) )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( "bad CRC checksum for entry " +  ( entry.getName (  )  )  + ": " )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( "bad CRC checksum for entry " + entry.getName (  ) )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry.getName (  )  != realCrc )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry .setCrc ( written )   != realCrc )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( entry.getCrc (  )  != size )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getMethod (  )  == DEFLATED )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getCrc (  )  == -1 )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getSize (  )  == -1 )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getTime (  )  == -1 )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( entry.getSize (  )  )  !=  (  ( written )  -  ( dataStart )  )  )  {     throw new ZipException (  (  (  (  (  ( "bad size for entry " +  ( entry.getName (  )  )  )  + ": " )  +  ( entry.getSize (  )  )  )  + " instead of " )  +  (  ( written )  -  ( dataStart )  )  )  ) ; }^374^^^^^359^389^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (   instanceof   )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  >  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  ==  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  >=  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry "  &&  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "C check" + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of stead "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^throw new ZipException ( "bad CRC checksum for entry " + entry.getTime (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getName (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( entry.getCrc (  )  )  != realCrc )  {     throw new ZipException (  (  (  (  (  ( "bad CRC checksum for entry " +  ( entry.getName (  )  )  )  + ": " )  +  ( toHexString ( entry.getCrc (  )  )  )  )  + " instead of " )  +  ( toHexString ( realCrc )  )  )  ) ; }^375^^^^^360^390^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  ||  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  &  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  !=  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry "  >>  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "CRad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ":" + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + ""^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^+ entry.getTime (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^376^377^378^379^^361^391^+ entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^+ Long.toHexString ( entry.getName (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^377^378^379^^^362^392^+ Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^+ Long.toHexString ( entry .setCrc ( size )   ) + " instead of " + Long.toHexString ( realCrc )  ) ;^377^378^379^^^362^392^+ Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^377^378^379^^^362^392^+ Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^+ Long.toHexString ( written )  ) ;^379^^^^^364^394^+ Long.toHexString ( realCrc )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^379^^^^^364^394^+ Long.toHexString ( realCrc )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getSize (  )  >= written - dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getSize (  )  != written  >  dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getSize (  )  != written  <  dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( entry.getSize (  )  != size - dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( entry.getSize (  )  != written - size )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( dataStart.getSize (  )  != written - entry )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( written.getSize (  )  != entry - dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( entry.getSize (  )  != dataStart - written )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( written - dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  (  (  ( "bad size for entry " +  ( entry.getName (  )  )  )  + ": " )  +  ( entry.getSize (  )  )  )  + " instead of " +  ( written )  -  ( dataStart ) )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  (  ( "bad size for entry " +  ( entry.getName (  )  )  )  + ": " )  +  ( entry.getSize (  )  )  + " instead of " )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  ( "bad size for entry " +  ( entry.getName (  )  )  )  + ": " + entry.getSize (  ) )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( "bad size for entry " +  ( entry.getName (  )  )  + ": " )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( "bad size for entry " + entry.getName (  ) )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry.setSize (  )  != written - dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( entry.setSize (  )  != written - size )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  <=  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  &&  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  >  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry "  |  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "size ad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ":" + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^throw new ZipException ( "bad size for entry " + entry.getTime (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.setSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( entry.getSize (  )  )  !=  (  ( written )  -  ( dataStart )  )  )  {     throw new ZipException (  (  (  (  (  ( "bad size for entry " +  ( entry.getName (  )  )  )  + ": " )  +  ( entry.getSize (  )  )  )  + " instead of " )  +  (  ( written )  -  ( dataStart )  )  )  ) ; }^383^^^^^368^398^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( entry.getCrc (  )  )  != realCrc )  {     throw new ZipException (  (  (  (  (  ( "bad CRC checksum for entry " +  ( entry.getName (  )  )  )  + ": " )  +  ( toHexString ( entry.getCrc (  )  )  )  )  + " instead of " )  +  ( toHexString ( realCrc )  )  )  ) ; }^383^^^^^368^398^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  >>  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  ^  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  ==  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  &  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry "  >>  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "z" + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry " + entry.getName (  )  + "" + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^+ entry.getTime (  )  + ": " + entry.getSize (  ) + " instead of " +  ( written - dataStart )  ) ;^384^385^386^387^^369^399^+ entry.getName (  )  + ": " + entry.getSize (  ) + " instead of " +  ( written - dataStart )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^+ entry.setSize (  ) + " instead of " +  ( written - dataStart )  ) ;^385^386^387^^^370^400^+ entry.getSize (  ) + " instead of " +  ( written - dataStart )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^385^386^387^^^370^400^+ entry.getSize (  ) + " instead of " +  ( written - dataStart )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  |  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry "  &  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( " ad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry .setCrc ( dataStart )   ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  <  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "ad size ad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " inste"^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  <=  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  <  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry "  ^  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry CRC che" + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": :" + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of st"^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (   instanceof   )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  ||  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  >=  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry "  <<  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry b" + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + "eadinstead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" ;^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry .setCrc ( size )   != realCrc )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^+ Long.toHexString ( entry .setCrc ( cdLength )   ) + " instead of " + Long.toHexString ( realCrc )  ) ;^377^378^379^^^362^392^+ Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getCrc (  )  >= realCrc )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry .setCrc ( cdLength )   != realCrc )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry .setCrc ( cdOffset )   != realCrc )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  <<  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  ^  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry "  ==  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry ba" + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + "" + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of nstead "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry .setCrc ( localDataStart )   ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry "  !=  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "sum for entrad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + "d oinstead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry .setCrc ( cdLength )   ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^+ Long.toHexString ( entry .setCrc ( realCrc )   ) + " instead of " + Long.toHexString ( realCrc )  ) ;^377^378^379^^^362^392^+ Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^+ Long.toHexString ( size )  ) ;^379^^^^^364^394^+ Long.toHexString ( realCrc )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getSize (  )  != written  &  dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( entry.getSize (  )  != written - save )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( entry.getSize (  )  != save - dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry "  ==  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "d" + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " ins"^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  |  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry "  ^  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry bad size f" + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of ead "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry "  >  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "ad CRC checksum for en" + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + "ad "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  <<  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "badad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + "stea"^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P1_Replace_Type]^int  size = written - dataStart;^390^^^^^375^405^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^long size = written  >=  dataStart;^390^^^^^375^405^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^long size = realCrc - dataStart;^390^^^^^375^405^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^long size = written - written;^390^^^^^375^405^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^long size = dataStart - written;^390^^^^^375^405^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P12_Insert_Condition]^if  ( entry.getSize (  )  != written - dataStart )  { long size = written - dataStart; }^390^^^^^375^405^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  >>  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "d" + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + "stead o"^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ; ;^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry " + entry.getName (  !=  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( " entad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of ad"^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^+ Long.toHexString ( entry .setCrc ( dataStart )   ) + " instead of " + Long.toHexString ( realCrc )  ) ;^377^378^379^^^362^392^+ Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^entry.setSize ( written ) ;^392^^^^^377^407^entry.setSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.setTime ( size ) ;^392^^^^^377^407^entry.setSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^392^^^^^377^407^entry.setSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^entry.setCompressedSize ( written ) ;^393^^^^^378^408^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.setSize ( size ) ;^393^^^^^378^408^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^entry.setSize ( save ) ;^393^^^^^378^408^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^393^394^^^^378^408^entry.setCompressedSize ( size ) ; entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += entry.getCompressedSize (  ) ;entry.setCompressedSize ( size ) ;^393^^^^^378^408^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setCompressedSize ( entry.getSize (  )  ) ;entry.setCompressedSize ( size ) ;^393^^^^^378^408^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setSize ( size ) ;entry.setCompressedSize ( size ) ;^393^^^^^378^408^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^entry.setCrc ( size ) ;^394^^^^^379^409^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.setSize ( realCrc ) ;^394^^^^^379^409^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^entry.setCrc ( written ) ;^394^^^^^379^409^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^394^^^^^379^409^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setMethod ( method ) ;entry.setCrc ( realCrc ) ;^394^^^^^379^409^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entries.add ( entry ) ;entry.setCrc ( realCrc ) ;^394^^^^^379^409^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setSize ( size ) ;entry.setCrc ( realCrc ) ;^394^^^^^379^409^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P12_Insert_Condition]^if  ( entry.getCrc (  )  != realCrc )  { entry.setCrc ( realCrc ) ; }^394^^^^^379^409^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^written += entry.setCompressedSize (  ) ;^372^^^^^357^387^written += entry.getCompressedSize (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^written + =  written +;^372^^^^^357^387^written += entry.getCompressedSize (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += name.limit (  ) ;written += entry.getCompressedSize (  ) ;^372^^^^^357^387^written += entry.getCompressedSize (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += commentB.limit (  ) ;written += entry.getCompressedSize (  ) ;^372^^^^^357^387^written += entry.getCompressedSize (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^def.finished (  ) ;^361^^^^^346^376^def.finish (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^361^^^^^346^376^def.finish (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.flush (  ) ;def.finish (  ) ;^361^^^^^346^376^def.finish (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^finish (  ) ;def.finish (  ) ;^361^^^^^346^376^def.finish (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.close (  ) ;def.finish (  ) ;^361^^^^^346^376^def.finish (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.reset (  ) ;def.finish (  ) ;^361^^^^^346^376^def.finish (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^_raf.close (  ) ;def.finish (  ) ;^361^^^^^346^376^def.finish (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.close (  ) ;def.finish (  ) ;^361^^^^^346^376^def.finish (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^deflate (  ) ;def.finish (  ) ;^361^^^^^346^376^def.finish (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P12_Insert_Condition]^if  ( !def.finished (  )  )  { def.finish (  ) ; }^361^^^^^346^376^def.finish (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^362^363^^^^347^377^while  ( !def.finished (  )  )  { deflate (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.getSize ( ZipUtil.adjustToLong ( def.getTotalIn (  )  )  ) ;^366^^^^^351^381^entry.setSize ( ZipUtil.adjustToLong ( def.getTotalIn (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.setSize ( ZipUtil.toDosTime ( def.getTotalIn (  )  )  ) ;^366^^^^^351^381^entry.setSize ( ZipUtil.adjustToLong ( def.getTotalIn (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.setSize ( ZipUtil .toDosTime (  )   ) ;^366^^^^^351^381^entry.setSize ( ZipUtil.adjustToLong ( def.getTotalIn (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.setSize ( ZipUtil.adjustToLong ( def.getTotalOut (  )  )  ) ;^366^^^^^351^381^entry.setSize ( ZipUtil.adjustToLong ( def.getTotalIn (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^366^367^^^^351^381^entry.setSize ( ZipUtil.adjustToLong ( def.getTotalIn (  )  )  ) ; entry.setCompressedSize ( ZipUtil.adjustToLong ( def.getTotalOut (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setCompressedSize ( ZipUtil.adjustToLong ( def.getTotalOut (  )  )  ) ;entry.setSize ( ZipUtil.adjustToLong ( def.getTotalIn (  )  )  ) ;^366^^^^^351^381^entry.setSize ( ZipUtil.adjustToLong ( def.getTotalIn (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;entry.setSize ( ZipUtil.adjustToLong ( def.getTotalIn (  )  )  ) ;^366^^^^^351^381^entry.setSize ( ZipUtil.adjustToLong ( def.getTotalIn (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^366^^^^^351^381^entry.setSize ( ZipUtil.adjustToLong ( def.getTotalIn (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.getCompressedSize ( ZipUtil.adjustToLong ( def.getTotalOut (  )  )  ) ;^367^^^^^352^382^entry.setCompressedSize ( ZipUtil.adjustToLong ( def.getTotalOut (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry .setCompressedSize (  )   ) ;^367^^^^^352^382^entry.setCompressedSize ( ZipUtil.adjustToLong ( def.getTotalOut (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.setCompressedSize ( ZipUtil.toDosTime ( def.getTotalOut (  )  )  ) ;^367^^^^^352^382^entry.setCompressedSize ( ZipUtil.adjustToLong ( def.getTotalOut (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.setCompressedSize ( ZipUtil .toDosTime (  )   ) ;^367^^^^^352^382^entry.setCompressedSize ( ZipUtil.adjustToLong ( def.getTotalOut (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.setCompressedSize ( ZipUtil.adjustToLong ( def.getTotalIn (  )  )  ) ;^367^^^^^352^382^entry.setCompressedSize ( ZipUtil.adjustToLong ( def.getTotalOut (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^367^368^^^^352^382^entry.setCompressedSize ( ZipUtil.adjustToLong ( def.getTotalOut (  )  )  ) ; entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setSize ( ZipUtil.adjustToLong ( def.getTotalIn (  )  )  ) ;entry.setCompressedSize ( ZipUtil.adjustToLong ( def.getTotalOut (  )  )  ) ;^367^^^^^352^382^entry.setCompressedSize ( ZipUtil.adjustToLong ( def.getTotalOut (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setCompressedSize ( entry.getSize (  )  ) ;entry.setCompressedSize ( ZipUtil.adjustToLong ( def.getTotalOut (  )  )  ) ;^367^^^^^352^382^entry.setCompressedSize ( ZipUtil.adjustToLong ( def.getTotalOut (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^367^^^^^352^382^entry.setCompressedSize ( ZipUtil.adjustToLong ( def.getTotalOut (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.setSize ( realCrc ) ;^368^^^^^353^383^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^entry.setCrc ( save ) ;^368^^^^^353^383^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^368^^^^^353^383^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setMethod ( method ) ;entry.setCrc ( realCrc ) ;^368^^^^^353^383^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entries.add ( entry ) ;entry.setCrc ( realCrc ) ;^368^^^^^353^383^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setSize ( size ) ;entry.setCrc ( realCrc ) ;^368^^^^^353^383^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P12_Insert_Condition]^if  ( entry.getCrc (  )  != realCrc )  { entry.setCrc ( realCrc ) ; }^368^^^^^353^383^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^def.finished (  ) ;^370^^^^^355^385^def.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^370^^^^^355^385^def.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^finish (  ) ;def.reset (  ) ;^370^^^^^355^385^def.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.setLevel ( level ) ;def.reset (  ) ;^370^^^^^355^385^def.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^crc.reset (  ) ;def.reset (  ) ;^370^^^^^355^385^def.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.seek ( save ) ;def.reset (  ) ;^370^^^^^355^385^def.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.close (  ) ;def.reset (  ) ;^370^^^^^355^385^def.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.finish (  ) ;def.reset (  ) ;^370^^^^^355^385^def.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entries.clear (  ) ;def.reset (  ) ;^370^^^^^355^385^def.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^_raf.setLength ( 0 ) ;def.reset (  ) ;^370^^^^^355^385^def.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^_raf.close (  ) ;def.reset (  ) ;^370^^^^^355^385^def.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.close (  ) ;def.reset (  ) ;^370^^^^^355^385^def.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^deflate (  ) ;def.reset (  ) ;^370^^^^^355^385^def.reset (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^372^^^^^357^387^written += entry.getCompressedSize (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;written += entry.getCompressedSize (  ) ;^372^^^^^357^387^written += entry.getCompressedSize (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;written += entry.getCompressedSize (  ) ;^372^^^^^357^387^written += entry.getCompressedSize (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setCompressedSize ( size ) ;written += entry.getCompressedSize (  ) ;^372^^^^^357^387^written += entry.getCompressedSize (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^}  if  ( raf == this )  {^373^^^^^358^388^} else if  ( raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^long size = save - dataStart;^390^^^^^373^395^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry .getSize (  )  ;^392^^^^^373^395^entry.setSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^entry.setTime ( written ) ;^392^^^^^373^395^entry.setSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^entry.setCompressedSize ( save ) ;^393^^^^^373^395^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry .getCompressedSize (  )  ;^393^^^^^373^395^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^entry.setSize ( save ) ;^393^^^^^373^395^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getCrc (  )  <= realCrc )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry .setCrc ( save )   != realCrc )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( entry.getCrc (  )  != save )  {^374^^^^^359^389^if  ( entry.getCrc (  )  != realCrc )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry "  <=  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "ntrad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of nstea"^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "ad CRC checksum for e" + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^return ;^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^+ Long.toHexString ( entry .setCrc ( save )   ) + " instead of " + Long.toHexString ( realCrc )  ) ;^377^378^379^^^362^392^+ Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^+ Long.toHexString ( save )  ) ;^379^^^^^364^394^+ Long.toHexString ( realCrc )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getSize (  )  == written - dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getSize (  )  != written  ^  dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getSize (  )  != written   instanceof   dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry "  &&  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry ad " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + "nst"^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry "  ||  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad" + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  &&  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry "  >=  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry .setCrc ( realCrc )   ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry "  >=  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "ze forad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry  CRC " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of ste"^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry "   instanceof   entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "ad size for entry" + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": :" + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of in"^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "baad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of tea"^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry .setCrc ( cdOffset )   ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad CRC checksum for entry "  |  entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "CRC" + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + "insteainstead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getSize (  )  != written  |  dataStart )  {^382^^^^^367^397^if  ( entry.getSize (  )  != written - dataStart )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry "  <=  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry s" + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of nstead"^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^written +;^372^^^^^357^387^written += entry.getCompressedSize (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "um fo" + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + "e"^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry  ent" + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of instead "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P1_Replace_Type]^short  size = written - dataStart;^390^^^^^375^405^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^long size = written  <=  dataStart;^390^^^^^375^405^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^long size = save - dataStart;^390^^^^^375^405^long size = written - dataStart;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad CRC checksum for entry bad " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^375^376^377^378^^360^390^throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "bad size for entry "  &  entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry  size for en" + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead o"^383^384^385^386^^368^398^throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^entry.setCrc ( written ) ;^368^^^^^353^383^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^+ Long.toHexString ( entry .setCrc ( cdOffset )   ) + " instead of " + Long.toHexString ( realCrc )  ) ;^377^378^379^^^362^392^+ Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^entry.setSize ( realCrc ) ;^392^^^^^377^407^entry.setSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^entry .getCompressedSize (  )  ;^393^^^^^378^408^entry.setCompressedSize ( size ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^entry .getCrc (  )  ;^394^^^^^379^409^entry.setCrc ( realCrc ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( raf == null )  {^399^^^^^384^414^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( _raf != null )  {^399^^^^^384^414^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( raf != false )  {^399^^^^^384^414^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( out != null )  {^399^^^^^384^414^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry == null )  {^399^^^^^384^414^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P1_Replace_Type]^int  save = raf.getFilePointer (  ) ;^400^^^^^385^415^long save = raf.getFilePointer (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^long save = raf.close (  ) ;^400^^^^^385^415^long save = raf.getFilePointer (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^long save = _raf.getFilePointer (  ) ;^400^^^^^385^415^long save = raf.getFilePointer (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^long realCrc = crc.getValue (  ) ;long save = raf.getFilePointer (  ) ;^400^^^^^385^415^long save = raf.getFilePointer (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^400^^^^^385^415^long save = raf.getFilePointer (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^raf.seek ( written ) ;^402^^^^^387^417^raf.seek ( localDataStart ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^raf.close ( localDataStart ) ;^402^^^^^387^417^raf.seek ( localDataStart ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^402^403^^^^387^417^raf.seek ( localDataStart ) ; writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.seek ( save ) ;raf.seek ( localDataStart ) ;^402^^^^^387^417^raf.seek ( localDataStart ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong .getBytes (  )   ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( entry.getName (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^403^404^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ; writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( entry .setCrc ( cdLength )   )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( entry .setCrc ( cdOffset )   )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( entry.setCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^404^405^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ; writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += entry.getCompressedSize (  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( entry.setSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setCompressedSize ( entry.getSize (  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^405^406^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ; raf.seek ( save ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^raf.seek ( size ) ;^406^^^^^391^421^raf.seek ( save ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^raf.setLength ( save ) ;^406^^^^^391^421^raf.seek ( save ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^raf .setLength ( dataStart )  ;^406^^^^^391^421^raf.seek ( save ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^raf.setLength ( realCrc ) ;^406^^^^^391^421^raf.seek ( save ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^406^^^^^391^421^raf.seek ( save ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.setLevel ( level ) ;raf.seek ( save ) ;^406^^^^^391^421^raf.seek ( save ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.seek ( localDataStart ) ;raf.seek ( save ) ;^406^^^^^391^421^raf.seek ( save ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.reset (  ) ;raf.seek ( save ) ;^406^^^^^391^421^raf.seek ( save ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.close (  ) ;raf.seek ( save ) ;^406^^^^^391^421^raf.seek ( save ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P1_Replace_Type]^short  save = raf.getFilePointer (  ) ;^400^^^^^385^415^long save = raf.getFilePointer (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^long save = _raf.close (  ) ;^400^^^^^385^415^long save = raf.getFilePointer (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^long save = raf .setLength ( cdOffset )  ;^400^^^^^385^415^long save = raf.getFilePointer (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^raf.seek ( save ) ;^402^^^^^387^417^raf.seek ( localDataStart ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^raf .setLength ( size )  ;^402^^^^^387^417^raf.seek ( localDataStart ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^402^^^^^387^417^raf.seek ( localDataStart ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipLong.getBytes ( entry .setCrc ( size )   )  ) ;^403^^^^^388^418^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong .getBytes (  )   ) ;^404^^^^^389^419^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong .getBytes (  )   ) ;^405^^^^^390^420^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P5_Replace_Variable]^raf.seek ( written ) ;^406^^^^^391^421^raf.seek ( save ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^raf .setLength ( localDataStart )  ;^406^^^^^391^421^raf.seek ( save ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeCentralDirectoryEnd ( entry ) ;^409^^^^^394^424^writeDataDescriptor ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P14_Delete_Statement]^^409^410^^^^394^424^writeDataDescriptor ( entry ) ; entry = null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeLocalFileHeader ( entry ) ;writeDataDescriptor ( entry ) ;^409^^^^^394^424^writeDataDescriptor ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entries.add ( entry ) ;writeDataDescriptor ( entry ) ;^409^^^^^394^424^writeDataDescriptor ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( extra ) ;writeDataDescriptor ( entry ) ;^409^^^^^394^424^writeDataDescriptor ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P8_Replace_Mix]^entry = true;^410^^^^^395^425^entry = null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.raf = null;entry = null;^410^^^^^395^425^entry = null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^_raf = null;entry = null;^410^^^^^395^425^entry = null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry = ze;entry = null;^410^^^^^395^425^entry = null;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] closeEntry [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  
[P7_Replace_Invocation]^deflate (  ) ;^419^^^^^404^434^closeEntry (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^419^^^^^404^434^closeEntry (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^crc.reset (  ) ;closeEntry (  ) ;^419^^^^^404^434^closeEntry (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^entry =  null;^421^^^^^406^436^entry = ze;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry = null;entry = ze;^421^^^^^406^436^entry = ze;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^entries.add ( ze ) ;^422^^^^^407^437^entries.add ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^entries.size ( entry ) ;^422^^^^^407^437^entries.add ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^entries .iterator (  )  ;^422^^^^^407^437^entries.add ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^422^^^^^407^437^entries.add ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeLocalFileHeader ( entry ) ;entries.add ( entry ) ;^422^^^^^407^437^entries.add ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeDataDescriptor ( entry ) ;entries.add ( entry ) ;^422^^^^^407^437^entries.add ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setCrc ( realCrc ) ;entries.add ( entry ) ;^422^^^^^407^437^entries.add ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( extra ) ;entries.add ( entry ) ;^422^^^^^407^437^entries.add ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entries.clear (  ) ;entries.add ( entry ) ;^422^^^^^407^437^entries.add ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getMethod (  )  != -1 )  {^424^^^^^409^439^if  ( entry.getMethod (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^if  ( entry.getMethod (  )  == -STORED )  {^424^^^^^409^439^if  ( entry.getMethod (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( ze.getMethod (  )  == -1 )  {^424^^^^^409^439^if  ( entry.getMethod (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry.getTime (  )  == -1 )  {^424^^^^^409^439^if  ( entry.getMethod (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( entry.getMethod (  )  == -2 )  {^424^^^^^409^439^if  ( entry.getMethod (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getMethod (  )  == DEFLATED )  {^424^^^^^409^439^if  ( entry.getMethod (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getCrc (  )  == -1 )  {^424^^^^^409^439^if  ( entry.getMethod (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getSize (  )  == -1 )  {^424^^^^^409^439^if  ( entry.getMethod (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P15_Unwrap_Block]^entry.setMethod(method);^424^425^426^^^409^439^if  ( entry.getMethod (  )  == -1 )  { entry.setMethod ( method ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P16_Remove_Block]^^424^425^426^^^409^439^if  ( entry.getMethod (  )  == -1 )  { entry.setMethod ( method ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( entry.getTime (  )  )  ==  ( -1 )  )  {     entry.setTime ( currentTimeMillis (  )  ) ; }^424^^^^^409^439^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^entry.setMethod ( level ) ;^425^^^^^410^440^entry.setMethod ( method ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.getMethod ( method ) ;^425^^^^^410^440^entry.setMethod ( method ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^entry.setMethod ( SHORT ) ;^425^^^^^410^440^entry.setMethod ( method ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^425^^^^^410^440^entry.setMethod ( method ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setCrc ( realCrc ) ;entry.setMethod ( method ) ;^425^^^^^410^440^entry.setMethod ( method ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setSize ( size ) ;entry.setMethod ( method ) ;^425^^^^^410^440^entry.setMethod ( method ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P12_Insert_Condition]^if  ( entry.getMethod (  )  == -1 )  { entry.setMethod ( method ) ; }^425^^^^^410^440^entry.setMethod ( method ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry .setMethod ( DEFAULT_COMPRESSION )   == -1 )  {^424^^^^^409^439^if  ( entry.getMethod (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( ze .setMethod ( level )   == -1 )  {^424^^^^^409^439^if  ( entry.getMethod (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^entry.setMethod ( STORED ) ;^425^^^^^410^440^entry.setMethod ( method ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getTime (  )  != -1 )  {^428^^^^^413^443^if  ( entry.getTime (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( ze.getTime (  )  == -1 )  {^428^^^^^413^443^if  ( entry.getTime (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry.getName (  )  == -1 )  {^428^^^^^413^443^if  ( entry.getTime (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( ze.getTime (  )  == -1 / 3 )  {^428^^^^^413^443^if  ( entry.getTime (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getMethod (  )  == DEFLATED )  {^428^^^^^413^443^if  ( entry.getTime (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getCrc (  )  != realCrc )  {^428^^^^^413^443^if  ( entry.getTime (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getMethod (  )  == -1 )  {^428^^^^^413^443^if  ( entry.getTime (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getCrc (  )  == -1 )  {^428^^^^^413^443^if  ( entry.getTime (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getSize (  )  == -1 )  {^428^^^^^413^443^if  ( entry.getTime (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P15_Unwrap_Block]^entry.setTime(java.lang.System.currentTimeMillis());^428^429^430^^^413^443^if  ( entry.getTime (  )  == -1 )  { entry.setTime ( System.currentTimeMillis (  )  ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P16_Remove_Block]^^428^429^430^^^413^443^if  ( entry.getTime (  )  == -1 )  { entry.setTime ( System.currentTimeMillis (  )  ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( entry.getMethod (  )  )  ==  ( -1 )  )  {     entry.setMethod ( method ) ; }^428^^^^^413^443^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.getTime ( System.currentTimeMillis (  )  ) ;^429^^^^^414^444^entry.setTime ( System.currentTimeMillis (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^429^^^^^414^444^entry.setTime ( System.currentTimeMillis (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( entry.getTime (  )  )  ==  ( -1 )  )  {     entry.setTime ( currentTimeMillis (  )  ) ; }^429^^^^^414^444^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getMethod (  )  == STORED || raf == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getMethod (  )  != STORED && raf == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getMethod (  )  == STORED && raf != null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( ze.getMethod (  )  == STORED && raf == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( entry.getMethod (  )  == WORD && raf == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( entry.getMethod (  )  == STORED && _raf == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( STORED.getMethod (  )  == entry && raf == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( entry.getMethod (  )  == raf && STORED == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( raf.getMethod (  )  == STORED && entry == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( entry.getMethod (  )  == STORED ) {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  raf == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( entry.getSize() == -1 )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( " STORED method when not writing to a" + " file" )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( entry.getCrc() == -1 )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( "crc checksum is required for STORED" + " method when not writing to a file" )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry.getTime (  )  == STORED && raf == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry .setMethod ( level )   == STORED && raf == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( entry.getMethod (  )  == STORED && raf == true )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getMethod (  )  == DEFLATED )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P15_Unwrap_Block]^if ((entry.getSize()) == (-1)) {    throw new java.util.zip.ZipException(("uncompressed size is required for" + (" STORED method when not writing to a" + " file")));}; if ((entry.getCrc()) == (-1)) {    throw new java.util.zip.ZipException(("crc checksum is required for STORED" + " method when not writing to a file"));}; entry.setCompressedSize(entry.getSize());^433^434^435^436^437^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  { if  ( entry.getSize (  )  == -1 )  { throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P16_Remove_Block]^^433^434^435^436^437^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  { if  ( entry.getSize (  )  == -1 )  { throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getSize (  )  != -1 )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^if  ( entry.getSize (  )  == --2 )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( " STORED method when not writing to a" + " file" )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry.setSize (  )  == -1 )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( entry.getSize (  )  == -4 )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getMethod (  )  == DEFLATED )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getCrc (  )  != realCrc )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getMethod (  )  == -1 )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getCrc (  )  == -1 )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getTime (  )  == -1 )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P15_Unwrap_Block]^throw new java.util.zip.ZipException(("uncompressed size is required for" + (" STORED method when not writing to a" + " file")));^434^435^436^437^438^419^449^if  ( entry.getSize (  )  == -1 )  { throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P16_Remove_Block]^^434^435^436^437^438^419^449^if  ( entry.getSize (  )  == -1 )  { throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( entry.getCrc (  )  )  ==  ( -1 )  )  {     throw new ZipException (  ( "crc checksum is required for STORED" + " method when not writing to a file" )  ) ; }^434^^^^^419^449^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "uncompressed size is required for"  !=  " STORED method when not writing to a"  !=  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a"  ==  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "pressedncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "uncompressed size is required for" + "rSTORED method when not writing to a" + " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + "file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P4_Replace_Constructor]^throw throw  new ZipException (  ( "crc checksum is required for STORED" + " method when not writing to a file" )  )  ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( entry.getCrc (  )  )  ==  ( -1 )  )  {     throw new ZipException (  ( "crc checksum is required for STORED" + " method when not writing to a file" )  ) ; }^435^^^^^420^450^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( entry.getSize (  )  )  ==  ( -1 )  )  {     throw new ZipException (  ( "uncompressed size is required for" +  ( " STORED method when not writing to a" + " file" )  )  ) ; }^435^^^^^420^450^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "uncompressed size is required for"  &  " STORED method when not writing to a"  &  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a"  >>  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "uncompressed size is required for" + "en not writ" + " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^return 0;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getCrc (  )  >= -1 )  {^439^^^^^424^454^if  ( entry.getCrc (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( ze.getCrc (  )  == -1 )  {^439^^^^^424^454^if  ( entry.getCrc (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( "crc checksum is required for STORED" + " method when not writing to a file" )  {^439^^^^^424^454^if  ( entry.getCrc (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry.getName (  )  == -1 )  {^439^^^^^424^454^if  ( entry.getCrc (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( entry.getCrc (  )  == -4 )  {^439^^^^^424^454^if  ( entry.getCrc (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getMethod (  )  == DEFLATED )  {^439^^^^^424^454^if  ( entry.getCrc (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getCrc (  )  != realCrc )  {^439^^^^^424^454^if  ( entry.getCrc (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getMethod (  )  == -1 )  {^439^^^^^424^454^if  ( entry.getCrc (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getSize (  )  == -1 )  {^439^^^^^424^454^if  ( entry.getCrc (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getTime (  )  == -1 )  {^439^^^^^424^454^if  ( entry.getCrc (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P15_Unwrap_Block]^throw new java.util.zip.ZipException(("crc checksum is required for STORED" + " method when not writing to a file"));^439^440^441^442^^424^454^if  ( entry.getCrc (  )  == -1 )  { throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P16_Remove_Block]^^439^440^441^442^^424^454^if  ( entry.getCrc (  )  == -1 )  { throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "crc checksum is required for STORED"  !=  " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "m is required for Src checksum is required for STORED" + " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a filehod when " ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P4_Replace_Constructor]^throw throw  new ZipException (  ( "uncompressed size is required for" +  ( " STORED method when not writing to a" + " file" )  )  )  ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( entry.getCrc (  )  )  ==  ( -1 )  )  {     throw new ZipException (  ( "crc checksum is required for STORED" + " method when not writing to a file" )  ) ; }^440^^^^^425^455^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( entry.getSize (  )  )  ==  ( -1 )  )  {     throw new ZipException (  ( "uncompressed size is required for" +  ( " STORED method when not writing to a" + " file" )  )  ) ; }^440^^^^^425^455^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "crc checksum is required for STORED"  ||  " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "OR" + " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a filethod when not wri" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a"  <=  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "uncompressed size is required forn" + " STORED method when not writing to a" + " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "uncompressed size is required for" + " writing tSTORED method when not writing to a" + " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " fi" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "crc checksum is required for STORED"  >  " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "crc checksum is required for STOREDequi" + " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a filethod wh" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "uncompressed size is required for"  >>  " STORED method when not writing to a"  >>  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a"  ||  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "uncompressed size is required " + " STORED method when not writing to a" + " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "uncompressed size is required for" + " STORED method wheSTORED method when not writing to a" + " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "crc checksum is required for STORED"  <=  " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file method wh" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( ze.getSize (  )  == -1 )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( ze.setSize (  )  == -1 )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry .setCrc ( realCrc )   == -1 )  {^439^^^^^424^454^if  ( entry.getCrc (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^entry.setCompressedSize ( ze.getSize (  )  ) ;^443^^^^^428^458^entry.setCompressedSize ( entry.getSize (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.getCompressedSize ( entry.getSize (  )  ) ;^443^^^^^428^458^entry.setCompressedSize ( entry.getSize (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry .setCompressedSize (  )  ;^443^^^^^428^458^entry.setCompressedSize ( entry.getSize (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^entry.setCompressedSize ( entry.setSize (  )  ) ;^443^^^^^428^458^entry.setCompressedSize ( entry.getSize (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^443^^^^^428^458^entry.setCompressedSize ( entry.getSize (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setCompressedSize ( ZipUtil.adjustToLong ( def.getTotalOut (  )  )  ) ;entry.setCompressedSize ( entry.getSize (  )  ) ;^443^^^^^428^458^entry.setCompressedSize ( entry.getSize (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;entry.setCompressedSize ( entry.getSize (  )  ) ;^443^^^^^428^458^entry.setCompressedSize ( entry.getSize (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setCompressedSize ( size ) ;entry.setCompressedSize ( entry.getSize (  )  ) ;^443^^^^^428^458^entry.setCompressedSize ( entry.getSize (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^if  ( entry.getSize (  )  == --6 )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( entry.getSize (  )  == -1L )  {^434^^^^^419^449^if  ( entry.getSize (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "uncompressed size i" + " STORED method when not writing to a" + " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to ae" + " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "uncompressed size is required for"  &&  " STORED method when not writing to a"  &&  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a"  !=  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "uncompressed size is required forssed s" + " STORED method when not writing to a" + " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a STORED" + " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^if  ( entry.getCrc (  )  == -5 )  {^439^^^^^424^454^if  ( entry.getCrc (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( ze.getCrc (  )  == -0 )  {^439^^^^^424^454^if  ( entry.getCrc (  )  == -1 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "crc checksum is required for STORED"  >>  " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "um is req" + " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "crc checksum is required for STORED" + "hen not writimethod when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "crc checksum is required for STORED"  &&  " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "crc checksum is required for STOREDh" + " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "crc checksum is required for STORED" + "" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "uncompressed size is required for"  <=  " STORED method when not writing to a"  <=  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a"  <  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "u" + " STORED method when not writing to a" + " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "uncompressed size is required for" + " STORED method whe" + " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file fi" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "crc checksum is required for STORED"  >=  " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "crc checksum is required for STOREDreq" + " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file when n" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "uncompressed size is required for"  <<  " STORED method when not writing to a"  <<  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a"  &&  " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "uncompressed size is required forncompressed s" + " STORED method when not writing to a" + " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "uncompressed size is required for" + " when not writingSTORED method when not writing to a" + " file" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " fileil" ) ;^435^436^437^^^420^450^throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new ZipException ( "crc checksum is required for STORED"   instanceof   " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "cksum rc checksum is required for STORED" + " method when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new ZipException ( "crc checksum is required for STORED" + "whmethod when not writing to a file" ) ;^440^441^^^^425^455^throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry .setMethod ( STORED )   == STORED && raf == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( ze.getTime (  )  == STORED && raf == null )  {^433^^^^^418^448^if  ( entry.getMethod (  )  == STORED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getMethod (  )  == DEFLATED || hasCompressionLevelChanged )  {^446^^^^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getMethod (  )  != DEFLATED && hasCompressionLevelChanged )  {^446^^^^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( ze.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^446^^^^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( entry.getMethod (  )  == WORD && hasCompressionLevelChanged )  {^446^^^^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( entry.getMethod (  )  == DEFLATED && useEFS )  {^446^^^^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( DEFLATED.getMethod (  )  == entry && hasCompressionLevelChanged )  {^446^^^^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( hasCompressionLevelChanged.getMethod (  )  == DEFLATED && entry )  {^446^^^^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( entry.getMethod (  )  == DEFLATED ) {^446^^^^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  hasCompressionLevelChanged )  {^446^^^^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry.getTime (  )  == DEFLATED && hasCompressionLevelChanged )  {^446^^^^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( entry.getMethod (  )  == method ) {^446^^^^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P15_Unwrap_Block]^def.setLevel(level); hasCompressionLevelChanged = false;^446^447^448^449^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  { def.setLevel ( level ) ; hasCompressionLevelChanged = false; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P16_Remove_Block]^^446^447^448^449^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  { def.setLevel ( level ) ; hasCompressionLevelChanged = false; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  (  ( ze.getMethod (  )  )  !=  ( DEFLATED )  )  ||  (  ( raf )  != null )  )  {     return ; }^446^^^^^431^461^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( zipMethod ==  ( DEFLATED )  )  &&  (  ( raf )  == null )  )  {     versionNeededToExtract = 20;     generalPurposeFlag |= 8; }^446^^^^^431^461^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^hasCompressionLevelChanged = true;^448^^^^^433^463^hasCompressionLevelChanged = false;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^hasCompressionLevelChanged =  ( this.level != level ) ;hasCompressionLevelChanged = false;^448^^^^^433^463^hasCompressionLevelChanged = false;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setLevel ( EFS_FLAG ) ;^447^^^^^432^462^def.setLevel ( level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^def.getTotalIn ( level ) ;^447^^^^^432^462^def.setLevel ( level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^447^448^^^^432^462^def.setLevel ( level ) ; hasCompressionLevelChanged = false;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.seek ( save ) ;def.setLevel ( level ) ;^447^^^^^432^462^def.setLevel ( level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.reset (  ) ;def.setLevel ( level ) ;^447^^^^^432^462^def.setLevel ( level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry .setMethod ( DEFAULT_COMPRESSION )   == DEFLATED && hasCompressionLevelChanged )  {^446^^^^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( ze .setMethod ( EFS_FLAG )   == DEFLATED && hasCompressionLevelChanged )  {^446^^^^^431^461^if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.setLevel ( method ) ;^447^^^^^432^462^def.setLevel ( level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeLocalFileHeader ( ze ) ;^450^^^^^435^465^writeLocalFileHeader ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeCentralDirectoryEnd ( entry ) ;^450^^^^^435^465^writeLocalFileHeader ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^450^^^^^435^465^writeLocalFileHeader ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeDataDescriptor ( entry ) ;writeLocalFileHeader ( entry ) ;^450^^^^^435^465^writeLocalFileHeader ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entries.add ( entry ) ;writeLocalFileHeader ( entry ) ;^450^^^^^435^465^writeLocalFileHeader ( entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putNextEntry [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^this.comment = name;^458^^^^^457^459^this.comment = comment;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setComment [RETURN_TYPE] void   String comment [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.out = out;this.comment = comment;^458^^^^^457^459^this.comment = comment;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setComment [RETURN_TYPE] void   String comment [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.encoding = encoding;this.comment = comment;^458^^^^^457^459^this.comment = comment;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setComment [RETURN_TYPE] void   String comment [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( level < Deflater.DEFAULT_COMPRESSION && level > Deflater.BEST_COMPRESSION )  {^470^471^^^^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( level <= Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^470^471^^^^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( level < Deflater.DEFAULT_COMPRESSION || level == Deflater.BEST_COMPRESSION )  {^470^471^^^^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( method < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^470^471^^^^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( level < Deflater.WORD || level > Deflater.BEST_COMPRESSION )  {^470^471^^^^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.WORD )  {^470^471^^^^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( level < Deflater.DEFAULT_COMPRESSION ) {^470^471^^^^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  level > Deflater.BEST_COMPRESSION )  {^470^471^^^^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( level < DEFAULT_COMPRESSION )  {^470^471^^^^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( level > BEST_COMPRESSION )  {^470^471^^^^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( "Invalid compression level: " + level )  {^470^471^^^^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( STORED < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^470^471^^^^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Invalid compression level: " + level));^470^471^472^473^474^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  { throw new IllegalArgumentException ( "Invalid compression level: " + level ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P16_Remove_Block]^^470^471^472^473^474^469^477^if  ( level < Deflater.DEFAULT_COMPRESSION || level > Deflater.BEST_COMPRESSION )  { throw new IllegalArgumentException ( "Invalid compression level: " + level ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Invalid compression level: "   instanceof   level ) ;^472^473^^^^469^477^throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ressnvalid compression level: " + level ) ;^472^473^^^^469^477^throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Invalid compression method: " + level ) ;^472^473^^^^469^477^throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Invalid compression level: "  <<  level ) ;^472^473^^^^469^477^throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "valid compressionvalid compression level: " + level ) ;^472^473^^^^469^477^throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Invalid compression SHORT: " + level ) ;^472^473^^^^469^477^throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Invalid compression level: "  &&  level ) ;^472^473^^^^469^477^throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Invalid compression level: Invalid compres" + level ) ;^472^473^^^^469^477^throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Invalid compression WORD: " + level ) ;^472^473^^^^469^477^throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Invalid compression EFS_FLAG: " + level ) ;^472^473^^^^469^477^throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Invalid compression level: "  >=  level ) ;^472^473^^^^469^477^throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Invalid compression level: Inval" + level ) ;^472^473^^^^469^477^throw new IllegalArgumentException ( "Invalid compression level: " + level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^hasCompressionLevelChanged =  ( this.level >= level ) ;^475^^^^^469^477^hasCompressionLevelChanged =  ( this.level != level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^hasCompressionLevelChanged =  ( this.level != EFS_FLAG ) ;^475^^^^^469^477^hasCompressionLevelChanged =  ( this.level != level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^hasCompressionLevelChanged =  ( SHORT != level ) ;^475^^^^^469^477^hasCompressionLevelChanged =  ( this.level != level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^hasCompressionLevelChanged =  ( level != this.level ) ;^475^^^^^469^477^hasCompressionLevelChanged =  ( this.level != level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^hasCompressionLevelChanged =   ( this.WORD !^475^^^^^469^477^hasCompressionLevelChanged =  ( this.level != level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^hasCompressionLevelChanged = false;hasCompressionLevelChanged =  ( this.level != level ) ;^475^^^^^469^477^hasCompressionLevelChanged =  ( this.level != level ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^this.level = STORED;^476^^^^^469^477^this.level = level;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^this.level =  EFS_FLAG;^476^^^^^469^477^this.level = level;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.method = method;this.level = level;^476^^^^^469^477^this.level = level;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.raf = null;this.level = level;^476^^^^^469^477^this.level = level;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setLevel [RETURN_TYPE] void   int level [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^this.method = EFS_FLAG;^486^^^^^485^487^this.method = method;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setMethod [RETURN_TYPE] void   int method [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^this.method =  STORED;^486^^^^^485^487^this.method = method;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setMethod [RETURN_TYPE] void   int method [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.out = out;this.method = method;^486^^^^^485^487^this.method = method;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setMethod [RETURN_TYPE] void   int method [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.level = level;this.method = method;^486^^^^^485^487^this.method = method;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setMethod [RETURN_TYPE] void   int method [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.encoding = encoding;this.method = method;^486^^^^^485^487^this.method = method;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] setMethod [RETURN_TYPE] void   int method [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( entry.getMethod (  )  != DEFLATED )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( ze.getMethod (  )  == DEFLATED )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( length > 0 )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( length <= DEFLATER_BLOCK_SIZE )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( length / DEFLATER_BLOCK_SIZE )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( i < fullblocks )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( offset + i *  ( DEFLATER_BLOCK_SIZE ) )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( i * DEFLATER_BLOCK_SIZE )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( fullblocks * DEFLATER_BLOCK_SIZE )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( done < length )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( offset + done )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( length - done )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( entry.getTime (  )  == DEFLATED )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getCrc (  )  != realCrc )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getMethod (  )  == -1 )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getCrc (  )  == -1 )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getMethod (  )  == STORED && raf == null )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getSize (  )  == -1 )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getTime (  )  == -1 )  {^497^^^^^496^523^if  ( entry.getMethod (  )  == DEFLATED )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += level;^520^^^^^497^521^written += length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written +=  i;^520^^^^^497^521^written += length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += WORD;written += length;^520^^^^^497^521^written += length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += SHORT;written += length;^520^^^^^497^521^written += length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += length;^520^^^^^497^521^written += length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += length;^520^^^^^497^521^written += length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += length;^520^^^^^497^521^written += length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( buf, offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( b, done, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( b, offset, WORD ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut (  offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( b,  length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( b, offset ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( offset, b, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( b, length, offset ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( length, offset, b ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( b, offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^519^520^^^^497^521^writeOut ( b, offset, length ) ; written += length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( data, 0, data.length ) ;writeOut ( b, offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( DD_SIG ) ;writeOut ( b, offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^write ( b, 0, b.length ) ;writeOut ( b, offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;writeOut ( b, offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;writeOut ( b, offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.write ( data, offset, length ) ;writeOut ( b, offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.setInput ( b, offset + done, length - done ) ;writeOut ( b, offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LFH_SIG ) ;writeOut ( b, offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^write ( buff, 0, 1 ) ;writeOut ( b, offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( CFH_SIG ) ;writeOut ( b, offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^crc.update ( b, offset, length ) ;writeOut ( b, offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.setInput ( b, offset, length ) ;writeOut ( b, offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.write ( data, offset, length ) ;writeOut ( b, offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( b, offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( EOCD_SIG ) ;writeOut ( b, offset, length ) ;^519^^^^^497^521^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( length >= 0 )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^if  ( length > STORED )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^if  ( length > 4 )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( WORD > 0 )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( length <= DEFLATER_BLOCK_SIZE )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( length / DEFLATER_BLOCK_SIZE )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( i < fullblocks )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( offset + i *  ( DEFLATER_BLOCK_SIZE ) )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( i * DEFLATER_BLOCK_SIZE )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( fullblocks * DEFLATER_BLOCK_SIZE )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( done < length )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( offset + done )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( length - done )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( len > 0 )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( length / DEFLATER_BLOCK_SIZE )  {^499^^^^^496^523^if  ( !def.finished (  )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( i < fullblocks )  {^499^^^^^496^523^if  ( !def.finished (  )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( offset + i *  ( DEFLATER_BLOCK_SIZE ) )  {^499^^^^^496^523^if  ( !def.finished (  )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( i * DEFLATER_BLOCK_SIZE )  {^499^^^^^496^523^if  ( !def.finished (  )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( fullblocks * DEFLATER_BLOCK_SIZE )  {^499^^^^^496^523^if  ( !def.finished (  )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( done < length )  {^499^^^^^496^523^if  ( !def.finished (  )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( offset + done )  {^499^^^^^496^523^if  ( !def.finished (  )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( length - done )  {^499^^^^^496^523^if  ( !def.finished (  )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( !def.finish (  )  )  {^499^^^^^496^523^if  ( !def.finished (  )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( length < DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( i <= DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( length <= length )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( length / DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( i < fullblocks )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( offset + i *  ( DEFLATER_BLOCK_SIZE ) )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( i * DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( fullblocks * DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( done < length )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( offset + done )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( length - done )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( done == length )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( level < length )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( done < i )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( length < done )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( offset + done )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( length - done )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( done < done )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P15_Unwrap_Block]^def.setInput(b, (offset + done), (length - done)); deflateUntilInputIsNeeded();^511^512^513^514^^500^515^if  ( done < length )  { def.setInput ( b, offset + done, length - done ) ; deflateUntilInputIsNeeded (  ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P16_Remove_Block]^^511^512^513^514^^500^515^if  ( done < length )  { def.setInput ( b, offset + done, length - done ) ; deflateUntilInputIsNeeded (  ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  >>  done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( buf, offset + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, fullblocks + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + fullblocks, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + done, WORD - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput (  offset + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset +  length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + done - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( length, offset + done, b - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, done + offset, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + length, done - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.setInput ( LZERO, offset + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.setInput ( b, offset, length ) ;def.setInput ( b, offset + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( b, offset, length ) ;def.setInput ( b, offset + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;def.setInput ( b, offset + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^deflate (  ) ;^513^^^^^500^515^deflateUntilInputIsNeeded (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^513^^^^^500^515^deflateUntilInputIsNeeded (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^for  (  short  i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^for  ( int i = 0; i <= fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^for  !=  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = 2; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^for  ( WORDnt i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^for  ( int i = 0; i < done; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^for  ( int i = 0; i < WORD; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput / ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( ZERO, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, method + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + length * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + i * done, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput (  offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + i *  DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, i + offset * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + DEFLATER_BLOCK_SIZE * i, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^def.deflate ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^def .needsInput (  )  ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.setInput ( b, offset + done, length - done ) ;def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^deflate (  ) ;^508^^^^^500^515^deflateUntilInputIsNeeded (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^508^^^^^500^515^deflateUntilInputIsNeeded (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^final  short  fullblocks = length / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^final int fullblocks = length + DEFLATER_BLOCK_SIZE;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int fullblocks = method / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int fullblocks = DEFLATER_BLOCK_SIZE / length;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^final int fullblocks = offset / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^final int done = fullblocks * DEFLATER_BLOCK_SIZE;final int fullblocks = length / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  (  ( ze.getMethod (  )  )  !=  ( DEFLATED )  )  ||  (  ( raf )  != null )  )  {     return ; }^504^^^^^500^515^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^for  (  long  i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = offset; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^final  short  done = fullblocks * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^final / int done = fullblocks * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int done = i * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int done = fullblocks * offset;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int done = DEFLATER_BLOCK_SIZE * fullblocks;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^final int done = length * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^final int fullblocks = length / DEFLATER_BLOCK_SIZE;final int done = fullblocks * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, WORD + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + i * fullblocks, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, DEFLATER_BLOCK_SIZE + i * offset, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  >  done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + method, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( offset, b + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( LZERO, offset, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, fullblocks, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset, WORD ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput (  offset, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b,  length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( offset, b, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( length, offset, b ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^def.deflate ( b, offset, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def .needsInput (  )  ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^501^502^^^^496^523^def.setInput ( b, offset, length ) ; deflateUntilInputIsNeeded (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.setInput ( b, offset + done, length - done ) ;def.setInput ( b, offset, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^crc.update ( b, offset, length ) ;def.setInput ( b, offset, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( b, offset, length ) ;def.setInput ( b, offset, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.write ( data, offset, length ) ;def.setInput ( b, offset, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.write ( data, offset, length ) ;def.setInput ( b, offset, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^deflate (  ) ;^502^^^^^496^523^deflateUntilInputIsNeeded (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^502^^^^^496^523^deflateUntilInputIsNeeded (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( done <= length )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( WORD < length )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( done < method )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( length < done )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( offset + done )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( length - done )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( fullblocks < length )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P15_Unwrap_Block]^def.setInput(b, (offset + done), (length - done)); deflateUntilInputIsNeeded();^511^512^513^514^^496^523^if  ( done < length )  { def.setInput ( b, offset + done, length - done ) ; deflateUntilInputIsNeeded (  ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P16_Remove_Block]^^511^512^513^514^^496^523^if  ( done < length )  { def.setInput ( b, offset + done, length - done ) ; deflateUntilInputIsNeeded (  ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  <=  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( ZERO, offset + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, i + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + done, fullblocks - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput (  offset + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset +  length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + done - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( length, offset + done, b - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, done + offset, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + length, done - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.setInput ( b, offset + level, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^512^513^^^^496^523^def.setInput ( b, offset + done, length - done ) ; deflateUntilInputIsNeeded (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.setInput ( b, offset, length ) ;def.setInput ( b, offset + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( b, offset, length ) ;def.setInput ( b, offset + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;def.setInput ( b, offset + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^deflate (  ) ;^513^^^^^496^523^deflateUntilInputIsNeeded (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^513^^^^^496^523^deflateUntilInputIsNeeded (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^for  (  short  i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^for  ( int i = 0; i <= fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^for  ||  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = EFS_FLAG; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^for  ( fullblocksnt i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^for  ( int i = 0; i < offset; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^for  ( int i = 0; i < length; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput + ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( buf, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, level + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + fullblocks * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + i * offset, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput (  offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + i *  DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, DEFLATER_BLOCK_SIZE + i * offset, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + DEFLATER_BLOCK_SIZE * i, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^def.deflate ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^def .needsInput (  )  ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.setInput ( b, done + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.setInput ( b, offset + done, length - done ) ;def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^deflate (  ) ;^508^^^^^496^523^deflateUntilInputIsNeeded (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^508^^^^^496^523^deflateUntilInputIsNeeded (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^final  long  fullblocks = length / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^final int fullblocks = length * DEFLATER_BLOCK_SIZE;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int fullblocks = length / done;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int fullblocks = DEFLATER_BLOCK_SIZE / length;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^final int fullblocks = length / length;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^final int done = fullblocks * DEFLATER_BLOCK_SIZE;final int fullblocks = length / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  (  ( ze.getMethod (  )  )  !=  ( DEFLATED )  )  ||  (  ( raf )  != null )  )  {     return ; }^504^^^^^496^523^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = level; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^final  short  done = fullblocks * DEFLATER_BLOCK_SIZE;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^final / int done = fullblocks * DEFLATER_BLOCK_SIZE;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int done = length * DEFLATER_BLOCK_SIZE;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int done = fullblocks * level;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int done = DEFLATER_BLOCK_SIZE * fullblocks;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^final int done = fullblocks * fullblocks;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^final int fullblocks = length / DEFLATER_BLOCK_SIZE;final int done = fullblocks * DEFLATER_BLOCK_SIZE;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( buf, offset, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, level, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset, done ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, length, offset ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.deflate ( b, offset, WORD ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput - ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, method + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + WORD * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + i * length, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( offset, b + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, i + offset * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.setInput ( b, i + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  ==  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + WORD, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^def .needsInput (  )  ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( length > DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( WORD <= DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( length <= i )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( done <= length )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( done < offset )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  <  done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, WORD + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + done, offset - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, length + done, offset - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( done, offset + b, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^def .needsInput (  )  ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.setInput ( b, offset + i, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^for  ( int i = 0; i > fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^for  &&  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = -3; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^for  ( offsetnt i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^for  ( int i = 0; i < offset; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( buf, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, i + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( offset, b + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^final  long  fullblocks = length / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int fullblocks = length / i;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^final int fullblocks = WORD / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = 9; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^final  long  done = fullblocks * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int done = fullblocks * length;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput - ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, done + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + i * length, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( DEFLATER_BLOCK_SIZE, offset + i * b, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length   instanceof   done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + done, method - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^512^513^^^^500^515^def.setInput ( b, offset + done, length - done ) ; deflateUntilInputIsNeeded (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, WORD, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.setInput ( b, offset, fullblocks ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( done < fullblocks )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( done < done )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  ^  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + fullblocks, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + done, WORD - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.setInput ( b, done + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^for  |  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = BYTE_MASK; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^for  ( levelnt i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^for  ( fullblocksnt i = 0; i < i; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^for  ( int i = 0; i < level; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput / ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( LZERO, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, length + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( DEFLATER_BLOCK_SIZE, offset + i * b, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.setInput ( ZERO, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^final int fullblocks = length - DEFLATER_BLOCK_SIZE;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int fullblocks = done / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^final int fullblocks = length / method;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = -3; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^final - int done = fullblocks * DEFLATER_BLOCK_SIZE;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int done = i * DEFLATER_BLOCK_SIZE;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int done = fullblocks * method;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^final int done = fullblocks * length;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset, method ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + i * fullblocks, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.deflate ( b, offset + i * length, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, fullblocks + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( done, offset + b, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, length + done, offset - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.setInput ( b, offset + length, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( def.finished (  )  )  {^499^^^^^496^523^if  ( !def.finished (  )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( i < length )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( done < WORD )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( done < level )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  !=  done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + WORD, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + done, fullblocks - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^for  |  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = EFS_FLAG; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^for  ( int i = 0; i < method; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( LZERO, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + WORD * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + i * method, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^final int fullblocks = length - DEFLATER_BLOCK_SIZE;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int fullblocks = level / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int fullblocks = length / done;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = DEFLATER_BLOCK_SIZE; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^final + int done = fullblocks * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int done = WORD * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput + ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + done * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( i, offset + b * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + done, level - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( ZERO, offset, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.setInput ( b, length, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( done < WORD )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  ||  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( LZERO, offset + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^for  ==  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = SHORT; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^for  ( donent i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^for  ( int i = 0; i < done; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, WORD + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + i * done, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.setInput ( b, offset + done * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int fullblocks = i / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^final int fullblocks = length / i;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = 6; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^final  long  done = fullblocks * DEFLATER_BLOCK_SIZE;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int done = offset * DEFLATER_BLOCK_SIZE;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, method, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  >>  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( buf, offset + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + done, i - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( length <= done )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( fullblocks < length )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( done < method )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  &&  done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, done + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + done, done - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^for  <<  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = DEFLATED; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^for  ( fullblocksnt i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^for  ( fullblocksnt i = 0; i < i; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^for  ( lengthnt i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int fullblocks = done / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = STORED; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int done = fullblocks * i;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^final int done = fullblocks * method;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, level + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + fullblocks * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  |  done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, level + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.deflate ( b, done, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( done < level )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  <<  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + done, offset - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( offset, b + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^for  (  long  i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = ; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^for  ( lengthnt i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^for  ( WORDnt i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + i * level, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( i, offset + b * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^final  short  fullblocks = length / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^final int fullblocks = length + DEFLATER_BLOCK_SIZE;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int fullblocks = level / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int done = method * DEFLATER_BLOCK_SIZE;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  &  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, method + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^if  ( length > 1 )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^if  ( length > 2 )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( length > 0  )  {^498^^^^^496^523^if  ( length > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( WORD < length )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( done < fullblocks )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( ZERO, offset + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, method + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + done, i - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^for  >>  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = i; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^for  ( int i = 0; i < level; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^final int fullblocks = length * DEFLATER_BLOCK_SIZE;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^final int fullblocks = length / length;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = fullblocks; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^final int done = offset * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + level * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  <=  done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset, i ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + i, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^for  ( int i = 0; i < WORD; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, fullblocks + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + offset * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int fullblocks = offset / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int fullblocks = length / level;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^final + int done = fullblocks * DEFLATER_BLOCK_SIZE;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^final int done = fullblocks * i;^510^^^^^496^523^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + method * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.deflate ( b, offset + i * fullblocks, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  |  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( done <= DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( length <= offset )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  >=  done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^for  &  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = -6; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^for  ( methodnt i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^for  ( donent i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, fullblocks + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + method * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + i * offset, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int fullblocks = length / level;^504^^^^^500^515^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = -9; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.setInput ( b, i, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( done < offset )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  &&  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + done, level - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^for  <  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = -4; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^for  ( offsetnt i = 0; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.deflate ( b, offset + length * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int fullblocks = method / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.setInput ( b, done, length ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  >=  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, WORD + done, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + done, method - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( length == DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, i + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^for  >  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = method; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = ; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^final - int done = fullblocks * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^final int done = level * DEFLATER_BLOCK_SIZE;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + offset * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.deflate ( buf, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^500^515^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  &  done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset, offset ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + method, length - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = BUFFER_SIZE; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int fullblocks = WORD / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset, level ) ;^501^^^^^496^523^def.setInput ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.deflate ( ZERO, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length   instanceof   done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( length <= level )  {^500^^^^^496^523^if  ( length <= DEFLATER_BLOCK_SIZE )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( done > length )  {^511^^^^^500^515^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  ^  done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, length + done, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^def.setInput ( b, offset + level, length - done ) ;^512^^^^^500^515^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^for  >=  ( int i = 0; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = -8; i < fullblocks; i++ )  {^505^^^^^500^515^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int done = fullblocks * fullblocks;^510^^^^^500^515^final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( done > length )  {^511^^^^^496^523^if  ( done < length )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^def.setInput ( b, offset + done, length  >  done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = 5; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + length * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += fullblocks;^520^^^^^496^523^written += length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written +=  WORD;^520^^^^^496^523^written += length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += WORD;written += length;^520^^^^^496^523^written += length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += SHORT;written += length;^520^^^^^496^523^written += length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += length;^520^^^^^496^523^written += length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += length;^520^^^^^496^523^written += length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += length;^520^^^^^496^523^written += length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^for  ( int i = method; i < fullblocks; i++ )  {^505^^^^^496^523^for  ( int i = 0; i < fullblocks; i++ )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + i * i, DEFLATER_BLOCK_SIZE ) ;^506^507^^^^496^523^def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^def.setInput ( b, offset + done, done - done ) ;^512^^^^^496^523^def.setInput ( b, offset + done, length - done ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZERO, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( b, done, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( b, offset, done ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut (  offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( b,  length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( b, offset ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( length, offset, b ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( b, length, offset ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( b, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( buf, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^519^520^^^^496^523^writeOut ( b, offset, length ) ; written += length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( data, 0, data.length ) ;writeOut ( b, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( DD_SIG ) ;writeOut ( b, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^write ( b, 0, b.length ) ;writeOut ( b, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;writeOut ( b, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;writeOut ( b, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.write ( data, offset, length ) ;writeOut ( b, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.setInput ( b, offset + done, length - done ) ;writeOut ( b, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LFH_SIG ) ;writeOut ( b, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^write ( buff, 0, 1 ) ;writeOut ( b, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( CFH_SIG ) ;writeOut ( b, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^crc.update ( b, offset, length ) ;writeOut ( b, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.setInput ( b, offset, length ) ;writeOut ( b, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.write ( data, offset, length ) ;writeOut ( b, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( b, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( EOCD_SIG ) ;writeOut ( b, offset, length ) ;^519^^^^^496^523^writeOut ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^crc.update ( ZERO, offset, length ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^crc.update ( b, done, length ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^crc.update ( b, offset, WORD ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^crc.update (  offset, length ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^crc.update ( b,  length ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^crc.update ( b, offset ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^crc.update ( length, offset, b ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^crc.update ( b, length, offset ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^crc.update ( buf, offset, length ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.setInput ( b, offset, length ) ;crc.update ( b, offset, length ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^write ( b, 0, b.length ) ;crc.update ( b, offset, length ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( b, offset, length ) ;crc.update ( b, offset, length ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.write ( data, offset, length ) ;crc.update ( b, offset, length ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.write ( data, offset, length ) ;crc.update ( b, offset, length ) ;^522^^^^^496^523^crc.update ( b, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b int offset int length [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^byte[] buff = new byte[BYTE_MASK];^533^^^^^532^536^byte[] buff = new byte[1];^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^buff[0] =  (  int  )   ( b & BYTE_MASK ) ;^534^^^^^532^536^buff[0] =  ( byte )   ( b & BYTE_MASK ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^buff[0] =  ( byte )   ( b  ||  BYTE_MASK ) ;^534^^^^^532^536^buff[0] =  ( byte )   ( b & BYTE_MASK ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^buff[BUFFER_SIZE] =  ( byte )   ( b & BYTE_MASK ) ;^534^^^^^532^536^buff[0] =  ( byte )   ( b & BYTE_MASK ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^buff[0] =  ( fullblocksyte )   ( b & BYTE_MASK ) ;^534^^^^^532^536^buff[0] =  ( byte )   ( b & BYTE_MASK ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^buff[0] =  ( byte )   ( b & done ) ;^534^^^^^532^536^buff[0] =  ( byte )   ( b & BYTE_MASK ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^buff[0] =  ( BYTE_MASKyte )   ( b & b ) ;^534^^^^^532^536^buff[0] =  ( byte )   ( b & BYTE_MASK ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^buff[2] =  ( byte )   ( b & BYTE_MASK ) ;^534^^^^^532^536^buff[0] =  ( byte )   ( b & BYTE_MASK ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^write ( buff, i, 1 ) ;^535^^^^^532^536^write ( buff, 0, 1 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^write ( buff, 0, WORD ) ;^535^^^^^532^536^write ( buff, 0, 1 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^write ( buf, 0, 1 ) ;^535^^^^^532^536^write ( buff, 0, 1 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( buff, 0, 1 ) ;^535^^^^^532^536^write ( buff, 0, 1 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( buf, 0, 1 ) ;^535^^^^^532^536^write ( buff, 0, 1 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^535^^^^^532^536^write ( buff, 0, 1 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^write ( b, 0, b.length ) ;write ( buff, 0, 1 ) ;^535^^^^^532^536^write ( buff, 0, 1 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( b, offset, length ) ;write ( buff, 0, 1 ) ;^535^^^^^532^536^write ( buff, 0, 1 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;write ( buff, 0, 1 ) ;^535^^^^^532^536^write ( buff, 0, 1 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   int b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^deflate (  ) ;^545^^^^^544^553^finish (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^545^^^^^544^553^finish (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.flush (  ) ;finish (  ) ;^545^^^^^544^553^finish (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.finish (  ) ;finish (  ) ;^545^^^^^544^553^finish (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.reset (  ) ;finish (  ) ;^545^^^^^544^553^finish (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^_raf.close (  ) ;finish (  ) ;^545^^^^^544^553^finish (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.close (  ) ;finish (  ) ;^545^^^^^544^553^finish (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( raf == null )  {^547^^^^^544^553^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( raf != false )  {^547^^^^^544^553^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( _raf != null )  {^547^^^^^544^553^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( out != null )  {^547^^^^^544^553^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry == null )  {^547^^^^^544^553^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P15_Unwrap_Block]^raf.close();^547^548^549^^^544^553^if  ( raf != null )  { raf.close (  ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P16_Remove_Block]^^547^548^549^^^544^553^if  ( raf != null )  { raf.close (  ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( out )  != null )  {     out.close (  ) ; }^547^^^^^544^553^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  ( comm == null )  {     comm = ""; }^547^^^^^544^553^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( entry )  == null )  {     return ; }^547^^^^^544^553^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( out )  != null )  {     out.flush (  ) ; }^547^^^^^544^553^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^raf.getFilePointer (  ) ;^548^^^^^544^553^raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^548^^^^^544^553^raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.flush (  ) ;raf.close (  ) ;^548^^^^^544^553^raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^finish (  ) ;raf.close (  ) ;^548^^^^^544^553^raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^crc.reset (  ) ;raf.close (  ) ;^548^^^^^544^553^raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.seek ( save ) ;raf.close (  ) ;^548^^^^^544^553^raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.close (  ) ;raf.close (  ) ;^548^^^^^544^553^raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.finish (  ) ;raf.close (  ) ;^548^^^^^544^553^raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^offsets.clear (  ) ;raf.close (  ) ;^548^^^^^544^553^raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entries.clear (  ) ;raf.close (  ) ;^548^^^^^544^553^raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.reset (  ) ;raf.close (  ) ;^548^^^^^544^553^raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^_raf.setLength ( 0 ) ;raf.close (  ) ;^548^^^^^544^553^raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^_raf.close (  ) ;raf.close (  ) ;^548^^^^^544^553^raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^deflate (  ) ;raf.close (  ) ;^548^^^^^544^553^raf.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( out == null )  {^550^^^^^544^553^if  ( out != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( o != null )  {^550^^^^^544^553^if  ( out != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( out != true )  {^550^^^^^544^553^if  ( out != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( raf != null )  {^550^^^^^544^553^if  ( out != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( _raf != null )  {^550^^^^^544^553^if  ( out != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry == null )  {^550^^^^^544^553^if  ( out != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( comm == null )  {^550^^^^^544^553^if  ( out != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P15_Unwrap_Block]^out.close();^550^551^552^^^544^553^if  ( out != null )  { out.close (  ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P16_Remove_Block]^^550^551^552^^^544^553^if  ( out != null )  { out.close (  ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( raf )  != null )  {     raf.close (  ) ; }^550^^^^^544^553^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  ( comm == null )  {     comm = ""; }^550^^^^^544^553^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( entry )  == null )  {     return ; }^550^^^^^544^553^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( out )  != null )  {     out.flush (  ) ; }^550^^^^^544^553^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^out.flush (  ) ;^551^^^^^544^553^out.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^551^^^^^544^553^out.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.flush (  ) ;out.close (  ) ;^551^^^^^544^553^out.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^crc.reset (  ) ;out.close (  ) ;^551^^^^^544^553^out.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.finish (  ) ;out.close (  ) ;^551^^^^^544^553^out.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^offsets.clear (  ) ;out.close (  ) ;^551^^^^^544^553^out.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entries.clear (  ) ;out.close (  ) ;^551^^^^^544^553^out.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.reset (  ) ;out.close (  ) ;^551^^^^^544^553^out.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^_raf.close (  ) ;out.close (  ) ;^551^^^^^544^553^out.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.close (  ) ;out.close (  ) ;^551^^^^^544^553^out.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^deflate (  ) ;out.close (  ) ;^551^^^^^544^553^out.close (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] close [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( out == null )  {^562^^^^^561^565^if  ( out != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( o != null )  {^562^^^^^561^565^if  ( out != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( o != false )  {^562^^^^^561^565^if  ( out != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( raf != null )  {^562^^^^^561^565^if  ( out != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( _raf != null )  {^562^^^^^561^565^if  ( out != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry == null )  {^562^^^^^561^565^if  ( out != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( comm == null )  {^562^^^^^561^565^if  ( out != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P15_Unwrap_Block]^out.flush();^562^563^564^^^561^565^if  ( out != null )  { out.flush (  ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P16_Remove_Block]^^562^563^564^^^561^565^if  ( out != null )  { out.flush (  ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( out )  != null )  {     out.close (  ) ; }^562^^^^^561^565^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( raf )  != null )  {     raf.close (  ) ; }^562^^^^^561^565^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  ( comm == null )  {     comm = ""; }^562^^^^^561^565^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( entry )  == null )  {     return ; }^562^^^^^561^565^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^out.close (  ) ;^563^^^^^561^565^out.flush (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^563^^^^^561^565^out.flush (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^finish (  ) ;out.flush (  ) ;^563^^^^^561^565^out.flush (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.flush (  ) ;^563^^^^^561^565^out.flush (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.finish (  ) ;out.flush (  ) ;^563^^^^^561^565^out.flush (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^offsets.clear (  ) ;out.flush (  ) ;^563^^^^^561^565^out.flush (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^_raf.close (  ) ;out.flush (  ) ;^563^^^^^561^565^out.flush (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.close (  ) ;out.flush (  ) ;^563^^^^^561^565^out.flush (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^deflate (  ) ;out.flush (  ) ;^563^^^^^561^565^out.flush (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] flush [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^putArchiveEntry (  ( ZipArchiveEntry )  entry ) ;^568^^^^^567^569^putNextEntry (  ( ZipArchiveEntry )  entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putArchiveEntry [RETURN_TYPE] void   ArchiveEntry entry [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  ArchiveEntry  entry  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^568^^^^^567^569^putNextEntry (  ( ZipArchiveEntry )  entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putArchiveEntry [RETURN_TYPE] void   ArchiveEntry entry [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  ArchiveEntry  entry  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeCentralFileHeader (  ( ZipArchiveEntry )  i.next (  )  ) ;putNextEntry (  ( ZipArchiveEntry )  entry ) ;^568^^^^^567^569^putNextEntry (  ( ZipArchiveEntry )  entry ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] putArchiveEntry [RETURN_TYPE] void   ArchiveEntry entry [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  ArchiveEntry  entry  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^write ( b, DEFLATED, b.length ) ;^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^write ( b, 0, done ) ;^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^write (  0, b.length ) ;^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^write ( b, 0 ) ;^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^write ( b.length, 0, b ) ;^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( b, 0, b.length ) ;^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( data, 0, data.length ) ;write ( b, 0, b.length ) ;^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^write ( buff, 0, 1 ) ;write ( b, 0, b.length ) ;^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^crc.update ( b, offset, length ) ;write ( b, 0, b.length ) ;^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( b, offset, length ) ;write ( b, 0, b.length ) ;^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.write ( data, offset, length ) ;write ( b, 0, b.length ) ;^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;write ( b, 0, b.length ) ;^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.write ( data, offset, length ) ;write ( b, 0, b.length ) ;^580^^^^^579^581^write ( b, 0, b.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] write [RETURN_TYPE] void   byte[] b [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^short  len = def.deflate ( buf, 0, buf.length ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^int len = def.deflate ( buf, STORED, buf.length ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^int len = def.deflate ( buff, 0, buf.length ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^int len = def.deflate ( buf, 0, done ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^int len = def.deflate (  0, buf.length ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^int len = def.deflate ( buf, 0 ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^int len = buf.deflate ( def, 0, buf.length ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^int len = def.deflate ( buf.length, 0, buf ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^int len = def.setLevel ( buf, 0, buf.length ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^int len = def .deflate ( LFH_SIG , i , level )  ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^int len = def.setLevel ( buf, 0, b ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^int len = def.deflate ( buf, len, buf.length ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^int len = def.deflate ( ZERO, 0, buf.length ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^int len = def.deflate ( buf, 0, fullblocks ) ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^int len = def .deflate ( DD_SIG , DEFLATED , offset )  ;^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^608^^^^^607^612^int len = def.deflate ( buf, 0, buf.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( len >= 0 )  {^609^^^^^607^612^if  ( len > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^if  ( len > 8 )  {^609^^^^^607^612^if  ( len > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^if  ( len > SHORT )  {^609^^^^^607^612^if  ( len > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( len > 0L )  {^609^^^^^607^612^if  ( len > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( length > 0 )  {^609^^^^^607^612^if  ( len > 0 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P15_Unwrap_Block]^writeOut(buf, 0, len);^609^610^611^^^607^612^if  ( len > 0 )  { writeOut ( buf, 0, len ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P16_Remove_Block]^^609^610^611^^^607^612^if  ( len > 0 )  { writeOut ( buf, 0, len ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^writeOut ( buf, , len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( buf, 0, fullblocks ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( b, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( buf, 0 ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut (  0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( len, 0, buf ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeVersionNeededToExtractAndGeneralPurposeBits ( buf, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( buff, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LFH_SIG ) ;writeOut ( buf, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( data, 0, data.length ) ;writeOut ( buf, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^write ( buff, 0, 1 ) ;writeOut ( buf, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( DD_SIG ) ;writeOut ( buf, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( CFH_SIG ) ;writeOut ( buf, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^write ( b, 0, b.length ) ;writeOut ( buf, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( b, offset, length ) ;writeOut ( buf, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZERO ) ;writeOut ( buf, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( extra ) ;writeOut ( buf, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LZERO ) ;writeOut ( buf, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( EOCD_SIG ) ;writeOut ( buf, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( num ) ;writeOut ( buf, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^writeOut ( buf, -8, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( buf, 0, done ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZERO, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeVersionNeededToExtractAndGeneralPurposeBits ( buff, 0, len ) ;^610^^^^^607^612^writeOut ( buf, 0, len ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflate [RETURN_TYPE] void   [VARIABLES] ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^boolean encodable = zipEncoding.canEncode ( entry.getName (  )  ) ;^621^^^^^606^636^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^boolean encodable = entryEncoding.canEncode ( ze.getName (  )  ) ;^621^^^^^606^636^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^boolean encodable = ze.canEncode ( zipEncoding.getName (  )  ) ;^621^^^^^606^636^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^boolean encodable = zipEncoding .encode (  )  ;^621^^^^^606^636^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^boolean encodable = zipEncoding.canEncode ( ze.setTime (  )  ) ;^621^^^^^606^636^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^621^^^^^606^636^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^621^^^^^606^636^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^621^^^^^606^636^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^boolean encodable = zipEncoding.canEncode ( ze .getTime (  )   ) ;^621^^^^^606^636^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^621^^^^^606^636^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^boolean encodable = zipEncoding.canEncode ( entry.setTime (  )  ) ;^621^^^^^606^636^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( !encodable || fallbackToUTF8 )  {^625^^^^^610^640^if  ( !encodable && fallbackToUTF8 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( !useEFS && fallbackToUTF8 )  {^625^^^^^610^640^if  ( !encodable && fallbackToUTF8 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( !encodable && useEFS )  {^625^^^^^610^640^if  ( !encodable && fallbackToUTF8 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( !encodable ) {^625^^^^^610^640^if  ( !encodable && fallbackToUTF8 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  fallbackToUTF8 )  {^625^^^^^610^640^if  ( !encodable && fallbackToUTF8 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  (  useEFS )  {^625^^^^^610^640^if  ( !encodable && fallbackToUTF8 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P15_Unwrap_Block]^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^625^626^627^628^629^610^640^if  ( !encodable && fallbackToUTF8 )  { entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING; } else { entryEncoding = zipEncoding; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P16_Remove_Block]^^625^626^627^628^629^610^640^if  ( !encodable && fallbackToUTF8 )  { entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING; } else { entryEncoding = zipEncoding; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^entryEncoding = entryEncoding;^628^^^^^625^629^entryEncoding = zipEncoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;entryEncoding = zipEncoding;^628^^^^^625^629^entryEncoding = zipEncoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.encoding = encoding;entryEncoding = zipEncoding;^628^^^^^625^629^entryEncoding = zipEncoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^entryEncoding ;^626^^^^^611^641^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entryEncoding = zipEncoding;entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^626^^^^^611^641^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^626^^^^^611^641^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^useEFS &= ZipEncodingHelper.isUTF8 ( encoding ) ;entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^626^^^^^611^641^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^626^^^^^611^641^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^entryEncoding = entryEncoding;^628^^^^^613^643^entryEncoding = zipEncoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^entryEncoding ;^628^^^^^613^643^entryEncoding = zipEncoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;entryEncoding = zipEncoding;^628^^^^^613^643^entryEncoding = zipEncoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.encoding = encoding;entryEncoding = zipEncoding;^628^^^^^613^643^entryEncoding = zipEncoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer name = zipEncoding.encode ( ze.getName (  )  ) ;^631^^^^^616^646^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer name = entryEncoding.encode ( entry.getName (  )  ) ;^631^^^^^616^646^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer name = ze.encode ( entryEncoding.getName (  )  ) ;^631^^^^^616^646^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ByteBuffer name = entryEncoding .encode (  )  ;^631^^^^^616^646^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ByteBuffer name = entryEncoding.encode ( ze.setTime (  )  ) ;^631^^^^^616^646^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^ByteBuffer name = zipEncoding.encode ( ze.setTime (  )  ) ;^631^^^^^616^646^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^ByteBuffer data = this.zipEncoding.encode ( comment ) ;ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^631^^^^^616^646^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^631^^^^^616^646^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^631^^^^^616^646^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^ByteBuffer commentB = entryEncoding.encode ( comm ) ;ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^631^^^^^616^646^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^631^^^^^616^646^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.NEVER )  {^633^^^^^618^648^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( createUnicodeExtraFields <= UnicodeExtraFieldPolicy.NEVER )  {^633^^^^^618^648^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( NOT_ENCODEABLE != UnicodeExtraFieldPolicy.NEVER )  {^633^^^^^618^648^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.createUnicodeExtraFields )  {^633^^^^^618^648^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( createUnicodeExtraFields == ALWAYS || !encodable )  {^633^^^^^618^648^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( createUnicodeExtraFields == ALWAYS )  {^633^^^^^618^648^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( comm != null && !("".equals(comm)) )  {^633^^^^^618^648^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( comm != null )  {^633^^^^^618^648^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( createUnicodeExtraFields == ALWAYS || !commentEncodable )  {^633^^^^^618^648^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^633^^^^^618^648^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^633^^^^^618^648^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS && !encodable )  {^635^636^^^^620^650^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( createUnicodeExtraFields <= UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^635^636^^^^620^650^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !useEFS )  {^635^636^^^^620^650^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( b == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^635^636^^^^620^650^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.b || !encodable )  {^635^636^^^^620^650^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS ) {^635^636^^^^620^650^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  !encodable )  {^635^636^^^^620^650^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( createUnicodeExtraFields == ALWAYS )  {^635^636^^^^620^650^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  (  !useEFS )  {^635^636^^^^620^650^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^635^636^^^^620^650^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER )  {^635^636^^^^620^650^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P4_Replace_Constructor]^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) .array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^635^641^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ze.addExtraField ( new UnicodePathExtraField ( entry.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^635^641^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , commentB.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^635^641^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ze.addExtraField ( new UnicodePathExtraField ( name.getName (  ) , ze.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^635^641^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ze.addExtraField ( new UnicodePathExtraField ( ze.setTime (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^635^641^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ze.addExtraField ( new UnicodePathExtraField ( ze .getTime (  )  , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^635^641^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name .arrayOffset (  )  , name^637^638^639^640^^635^641^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^name.array (  ) , commentB.arrayOffset (  ) , name.limit (  )  )  ) ;^638^639^640^^^635^641^name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^638^639^640^^^635^641^name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^name.arrayOffset (  ) , commentB.limit (  )  )  ) ;^639^640^^^^635^641^name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^639^640^^^^635^641^name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^640^^^^^635^641^name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^commentB.limit (  )  ) ) ;name.limit (  )  )  ) ;^640^^^^^635^641^name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( comm != null || !"".equals ( comm )  )  {^644^^^^^629^659^if  ( comm != null && !"".equals ( comm )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( comm == null && !"".equals ( comm )  )  {^644^^^^^629^659^if  ( comm != null && !"".equals ( comm )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( n != null && !"".equals ( comm )  )  {^644^^^^^629^659^if  ( comm != null && !"".equals ( comm )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( comm != null ) {^644^^^^^629^659^if  ( comm != null && !"".equals ( comm )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  !"".equals ( comm )  )  {^644^^^^^629^659^if  ( comm != null && !"".equals ( comm )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( createUnicodeExtraFields == ALWAYS || !commentEncodable )  {^644^^^^^629^659^if  ( comm != null && !"".equals ( comm )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( createUnicodeExtraFields == ALWAYS )  {^644^^^^^629^659^if  ( comm != null && !"".equals ( comm )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( comm != true && !"".equals ( comm )  )  {^644^^^^^629^659^if  ( comm != null && !"".equals ( comm )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  (  ( createUnicodeExtraFields )  ==  ( ALWAYS )  )  ||  ( !commentEncodable )  )  {     ByteBuffer commentB = entryEncoding.encode ( comm ) ;     ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )  ) ; }^644^^^^^629^659^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  (  ( createUnicodeExtraFields )  ==  ( ALWAYS )  )  ||  ( !encodable )  )  {     ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ; }^644^^^^^629^659^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS && !commentEncodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( createUnicodeExtraFields <= UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !hasCompressionLevelChanged )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( NOT_ENCODEABLE == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS ) {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  !commentEncodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( createUnicodeExtraFields == ALWAYS )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.createUnicodeExtraFields || !commentEncodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P4_Replace_Constructor]^ze.addExtraField ( ze.addExtraField (  new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^648^656^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P4_Replace_Constructor]^ze.addExtraField ( new UnicodeCommentExtraField (  commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^648^656^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P4_Replace_Constructor]^ze.addExtraField ( new UnicodeCommentExtraField ( comm.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^648^656^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ze.addExtraField ( new UnicodeCommentExtraField ( name, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^648^656^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ze.addExtraField ( new UnicodeCommentExtraField ( commentB, comm.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^648^656^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^ze.addExtraField ( new UnicodeCommentExtraField ( comm, name.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^648^656^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer commentB = zipEncoding.encode ( comm ) ;^650^^^^^648^656^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer entryEncodingentB = comm.encode ( comm ) ;^650^^^^^648^656^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ByteBuffer commentB = entryEncoding .encode (  )  ;^650^^^^^648^656^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;ByteBuffer commentB = entryEncoding.encode ( comm ) ;^650^^^^^648^656^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;ByteBuffer commentB = entryEncoding.encode ( comm ) ;^650^^^^^648^656^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^ByteBuffer data = this.zipEncoding.encode ( comment ) ;ByteBuffer commentB = entryEncoding.encode ( comm ) ;^650^^^^^648^656^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^650^^^^^648^656^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ze.addExtraField ( new UnicodeCommentExtraField ( n, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^648^656^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB .arrayOffset (  )  , commentB^651^652^653^654^^648^656^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^commentB.array (  ) , name.arrayOffset (  ) , commentB.limit (  )  ) ) ;^652^653^654^655^^648^656^commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^commentB.arrayOffset (  ) , name.limit (  )  ) ) ;^653^654^655^^^648^656^commentB.arrayOffset (  ) , commentB.limit (  )  ) ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^653^654^655^^^648^656^commentB.arrayOffset (  ) , commentB.limit (  )  ) ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^654^655^^^^648^656^commentB.limit (  )  ) ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^name.limit (  )  )  ) ;commentB.limit (  )  ) ) ;^654^655^^^^648^656^commentB.limit (  )  ) ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P4_Replace_Constructor]^ze.addExtraField ( ze.addExtraField (  new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^636^666^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P4_Replace_Constructor]^ze.addExtraField ( new UnicodeCommentExtraField (  commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^636^666^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P4_Replace_Constructor]^ze.addExtraField ( new UnicodeCommentExtraField ( comm.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^636^666^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ze.addExtraField ( new UnicodeCommentExtraField ( name, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^636^666^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ze.addExtraField ( new UnicodeCommentExtraField ( comm, name.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^636^666^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ze.addExtraField ( new UnicodeCommentExtraField ( commentB, comm.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^636^666^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB .arrayOffset (  )  , commentB^651^652^653^654^^636^666^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB .array (  )  , commentB.limit (  )  )^651^652^653^654^^636^666^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^boolean nameentEncodable = this.zipEncoding.canEncode ( comm ) ;^646^^^^^631^661^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^boolean commentEncodable = zipEncoding.canEncode ( comm ) ;^646^^^^^631^661^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^boolean this.zipEncodingentEncodable = comm.canEncode ( comm ) ;^646^^^^^631^661^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^boolean commentEncodable = this.zipEncoding.encode ( comm ) ;^646^^^^^631^661^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^boolean nameentEncodable = this.zipEncoding .encode (  )  ;^646^^^^^631^661^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^ByteBuffer data = this.zipEncoding.encode ( comment ) ;boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^646^^^^^631^661^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^646^^^^^631^661^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^646^^^^^631^661^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^ByteBuffer commentB = entryEncoding.encode ( comm ) ;boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^646^^^^^631^661^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer commentB = zipEncoding.encode ( comm ) ;^650^^^^^635^665^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer nameentB = entryEncoding.encode ( comm ) ;^650^^^^^635^665^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer entryEncodingentB = comm.encode ( comm ) ;^650^^^^^635^665^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ByteBuffer commentB = entryEncoding .encode (  )  ;^650^^^^^635^665^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;ByteBuffer commentB = entryEncoding.encode ( comm ) ;^650^^^^^635^665^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;ByteBuffer commentB = entryEncoding.encode ( comm ) ;^650^^^^^635^665^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^ByteBuffer data = this.zipEncoding.encode ( comment ) ;ByteBuffer commentB = entryEncoding.encode ( comm ) ;^650^^^^^635^665^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^646^^^^^631^661^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^650^^^^^635^665^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ze.addExtraField ( new UnicodeCommentExtraField ( n, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^651^652^653^654^^636^666^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^commentB.array (  ) , name.arrayOffset (  ) , commentB.limit (  )  ) ) ;^652^653^654^655^^637^667^commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^commentB .arrayOffset (  )  , commentB^652^653^654^655^^637^667^commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^commentB.arrayOffset (  ) , name.limit (  )  ) ) ;^653^654^655^^^638^668^commentB.arrayOffset (  ) , commentB.limit (  )  ) ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^commentB .array (  )  , commentB.limit (  )  ) ) ;^653^654^655^^^638^668^commentB.arrayOffset (  ) , commentB.limit (  )  ) ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^653^654^655^^^638^668^commentB.arrayOffset (  ) , commentB.limit (  )  ) ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^654^655^^^^639^669^commentB.limit (  )  ) ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^name.limit (  )  )  ) ;commentB.limit (  )  ) ) ;^654^655^^^^639^669^commentB.limit (  )  ) ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( createUnicodeExtraFields > UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( b == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB .array (  )  , commentB.limit (  )  )^651^652^653^654^^648^656^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer nameentB = entryEncoding.encode ( comm ) ;^650^^^^^648^656^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P4_Replace_Constructor]^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) .array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^622^652^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ze.addExtraField ( new UnicodePathExtraField ( entry.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^622^652^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , commentB.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^622^652^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ze.addExtraField ( new UnicodePathExtraField ( name.getName (  ) , ze.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^622^652^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ze.addExtraField ( new UnicodePathExtraField ( ze.setTime (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^622^652^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^ze.addExtraField ( new UnicodeCommentExtraField ( name, commentB.array (  ) , commentB .array (  )  , commentB.limit (  )  )^651^652^653^654^^636^666^ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^char comm = ze.getComment (  ) ;^643^^^^^628^658^String comm = ze.getComment (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^String comm = entry.getComment (  ) ;^643^^^^^628^658^String comm = ze.getComment (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^String comm = ze.setCrc (  ) ;^643^^^^^628^658^String comm = ze.getComment (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^boolean commentEncodable = this.zipEncoding .encode (  )  ;^646^^^^^631^661^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ze .addExtraField ( this )  , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^622^652^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ze.addExtraField ( new UnicodePathExtraField ( ze .getTime (  )  , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^622^652^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name .arrayOffset (  )  , name^637^638^639^640^^622^652^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^name.array (  ) , commentB.arrayOffset (  ) , name.limit (  )  )  ) ;^638^639^640^^^623^653^name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^name .arrayOffset (  )  , name^638^639^640^^^623^653^name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^638^639^640^^^623^653^name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^name.arrayOffset (  ) , commentB.limit (  )  )  ) ;^639^640^^^^624^654^name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^name .array (  )  , commentB.limit (  )  )  ) ;^639^640^^^^624^654^name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^639^640^^^^624^654^name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^640^^^^^625^655^name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^commentB.limit (  )  ) ) ;name.limit (  )  )  ) ;^640^^^^^625^655^name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^643^^^^^628^658^String comm = ze.getComment (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( name != null && !"".equals ( comm )  )  {^644^^^^^629^659^if  ( comm != null && !"".equals ( comm )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^boolean nentEncodable = this.zipEncoding.canEncode ( comm ) ;^646^^^^^631^661^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^ByteBuffer nentB = entryEncoding .encode (  )  ;^650^^^^^635^665^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^635^636^^^^620^650^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name .array (  )  , name.limit (  )  )  ) ;^637^638^639^640^^635^641^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^ze.addExtraField ( new UnicodePathExtraField ( entry.getName (  ) , name.array (  ) , name .array (  )  , name.limit (  )  )  ) ;^637^638^639^640^^635^641^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^ze.addExtraField ( new UnicodePathExtraField ( entry.setTime (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^635^641^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( n != this && !"".equals ( comm )  )  {^644^^^^^629^659^if  ( comm != null && !"".equals ( comm )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( createUnicodeExtraFields >= UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^ByteBuffer nentB = entryEncoding.encode ( comm ) ;^650^^^^^648^656^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^commentB .arrayOffset (  )  , name^652^653^654^655^^648^656^commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^commentB .array (  )  , name.limit (  )  ) ) ;^653^654^655^^^648^656^commentB.arrayOffset (  ) , commentB.limit (  )  ) ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^boolean nameentEncodable = this.zipEncoding.encode ( comm ) ;^646^^^^^631^661^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer nentB = entryEncoding.encode ( comm ) ;^650^^^^^635^665^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !useEFS )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.b || !commentEncodable )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  (  !useEFS )  {^648^649^^^^633^663^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^ByteBuffer commentB = zipEncoding .encode (  )  ;^650^^^^^635^665^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^offsets.put ( entry, ZipLong.getBytes ( written )  ) ;^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^offsets.put ( ze, ZipLong.getBytes ( size )  ) ;^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^offsets.put (  ZipLong.getBytes ( written )  ) ;^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^offsets.put ( written, ZipLong.getBytes ( ze )  ) ;^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^offsets.get ( ze, ZipLong.getBytes ( written )  ) ;^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^offsets.put ( ze, ZipLong .getBytes (  )   ) ;^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^offsets.put ( ze, ZipLong.getBytes ( save )  ) ;^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^offsets.put ( ze, ZipLong.getBytes ( realCrc )  ) ;^660^^^^^645^675^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( buff ) ;^662^^^^^647^677^writeOut ( LFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry ( LFH_SIG ) ;^662^^^^^647^677^writeOut ( LFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( b ) ;^662^^^^^647^677^writeOut ( LFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^662^^^^^647^677^writeOut ( LFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( DD_SIG ) ;writeOut ( LFH_SIG ) ;^662^^^^^647^677^writeOut ( LFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( CFH_SIG ) ;writeOut ( LFH_SIG ) ;^662^^^^^647^677^writeOut ( LFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( b, offset, length ) ;writeOut ( LFH_SIG ) ;^662^^^^^647^677^writeOut ( LFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZERO ) ;writeOut ( LFH_SIG ) ;^662^^^^^647^677^writeOut ( LFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( extra ) ;writeOut ( LFH_SIG ) ;^662^^^^^647^677^writeOut ( LFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LZERO ) ;writeOut ( LFH_SIG ) ;^662^^^^^647^677^writeOut ( LFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;writeOut ( LFH_SIG ) ;^662^^^^^647^677^writeOut ( LFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( EOCD_SIG ) ;writeOut ( LFH_SIG ) ;^662^^^^^647^677^writeOut ( LFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( num ) ;writeOut ( LFH_SIG ) ;^662^^^^^647^677^writeOut ( LFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += fullblocks;^663^^^^^648^678^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written + =  written +;^663^^^^^648^678^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += WORD;^663^^^^^648^678^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += SHORT;written += WORD;^663^^^^^648^678^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += WORD;^663^^^^^648^678^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += WORD;^663^^^^^648^678^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += WORD;^663^^^^^648^678^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^final  short  zipMethod = ze.getMethod (  ) ;^666^^^^^651^681^final int zipMethod = ze.getMethod (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int zipMethod = entry.getMethod (  ) ;^666^^^^^651^681^final int zipMethod = ze.getMethod (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^final int zipMethod = ze.setMethod (  ) ;^666^^^^^651^681^final int zipMethod = ze.getMethod (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^final int zipMethod = ze .setMethod ( EFS_FLAG )  ;^666^^^^^651^681^final int zipMethod = ze.getMethod (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^666^^^^^651^681^final int zipMethod = ze.getMethod (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable || fallbackToUTF8 ) ;^668^669^670^^^653^683^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeVersionNeededToExtractAndGeneralPurposeBits ( done, !encodable && fallbackToUTF8 ) ;^668^669^670^^^653^683^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !useEFS && fallbackToUTF8 ) ;^668^669^670^^^653^683^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && useEFS ) ;^668^669^670^^^653^683^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeVersionNeededToExtractAndGeneralPurposeBits (  !encodable && fallbackToUTF8 ) ;^668^669^670^^^653^683^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeVersionNeededToExtractAndGeneralPurposeBits ( fallbackToUTF8, !encodable && zipMethod ) ;^668^669^670^^^653^683^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^668^669^670^^^653^683^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += len;^671^^^^^656^686^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written +;^671^^^^^656^686^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += WORD;^671^^^^^656^686^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += SHORT;written += WORD;^671^^^^^656^686^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += WORD;^671^^^^^656^686^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += WORD;^671^^^^^656^686^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += WORD;^671^^^^^656^686^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( len )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipShort.getBytes ( done )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipShort.getBytes ( offset )  ) ;^674^^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^674^675^^^^659^689^writeOut ( ZipShort.getBytes ( zipMethod )  ) ; written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += done;^675^^^^^660^690^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written + = null ;^675^^^^^660^690^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += SHORT;^675^^^^^660^690^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += WORD;written += SHORT;^675^^^^^660^690^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += SHORT;^675^^^^^660^690^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += SHORT;^675^^^^^660^690^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += SHORT;^675^^^^^660^690^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipUtil.toDosTime ( entry.getTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipUtil.adjustToLong ( ze.getTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipUtil .adjustToLong ( WORD )   ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipUtil.toDosTime ( ze.setTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipUtil.toDosTime ( ze .setTime ( size )   )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^678^679^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ; written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setSize ( ZipUtil.adjustToLong ( def.getTotalIn (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^678^^^^^663^693^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += i;^679^^^^^664^694^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written +;^679^^^^^664^694^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += WORD;^679^^^^^664^694^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += SHORT;written += WORD;^679^^^^^664^694^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += WORD;^679^^^^^664^694^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += WORD;^679^^^^^664^694^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += WORD;^679^^^^^664^694^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^localDataStart  =  localDataStart ;^684^^^^^669^699^localDataStart = written;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^cdOffset = written;localDataStart = written;^684^^^^^669^699^localDataStart = written;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^dataStart = written;localDataStart = written;^684^^^^^669^699^localDataStart = written;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( zipMethod == DEFLATED && raf != null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( zipMethod != DEFLATED || raf != null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( zipMethod == DEFLATED || raf == null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( done == DEFLATED || raf != null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( zipMethod == done || raf != null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( zipMethod == DEFLATED || _raf != null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( DEFLATED == zipMethod || raf != null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( raf == DEFLATED || zipMethod != null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( zipMethod == DEFLATED ) {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  raf != null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  (  raf != true )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( zipMethod == DEFLATED && raf == null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^685^^^^^670^700^if  ( zipMethod == DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( ze.setCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^690^691^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ; writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( ze.setSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^691^692^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ; writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipLong.getBytes ( entry.setSize (  )  )  ) ;^691^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( ze.setSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^685^693^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( buf ) ;^686^^^^^671^701^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry ( LZERO ) ;^686^^^^^671^701^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( extra ) ;^686^^^^^671^701^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^686^687^^^^671^701^writeOut ( LZERO ) ; writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LFH_SIG ) ;writeOut ( LZERO ) ;^686^^^^^671^701^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( DD_SIG ) ;writeOut ( LZERO ) ;^686^^^^^671^701^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( CFH_SIG ) ;writeOut ( LZERO ) ;^686^^^^^671^701^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZERO ) ;writeOut ( LZERO ) ;^686^^^^^671^701^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( extra ) ;writeOut ( LZERO ) ;^686^^^^^671^701^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;writeOut ( LZERO ) ;^686^^^^^671^701^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( EOCD_SIG ) ;writeOut ( LZERO ) ;^686^^^^^671^701^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( num ) ;writeOut ( LZERO ) ;^686^^^^^671^701^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  (  ( ze.getMethod (  )  )  !=  ( DEFLATED )  )  ||  (  ( raf )  != null )  )  {     return ; }^686^^^^^671^701^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( b ) ;^687^^^^^672^702^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry ( LZERO ) ;^687^^^^^672^702^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^687^^^^^672^702^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LFH_SIG ) ;writeOut ( LZERO ) ;^687^^^^^672^702^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( DD_SIG ) ;writeOut ( LZERO ) ;^687^^^^^672^702^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( CFH_SIG ) ;writeOut ( LZERO ) ;^687^^^^^672^702^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZERO ) ;writeOut ( LZERO ) ;^687^^^^^672^702^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( extra ) ;writeOut ( LZERO ) ;^687^^^^^672^702^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;writeOut ( LZERO ) ;^687^^^^^672^702^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( EOCD_SIG ) ;writeOut ( LZERO ) ;^687^^^^^672^702^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( num ) ;writeOut ( LZERO ) ;^687^^^^^672^702^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( buf ) ;^688^^^^^673^703^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry ( LZERO ) ;^688^^^^^673^703^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^688^^^^^673^703^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LFH_SIG ) ;writeOut ( LZERO ) ;^688^^^^^673^703^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( DD_SIG ) ;writeOut ( LZERO ) ;^688^^^^^673^703^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( CFH_SIG ) ;writeOut ( LZERO ) ;^688^^^^^673^703^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZERO ) ;writeOut ( LZERO ) ;^688^^^^^673^703^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( extra ) ;writeOut ( LZERO ) ;^688^^^^^673^703^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;writeOut ( LZERO ) ;^688^^^^^673^703^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( EOCD_SIG ) ;writeOut ( LZERO ) ;^688^^^^^673^703^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( num ) ;writeOut ( LZERO ) ;^688^^^^^673^703^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( extra ) ;^687^^^^^672^702^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( buf ) ;^687^^^^^672^702^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( extra ) ;^688^^^^^673^703^writeOut ( LZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( ze.setCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipLong.getBytes ( entry.setCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^690^691^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ; writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^690^^^^^675^705^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( ze.setSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^691^692^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ; writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^691^^^^^676^706^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( ze.setSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^692^^^^^677^707^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^written += level;^695^^^^^680^710^written += 12;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written += 12 + 2;^695^^^^^680^710^written += 12;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += 12;^695^^^^^680^710^written += 12;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += WORD;written += 12;^695^^^^^680^710^written += 12;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += SHORT;written += 12;^695^^^^^680^710^written += 12;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += 12;^695^^^^^680^710^written += 12;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^699^700^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ; written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^name.arrayOffset (  ) , name.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^699^^^^^684^714^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += i;^700^^^^^685^715^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written + =  written +;^700^^^^^685^715^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += SHORT;^700^^^^^685^715^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += WORD;written += SHORT;^700^^^^^685^715^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += SHORT;^700^^^^^685^715^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += SHORT;^700^^^^^685^715^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += SHORT;^700^^^^^685^715^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^byte[] extra = entry.getLocalFileDataExtra (  ) ;^703^^^^^688^718^byte[] extra = ze.getLocalFileDataExtra (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^byte[] extra = ze.setCompressedSize (  ) ;^703^^^^^688^718^byte[] extra = ze.getLocalFileDataExtra (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] extra = ze.getCentralDirectoryExtra (  ) ;byte[] extra = ze.getLocalFileDataExtra (  ) ;^703^^^^^688^718^byte[] extra = ze.getLocalFileDataExtra (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^703^^^^^688^718^byte[] extra = ze.getLocalFileDataExtra (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( buff.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( b )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( extra.length.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( extra )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^write ( ZipShort.getBytes ( buff.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^704^705^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ; written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( data, 0, data.length ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( buf.length )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( method )  ) ;^704^^^^^689^719^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += len;^705^^^^^690^720^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written + =  written +;^705^^^^^690^720^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += SHORT;^705^^^^^690^720^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += WORD;written += SHORT;^705^^^^^690^720^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += SHORT;^705^^^^^690^720^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += SHORT;^705^^^^^690^720^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += SHORT;^705^^^^^690^720^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( commentB.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^708^^^^^693^723^writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^708^^^^^693^723^writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^708^^^^^693^723^writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( name.array (  ) , name .array (  )  , name.limit (  )  ) ;^708^^^^^693^723^writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( commentB.array (  ) , name .array (  )  , name.limit (  )  ) ;^708^^^^^693^723^writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^708^709^^^^693^723^writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ; written += name.limit (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += commentB.limit (  ) ;^709^^^^^694^724^written += name.limit (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += commentB.limit (  ) ;written += name.limit (  ) ;^709^^^^^694^724^written += name.limit (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += entry.getCompressedSize (  ) ;written += name.limit (  ) ;^709^^^^^694^724^written += name.limit (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^709^^^^^694^724^written += name.limit (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( buff ) ;^712^^^^^697^727^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( extra ) ;^712^^^^^697^727^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( b ) ;^712^^^^^697^727^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^712^^^^^697^727^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LFH_SIG ) ;writeOut ( extra ) ;^712^^^^^697^727^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( DD_SIG ) ;writeOut ( extra ) ;^712^^^^^697^727^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeDataDescriptor ( entry ) ;writeOut ( extra ) ;^712^^^^^697^727^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( CFH_SIG ) ;writeOut ( extra ) ;^712^^^^^697^727^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entries.add ( entry ) ;writeOut ( extra ) ;^712^^^^^697^727^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZERO ) ;writeOut ( extra ) ;^712^^^^^697^727^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LZERO ) ;writeOut ( extra ) ;^712^^^^^697^727^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;writeOut ( extra ) ;^712^^^^^697^727^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( EOCD_SIG ) ;writeOut ( extra ) ;^712^^^^^697^727^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( num ) ;writeOut ( extra ) ;^712^^^^^697^727^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += b.length;^713^^^^^698^728^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += fullblocks;^713^^^^^698^728^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += extra.length.length;^713^^^^^698^728^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += extra;^713^^^^^698^728^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += extra.length;^713^^^^^698^728^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += WORD;written += extra.length;^713^^^^^698^728^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += SHORT;written += extra.length;^713^^^^^698^728^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^dataStart = size;^715^^^^^700^730^dataStart = written;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^dataStart ;^715^^^^^700^730^dataStart = written;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^cdOffset = written;dataStart = written;^715^^^^^700^730^dataStart = written;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^localDataStart = written;dataStart = written;^715^^^^^700^730^dataStart = written;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeLocalFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( ze.getMethod (  )  != DEFLATED && raf != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( ze.getMethod (  )  == DEFLATED || raf != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( ze.getMethod (  )  != DEFLATED || raf == null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( entry.getMethod (  )  != DEFLATED || raf != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( ze.getMethod (  )  != fullblocks || raf != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( ze.getMethod (  )  != DEFLATED || _raf != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( DEFLATED.getMethod (  )  != ze || raf != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( ze.getMethod (  )  != raf || DEFLATED != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( ze.getMethod (  )  != DEFLATED ) {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  raf != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( ze.setMethod (  )  != DEFLATED || raf != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^if  ( ze .setMethod ( length )   != DEFLATED || raf != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( zipMethod == DEFLATED && raf == null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry.getMethod (  )  == STORED && raf == null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( zipMethod == DEFLATED || raf != null )  {^724^^^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P15_Unwrap_Block]^return ;^724^725^726^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  { return; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P16_Remove_Block]^^724^725^726^^^723^734^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  { return; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  (  ( entry.getMethod (  )  )  ==  ( DEFLATED )  )  &&  ( hasCompressionLevelChanged )  )  {     def.setLevel ( level ) ;     hasCompressionLevelChanged = false; }^724^^^^^723^734^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( zipMethod ==  ( DEFLATED )  )  &&  (  ( raf )  == null )  )  {     versionNeededToExtract = 20;     generalPurposeFlag |= 8; }^724^^^^^723^734^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( buff ) ;^727^^^^^723^734^writeOut ( DD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry ( DD_SIG ) ;^727^^^^^723^734^writeOut ( DD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^closeEntry ( b ) ;^727^^^^^723^734^writeOut ( DD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^727^^^^^723^734^writeOut ( DD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LFH_SIG ) ;writeOut ( DD_SIG ) ;^727^^^^^723^734^writeOut ( DD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( data, 0, data.length ) ;writeOut ( DD_SIG ) ;^727^^^^^723^734^writeOut ( DD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( CFH_SIG ) ;writeOut ( DD_SIG ) ;^727^^^^^723^734^writeOut ( DD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( b, offset, length ) ;writeOut ( DD_SIG ) ;^727^^^^^723^734^writeOut ( DD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZERO ) ;writeOut ( DD_SIG ) ;^727^^^^^723^734^writeOut ( DD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( extra ) ;writeOut ( DD_SIG ) ;^727^^^^^723^734^writeOut ( DD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LZERO ) ;writeOut ( DD_SIG ) ;^727^^^^^723^734^writeOut ( DD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;writeOut ( DD_SIG ) ;^727^^^^^723^734^writeOut ( DD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( EOCD_SIG ) ;writeOut ( DD_SIG ) ;^727^^^^^723^734^writeOut ( DD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( num ) ;writeOut ( DD_SIG ) ;^727^^^^^723^734^writeOut ( DD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong .getBytes (  )   ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( entry.getName (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^728^729^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ; writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( entry .setCrc ( dataStart )   )  ) ;^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^728^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( entry.setCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += entry.getCompressedSize (  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong .getBytes (  )   ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^729^730^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ; writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipLong.getBytes ( ze.setCompressedSize (  )  )  ) ;^729^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( entry.setSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^closeEntry ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setCompressedSize ( entry.getSize (  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipLong.getBytes ( ze.setSize (  )  )  ) ;^730^^^^^723^734^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^written += EFS_FLAG;^732^^^^^723^734^written += 16;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written += 16L;^732^^^^^723^734^written += 16;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += 16;^732^^^^^723^734^written += 16;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += WORD;written += 16;^732^^^^^723^734^written += 16;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += SHORT;written += 16;^732^^^^^723^734^written += 16;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += 16;^732^^^^^723^734^written += 16;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeDataDescriptor [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( extra ) ;^742^^^^^727^757^writeOut ( CFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry ( CFH_SIG ) ;^742^^^^^727^757^writeOut ( CFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( b ) ;^742^^^^^727^757^writeOut ( CFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^742^743^^^^727^757^writeOut ( CFH_SIG ) ; written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LFH_SIG ) ;writeOut ( CFH_SIG ) ;^742^^^^^727^757^writeOut ( CFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( DD_SIG ) ;writeOut ( CFH_SIG ) ;^742^^^^^727^757^writeOut ( CFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( b, offset, length ) ;writeOut ( CFH_SIG ) ;^742^^^^^727^757^writeOut ( CFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZERO ) ;writeOut ( CFH_SIG ) ;^742^^^^^727^757^writeOut ( CFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( extra ) ;writeOut ( CFH_SIG ) ;^742^^^^^727^757^writeOut ( CFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LZERO ) ;writeOut ( CFH_SIG ) ;^742^^^^^727^757^writeOut ( CFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;writeOut ( CFH_SIG ) ;^742^^^^^727^757^writeOut ( CFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( EOCD_SIG ) ;writeOut ( CFH_SIG ) ;^742^^^^^727^757^writeOut ( CFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( num ) ;writeOut ( CFH_SIG ) ;^742^^^^^727^757^writeOut ( CFH_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += length;^743^^^^^728^758^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written + = null ;^743^^^^^728^758^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += WORD;^743^^^^^728^758^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += SHORT;written += WORD;^743^^^^^728^758^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += WORD;^743^^^^^728^758^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += WORD;^743^^^^^728^758^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += WORD;^743^^^^^728^758^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^writeOut  <=  ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )   ^  8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << BUFFER_SIZE )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 17 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes (  ( entry.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipShort .getBytes (  )   | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipShort.getBytes (  ( ze.setCrc (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipShort.getBytes (  ( ze .getMethod (  )   << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^writeOut  &  ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )   >>  8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 14 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | length )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipShort.getBytes (  ( entry.setCrc (  )  << 8 )  | 20 )  ) ;^747^^^^^732^762^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += method;^748^^^^^733^763^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written +;^748^^^^^733^763^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += SHORT;^748^^^^^733^763^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += WORD;written += SHORT;^748^^^^^733^763^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += SHORT;^748^^^^^733^763^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += SHORT;^748^^^^^733^763^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += SHORT;^748^^^^^733^763^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^final  short  zipMethod = ze.getMethod (  ) ;^750^^^^^735^765^final int zipMethod = ze.getMethod (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final int zipMethod = entry.getMethod (  ) ;^750^^^^^735^765^final int zipMethod = ze.getMethod (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^final int zipMethod = ze.setMethod (  ) ;^750^^^^^735^765^final int zipMethod = ze.getMethod (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^final int zipMethod = ze .setMethod ( STORED )  ;^750^^^^^735^765^final int zipMethod = ze.getMethod (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^750^751^^^^735^765^final int zipMethod = ze.getMethod (  ) ; final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final boolean encodable = zipEncoding.canEncode ( entry.getName (  )  ) ;^751^^^^^736^766^final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final boolean encodable = ze.canEncode ( zipEncoding.getName (  )  ) ;^751^^^^^736^766^final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^final boolean encodable = zipEncoding.canEncode ( ze.setTime (  )  ) ;^751^^^^^736^766^final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^751^^^^^736^766^final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^751^^^^^736^766^final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^751^^^^^736^766^final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^final boolean encodable = entryEncoding.canEncode ( ze.getName (  )  ) ;^751^^^^^736^766^final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^final boolean encodable = zipEncoding .encode (  )  ;^751^^^^^736^766^final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^751^^^^^736^766^final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^final boolean encodable = zipEncoding.canEncode ( ze .getTime (  )   ) ;^751^^^^^736^766^final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable || fallbackToUTF8 ) ;^752^753^754^^^737^767^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !useEFS && fallbackToUTF8 ) ;^752^753^754^^^737^767^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && useEFS ) ;^752^753^754^^^737^767^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeVersionNeededToExtractAndGeneralPurposeBits (  !encodable && fallbackToUTF8 ) ;^752^753^754^^^737^767^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeVersionNeededToExtractAndGeneralPurposeBits ( fallbackToUTF8, !encodable && zipMethod ) ;^752^753^754^^^737^767^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeVersionNeededToExtractAndGeneralPurposeBits ( b, !encodable && fallbackToUTF8 ) ;^752^753^754^^^737^767^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^752^753^754^^^737^767^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += len;^755^^^^^740^770^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written + = null ;^755^^^^^740^770^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += WORD;^755^^^^^740^770^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += SHORT;written += WORD;^755^^^^^740^770^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += WORD;^755^^^^^740^770^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += WORD;^755^^^^^740^770^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += WORD;^755^^^^^740^770^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( b )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipShort.getBytes ( len )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^758^759^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ; written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( fullblocks )  ) ;^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^758^^^^^743^773^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += fullblocks;^759^^^^^744^774^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written + =  written +;^759^^^^^744^774^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += SHORT;^759^^^^^744^774^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += WORD;written += SHORT;^759^^^^^744^774^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += SHORT;^759^^^^^744^774^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += SHORT;^759^^^^^744^774^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += SHORT;^759^^^^^744^774^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipUtil.adjustToLong ( ze.getTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipUtil.toDosTime ( ze.setTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipUtil.toDosTime ( entry.getTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entry.setSize ( ZipUtil.adjustToLong ( def.getTotalIn (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^762^^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^762^763^^^^747^777^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ; written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += done;^763^^^^^748^778^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written +;^763^^^^^748^778^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += WORD;^763^^^^^748^778^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += SHORT;written += WORD;^763^^^^^748^778^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += WORD;^763^^^^^748^778^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += WORD;^763^^^^^748^778^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += WORD;^763^^^^^748^778^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( ze.setCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( ze .setCrc ( cdOffset )   )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( ze .setCrc ( written )   )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipLong.getBytes ( entry.setCrc (  )  )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^768^769^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ; writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( ze .setCrc ( size )   )  ) ;^768^^^^^753^783^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( ze.setCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipLong.getBytes ( entry.setCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += entry.getCompressedSize (  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^769^^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^769^770^^^^754^784^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ; writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( ze.setSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^write ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^770^^^^^755^785^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^written += ;^772^^^^^757^787^written += 12;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written += 2;^772^^^^^757^787^written += 12;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += 12;^772^^^^^757^787^written += 12;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += WORD;written += 12;^772^^^^^757^787^written += 12;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += SHORT;written += 12;^772^^^^^757^787^written += 12;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += 12;^772^^^^^757^787^written += 12;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( !encodable || fallbackToUTF8 )  {^778^^^^^763^793^if  ( !encodable && fallbackToUTF8 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( !useEFS && fallbackToUTF8 )  {^778^^^^^763^793^if  ( !encodable && fallbackToUTF8 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( !encodable && useEFS )  {^778^^^^^763^793^if  ( !encodable && fallbackToUTF8 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( !encodable ) {^778^^^^^763^793^if  ( !encodable && fallbackToUTF8 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  fallbackToUTF8 )  {^778^^^^^763^793^if  ( !encodable && fallbackToUTF8 )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P15_Unwrap_Block]^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^778^779^780^781^782^763^793^if  ( !encodable && fallbackToUTF8 )  { entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING; } else { entryEncoding = zipEncoding; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P16_Remove_Block]^^778^779^780^781^782^763^793^if  ( !encodable && fallbackToUTF8 )  { entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING; } else { entryEncoding = zipEncoding; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^entryEncoding = entryEncoding;^781^^^^^778^782^entryEncoding = zipEncoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^entryEncoding  = null ;^781^^^^^778^782^entryEncoding = zipEncoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;entryEncoding = zipEncoding;^781^^^^^778^782^entryEncoding = zipEncoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.encoding = encoding;entryEncoding = zipEncoding;^781^^^^^778^782^entryEncoding = zipEncoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^entryEncoding  =  entryEncoding ;^779^^^^^764^794^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entryEncoding = zipEncoding;entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^779^^^^^764^794^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.zipEncoding = ZipEncodingHelper.getZipEncoding ( encoding ) ;entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^779^^^^^764^794^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^useEFS &= ZipEncodingHelper.isUTF8 ( encoding ) ;entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^779^^^^^764^794^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^useEFS = b && ZipEncodingHelper.isUTF8 ( encoding ) ;entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^779^^^^^764^794^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^entryEncoding = entryEncoding;^781^^^^^766^796^entryEncoding = zipEncoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;entryEncoding = zipEncoding;^781^^^^^766^796^entryEncoding = zipEncoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^this.encoding = encoding;entryEncoding = zipEncoding;^781^^^^^766^796^entryEncoding = zipEncoding;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer name = zipEncoding.encode ( ze.getName (  )  ) ;^784^^^^^769^799^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer name = entryEncoding.encode ( entry.getName (  )  ) ;^784^^^^^769^799^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer name = ze.encode ( entryEncoding.getName (  )  ) ;^784^^^^^769^799^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ByteBuffer name = entryEncoding.encode ( ze.setTime (  )  ) ;^784^^^^^769^799^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^ByteBuffer name = zipEncoding.encode ( ze.setTime (  )  ) ;^784^^^^^769^799^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^ByteBuffer data = this.zipEncoding.encode ( comment ) ;ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^784^^^^^769^799^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^784^^^^^769^799^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^784^^^^^769^799^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^ByteBuffer commentB = entryEncoding.encode ( comm ) ;ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^784^^^^^769^799^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ByteBuffer name = entryEncoding .encode (  )  ;^784^^^^^769^799^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^784^^^^^769^799^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ByteBuffer name = entryEncoding.encode ( ze .getTime (  )   ) ;^784^^^^^769^799^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^name.arrayOffset (  ) , name.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^786^^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^786^787^^^^771^801^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ; written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written + = null ;^787^^^^^772^802^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += SHORT;^787^^^^^772^802^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += WORD;written += SHORT;^787^^^^^772^802^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += SHORT;^787^^^^^772^802^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += SHORT;^787^^^^^772^802^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += SHORT;^787^^^^^772^802^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^byte[] extra = entry.getCentralDirectoryExtra (  ) ;^790^^^^^775^805^byte[] extra = ze.getCentralDirectoryExtra (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^byte[] extra = ze.setCompressedSize (  ) ;^790^^^^^775^805^byte[] extra = ze.getCentralDirectoryExtra (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^byte[] extra = ze .getLocalFileDataExtra (  )  ;^790^^^^^775^805^byte[] extra = ze.getCentralDirectoryExtra (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] extra = ze.getLocalFileDataExtra (  ) ;byte[] extra = ze.getCentralDirectoryExtra (  ) ;^790^^^^^775^805^byte[] extra = ze.getCentralDirectoryExtra (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^790^791^^^^775^805^byte[] extra = ze.getCentralDirectoryExtra (  ) ; writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeCentralDirectoryEnd (  ) ;byte[] extra = ze.getCentralDirectoryExtra (  ) ;^790^^^^^775^805^byte[] extra = ze.getCentralDirectoryExtra (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( ZERO.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( extra.length.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( extra )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipShort.getBytes ( buff.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^791^792^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ; written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( data, 0, data.length ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipShort.getBytes ( extra.length )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^791^^^^^776^806^writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += i;^792^^^^^777^807^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written +;^792^^^^^777^807^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += SHORT;^792^^^^^777^807^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += WORD;written += SHORT;^792^^^^^777^807^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += SHORT;^792^^^^^777^807^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += SHORT;^792^^^^^777^807^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += SHORT;^792^^^^^777^807^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^char comm = ze.getComment (  ) ;^795^^^^^780^810^String comm = ze.getComment (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^String comm = entry.getComment (  ) ;^795^^^^^780^810^String comm = ze.getComment (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^String comm = ze.setCrc (  ) ;^795^^^^^780^810^String comm = ze.getComment (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^String comm = ze .getName (  )  ;^795^^^^^780^810^String comm = ze.getComment (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^795^^^^^780^810^String comm = ze.getComment (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( comm != null )  {^796^^^^^781^811^if  ( comm == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( name == null )  {^796^^^^^781^811^if  ( comm == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( comm == this )  {^796^^^^^781^811^if  ( comm == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( raf != null )  {^796^^^^^781^811^if  ( comm == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( _raf != null )  {^796^^^^^781^811^if  ( comm == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( out != null )  {^796^^^^^781^811^if  ( comm == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry == null )  {^796^^^^^781^811^if  ( comm == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P15_Unwrap_Block]^comm = "";^796^797^798^^^781^811^if  ( comm == null )  { comm = ""; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P16_Remove_Block]^^796^797^798^^^781^811^if  ( comm == null )  { comm = ""; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( out )  != null )  {     out.close (  ) ; }^796^^^^^781^811^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( raf )  != null )  {     raf.close (  ) ; }^796^^^^^781^811^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( entry )  == null )  {     return ; }^796^^^^^781^811^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  ( out )  != null )  {     out.flush (  ) ; }^796^^^^^781^811^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^comm  =  comm ;^797^^^^^782^812^comm = "";^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^comm ;^797^^^^^782^812^comm = "";^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer commentB = zipEncoding.encode ( comm ) ;^800^^^^^785^815^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer nameentB = entryEncoding.encode ( comm ) ;^800^^^^^785^815^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer entryEncodingentB = comm.encode ( comm ) ;^800^^^^^785^815^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ByteBuffer commentB = entryEncoding .encode (  )  ;^800^^^^^785^815^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;ByteBuffer commentB = entryEncoding.encode ( comm ) ;^800^^^^^785^815^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;ByteBuffer commentB = entryEncoding.encode ( comm ) ;^800^^^^^785^815^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^ByteBuffer data = this.zipEncoding.encode ( comment ) ;ByteBuffer commentB = entryEncoding.encode ( comm ) ;^800^^^^^785^815^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^ByteBuffer nameentB = entryEncoding .encode (  )  ;^800^^^^^785^815^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^800^^^^^785^815^ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^802^^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^802^803^^^^787^817^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ; written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += fullblocks;^803^^^^^788^818^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written + =  written +;^803^^^^^788^818^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += SHORT;^803^^^^^788^818^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += WORD;written += SHORT;^803^^^^^788^818^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += SHORT;^803^^^^^788^818^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += SHORT;^803^^^^^788^818^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += SHORT;^803^^^^^788^818^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( buff ) ;^806^^^^^791^821^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry ( ZERO ) ;^806^^^^^791^821^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( extra ) ;^806^^^^^791^821^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^806^807^^^^791^821^writeOut ( ZERO ) ; written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LFH_SIG ) ;writeOut ( ZERO ) ;^806^^^^^791^821^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( DD_SIG ) ;writeOut ( ZERO ) ;^806^^^^^791^821^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( CFH_SIG ) ;writeOut ( ZERO ) ;^806^^^^^791^821^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( extra ) ;writeOut ( ZERO ) ;^806^^^^^791^821^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LZERO ) ;writeOut ( ZERO ) ;^806^^^^^791^821^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;writeOut ( ZERO ) ;^806^^^^^791^821^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( EOCD_SIG ) ;writeOut ( ZERO ) ;^806^^^^^791^821^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( num ) ;writeOut ( ZERO ) ;^806^^^^^791^821^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += i;^807^^^^^792^822^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written +;^807^^^^^792^822^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += SHORT;^807^^^^^792^822^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += WORD;written += SHORT;^807^^^^^792^822^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += SHORT;^807^^^^^792^822^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += SHORT;^807^^^^^792^822^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += SHORT;^807^^^^^792^822^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( entry.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipShort.getBytes ( ze.setMethod (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipShort.getBytes ( entry.setMethod (  )  )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipShort.getBytes ( ze .getExternalAttributes (  )   )  ) ;^810^^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^810^811^^^^795^825^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ; written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += i;^811^^^^^796^826^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written + =  written +;^811^^^^^796^826^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += SHORT;^811^^^^^796^826^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += WORD;written += SHORT;^811^^^^^796^826^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += SHORT;^811^^^^^796^826^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += SHORT;^811^^^^^796^826^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += SHORT;^811^^^^^796^826^written += SHORT;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipLong.getBytes ( entry.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( ZipLong.getBytes ( ze.setMethod (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipLong.getBytes ( entry .getInternalAttributes (  )   )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^814^815^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ; written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^814^^^^^799^829^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += len;^815^^^^^800^830^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written + =  written +;^815^^^^^800^830^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += WORD;^815^^^^^800^830^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += SHORT;written += WORD;^815^^^^^800^830^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += WORD;^815^^^^^800^830^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += WORD;^815^^^^^800^830^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += WORD;^815^^^^^800^830^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut (  ( byte[] )  offsets.get ( entry )  ) ;^818^^^^^803^833^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut (  ( byte[] )  ze.get ( offsets )  ) ;^818^^^^^803^833^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write (  ( byte[] )  offsets.get ( ze )  ) ;^818^^^^^803^833^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^write (  ( byte[] )  offsets.get ( entry )  ) ;^818^^^^^803^833^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^818^^^^^803^833^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^818^^^^^803^833^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^818^^^^^803^833^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^818^^^^^803^833^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( b, offset, length ) ;writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^818^^^^^803^833^writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^818^819^^^^803^833^writeOut (  ( byte[] )  offsets.get ( ze )  ) ; written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += done;^819^^^^^804^834^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written + = null ;^819^^^^^804^834^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += WORD;^819^^^^^804^834^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += SHORT;written += WORD;^819^^^^^804^834^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 16;written += WORD;^819^^^^^804^834^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += extra.length;written += WORD;^819^^^^^804^834^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += 12;written += WORD;^819^^^^^804^834^written += WORD;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( commentB.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^822^^^^^807^837^writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^822^^^^^807^837^writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( commentB.array (  ) , name .array (  )  , name.limit (  )  ) ;^822^^^^^807^837^writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^822^^^^^807^837^writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( name.array (  ) , name .array (  )  , name.limit (  )  ) ;^822^^^^^807^837^writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^822^823^^^^807^837^writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ; written += name.limit (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += commentB.limit (  ) ;^823^^^^^808^838^written += name.limit (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += commentB.limit (  ) ;written += name.limit (  ) ;^823^^^^^808^838^written += name.limit (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += entry.getCompressedSize (  ) ;written += name.limit (  ) ;^823^^^^^808^838^written += name.limit (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^823^^^^^808^838^written += name.limit (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZERO ) ;^826^^^^^811^841^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( extra ) ;^826^^^^^811^841^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( buff ) ;^826^^^^^811^841^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^826^827^^^^811^841^writeOut ( extra ) ; written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LFH_SIG ) ;writeOut ( extra ) ;^826^^^^^811^841^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( DD_SIG ) ;writeOut ( extra ) ;^826^^^^^811^841^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeDataDescriptor ( entry ) ;writeOut ( extra ) ;^826^^^^^811^841^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( CFH_SIG ) ;writeOut ( extra ) ;^826^^^^^811^841^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^entries.add ( entry ) ;writeOut ( extra ) ;^826^^^^^811^841^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZERO ) ;writeOut ( extra ) ;^826^^^^^811^841^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LZERO ) ;writeOut ( extra ) ;^826^^^^^811^841^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;writeOut ( extra ) ;^826^^^^^811^841^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( EOCD_SIG ) ;writeOut ( extra ) ;^826^^^^^811^841^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( num ) ;writeOut ( extra ) ;^826^^^^^811^841^writeOut ( extra ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += buff.length;^827^^^^^812^842^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += i;^827^^^^^812^842^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += extra.length.length;^827^^^^^812^842^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += extra;^827^^^^^812^842^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^written +=  null.length;^827^^^^^812^842^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += length;written += extra.length;^827^^^^^812^842^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += WORD;written += extra.length;^827^^^^^812^842^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += SHORT;written += extra.length;^827^^^^^812^842^written += extra.length;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( name.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ;^830^^^^^815^845^writeOut ( commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ;^830^^^^^815^845^writeOut ( commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( commentB .arrayOffset (  )  , commentB^830^^^^^815^845^writeOut ( commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^830^831^^^^815^845^writeOut ( commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ; written += commentB.limit (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^830^^^^^815^845^writeOut ( commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^written += name.limit (  ) ;^831^^^^^816^846^written += commentB.limit (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += name.limit (  ) ;written += commentB.limit (  ) ;^831^^^^^816^846^written += commentB.limit (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^written += entry.getCompressedSize (  ) ;written += commentB.limit (  ) ;^831^^^^^816^846^written += commentB.limit (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^831^^^^^816^846^written += commentB.limit (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralFileHeader [RETURN_TYPE] void   ZipArchiveEntry ze [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  commentB  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( buf ) ;^839^^^^^838^858^writeOut ( EOCD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry ( EOCD_SIG ) ;^839^^^^^838^858^writeOut ( EOCD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^839^^^^^838^858^writeOut ( EOCD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LFH_SIG ) ;writeOut ( EOCD_SIG ) ;^839^^^^^838^858^writeOut ( EOCD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( DD_SIG ) ;writeOut ( EOCD_SIG ) ;^839^^^^^838^858^writeOut ( EOCD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( CFH_SIG ) ;writeOut ( EOCD_SIG ) ;^839^^^^^838^858^writeOut ( EOCD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( b, offset, length ) ;writeOut ( EOCD_SIG ) ;^839^^^^^838^858^writeOut ( EOCD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZERO ) ;writeOut ( EOCD_SIG ) ;^839^^^^^838^858^writeOut ( EOCD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( extra ) ;writeOut ( EOCD_SIG ) ;^839^^^^^838^858^writeOut ( EOCD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LZERO ) ;writeOut ( EOCD_SIG ) ;^839^^^^^838^858^writeOut ( EOCD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;writeOut ( EOCD_SIG ) ;^839^^^^^838^858^writeOut ( EOCD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( num ) ;writeOut ( EOCD_SIG ) ;^839^^^^^838^858^writeOut ( EOCD_SIG ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( num ) ;^842^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry ( ZERO ) ;^842^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^842^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LFH_SIG ) ;writeOut ( ZERO ) ;^842^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( DD_SIG ) ;writeOut ( ZERO ) ;^842^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( CFH_SIG ) ;writeOut ( ZERO ) ;^842^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( extra ) ;writeOut ( ZERO ) ;^842^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LZERO ) ;writeOut ( ZERO ) ;^842^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;writeOut ( ZERO ) ;^842^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( EOCD_SIG ) ;writeOut ( ZERO ) ;^842^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( num ) ;writeOut ( ZERO ) ;^842^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( num ) ;^843^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry ( ZERO ) ;^843^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( extra ) ;^843^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^843^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LFH_SIG ) ;writeOut ( ZERO ) ;^843^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( DD_SIG ) ;writeOut ( ZERO ) ;^843^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( CFH_SIG ) ;writeOut ( ZERO ) ;^843^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( extra ) ;writeOut ( ZERO ) ;^843^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LZERO ) ;writeOut ( ZERO ) ;^843^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;writeOut ( ZERO ) ;^843^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( EOCD_SIG ) ;writeOut ( ZERO ) ;^843^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( num ) ;writeOut ( ZERO ) ;^843^^^^^838^858^writeOut ( ZERO ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^byte[] num = ZipShort.getBytes ( entries.size() + 8  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^byte[] num = ZipShort.getBytes ( entries.clear (  )  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^byte[] num = ZipShort.getBytes ( entries.size() + 9  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^byte[] num = ZipShort .getBytes (  )  ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^846^847^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ; writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^byte[] num = ZipShort.getBytes ( entries.size() - 0  ) ;^846^^^^^838^858^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( b ) ;^847^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( num ) ;^847^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^write ( extra ) ;^847^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^847^848^^^^838^858^writeOut ( num ) ; writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LFH_SIG ) ;writeOut ( num ) ;^847^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( DD_SIG ) ;writeOut ( num ) ;^847^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( CFH_SIG ) ;writeOut ( num ) ;^847^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZERO ) ;writeOut ( num ) ;^847^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( extra ) ;writeOut ( num ) ;^847^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LZERO ) ;writeOut ( num ) ;^847^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;writeOut ( num ) ;^847^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( EOCD_SIG ) ;writeOut ( num ) ;^847^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( buff ) ;^848^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( num ) ;^848^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( buf ) ;^848^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^848^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LFH_SIG ) ;writeOut ( num ) ;^848^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( DD_SIG ) ;writeOut ( num ) ;^848^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( CFH_SIG ) ;writeOut ( num ) ;^848^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZERO ) ;writeOut ( num ) ;^848^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( extra ) ;writeOut ( num ) ;^848^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( LZERO ) ;writeOut ( num ) ;^848^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;writeOut ( num ) ;^848^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( EOCD_SIG ) ;writeOut ( num ) ;^848^^^^^838^858^writeOut ( num ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipLong.getBytes ( size )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipLong.getBytes ( save )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^851^852^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ; writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( b, offset, length ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipLong.getBytes ( cdLength )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipLong.getBytes ( written )  ) ;^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^851^^^^^838^858^writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipLong.getBytes ( written )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^closeEntry ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipLong.getBytes ( save )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^offsets.put ( ze, ZipLong.getBytes ( written )  ) ;writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipLong.getBytes ( size )  ) ;^852^^^^^838^858^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer data = zipEncoding.encode ( comment ) ;^855^^^^^838^858^ByteBuffer data = this.zipEncoding.encode ( comment ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer data = this.zipEncoding.encode ( name ) ;^855^^^^^838^858^ByteBuffer data = this.zipEncoding.encode ( comment ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^ByteBuffer data = comment.encode ( this.zipEncoding ) ;^855^^^^^838^858^ByteBuffer data = this.zipEncoding.encode ( comment ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^ByteBuffer data = this.zipEncoding .encode (  )  ;^855^^^^^838^858^ByteBuffer data = this.zipEncoding.encode ( comment ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;ByteBuffer data = this.zipEncoding.encode ( comment ) ;^855^^^^^838^858^ByteBuffer data = this.zipEncoding.encode ( comment ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;ByteBuffer data = this.zipEncoding.encode ( comment ) ;^855^^^^^838^858^ByteBuffer data = this.zipEncoding.encode ( comment ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^ByteBuffer commentB = entryEncoding.encode ( comm ) ;ByteBuffer data = this.zipEncoding.encode ( comment ) ;^855^^^^^838^858^ByteBuffer data = this.zipEncoding.encode ( comment ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^855^856^^^^838^858^ByteBuffer data = this.zipEncoding.encode ( comment ) ; writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^856^857^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ; writeOut ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^856^^^^^838^858^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^857^^^^^838^858^writeOut ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( data .arrayOffset (  )  , data^857^^^^^838^858^writeOut ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^857^^^^^838^858^writeOut ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;writeOut ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^857^^^^^838^858^writeOut ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ;writeOut ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^857^^^^^838^858^writeOut ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^writeOut ( data.array (  ) , data .array (  )  , data.limit (  )  ) ;^857^^^^^838^858^writeOut ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeCentralDirectoryEnd [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  ByteBuffer  data  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^writeOut ( data, 6, data.length ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( buf, 0, data.length ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( data, 0, b ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut (  0, data.length ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( data, 0 ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( data.length, 0, data ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( data, 0, data.length ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( data, 0, fullblocks ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( data, 0, data.length ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( DD_SIG ) ;writeOut ( data, 0, data.length ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^write ( b, 0, b.length ) ;writeOut ( data, 0, data.length ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( b, offset, length ) ;writeOut ( data, 0, data.length ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.write ( data, offset, length ) ;writeOut ( data, 0, data.length ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( buf, 0, len ) ;writeOut ( data, 0, data.length ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.write ( data, offset, length ) ;writeOut ( data, 0, data.length ) ;^866^^^^^865^867^writeOut ( data, 0, data.length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( raf == null )  {^878^^^^^876^883^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( _raf != null )  {^878^^^^^876^883^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( raf != false )  {^878^^^^^876^883^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( out != null )  {^878^^^^^876^883^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( entry == null )  {^878^^^^^876^883^if  ( raf != null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P15_Unwrap_Block]^raf.write(data, offset, length);^878^879^880^881^882^876^883^if  ( raf != null )  { raf.write ( data, offset, length ) ; } else { out.write ( data, offset, length ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P16_Remove_Block]^^878^879^880^881^882^876^883^if  ( raf != null )  { raf.write ( data, offset, length ) ; } else { out.write ( data, offset, length ) ; }^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^out.write ( b, offset, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^out.write ( data, i, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^out.write ( data, offset, done ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^out.write (  offset, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^out.write ( data,  length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^out.write ( data, offset ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^out.write ( offset, data, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^out.write ( data, length, offset ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^out.write ( num, offset, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( data, 0, data.length ) ;out.write ( data, offset, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^crc.update ( b, offset, length ) ;out.write ( data, offset, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.setInput ( b, offset, length ) ;out.write ( data, offset, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^write ( b, 0, b.length ) ;out.write ( data, offset, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( b, offset, length ) ;out.write ( data, offset, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.write ( data, offset, length ) ;out.write ( data, offset, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^raf.write ( b, offset, length ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^raf.write ( data, offset, b ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^raf.write (  offset, length ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^raf.write ( data,  length ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^raf.write ( data, offset ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^raf.write ( length, offset, data ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^raf.write ( data, length, offset ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^raf.write ( data, length, length ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( data, 0, data.length ) ;raf.write ( data, offset, length ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^crc.update ( b, offset, length ) ;raf.write ( data, offset, length ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.setInput ( b, offset, length ) ;raf.write ( data, offset, length ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^write ( b, 0, b.length ) ;raf.write ( data, offset, length ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( b, offset, length ) ;raf.write ( data, offset, length ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.write ( data, offset, length ) ;raf.write ( data, offset, length ) ;^879^^^^^876^883^raf.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^out.write ( extra, offset, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^out.write ( data, zipMethod, length ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^out.write ( data, offset, fullblocks ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^out.write ( length, offset, data ) ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^out .write ( WORD )  ;^881^^^^^876^883^out.write ( data, offset, length ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeOut [RETURN_TYPE] void   byte[] data int offset int length [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^while  ( !def.reset (  )  )  {^886^^^^^885^889^while  ( !def.needsInput (  )  )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflateUntilInputIsNeeded [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^finish (  ) ;^887^^^^^885^889^deflate (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflateUntilInputIsNeeded [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^887^^^^^885^889^deflate (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflateUntilInputIsNeeded [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.flush (  ) ;deflate (  ) ;^887^^^^^885^889^deflate (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflateUntilInputIsNeeded [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^out.close (  ) ;deflate (  ) ;^887^^^^^885^889^deflate (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflateUntilInputIsNeeded [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.finish (  ) ;deflate (  ) ;^887^^^^^885^889^deflate (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflateUntilInputIsNeeded [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^def.reset (  ) ;deflate (  ) ;^887^^^^^885^889^deflate (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflateUntilInputIsNeeded [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^_raf.close (  ) ;deflate (  ) ;^887^^^^^885^889^deflate (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflateUntilInputIsNeeded [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^raf.close (  ) ;deflate (  ) ;^887^^^^^885^889^deflate (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflateUntilInputIsNeeded [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^886^887^^^^885^889^while  ( !def.needsInput (  )  )  { deflate (  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] deflateUntilInputIsNeeded [RETURN_TYPE] void   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^short  versionNeededToExtract = 10;^898^^^^^891^913^int versionNeededToExtract = 10;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^int versionNeededToExtract = ;^898^^^^^891^913^int versionNeededToExtract = 10;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^short  generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^int generalPurposeFlag =  ( useEFS && utfFallback )  ? EFS_FLAG : 0;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : DEFLATER_BLOCK_SIZE;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^int generalPurposeFlag =  ( useEFS || useEFS )  ? EFS_FLAG : 0;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^int generalPurposeFlag =  ( fallbackToUTF8 || utfFallback )  ? EFS_FLAG : 0;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^int generalPurposeFlag =  ( useEFS || utfFallback )  ? offset : 0;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^int generalPurposeFlag =  ( useEFS || EFS_FLAG )  ? utfFallback : 0;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^int generalPurposeFlag =  ( utfFallback || useEFS )  ? EFS_FLAG : 0;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^int generalPurposeFlag =  ( EFS_FLAG || utfFallback )  ? useEFS : 0;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^int generalPurposeFlag  =  0;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^int generalPurposeFlag  =  EFS_FLAG ;^899^^^^^891^913^int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( zipMethod == DEFLATED || raf == null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( zipMethod != DEFLATED && raf == null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P2_Replace_Operator]^if  ( zipMethod == DEFLATED && raf != null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( zipMethod == DEFLATED && _raf == null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( DEFLATED == zipMethod && raf == null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^if  ( zipMethod == raf && DEFLATED == null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  ( zipMethod == DEFLATED ) {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P6_Replace_Expression]^if  (  raf == null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^if  ( zipMethod == DEFLATED && raf == this )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( ze.getMethod (  )  != DEFLATED || raf != null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P9_Replace_Statement]^if  ( zipMethod == DEFLATED || raf != null )  {^900^^^^^891^913^if  ( zipMethod == DEFLATED && raf == null )  {^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  (  ( entry.getMethod (  )  )  ==  ( DEFLATED )  )  &&  ( hasCompressionLevelChanged )  )  {     def.setLevel ( level ) ;     hasCompressionLevelChanged = false; }^900^^^^^891^913^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P13_Insert_Block]^if  (  (  ( ze.getMethod (  )  )  !=  ( DEFLATED )  )  ||  (  ( raf )  != null )  )  {     return ; }^900^^^^^891^913^[Delete]^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^versionNeededToExtract =  method;^903^^^^^891^913^versionNeededToExtract =  20;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^versionNeededToExtract =  20 >> 1;^903^^^^^891^913^versionNeededToExtract =  20;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^generalPurposeFlag |= SHORT;^905^^^^^891^913^generalPurposeFlag |= 8;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^generalPurposeFlag |= 8L;^905^^^^^891^913^generalPurposeFlag |= 8;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^versionNeededToExtract =  23;^903^^^^^891^913^versionNeededToExtract =  20;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^versionNeededToExtract =  20 + 0;^903^^^^^891^913^versionNeededToExtract =  20;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^generalPurposeFlag |= method;^905^^^^^891^913^generalPurposeFlag |= 8;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^generalPurposeFlag |= 3;^905^^^^^891^913^generalPurposeFlag |= 8;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( fullblocks )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipShort.getBytes ( done )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^910^^^^^891^913^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P7_Replace_Invocation]^write ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipShort.getBytes ( done )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P14_Delete_Statement]^^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( zipMethod )  ) ;writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( extra.length )  ) ;writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getSize (  )  )  ) ;writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( entry.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdLength )  ) ;writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipLong.getBytes ( cdOffset )  ) ;writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P11_Insert_Donor_Statement]^writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P8_Replace_Mix]^writeOut ( ZipShort.getBytes ( fullblocks )  ) ;^912^^^^^891^913^writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [RETURN_TYPE] void   final int zipMethod final boolean utfFallback [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^return n;^942^^^^^941^943^return name;^[CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^public static final UnicodeExtraFieldPolicy ALWAYS = new UnicodeExtraFieldPolicy ( "alwaysay" ) ;^923^924^^^^923^924^public static final UnicodeExtraFieldPolicy ALWAYS = new UnicodeExtraFieldPolicy ( "always" ) ;^[CLASS] UnicodeExtraFieldPolicy  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^public static final UnicodeExtraFieldPolicy NEVER = new UnicodeExtraFieldPolicy ( "n" ) ;^928^929^^^^928^929^public static final UnicodeExtraFieldPolicy NEVER = new UnicodeExtraFieldPolicy ( "never" ) ;^[CLASS] UnicodeExtraFieldPolicy  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P3_Replace_Literal]^public static final UnicodeExtraFieldPolicy NOT_ENCODEABLE = new UnicodeExtraFieldPolicy ( "ot encodeable" ) ;^934^935^^^^934^935^public static final UnicodeExtraFieldPolicy NOT_ENCODEABLE = new UnicodeExtraFieldPolicy ( "not encodeable" ) ;^[CLASS] UnicodeExtraFieldPolicy  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P1_Replace_Type]^private final char name;^937^^^^^932^942^private final String name;^[CLASS] UnicodeExtraFieldPolicy  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ZipEncoding  entryEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comm  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  boolean  b  commentEncodable  encodable  fallbackToUTF8  hasCompressionLevelChanged  useEFS  utfFallback  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  ze  List  entries  Map  offsets  
[P5_Replace_Variable]^name = name;^939^^^^^938^940^name = n;^[CLASS] UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] String)   String n [VARIABLES] UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  String  n  name  boolean  
[P8_Replace_Mix]^name =  null;^939^^^^^938^940^name = n;^[CLASS] UnicodeExtraFieldPolicy  [METHOD] <init> [RETURN_TYPE] String)   String n [VARIABLES] UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  String  n  name  boolean  
[P5_Replace_Variable]^return n;^942^^^^^941^943^return name;^[CLASS] UnicodeExtraFieldPolicy  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  String  n  name  boolean  
