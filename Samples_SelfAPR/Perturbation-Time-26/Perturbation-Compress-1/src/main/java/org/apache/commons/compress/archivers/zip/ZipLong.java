[P1_Replace_Type]^private static final  short  WORD = 4;^26^^^^^21^31^private static final int WORD = 4;^[CLASS] ZipLong   [VARIABLES] 
[P3_Replace_Literal]^private static final int WORD = -3;^26^^^^^21^31^private static final int WORD = 4;^[CLASS] ZipLong   [VARIABLES] 
[P8_Replace_Mix]^private static final int WORD = 1;^26^^^^^21^31^private static final int WORD = 4;^[CLASS] ZipLong   [VARIABLES] 
[P1_Replace_Type]^private static final  short  BYTE_MASK = 0xFF;^28^^^^^23^33^private static final int BYTE_MASK = 0xFF;^[CLASS] ZipLong   [VARIABLES] 
[P8_Replace_Mix]^private static   short  BYTE_MASK = 0xFF;^28^^^^^23^33^private static final int BYTE_MASK = 0xFF;^[CLASS] ZipLong   [VARIABLES] 
[P1_Replace_Type]^private static final  short  BYTE_1 = 1;^30^^^^^25^35^private static final int BYTE_1 = 1;^[CLASS] ZipLong   [VARIABLES] 
[P3_Replace_Literal]^private static final int BYTE_5 = 5;^30^^^^^25^35^private static final int BYTE_1 = 1;^[CLASS] ZipLong   [VARIABLES] 
[P8_Replace_Mix]^private static final int BYTE_1  = null ;^30^^^^^25^35^private static final int BYTE_1 = 1;^[CLASS] ZipLong   [VARIABLES] 
[P1_Replace_Type]^private static final  short  BYTE_1_MASK = 0xFF00;^31^^^^^26^36^private static final int BYTE_1_MASK = 0xFF00;^[CLASS] ZipLong   [VARIABLES] 
[P1_Replace_Type]^private static final  short  BYTE_1_SHIFT = 8;^32^^^^^27^37^private static final int BYTE_1_SHIFT = 8;^[CLASS] ZipLong   [VARIABLES] 
[P8_Replace_Mix]^private static final int BYTE_1_SHIFT = 2;^32^^^^^27^37^private static final int BYTE_1_SHIFT = 8;^[CLASS] ZipLong   [VARIABLES] 
[P1_Replace_Type]^private static final  long  BYTE_2 = 2;^34^^^^^29^39^private static final int BYTE_2 = 2;^[CLASS] ZipLong   [VARIABLES] 
[P3_Replace_Literal]^private static final int BYTE_5 = 5;^34^^^^^29^39^private static final int BYTE_2 = 2;^[CLASS] ZipLong   [VARIABLES] 
[P8_Replace_Mix]^private static final int BYTE_3 = 3;^34^^^^^29^39^private static final int BYTE_2 = 2;^[CLASS] ZipLong   [VARIABLES] 
[P1_Replace_Type]^private static final  long  BYTE_2_MASK = 0xFF0000;^35^^^^^30^40^private static final int BYTE_2_MASK = 0xFF0000;^[CLASS] ZipLong   [VARIABLES] 
[P1_Replace_Type]^private static final  short  BYTE_2_SHIFT = 16;^36^^^^^31^41^private static final int BYTE_2_SHIFT = 16;^[CLASS] ZipLong   [VARIABLES] 
[P3_Replace_Literal]^private static final int BYTE_2_SHIFT = 15;^36^^^^^31^41^private static final int BYTE_2_SHIFT = 16;^[CLASS] ZipLong   [VARIABLES] 
[P8_Replace_Mix]^private static final int BYTE_2_SHIFT ;^36^^^^^31^41^private static final int BYTE_2_SHIFT = 16;^[CLASS] ZipLong   [VARIABLES] 
[P1_Replace_Type]^private static final  short  BYTE_3 = 3;^38^^^^^33^43^private static final int BYTE_3 = 3;^[CLASS] ZipLong   [VARIABLES] 
[P8_Replace_Mix]^private static final int BYTE_3  = null ;^38^^^^^33^43^private static final int BYTE_3 = 3;^[CLASS] ZipLong   [VARIABLES] 
[P1_Replace_Type]^private static final  short  BYTE_3_MASK = 0xFF000000L;^39^^^^^34^44^private static final long BYTE_3_MASK = 0xFF000000L;^[CLASS] ZipLong   [VARIABLES] 
[P1_Replace_Type]^private static final  short  BYTE_3_SHIFT = 24;^40^^^^^35^45^private static final int BYTE_3_SHIFT = 24;^[CLASS] ZipLong   [VARIABLES] 
[P3_Replace_Literal]^private static final int BYTE_3_SHIFT = 22;^40^^^^^35^45^private static final int BYTE_3_SHIFT = 24;^[CLASS] ZipLong   [VARIABLES] 
[P8_Replace_Mix]^private static final  short  BYTE_3_SHIFT = 24 + 1;^40^^^^^35^45^private static final int BYTE_3_SHIFT = 24;^[CLASS] ZipLong   [VARIABLES] 
[P1_Replace_Type]^private final  short  value;^42^^^^^37^47^private final long value;^[CLASS] ZipLong   [VARIABLES] 
[P5_Replace_Variable]^this.value = BYTE_3_MASK;^49^^^^^48^50^this.value = value;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(long)   long value [VARIABLES] int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  long  BYTE_3_MASK  value  boolean  
[P3_Replace_Literal]^this ( bytes, -9 ) ;^57^^^^^56^58^this ( bytes, 0 ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[])   byte[] bytes [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  long  BYTE_3_MASK  value  
[P14_Delete_Statement]^^57^^^^^56^58^this ( bytes, 0 ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[])   byte[] bytes [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^return getValue ( bytes, 0 ) ;this ( bytes, 0 ) ;^57^^^^^56^58^this ( bytes, 0 ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[])   byte[] bytes [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^value = ZipLong.getValue ( bytes, BYTE_3_SHIFT ) ;^66^^^^^65^67^value = ZipLong.getValue ( bytes, offset ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^value = ZipLong.getValue (  offset ) ;^66^^^^^65^67^value = ZipLong.getValue ( bytes, offset ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^value = ZipLong.getValue ( bytes ) ;^66^^^^^65^67^value = ZipLong.getValue ( bytes, offset ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^value = ZipLong.getValue ( offset, bytes ) ;^66^^^^^65^67^value = ZipLong.getValue ( bytes, offset ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P7_Replace_Invocation]^value = ZipLong.ZipLong ( bytes, offset ) ;^66^^^^^65^67^value = ZipLong.getValue ( bytes, offset ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P8_Replace_Mix]^value =  ZipLong.getValue ( null, offset ) ;^66^^^^^65^67^value = ZipLong.getValue ( bytes, offset ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^value = ZipLong.getValue ( bytes, WORD ) ;^66^^^^^65^67^value = ZipLong.getValue ( bytes, offset ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P8_Replace_Mix]^value = ZipLong.ZipLong ( bytes, WORD ) ;^66^^^^^65^67^value = ZipLong.getValue ( bytes, offset ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P14_Delete_Statement]^^66^^^^^65^67^value = ZipLong.getValue ( bytes, offset ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^return getValue ( bytes, 0 ) ;value = ZipLong.getValue ( bytes, offset ) ;^66^^^^^65^67^value = ZipLong.getValue ( bytes, offset ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^return ZipLong.getBytes ( value ) ;value = ZipLong.getValue ( bytes, offset ) ;^66^^^^^65^67^value = ZipLong.getValue ( bytes, offset ) ;^[CLASS] ZipLong  [METHOD] <init> [RETURN_TYPE] ZipLong(byte[],int)   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^return ZipLong.getBytes ( BYTE_3_MASK ) ;^74^^^^^73^75^return ZipLong.getBytes ( value ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  boolean  
[P7_Replace_Invocation]^return ZipLong.getValue ( value ) ;^74^^^^^73^75^return ZipLong.getBytes ( value ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  boolean  
[P14_Delete_Statement]^^74^^^^^73^75^return ZipLong.getBytes ( value ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   [VARIABLES] int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  boolean  
[P5_Replace_Variable]^return BYTE_3_MASK;^82^^^^^81^83^return value;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   [VARIABLES] int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  boolean  
[P1_Replace_Type]^result[0] =  (  long  )   (  ( value & BYTE_MASK )  ) ;^92^^^^^90^97^result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^result[0] =  ( byte )   (  ( value  ||  BYTE_MASK )  ) ;^92^^^^^90^97^result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P3_Replace_Literal]^result[-8] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^92^^^^^90^97^result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[0] =  ( byte )   (  ( BYTE_3_MASK & BYTE_MASK )  ) ;^92^^^^^90^97^result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[0] =  ( byte )   (  ( value & WORD )  ) ;^92^^^^^90^97^result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P8_Replace_Mix]^result[0 - 4] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^92^^^^^90^97^result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^92^^^^^90^97^result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^92^^^^^90^97^result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^92^^^^^90^97^result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P1_Replace_Type]^result[BYTE_1] =  (  int  )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )   >  BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^result[BYTE_1] =  ( byte )   (  ( value  >>  BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_1] =  ( byte )   (  ( BYTE_3_MASK & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_1] =  ( byte )   (  ( value & BYTE_MASK_MASK )  >> BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_1] =  ( byte )   (  ( value & offset )  >> BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_MASK ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_1] =  ( byte )   (  ( BYTE_1 & value_MASK )  >> BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_SHIFT_MASK )  >> BYTE_1 ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_SHIFT )  >> BYTE_1_MASK ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P8_Replace_Mix]^result[BYTE_1] =  (  short  )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^93^^^^^90^97^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P1_Replace_Type]^result[BYTE_2] =  (  short  )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )   >=  BYTE_2_SHIFT ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^result[BYTE_2] =  ( byte )   (  ( value  <<  BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_2] =  ( byte )   (  ( BYTE_3_MASK & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_2] =  ( byte )   (  ( value & offset )  >> BYTE_2_SHIFT ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_3 ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_2] =  ( byte )   (  ( BYTE_2 & value_MASK )  >> BYTE_2_SHIFT ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK_MASK )  >> BYTE_2_SHIFT ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2 )  >> BYTE_2_MASK_SHIFT ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_SHIFT )  >> BYTE_2_MASK ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^94^^^^^90^97^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P1_Replace_Type]^result[BYTE_3] =  (  int  )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )   <<  BYTE_3_SHIFT ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^result[BYTE_3] =  ( byte )   (  ( value  ||  BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_3] =  ( byte )   (  ( value & offset_MASK )  >> BYTE_3_SHIFT ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> offset ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_3] =  ( byte )   (  ( BYTE_3 & value_MASK )  >> BYTE_3_SHIFT ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_SHIFT_MASK )  >> BYTE_3 ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^result[BYTE_3] =  ( byte )   (  ( BYTE_3_MASK & value )  >> BYTE_3_SHIFT ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P8_Replace_Mix]^result[BYTE_3] =  (  short  )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^result[BYTE_1] =  ( byte )   (  ( value & BYTE_1_MASK )  >> BYTE_1_SHIFT ) ;result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^result[0] =  ( byte )   (  ( value & BYTE_MASK )  ) ;result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^result[BYTE_2] =  ( byte )   (  ( value & BYTE_2_MASK )  >> BYTE_2_SHIFT ) ;result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^95^^^^^90^97^result[BYTE_3] =  ( byte )   (  ( value & BYTE_3_MASK )  >> BYTE_3_SHIFT ) ;^[CLASS] ZipLong  [METHOD] getBytes [RETURN_TYPE] byte[]   long value [VARIABLES] byte[]  result  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P1_Replace_Type]^short  value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )   <  BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^long value =  ( bytes[offset + BYTE_3]  ^  BYTE_3_SHIFT )  & BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^long value =  ||  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^long value =  ( bytes[WORD + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^long value =  ( bytes[offset + BYTE_MASK] << BYTE_3_SHIFT )  & BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^long value =  ( bytes[offset + BYTE_3] << WORD )  & BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^long value =  ( BYTE_3_SHIFT[offset + BYTE_3] << bytes )  & BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^long value =  ( bytes[offset + BYTE_3_SHIFT] << BYTE_3 )  & BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^long value =  ( bytes[offset + BYTE_3] << BYTE_3_MASK )  & BYTE_3_SHIFT;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P8_Replace_Mix]^long value =  ( bytes[offset + WORD] << BYTE_3_SHIFT )  & BYTE_3_MASK;^106^^^^^105^111^long value =  ( bytes[offset + BYTE_3] << BYTE_3_SHIFT )  & BYTE_3_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )   ||  BYTE_2_MASK;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^value +=  ( bytes[offset + BYTE_2]  >>  BYTE_2_SHIFT )  & BYTE_2_MASK;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^value +=  ^  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^value +=  ( bytes[BYTE_3_SHIFT + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^value +=  ( bytes[offset + BYTE_3] << BYTE_2_SHIFT )  & BYTE_2_MASK;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^value +=  ( bytes[offset + BYTE_2] << offset )  & BYTE_2_MASK;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_3_SHIFT;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^value +=  ( bytes[offset + BYTE_2] << BYTE_2_MASK )  & BYTE_2_SHIFT;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^value +=  ( bytes[offset + BYTE_2_MASK] << BYTE_2_SHIFT )  & BYTE_2;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P8_Replace_Mix]^value +=   ( null[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^value +=  ( bytes[offset] & BYTE_MASK ) ;value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^107^^^^^105^111^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )   !=  BYTE_1_MASK;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^value +=  ( bytes[offset + BYTE_1]  &&  BYTE_1_SHIFT )  & BYTE_1_MASK;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^value +=  &  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^value +=  ( bytes[WORD + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^value +=  ( bytes[offset + WORD] << BYTE_1_SHIFT )  & BYTE_1_MASK;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^value +=  ( bytes[offset + BYTE_1] << WORD )  & BYTE_1_MASK;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_3;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^value +=  ( BYTE_1_SHIFT[offset + BYTE_1] << bytes )  & BYTE_1_MASK;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^value +=  ( bytes[offset + BYTE_1_SHIFT] << BYTE_1 )  & BYTE_1_MASK;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P8_Replace_Mix]^value +=   ( null[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^value +=  ( bytes[offset] & BYTE_MASK ) ;value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^108^^^^^105^111^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^value +=  ( bytes[offset]  ==  BYTE_MASK ) ;^109^^^^^105^111^value +=  ( bytes[offset] & BYTE_MASK ) ;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^value +=  ( BYTE_MASK[offset] & bytes ) ;^109^^^^^105^111^value +=  ( bytes[offset] & BYTE_MASK ) ;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P8_Replace_Mix]^value +=   ( null[offset] & BYTE_MASK ) ;^109^^^^^105^111^value +=  ( bytes[offset] & BYTE_MASK ) ;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^value +=  ( bytes[offset + BYTE_1] << BYTE_1_SHIFT )  & BYTE_1_MASK;value +=  ( bytes[offset] & BYTE_MASK ) ;^109^^^^^105^111^value +=  ( bytes[offset] & BYTE_MASK ) ;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P11_Insert_Donor_Statement]^value +=  ( bytes[offset + BYTE_2] << BYTE_2_SHIFT )  & BYTE_2_MASK;value +=  ( bytes[offset] & BYTE_MASK ) ;^109^^^^^105^111^value +=  ( bytes[offset] & BYTE_MASK ) ;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^return BYTE_3_MASK;^110^^^^^105^111^return value;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes int offset [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P3_Replace_Literal]^return getValue ( bytes,  ) ;^119^^^^^118^120^return getValue ( bytes, 0 ) ;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P7_Replace_Invocation]^return ZipLong ( bytes, 0 ) ;^119^^^^^118^120^return getValue ( bytes, 0 ) ;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P3_Replace_Literal]^return getValue ( bytes, BYTE_3 ) ;^119^^^^^118^120^return getValue ( bytes, 0 ) ;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P14_Delete_Statement]^^119^^^^^118^120^return getValue ( bytes, 0 ) ;^[CLASS] ZipLong  [METHOD] getValue [RETURN_TYPE] long   byte[] bytes [VARIABLES] byte[]  bytes  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^if  ( o == null && ! ( o instanceof ZipLong )  )  {^128^^^^^127^132^if  ( o == null || ! ( o instanceof ZipLong )  )  {^[CLASS] ZipLong  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^if  ( o != null || ! ( o instanceof ZipLong )  )  {^128^^^^^127^132^if  ( o == null || ! ( o instanceof ZipLong )  )  {^[CLASS] ZipLong  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^if  ( o == null || ! ( o  <  ZipLong )  )  {^128^^^^^127^132^if  ( o == null || ! ( o instanceof ZipLong )  )  {^[CLASS] ZipLong  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P6_Replace_Expression]^if  ( o == null ) {^128^^^^^127^132^if  ( o == null || ! ( o instanceof ZipLong )  )  {^[CLASS] ZipLong  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P6_Replace_Expression]^if  (  ! ( o instanceof ZipLong )  )  {^128^^^^^127^132^if  ( o == null || ! ( o instanceof ZipLong )  )  {^[CLASS] ZipLong  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P6_Replace_Expression]^if  ( o instanceof ZipLong )  {^128^^^^^127^132^if  ( o == null || ! ( o instanceof ZipLong )  )  {^[CLASS] ZipLong  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P15_Unwrap_Block]^return false;^128^129^130^^^127^132^if  ( o == null || ! ( o instanceof ZipLong )  )  { return false; }^[CLASS] ZipLong  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P16_Remove_Block]^^128^129^130^^^127^132^if  ( o == null || ! ( o instanceof ZipLong )  )  { return false; }^[CLASS] ZipLong  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P3_Replace_Literal]^return true;^129^^^^^127^132^return false;^[CLASS] ZipLong  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P2_Replace_Operator]^return value <=  (  ( ZipLong )  o ) .getValue (  ) ;^131^^^^^127^132^return value ==  (  ( ZipLong )  o ) .getValue (  ) ;^[CLASS] ZipLong  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P5_Replace_Variable]^return BYTE_3_MASK ==  (  ( ZipLong )  o ) .getValue (  ) ;^131^^^^^127^132^return value ==  (  ( ZipLong )  o ) .getValue (  ) ;^[CLASS] ZipLong  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P14_Delete_Statement]^^131^^^^^127^132^return value ==  (  ( ZipLong )  o ) .getValue (  ) ;^[CLASS] ZipLong  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  
[P1_Replace_Type]^return  (  short  )  value;^139^^^^^138^140^return  ( int )  value;^[CLASS] ZipLong  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  boolean  
[P14_Delete_Statement]^^144^^^^^142^149^return super.clone (  ) ;^[CLASS] ZipLong  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] boolean  int  BYTE_1  BYTE_1_MASK  BYTE_1_SHIFT  BYTE_2  BYTE_2_MASK  BYTE_2_SHIFT  BYTE_3  BYTE_3_SHIFT  BYTE_MASK  WORD  offset  long  BYTE_3_MASK  value  CloneNotSupportedException  cnfe  
