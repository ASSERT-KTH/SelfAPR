[P1_Replace_Type]^private final char charset;^43^^^^^38^48^private final String charset;^[CLASS] FallbackZipEncoding   [VARIABLES] 
[P8_Replace_Mix]^this.charset = this;^50^^^^^49^51^this.charset = null;^[CLASS] FallbackZipEncoding  [METHOD] <init> [RETURN_TYPE] FallbackZipEncoding()   [VARIABLES] String  charset  boolean  
[P11_Insert_Donor_Statement]^this.charset = charset;this.charset = null;^50^^^^^49^51^this.charset = null;^[CLASS] FallbackZipEncoding  [METHOD] <init> [RETURN_TYPE] FallbackZipEncoding()   [VARIABLES] String  charset  boolean  
[P12_Insert_Condition]^if  ( this.charset == null )  { this.charset = null; }^50^^^^^49^51^this.charset = null;^[CLASS] FallbackZipEncoding  [METHOD] <init> [RETURN_TYPE] FallbackZipEncoding()   [VARIABLES] String  charset  boolean  
[P8_Replace_Mix]^this.charset =  null;^60^^^^^59^61^this.charset = charset;^[CLASS] FallbackZipEncoding  [METHOD] <init> [RETURN_TYPE] String)   String charset [VARIABLES] String  charset  boolean  
[P11_Insert_Donor_Statement]^this.charset = null;this.charset = charset;^60^^^^^59^61^this.charset = charset;^[CLASS] FallbackZipEncoding  [METHOD] <init> [RETURN_TYPE] String)   String charset [VARIABLES] String  charset  boolean  
[P3_Replace_Literal]^return false;^68^^^^^67^69^return true;^[CLASS] FallbackZipEncoding  [METHOD] canEncode [RETURN_TYPE] boolean   String name [VARIABLES] String  charset  name  boolean  
[P2_Replace_Operator]^if  ( this.charset != null )  {^76^^^^^75^81^if  ( this.charset == null )  {^[CLASS] FallbackZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] String  charset  name  boolean  
[P8_Replace_Mix]^if  ( this.charset == false )  {^76^^^^^75^81^if  ( this.charset == null )  {^[CLASS] FallbackZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] String  charset  name  boolean  
[P15_Unwrap_Block]^return java.nio.ByteBuffer.wrap(name.getBytes());^76^77^78^79^80^75^81^if  ( this.charset == null )  { return ByteBuffer.wrap ( name.getBytes (  )  ) ; } else { return ByteBuffer.wrap ( name.getBytes ( this.charset )  ) ; }^[CLASS] FallbackZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] String  charset  name  boolean  
[P16_Remove_Block]^^76^77^78^79^80^75^81^if  ( this.charset == null )  { return ByteBuffer.wrap ( name.getBytes (  )  ) ; } else { return ByteBuffer.wrap ( name.getBytes ( this.charset )  ) ; }^[CLASS] FallbackZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] String  charset  name  boolean  
[P13_Insert_Block]^if  (  ( this.charset )  == null )  {     return new String ( data ) ; }else {     return new String ( data, this.charset ) ; }^76^^^^^75^81^[Delete]^[CLASS] FallbackZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] String  charset  name  boolean  
[P5_Replace_Variable]^return ByteBuffer.wrap ( charset.getBytes ( this.charset )  ) ;^79^^^^^75^81^return ByteBuffer.wrap ( name.getBytes ( this.charset )  ) ;^[CLASS] FallbackZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] String  charset  name  boolean  
[P5_Replace_Variable]^return ByteBuffer.wrap ( name.getBytes ( charset )  ) ;^79^^^^^75^81^return ByteBuffer.wrap ( name.getBytes ( this.charset )  ) ;^[CLASS] FallbackZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] String  charset  name  boolean  
[P5_Replace_Variable]^return ByteBuffer.wrap ( this.charset.getBytes ( name )  ) ;^79^^^^^75^81^return ByteBuffer.wrap ( name.getBytes ( this.charset )  ) ;^[CLASS] FallbackZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] String  charset  name  boolean  
[P7_Replace_Invocation]^return ByteBuffer.wrap ( name.String ( this.charset )  ) ;^79^^^^^75^81^return ByteBuffer.wrap ( name.getBytes ( this.charset )  ) ;^[CLASS] FallbackZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] String  charset  name  boolean  
[P14_Delete_Statement]^^79^^^^^75^81^return ByteBuffer.wrap ( name.getBytes ( this.charset )  ) ;^[CLASS] FallbackZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] String  charset  name  boolean  
[P5_Replace_Variable]^return ByteBuffer.wrap ( charset.getBytes (  )  ) ;^77^^^^^75^81^return ByteBuffer.wrap ( name.getBytes (  )  ) ;^[CLASS] FallbackZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] String  charset  name  boolean  
[P7_Replace_Invocation]^return ByteBuffer.wrap ( name.String (  )  ) ;^77^^^^^75^81^return ByteBuffer.wrap ( name.getBytes (  )  ) ;^[CLASS] FallbackZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] String  charset  name  boolean  
[P14_Delete_Statement]^^77^^^^^75^81^return ByteBuffer.wrap ( name.getBytes (  )  ) ;^[CLASS] FallbackZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] String  charset  name  boolean  
[P8_Replace_Mix]^return ByteBuffer.wrap ( name.String ( charset )  ) ;^79^^^^^75^81^return ByteBuffer.wrap ( name.getBytes ( this.charset )  ) ;^[CLASS] FallbackZipEncoding  [METHOD] encode [RETURN_TYPE] ByteBuffer   String name [VARIABLES] String  charset  name  boolean  
[P2_Replace_Operator]^if  ( this.charset != null )  {^88^^^^^87^93^if  ( this.charset == null )  {^[CLASS] FallbackZipEncoding  [METHOD] decode [RETURN_TYPE] String   byte[] data [VARIABLES] byte[]  data  String  charset  name  boolean  
[P5_Replace_Variable]^if  ( name == null )  {^88^^^^^87^93^if  ( this.charset == null )  {^[CLASS] FallbackZipEncoding  [METHOD] decode [RETURN_TYPE] String   byte[] data [VARIABLES] byte[]  data  String  charset  name  boolean  
[P8_Replace_Mix]^if  ( this.charset == this )  {^88^^^^^87^93^if  ( this.charset == null )  {^[CLASS] FallbackZipEncoding  [METHOD] decode [RETURN_TYPE] String   byte[] data [VARIABLES] byte[]  data  String  charset  name  boolean  
[P15_Unwrap_Block]^return new java.lang.String(data);^88^89^90^91^92^87^93^if  ( this.charset == null )  { return new String ( data ) ; } else { return new String ( data,this.charset ) ; }^[CLASS] FallbackZipEncoding  [METHOD] decode [RETURN_TYPE] String   byte[] data [VARIABLES] byte[]  data  String  charset  name  boolean  
[P16_Remove_Block]^^88^89^90^91^92^87^93^if  ( this.charset == null )  { return new String ( data ) ; } else { return new String ( data,this.charset ) ; }^[CLASS] FallbackZipEncoding  [METHOD] decode [RETURN_TYPE] String   byte[] data [VARIABLES] byte[]  data  String  charset  name  boolean  
[P13_Insert_Block]^if  (  ( this.charset )  == null )  {     return wrap ( name.getBytes (  )  ) ; }else {     return wrap ( name.getBytes ( this.charset )  ) ; }^88^^^^^87^93^[Delete]^[CLASS] FallbackZipEncoding  [METHOD] decode [RETURN_TYPE] String   byte[] data [VARIABLES] byte[]  data  String  charset  name  boolean  
[P1_Replace_Type]^return new char ( data,this.charset ) ;^91^^^^^87^93^return new String ( data,this.charset ) ;^[CLASS] FallbackZipEncoding  [METHOD] decode [RETURN_TYPE] String   byte[] data [VARIABLES] byte[]  data  String  charset  name  boolean  
[P5_Replace_Variable]^return new String ( data,name ) ;^91^^^^^87^93^return new String ( data,this.charset ) ;^[CLASS] FallbackZipEncoding  [METHOD] decode [RETURN_TYPE] String   byte[] data [VARIABLES] byte[]  data  String  charset  name  boolean  
[P5_Replace_Variable]^return new String ( this.charset ) ;^91^^^^^87^93^return new String ( data,this.charset ) ;^[CLASS] FallbackZipEncoding  [METHOD] decode [RETURN_TYPE] String   byte[] data [VARIABLES] byte[]  data  String  charset  name  boolean  
[P1_Replace_Type]^return new char ( data ) ;^89^^^^^87^93^return new String ( data ) ;^[CLASS] FallbackZipEncoding  [METHOD] decode [RETURN_TYPE] String   byte[] data [VARIABLES] byte[]  data  String  charset  name  boolean  
