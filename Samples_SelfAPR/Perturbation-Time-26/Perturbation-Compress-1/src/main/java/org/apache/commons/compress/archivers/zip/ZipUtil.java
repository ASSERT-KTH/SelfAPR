[P7_Replace_Invocation]^private static final byte[] DOS_TIME_MIN = ZipLong.ZipLong ( 0x00002100L ) ;^27^^^^^22^32^private static final byte[] DOS_TIME_MIN = ZipLong.getBytes ( 0x00002100L ) ;^[CLASS] ZipUtil   [VARIABLES] 
[P7_Replace_Invocation]^private static final byte[] DOS_TIME_MIN = ZipLong .getValue (  )  ;^27^^^^^22^32^private static final byte[] DOS_TIME_MIN = ZipLong.getBytes ( 0x00002100L ) ;^[CLASS] ZipUtil   [VARIABLES] 
[P7_Replace_Invocation]^return new ZipLong ( dosToJavaTime ( time.getTime (  )  )  ) ;^35^^^^^34^36^return new ZipLong ( toDosTime ( time.getTime (  )  )  ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] ZipLong   Date time [VARIABLES] byte[]  DOS_TIME_MIN  Date  time  boolean  
[P7_Replace_Invocation]^return new ZipLong ( toDosTime ( time.Date (  )  )  ) ;^35^^^^^34^36^return new ZipLong ( toDosTime ( time.getTime (  )  )  ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] ZipLong   Date time [VARIABLES] byte[]  DOS_TIME_MIN  Date  time  boolean  
[P8_Replace_Mix]^return new ZipLong ( toDosTime ( time .getDate (  )   )  ) ;^35^^^^^34^36^return new ZipLong ( toDosTime ( time.getTime (  )  )  ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] ZipLong   Date time [VARIABLES] byte[]  DOS_TIME_MIN  Date  time  boolean  
[P14_Delete_Statement]^^35^^^^^34^36^return new ZipLong ( toDosTime ( time.getTime (  )  )  ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] ZipLong   Date time [VARIABLES] byte[]  DOS_TIME_MIN  Date  time  boolean  
[P5_Replace_Variable]^Date valueime = new Date ( t ) ;^46^^^^^45^62^Date time = new Date ( t ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P1_Replace_Type]^short  year = time.getYear (  )  + 1900;^49^^^^^45^62^int year = time.getYear (  )  + 1900;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P2_Replace_Operator]^int year = time.getYear (  <  )  + 1900;^49^^^^^45^62^int year = time.getYear (  )  + 1900;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P3_Replace_Literal]^int year = time.getYear (  )  ;^49^^^^^45^62^int year = time.getYear (  )  + 1900;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P7_Replace_Invocation]^int year = time.Date (  )  + 1900;^49^^^^^45^62^int year = time.getYear (  )  + 1900;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P11_Insert_Donor_Statement]^int month = time.getMonth (  )  + 1;int year = time.getYear (  )  + 1900;^49^^^^^45^62^int year = time.getYear (  )  + 1900;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P8_Replace_Mix]^int year = time .getHours (  )   + 1900;^49^^^^^45^62^int year = time.getYear (  )  + 1900;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P14_Delete_Statement]^^49^^^^^45^62^int year = time.getYear (  )  + 1900;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P11_Insert_Donor_Statement]^|          ( time.getSeconds (  )  >> 1 ) ;int year = time.getYear (  )  + 1900;^49^^^^^45^62^int year = time.getYear (  )  + 1900;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P2_Replace_Operator]^if  ( year <= 1980 )  {^50^^^^^45^62^if  ( year < 1980 )  {^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P3_Replace_Literal]^if  ( year < month )  {^50^^^^^45^62^if  ( year < 1980 )  {^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P5_Replace_Variable]^if  ( month < 1980 )  {^50^^^^^45^62^if  ( year < 1980 )  {^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P8_Replace_Mix]^if  ( month < 4 )  {^50^^^^^45^62^if  ( year < 1980 )  {^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P9_Replace_Statement]^if  ( i < 0 )  {^50^^^^^45^62^if  ( year < 1980 )  {^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P15_Unwrap_Block]^return org.apache.commons.compress.archivers.zip.ZipUtil.DOS_TIME_MIN;^50^51^52^^^45^62^if  ( year < 1980 )  { return DOS_TIME_MIN; }^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P16_Remove_Block]^^50^51^52^^^45^62^if  ( year < 1980 )  { return DOS_TIME_MIN; }^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P13_Insert_Block]^if  ( year < 1980 )  {     return DOS_TIME_MIN; }^51^^^^^45^62^[Delete]^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P1_Replace_Type]^short  month = time.getMonth (  )  + 1;^53^^^^^45^62^int month = time.getMonth (  )  + 1;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P2_Replace_Operator]^int month = time.getMonth (  >>  )  + 1;^53^^^^^45^62^int month = time.getMonth (  )  + 1;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P3_Replace_Literal]^int month = time.getMonth (  )  ;^53^^^^^45^62^int month = time.getMonth (  )  + 1;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P7_Replace_Invocation]^int month = time.Date (  )  + 1;^53^^^^^45^62^int month = time.getMonth (  )  + 1;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P11_Insert_Donor_Statement]^int year = time.getYear (  )  + 1900;int month = time.getMonth (  )  + 1;^53^^^^^45^62^int month = time.getMonth (  )  + 1;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P7_Replace_Invocation]^int month = time .getMinutes (  )   + 1;^53^^^^^45^62^int month = time.getMonth (  )  + 1;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P14_Delete_Statement]^^53^^^^^45^62^int month = time.getMonth (  )  + 1;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P11_Insert_Donor_Statement]^|          ( time.getSeconds (  )  >> 1 ) ;int month = time.getMonth (  )  + 1;^53^^^^^45^62^int month = time.getMonth (  )  + 1;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P1_Replace_Type]^short  value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P2_Replace_Operator]^long  ==  value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P2_Replace_Operator]^long  >  value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P2_Replace_Operator]^long  &&  value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P2_Replace_Operator]^long   instanceof   value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P2_Replace_Operator]^long value =   (  ( year - 1980 )   <=  25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P2_Replace_Operator]^long value =   (  ( year  !=  1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P2_Replace_Operator]^long value =   (  ( year - 1980 )  << 25 ) |          ( month  &&  21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P2_Replace_Operator]^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )   >  16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P2_Replace_Operator]^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )   &  11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P2_Replace_Operator]^long value =   (  ( year - 1980 )   >>  25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P3_Replace_Literal]^long value =   (  ( year - month )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P3_Replace_Literal]^long value =   (  ( year - 1980 )  << 29 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P3_Replace_Literal]^long value =   (  ( year - 1980 )  << 25 ) |          ( month << month ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P3_Replace_Literal]^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << month ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P3_Replace_Literal]^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 20 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P3_Replace_Literal]^long value =   (  ( year - 1980 )  << 2year ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P3_Replace_Literal]^long value =   (  ( year 980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P5_Replace_Variable]^long value =   (  ( month - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P5_Replace_Variable]^long value =   (  ( year - 1980 )  << 25 ) |          ( year << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P5_Replace_Variable]^long value =   (  ( time - 1980 )  << 25 ) |          ( month << 21 ) |          ( year.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P5_Replace_Variable]^long value =   (  ( year - 1980 )  << 25 ) |          ( time << 21 ) |          ( month.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P7_Replace_Invocation]^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.Date (  )  << 16 ) |          ( time.getHours (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P7_Replace_Invocation]^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.Date (  )  << 11 )^54^55^56^57^^45^62^long value =   (  ( year - 1980 )  << 25 ) |          ( month << 21 ) |          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 )^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P7_Replace_Invocation]^|          ( time.Date (  )  << 16 ) |          ( time.getHours (  )  << 11 ) |          ( time.getMinutes (  )  << 5 ) |          ( time.getSeconds (  )  >> 1 ) ;^56^57^58^59^^45^62^|          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 ) |          ( time.getMinutes (  )  << 5 ) |          ( time.getSeconds (  )  >> 1 ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P8_Replace_Mix]^|          ( time .getTime (  )   << 16 ) |          ( time.getHours (  )  << 11 ) |          ( time.getMinutes (  )  << 5 ) |          ( time.getSeconds (  )  >> 1 ) ;^56^57^58^59^^45^62^|          ( time.getDate (  )  << 16 ) |          ( time.getHours (  )  << 11 ) |          ( time.getMinutes (  )  << 5 ) |          ( time.getSeconds (  )  >> 1 ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P7_Replace_Invocation]^|          ( time.Date (  )  << 11 ) |          ( time.getMinutes (  )  << 5 ) |          ( time.getSeconds (  )  >> 1 ) ;^57^58^59^^^45^62^|          ( time.getHours (  )  << 11 ) |          ( time.getMinutes (  )  << 5 ) |          ( time.getSeconds (  )  >> 1 ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P14_Delete_Statement]^^57^58^59^^^45^62^|          ( time.getHours (  )  << 11 ) |          ( time.getMinutes (  )  << 5 ) |          ( time.getSeconds (  )  >> 1 ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P7_Replace_Invocation]^|          ( time.Date (  )  << 5 ) |          ( time.getSeconds (  )  >> 1 ) ;^58^59^^^^45^62^|          ( time.getMinutes (  )  << 5 ) |          ( time.getSeconds (  )  >> 1 ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P14_Delete_Statement]^^58^59^^^^45^62^|          ( time.getMinutes (  )  << 5 ) |          ( time.getSeconds (  )  >> 1 ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P7_Replace_Invocation]^|          ( time.Date (  )  >> 1 ) ;^59^^^^^45^62^|          ( time.getSeconds (  )  >> 1 ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P14_Delete_Statement]^^59^^^^^45^62^|          ( time.getSeconds (  )  >> 1 ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P11_Insert_Donor_Statement]^int month = time.getMonth (  )  + 1;|          ( time.getSeconds (  )  >> 1 ) ;^59^^^^^45^62^|          ( time.getSeconds (  )  >> 1 ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P11_Insert_Donor_Statement]^|          ( time.getMinutes (  )  << 5 ) |          ( time.getSeconds (  )  >> 1 ) ;|          ( time.getSeconds (  )  >> 1 ) ;^59^^^^^45^62^|          ( time.getSeconds (  )  >> 1 ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P11_Insert_Donor_Statement]^int year = time.getYear (  )  + 1900;|          ( time.getSeconds (  )  >> 1 ) ;^59^^^^^45^62^|          ( time.getSeconds (  )  >> 1 ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P5_Replace_Variable]^return ZipLong.getBytes ( t ) ;^60^^^^^45^62^return ZipLong.getBytes ( value ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P7_Replace_Invocation]^return ZipLong.ZipLong ( value ) ;^60^^^^^45^62^return ZipLong.getBytes ( value ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P7_Replace_Invocation]^return ZipLong .getValue (  )  ;^60^^^^^45^62^return ZipLong.getBytes ( value ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P14_Delete_Statement]^^60^^^^^45^62^return ZipLong.getBytes ( value ) ;^[CLASS] ZipUtil  [METHOD] toDosTime [RETURN_TYPE] byte[]   long t [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  t  value  Date  time  int  month  year  
[P2_Replace_Operator]^if  ( i <= 0 )  {^71^^^^^70^76^if  ( i < 0 )  {^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P3_Replace_Literal]^if  ( i < -6 )  {^71^^^^^70^76^if  ( i < 0 )  {^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P6_Replace_Expression]^if  ( (2 * (long MAX_VALUE)) + 2 + i )  {^71^^^^^70^76^if  ( i < 0 )  {^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P6_Replace_Expression]^if  ( 2 *  (  ( long )   ( MAX_VALUE )  )  + 2 )  {^71^^^^^70^76^if  ( i < 0 )  {^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P6_Replace_Expression]^if  ( 2 *  ( long )   ( MAX_VALUE ) )  {^71^^^^^70^76^if  ( i < 0 )  {^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P8_Replace_Mix]^if  ( i < 4 )  {^71^^^^^70^76^if  ( i < 0 )  {^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P9_Replace_Statement]^if  ( year < 1980 )  {^71^^^^^70^76^if  ( i < 0 )  {^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P15_Unwrap_Block]^return ((2 * ((long) (java.lang.Integer.MAX_VALUE))) + 2) + i;^71^72^73^74^75^70^76^if  ( i < 0 )  { return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i; } else { return i; }^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P16_Remove_Block]^^71^72^73^74^75^70^76^if  ( i < 0 )  { return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i; } else { return i; }^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P1_Replace_Type]^return 2 *  (  (  short  )  Integer.MAX_VALUE )  + 2 + i;^72^^^^^70^76^return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P2_Replace_Operator]^return 2 *  >  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^72^^^^^70^76^return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P2_Replace_Operator]^return 2 *  <=  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^72^^^^^70^76^return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P2_Replace_Operator]^return - 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^72^^^^^70^76^return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P3_Replace_Literal]^return 2 *  (  ( long )  Integer.MAX_VALUE )   + i;^72^^^^^70^76^return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P3_Replace_Literal]^return i *  (  ( long )  Integer.MAX_VALUE )  + i + i;^72^^^^^70^76^return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P8_Replace_Mix]^return 2 *  (  ( long )  Integer.MAX_VALUE )   ;^72^^^^^70^76^return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P13_Insert_Block]^if  ( i < 0 )  {     return  (  ( 2 *  (  ( long )   ( MAX_VALUE )  )  )  + 2 )  + i; }else {     return i; }^72^^^^^70^76^[Delete]^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P1_Replace_Type]^return 2 *  (  (  int  )  Integer.MAX_VALUE )  + 2 + i;^72^^^^^70^76^return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P2_Replace_Operator]^return 2 *  <  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^72^^^^^70^76^return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P8_Replace_Mix]^return 2 *  (  ( long )  Integer.MAX_VALUE )   |  2  |  i;^72^^^^^70^76^return 2 *  (  ( long )  Integer.MAX_VALUE )  + 2 + i;^[CLASS] ZipUtil  [METHOD] adjustToLong [RETURN_TYPE] long   int i [VARIABLES] byte[]  DOS_TIME_MIN  int  i  boolean  
[P1_Replace_Type]^int  dosTime = zipDosTime.getValue (  ) ;^85^^^^^84^87^long dosTime = zipDosTime.getValue (  ) ;^[CLASS] ZipUtil  [METHOD] fromDosTime [RETURN_TYPE] Date   ZipLong zipDosTime [VARIABLES] byte[]  DOS_TIME_MIN  ZipLong  zipDosTime  boolean  long  dosTime  
[P7_Replace_Invocation]^long dosTime = zipDosTime.getBytes (  ) ;^85^^^^^84^87^long dosTime = zipDosTime.getValue (  ) ;^[CLASS] ZipUtil  [METHOD] fromDosTime [RETURN_TYPE] Date   ZipLong zipDosTime [VARIABLES] byte[]  DOS_TIME_MIN  ZipLong  zipDosTime  boolean  long  dosTime  
[P7_Replace_Invocation]^long dosTime = zipDosTime .getBytes ( dosTime )  ;^85^^^^^84^87^long dosTime = zipDosTime.getValue (  ) ;^[CLASS] ZipUtil  [METHOD] fromDosTime [RETURN_TYPE] Date   ZipLong zipDosTime [VARIABLES] byte[]  DOS_TIME_MIN  ZipLong  zipDosTime  boolean  long  dosTime  
[P14_Delete_Statement]^^85^86^^^^84^87^long dosTime = zipDosTime.getValue (  ) ; return new Date ( dosToJavaTime ( dosTime )  ) ;^[CLASS] ZipUtil  [METHOD] fromDosTime [RETURN_TYPE] Date   ZipLong zipDosTime [VARIABLES] byte[]  DOS_TIME_MIN  ZipLong  zipDosTime  boolean  long  dosTime  
[P7_Replace_Invocation]^return new Date ( toDosTime ( dosTime )  ) ;^86^^^^^84^87^return new Date ( dosToJavaTime ( dosTime )  ) ;^[CLASS] ZipUtil  [METHOD] fromDosTime [RETURN_TYPE] Date   ZipLong zipDosTime [VARIABLES] byte[]  DOS_TIME_MIN  ZipLong  zipDosTime  boolean  long  dosTime  
[P14_Delete_Statement]^^86^^^^^84^87^return new Date ( dosToJavaTime ( dosTime )  ) ;^[CLASS] ZipUtil  [METHOD] fromDosTime [RETURN_TYPE] Date   ZipLong zipDosTime [VARIABLES] byte[]  DOS_TIME_MIN  ZipLong  zipDosTime  boolean  long  dosTime  
[P7_Replace_Invocation]^Calendar cal = Calendar.getTime (  ) ;^94^^^^^93^104^Calendar cal = Calendar.getInstance (  ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P14_Delete_Statement]^^94^^^^^93^104^Calendar cal = Calendar.getInstance (  ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P2_Replace_Operator]^cal.set ( Calendar.YEAR,  >  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^96^^^^^93^104^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P2_Replace_Operator]^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )   ==  0x7f )  + 1980 ) ;^96^^^^^93^104^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P2_Replace_Operator]^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime   instanceof   25 )  & 0x7f )  + 1980 ) ;^96^^^^^93^104^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P3_Replace_Literal]^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 34 )  & 0x7f )  + 1980 ) ;^96^^^^^93^104^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P3_Replace_Literal]^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )   ) ;^96^^^^^93^104^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P5_Replace_Variable]^cal.set ( Calendar.  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^96^^^^^93^104^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P8_Replace_Mix]^cal .getTime (  )   & 0x7f )  + 1980 ) ;^96^^^^^93^104^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P14_Delete_Statement]^^96^97^^^^93^104^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ; cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^96^^^^^93^104^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^96^^^^^93^104^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^96^^^^^93^104^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^96^^^^^93^104^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^96^^^^^93^104^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P2_Replace_Operator]^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )   ||  1 ) ;^97^^^^^93^104^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P2_Replace_Operator]^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )    instanceof   0x0f )  - 1 ) ;^97^^^^^93^104^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P2_Replace_Operator]^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime  ==  21 )  & 0x0f )  - 1 ) ;^97^^^^^93^104^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P3_Replace_Literal]^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 12 )  & 0x0f )  - 1 ) ;^97^^^^^93^104^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P3_Replace_Literal]^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )   ) ;^97^^^^^93^104^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P5_Replace_Variable]^cal.set ( Calendar.  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^97^^^^^93^104^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P14_Delete_Statement]^^97^98^^^^93^104^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ; cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^97^^^^^93^104^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^97^^^^^93^104^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^97^^^^^93^104^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^97^^^^^93^104^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^97^^^^^93^104^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P2_Replace_Operator]^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )   ||  0x1f ) ;^98^^^^^93^104^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P2_Replace_Operator]^cal.set ( Calendar.DATE,  ( int )   ( dosTime  ^  16 )  & 0x1f ) ;^98^^^^^93^104^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P3_Replace_Literal]^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^98^^^^^93^104^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P5_Replace_Variable]^cal.set ( Calendar.  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^98^^^^^93^104^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P7_Replace_Invocation]^cal .getTime (  )   & 0x1f ) ;^98^^^^^93^104^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P14_Delete_Statement]^^98^99^^^^93^104^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ; cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^98^^^^^93^104^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^98^^^^^93^104^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^98^^^^^93^104^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^98^^^^^93^104^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^98^^^^^93^104^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P2_Replace_Operator]^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )   <=  0x1f ) ;^99^^^^^93^104^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P2_Replace_Operator]^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime  ==  11 )  & 0x1f ) ;^99^^^^^93^104^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P3_Replace_Literal]^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 7 )  & 0x1f ) ;^99^^^^^93^104^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P5_Replace_Variable]^cal.set ( Calendar.  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^99^^^^^93^104^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P14_Delete_Statement]^^99^^^^^93^104^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^99^^^^^93^104^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^99^^^^^93^104^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^99^^^^^93^104^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^99^^^^^93^104^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^99^^^^^93^104^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P2_Replace_Operator]^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )   ^  0x3f ) ;^100^^^^^93^104^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P2_Replace_Operator]^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime  |  5 )  & 0x3f ) ;^100^^^^^93^104^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P3_Replace_Literal]^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 9 )  & 0x3f ) ;^100^^^^^93^104^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P5_Replace_Variable]^cal.set ( Calendar.  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^100^^^^^93^104^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P8_Replace_Mix]^cal .getTime (  )   & 0x3f ) ;^100^^^^^93^104^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P14_Delete_Statement]^^100^101^^^^93^104^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ; cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^100^^^^^93^104^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^100^^^^^93^104^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^100^^^^^93^104^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^100^^^^^93^104^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^100^^^^^93^104^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P2_Replace_Operator]^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )   ||  0x3e ) ;^101^^^^^93^104^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P2_Replace_Operator]^cal.set ( Calendar.SECOND,  ( int )   ( dosTime  <=  1 )  & 0x3e ) ;^101^^^^^93^104^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P3_Replace_Literal]^cal.set ( Calendar.SECOND,  ( int )   ( dosTime <<  )  & 0x3e ) ;^101^^^^^93^104^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P5_Replace_Variable]^cal.set ( Calendar.  ( int )   ( dosTime << 1 )  & 0x3e ) ;^101^^^^^93^104^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P14_Delete_Statement]^^101^^^^^93^104^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.MINUTE,  ( int )   ( dosTime >> 5 )  & 0x3f ) ;cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^101^^^^^93^104^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.HOUR_OF_DAY,  ( int )   ( dosTime >> 11 )  & 0x1f ) ;cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^101^^^^^93^104^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.YEAR,  ( int )   (  ( dosTime >> 25 )  & 0x7f )  + 1980 ) ;cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^101^^^^^93^104^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.DATE,  ( int )   ( dosTime >> 16 )  & 0x1f ) ;cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^101^^^^^93^104^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P11_Insert_Donor_Statement]^cal.set ( Calendar.MONTH,  ( int )   (  ( dosTime >> 21 )  & 0x0f )  - 1 ) ;cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^101^^^^^93^104^cal.set ( Calendar.SECOND,  ( int )   ( dosTime << 1 )  & 0x3e ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P7_Replace_Invocation]^return cal.Date (  ) .getTime (  ) ;^103^^^^^93^104^return cal.getTime (  ) .getTime (  ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P7_Replace_Invocation]^return cal .getDate (  )^103^^^^^93^104^return cal.getTime (  ) .getTime (  ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
[P14_Delete_Statement]^^103^^^^^93^104^return cal.getTime (  ) .getTime (  ) ;^[CLASS] ZipUtil  [METHOD] dosToJavaTime [RETURN_TYPE] long   long dosTime [VARIABLES] byte[]  DOS_TIME_MIN  boolean  long  dosTime  Calendar  cal  
