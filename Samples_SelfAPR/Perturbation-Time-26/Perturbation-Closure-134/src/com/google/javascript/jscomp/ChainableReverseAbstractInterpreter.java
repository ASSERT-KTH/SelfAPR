[P8_Replace_Mix]^JSTypeRegistry typeRegistry;^53^^^^^48^58^final JSTypeRegistry typeRegistry;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [VARIABLES] 
[P8_Replace_Mix]^private final Visitor<JSType> restrictUndefinedVisitor ;^179^180^^^^164^194^private final Visitor<JSType> restrictUndefinedVisitor = new Visitor<JSType> (  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [VARIABLES] 
[P8_Replace_Mix]^private  Visitor<JSType> restrictNullVisitor = new Visitor<JSType> (  )  {^244^245^^^^229^259^private final Visitor<JSType> restrictNullVisitor = new Visitor<JSType> (  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [VARIABLES] 
[P1_Replace_Type]^private final char value;^462^^^^^457^467^private final String value;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [VARIABLES] 
[P8_Replace_Mix]^private  boolean resultEqualsValue;^469^^^^^464^474^private final boolean resultEqualsValue;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor   [VARIABLES] 
[P14_Delete_Statement]^^63^64^^^^61^68^Preconditions.checkNotNull ( convention ) ; this.convention = convention;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] <init> [RETURN_TYPE] JSTypeRegistry)   CodingConvention convention JSTypeRegistry typeRegistry [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  nextLink  CodingConvention  convention  String  value  
[P11_Insert_Donor_Statement]^Preconditions.checkNotNull ( qualifiedName ) ;Preconditions.checkNotNull ( convention ) ;^63^^^^^61^68^Preconditions.checkNotNull ( convention ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] <init> [RETURN_TYPE] JSTypeRegistry)   CodingConvention convention JSTypeRegistry typeRegistry [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  nextLink  CodingConvention  convention  String  value  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( lastLink.nextLink == null ) ;Preconditions.checkNotNull ( convention ) ;^63^^^^^61^68^Preconditions.checkNotNull ( convention ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] <init> [RETURN_TYPE] JSTypeRegistry)   CodingConvention convention JSTypeRegistry typeRegistry [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  nextLink  CodingConvention  convention  String  value  
[P8_Replace_Mix]^this.convention =  null;^64^^^^^61^68^this.convention = convention;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] <init> [RETURN_TYPE] JSTypeRegistry)   CodingConvention convention JSTypeRegistry typeRegistry [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  nextLink  CodingConvention  convention  String  value  
[P8_Replace_Mix]^this.typeRegistry =  null;^65^^^^^61^68^this.typeRegistry = typeRegistry;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] <init> [RETURN_TYPE] JSTypeRegistry)   CodingConvention convention JSTypeRegistry typeRegistry [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  nextLink  CodingConvention  convention  String  value  
[P8_Replace_Mix]^firstLink ;^66^^^^^61^68^firstLink = this;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] <init> [RETURN_TYPE] JSTypeRegistry)   CodingConvention convention JSTypeRegistry typeRegistry [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  nextLink  CodingConvention  convention  String  value  
[P11_Insert_Donor_Statement]^nextLink = null;firstLink = this;^66^^^^^61^68^firstLink = this;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] <init> [RETURN_TYPE] JSTypeRegistry)   CodingConvention convention JSTypeRegistry typeRegistry [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  nextLink  CodingConvention  convention  String  value  
[P8_Replace_Mix]^nextLink = this;^67^^^^^61^68^nextLink = null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] <init> [RETURN_TYPE] JSTypeRegistry)   CodingConvention convention JSTypeRegistry typeRegistry [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  nextLink  CodingConvention  convention  String  value  
[P11_Insert_Donor_Statement]^this.nextLink = lastLink;nextLink = null;^67^^^^^61^68^nextLink = null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] <init> [RETURN_TYPE] JSTypeRegistry)   CodingConvention convention JSTypeRegistry typeRegistry [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  nextLink  CodingConvention  convention  String  value  
[P11_Insert_Donor_Statement]^firstLink = this;nextLink = null;^67^^^^^61^68^nextLink = null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] <init> [RETURN_TYPE] JSTypeRegistry)   CodingConvention convention JSTypeRegistry typeRegistry [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  nextLink  CodingConvention  convention  String  value  
[P8_Replace_Mix]^this.value =  null;^472^^^^^471^474^this.value = value;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] <init> [RETURN_TYPE] String,boolean)   String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  nextLink  CodingConvention  convention  String  value  
[P8_Replace_Mix]^this.resultEqualsValue =  null;^473^^^^^471^474^this.resultEqualsValue = resultEqualsValue;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] <init> [RETURN_TYPE] String,boolean)   String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  nextLink  CodingConvention  convention  String  value  
[P2_Replace_Operator]^Preconditions.checkArgument ( lastLink.nextLink != null ) ;^80^^^^^78^84^Preconditions.checkArgument ( lastLink.nextLink == null ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[P5_Replace_Variable]^Preconditions.checkArgument ( nextLink.nextLink == null ) ;^80^^^^^78^84^Preconditions.checkArgument ( lastLink.nextLink == null ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[P5_Replace_Variable]^Preconditions.checkArgument ( nextLink == null ) ;^80^^^^^78^84^Preconditions.checkArgument ( lastLink.nextLink == null ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[P5_Replace_Variable]^Preconditions.checkArgument ( lastLink.nextLink.nextLink == null ) ;^80^^^^^78^84^Preconditions.checkArgument ( lastLink.nextLink == null ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[P5_Replace_Variable]^Preconditions.checkArgument ( lastLink == null ) ;^80^^^^^78^84^Preconditions.checkArgument ( lastLink.nextLink == null ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[P14_Delete_Statement]^^80^^^^^78^84^Preconditions.checkArgument ( lastLink.nextLink == null ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[P11_Insert_Donor_Statement]^Preconditions.checkNotNull ( convention ) ;Preconditions.checkArgument ( lastLink.nextLink == null ) ;^80^^^^^78^84^Preconditions.checkArgument ( lastLink.nextLink == null ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[P11_Insert_Donor_Statement]^Preconditions.checkNotNull ( qualifiedName ) ;Preconditions.checkArgument ( lastLink.nextLink == null ) ;^80^^^^^78^84^Preconditions.checkArgument ( lastLink.nextLink == null ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[P5_Replace_Variable]^this.nextLink = nextLink;^81^^^^^78^84^this.nextLink = lastLink;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[P11_Insert_Donor_Statement]^nextLink = null;this.nextLink = lastLink;^81^^^^^78^84^this.nextLink = lastLink;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[P5_Replace_Variable]^lastLink.firstLink = nextLink;^82^^^^^78^84^lastLink.firstLink = this.firstLink;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[P8_Replace_Mix]^lastLink.firstLink =  this.firstLink;^82^^^^^78^84^lastLink.firstLink = this.firstLink;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[P5_Replace_Variable]^return nextLink;^83^^^^^78^84^return lastLink;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] append [RETURN_TYPE] ChainableReverseAbstractInterpreter   ChainableReverseAbstractInterpreter lastLink [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[P5_Replace_Variable]^return nextLink;^90^^^^^89^91^return firstLink;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getFirst [RETURN_TYPE] ChainableReverseAbstractInterpreter   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  value  
[P5_Replace_Variable]^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, resultEqualsValue ) ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P5_Replace_Variable]^return firstLink.getPreciserScopeKnowingConditionOutcome (  blindScope, outcome ) ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P5_Replace_Variable]^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition,  outcome ) ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P5_Replace_Variable]^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope ) ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P5_Replace_Variable]^return firstLink.getPreciserScopeKnowingConditionOutcome ( outcome, blindScope, condition ) ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P5_Replace_Variable]^return firstLink.getPreciserScopeKnowingConditionOutcome ( blindScope, condition, outcome ) ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P5_Replace_Variable]^return outcome.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, firstLink ) ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P7_Replace_Invocation]^return firstLink.nextPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P7_Replace_Invocation]^return firstLink .nextPreciserScopeKnowingConditionOutcome ( condition , blindScope , resultEqualsValue )  ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P5_Replace_Variable]^return nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P5_Replace_Variable]^return condition.getPreciserScopeKnowingConditionOutcome ( firstLink, blindScope, outcome ) ;^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P14_Delete_Statement]^^98^99^^^^96^100^return firstLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] firstPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P2_Replace_Operator]^return nextLink == null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P5_Replace_Variable]^return lastLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P5_Replace_Variable]^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome (  blindScope, outcome )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P5_Replace_Variable]^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition,  outcome )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P5_Replace_Variable]^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P5_Replace_Variable]^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( outcome, blindScope, condition )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P5_Replace_Variable]^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( blindScope, condition, outcome )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P5_Replace_Variable]^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, outcome, blindScope )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P5_Replace_Variable]^return outcome != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, nextLink )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P6_Replace_Expression]^return nextLink ! =  blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P6_Replace_Expression]^return nextLink ! =  nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  ;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P7_Replace_Invocation]^return nextLink != null ? nextLink.nextPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P8_Replace_Mix]^return lastLink != null ? nextLink.nextPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P5_Replace_Variable]^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, resultEqualsValue )  : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P7_Replace_Invocation]^return nextLink != null ? nextLink .nextPreciserScopeKnowingConditionOutcome ( condition , blindScope , resultEqualsValue )   : blindScope;^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P14_Delete_Statement]^^108^109^^^^106^110^return nextLink != null ? nextLink.getPreciserScopeKnowingConditionOutcome ( condition, blindScope, outcome )  : blindScope;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] nextPreciserScopeKnowingConditionOutcome [RETURN_TYPE] FlowScope   Node condition FlowScope blindScope boolean outcome [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  condition  String  value  FlowScope  blindScope  
[P2_Replace_Operator]^if  ( nameVar == null )  {^121^^^^^106^136^if  ( nameVar != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P6_Replace_Expression]^if  ( nameVarType == null )  {^121^^^^^106^136^if  ( nameVar != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^if  ( nameVar != false )  {^121^^^^^106^136^if  ( nameVar != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( propVar != null )  {^121^^^^^106^136^if  ( nameVar != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( propVarType == null )  {^121^^^^^106^136^if  ( nameVar != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( qualifiedName == null )  {^121^^^^^106^136^if  ( nameVar != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P15_Unwrap_Block]^com.google.javascript.rhino.jstype.JSType nameVarType = nameVar.getType(); if (nameVarType == null) {    nameVarType = node.getJSType();}; return nameVarType;^121^122^123^124^125^106^136^if  ( nameVar != null )  { JSType nameVarType = nameVar.getType (  ) ; if  ( nameVarType == null )  { nameVarType = node.getJSType (  ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P16_Remove_Block]^^121^122^123^124^125^106^136^if  ( nameVar != null )  { JSType nameVarType = nameVar.getType (  ) ; if  ( nameVarType == null )  { nameVarType = node.getJSType (  ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P2_Replace_Operator]^if  ( nameVarType != null )  {^123^^^^^108^138^if  ( nameVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^if  ( propVarType == null )  {^123^^^^^108^138^if  ( nameVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^if  ( nameVarType == true )  {^123^^^^^108^138^if  ( nameVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( propVar != null )  {^123^^^^^108^138^if  ( nameVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( nameVar != null )  {^123^^^^^108^138^if  ( nameVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( qualifiedName == null )  {^123^^^^^108^138^if  ( nameVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( restricted == null )  {^123^^^^^108^138^if  ( nameVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P15_Unwrap_Block]^nameVarType = node.getJSType();^123^124^125^^^108^138^if  ( nameVarType == null )  { nameVarType = node.getJSType (  ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P16_Remove_Block]^^123^124^125^^^108^138^if  ( nameVarType == null )  { nameVarType = node.getJSType (  ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P13_Insert_Block]^if  ( propVar != null )  {     propVarType = propVar.getType (  ) ; }^123^^^^^108^138^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P13_Insert_Block]^if  ( propVarType == null )  {     propVarType = node.getJSType (  ) ; }^123^^^^^108^138^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^nameVarType =  null.getJSType (  ) ;^124^^^^^109^139^nameVarType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^propVarType = propVar.getType (  ) ;nameVarType = node.getJSType (  ) ;^124^^^^^109^139^nameVarType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^propVarType = node.getJSType (  ) ;nameVarType = node.getJSType (  ) ;^124^^^^^109^139^nameVarType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^nameVarType = node .getType (  )  ;^124^^^^^109^139^nameVarType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P14_Delete_Statement]^^124^^^^^109^139^nameVarType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^JSType nameVarType = nameVar.getType (  ) ;nameVarType = node.getJSType (  ) ;^124^^^^^109^139^nameVarType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^JSType origType = node.getJSType (  ) ;nameVarType = node.getJSType (  ) ;^124^^^^^109^139^nameVarType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^return propVarType;^126^^^^^111^141^return nameVarType;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^JSType origType = node.getJSType (  ) ;JSType nameVarType = nameVar.getType (  ) ;^122^^^^^107^137^JSType nameVarType = nameVar.getType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^JSType nameVarType = nameVar .getJSType (  )  ;^122^^^^^107^137^JSType nameVarType = nameVar.getType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P14_Delete_Statement]^^122^^^^^107^137^JSType nameVarType = nameVar.getType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^propVarType = propVar.getType (  ) ;JSType nameVarType = nameVar.getType (  ) ;^122^^^^^107^137^JSType nameVarType = nameVar.getType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^propVarType = node.getJSType (  ) ;JSType nameVarType = nameVar.getType (  ) ;^122^^^^^107^137^JSType nameVarType = nameVar.getType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^nameVarType = node.getJSType (  ) ;JSType nameVarType = nameVar.getType (  ) ;^122^^^^^107^137^JSType nameVarType = nameVar.getType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P2_Replace_Operator]^if  ( qualifiedName != null )  {^132^^^^^117^147^if  ( qualifiedName == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^if  ( value == null )  {^132^^^^^117^147^if  ( qualifiedName == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^if  ( value == true )  {^132^^^^^117^147^if  ( qualifiedName == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( nameVar != null )  {^132^^^^^117^147^if  ( qualifiedName == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( nameVarType == null )  {^132^^^^^117^147^if  ( qualifiedName == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( restricted == null )  {^132^^^^^117^147^if  ( qualifiedName == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P15_Unwrap_Block]^return null;^132^133^134^^^117^147^if  ( qualifiedName == null )  { return null; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P16_Remove_Block]^^132^133^134^^^117^147^if  ( qualifiedName == null )  { return null; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^return this;^133^^^^^118^148^return null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P2_Replace_Operator]^if  ( propVar == null )  {^137^^^^^122^152^if  ( propVar != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^if  ( propVar != this )  {^137^^^^^122^152^if  ( propVar != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( nameVar != null )  {^137^^^^^122^152^if  ( propVar != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( nameVarType == null )  {^137^^^^^122^152^if  ( propVar != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( propVarType == null )  {^137^^^^^122^152^if  ( propVar != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( restricted == null )  {^137^^^^^122^152^if  ( propVar != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P15_Unwrap_Block]^propVarType = propVar.getType();^137^138^139^^^122^152^if  ( propVar != null )  { propVarType = propVar.getType (  ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P16_Remove_Block]^^137^138^139^^^122^152^if  ( propVar != null )  { propVarType = propVar.getType (  ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P13_Insert_Block]^if  ( nameVarType == null )  {     nameVarType = node.getJSType (  ) ; }^137^^^^^122^152^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P13_Insert_Block]^if  ( propVarType == null )  {     propVarType = node.getJSType (  ) ; }^137^^^^^122^152^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P7_Replace_Invocation]^propVarType = propVar .getJSType (  )  ;^138^^^^^123^153^propVarType = propVar.getType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^propVarType =  0.getType (  ) ;^138^^^^^123^153^propVarType = propVar.getType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^propVarType = node.getJSType (  ) ;propVarType = propVar.getType (  ) ;^138^^^^^123^153^propVarType = propVar.getType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^propVarType = getNativeType ( UNKNOWN_TYPE ) ;propVarType = propVar.getType (  ) ;^138^^^^^123^153^propVarType = propVar.getType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^nameVarType = node.getJSType (  ) ;propVarType = propVar.getType (  ) ;^138^^^^^123^153^propVarType = propVar.getType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P13_Insert_Block]^if  ( propVar != null )  {     propVarType = propVar.getType (  ) ; }^138^^^^^123^153^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P14_Delete_Statement]^^138^^^^^123^153^propVarType = propVar.getType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^JSType nameVarType = nameVar.getType (  ) ;propVarType = propVar.getType (  ) ;^138^^^^^123^153^propVarType = propVar.getType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^JSType origType = node.getJSType (  ) ;propVarType = propVar.getType (  ) ;^138^^^^^123^153^propVarType = propVar.getType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P2_Replace_Operator]^if  ( propVarType != null )  {^140^^^^^125^155^if  ( propVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^if  ( nameVarType == null )  {^140^^^^^125^155^if  ( propVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^if  ( nameVarType == false )  {^140^^^^^125^155^if  ( propVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( propVar != null )  {^140^^^^^125^155^if  ( propVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( nameVar != null )  {^140^^^^^125^155^if  ( propVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( restricted == null )  {^140^^^^^125^155^if  ( propVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P15_Unwrap_Block]^propVarType = node.getJSType();^140^141^142^^^125^155^if  ( propVarType == null )  { propVarType = node.getJSType (  ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P16_Remove_Block]^^140^141^142^^^125^155^if  ( propVarType == null )  { propVarType = node.getJSType (  ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P13_Insert_Block]^if  ( propVar != null )  {     propVarType = propVar.getType (  ) ; }^140^^^^^125^155^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P13_Insert_Block]^if  ( nameVarType == null )  {     nameVarType = node.getJSType (  ) ; }^140^^^^^125^155^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P7_Replace_Invocation]^propVarType = node .getType (  )  ;^141^^^^^126^156^propVarType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^propVarType =  null.getJSType (  ) ;^141^^^^^126^156^propVarType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^propVarType = propVar.getType (  ) ;propVarType = node.getJSType (  ) ;^141^^^^^126^156^propVarType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^propVarType = getNativeType ( UNKNOWN_TYPE ) ;propVarType = node.getJSType (  ) ;^141^^^^^126^156^propVarType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^nameVarType = node.getJSType (  ) ;propVarType = node.getJSType (  ) ;^141^^^^^126^156^propVarType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P14_Delete_Statement]^^141^^^^^126^156^propVarType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^JSType nameVarType = nameVar.getType (  ) ;propVarType = node.getJSType (  ) ;^141^^^^^126^156^propVarType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^JSType origType = node.getJSType (  ) ;propVarType = node.getJSType (  ) ;^141^^^^^126^156^propVarType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P2_Replace_Operator]^if  ( propVarType != null )  {^143^^^^^128^158^if  ( propVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^if  ( nameVarType == null )  {^143^^^^^128^158^if  ( propVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^if  ( propVarType == this )  {^143^^^^^128^158^if  ( propVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( propVar != null )  {^143^^^^^128^158^if  ( propVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( nameVar != null )  {^143^^^^^128^158^if  ( propVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P9_Replace_Statement]^if  ( restricted == null )  {^143^^^^^128^158^if  ( propVarType == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P15_Unwrap_Block]^propVarType = getNativeType(com.google.javascript.rhino.jstype.JSTypeNative.UNKNOWN_TYPE);^143^144^145^^^128^158^if  ( propVarType == null )  { propVarType = getNativeType ( UNKNOWN_TYPE ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P16_Remove_Block]^^143^144^145^^^128^158^if  ( propVarType == null )  { propVarType = getNativeType ( UNKNOWN_TYPE ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P13_Insert_Block]^if  ( value.equals ( "function" )  )  {     return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^143^^^^^128^158^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^propVarType  =  propVarType ;^144^^^^^129^159^propVarType = getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^propVarType = propVar.getType (  ) ;propVarType = getNativeType ( UNKNOWN_TYPE ) ;^144^^^^^129^159^propVarType = getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^origType = origType == null ? getNativeType ( UNKNOWN_TYPE )  : origType;propVarType = getNativeType ( UNKNOWN_TYPE ) ;^144^^^^^129^159^propVarType = getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^propVarType = node.getJSType (  ) ;propVarType = getNativeType ( UNKNOWN_TYPE ) ;^144^^^^^129^159^propVarType = getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P13_Insert_Block]^if  ( value.equals ( "function" )  )  {     return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^144^^^^^129^159^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P13_Insert_Block]^if  ( propVarType == null )  {     propVarType = getNativeType ( UNKNOWN_TYPE ) ; }^144^^^^^129^159^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P14_Delete_Statement]^^144^^^^^129^159^propVarType = getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^return getNativeType ( STRING_TYPE ) ;propVarType = getNativeType ( UNKNOWN_TYPE ) ;^144^^^^^129^159^propVarType = getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^return getNativeType ( NUMBER_TYPE ) ;propVarType = getNativeType ( UNKNOWN_TYPE ) ;^144^^^^^129^159^propVarType = getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^return getNativeType ( NO_OBJECT_TYPE ) ;propVarType = getNativeType ( UNKNOWN_TYPE ) ;^144^^^^^129^159^propVarType = getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^return getNativeType ( BOOLEAN_TYPE ) ;propVarType = getNativeType ( UNKNOWN_TYPE ) ;^144^^^^^129^159^propVarType = getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^JSType ctorType = getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;propVarType = getNativeType ( UNKNOWN_TYPE ) ;^144^^^^^129^159^propVarType = getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^return getNativeType ( UNKNOWN_TYPE ) ;propVarType = getNativeType ( UNKNOWN_TYPE ) ;^144^^^^^129^159^propVarType = getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^return caseTopType ( getNativeType ( ALL_TYPE )  ) ;propVarType = getNativeType ( UNKNOWN_TYPE ) ;^144^^^^^129^159^propVarType = getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^return getNativeType ( VOID_TYPE ) ;propVarType = getNativeType ( UNKNOWN_TYPE ) ;^144^^^^^129^159^propVarType = getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^return caseTopType ( getNativeType ( UNKNOWN_TYPE )  ) ;propVarType = getNativeType ( UNKNOWN_TYPE ) ;^144^^^^^129^159^propVarType = getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^return getNativeType ( NO_TYPE ) ;propVarType = getNativeType ( UNKNOWN_TYPE ) ;^144^^^^^129^159^propVarType = getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^return getNativeType ( NULL_TYPE ) ;propVarType = getNativeType ( UNKNOWN_TYPE ) ;^144^^^^^129^159^propVarType = getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^propVarType =  null.getType (  ) ;^138^^^^^123^153^propVarType = propVar.getType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^propVarType ;^144^^^^^129^159^propVarType = getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^return this;^128^^^^^113^143^return null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^return true;^133^^^^^118^148^return null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^return nameVarType;^146^^^^^131^161^return propVarType;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^StaticSlot<JSType> nameVar = node.getSlot ( scope.getString (  )  ) ;^120^^^^^105^135^StaticSlot<JSType> nameVar = scope.getSlot ( node.getString (  )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> propVar = scope.getSlot ( qualifiedName ) ;StaticSlot<JSType> nameVar = scope.getSlot ( node.getString (  )  ) ;^120^^^^^105^135^StaticSlot<JSType> nameVar = scope.getSlot ( node.getString (  )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P1_Replace_Type]^char qualifiedName = node.getQualifiedName (  ) ;^131^^^^^116^146^String qualifiedName = node.getQualifiedName (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^String qualifiedName = node .getString (  )  ;^131^^^^^116^146^String qualifiedName = node.getQualifiedName (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^StaticSlot<JSType> propVar = scope.getSlot ( value ) ;^135^^^^^120^150^StaticSlot<JSType> propVar = scope.getSlot ( qualifiedName ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^StaticSlot<JSType> propVar = qualifiedName.getSlot ( scope ) ;^135^^^^^120^150^StaticSlot<JSType> propVar = scope.getSlot ( qualifiedName ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> nameVar = scope.getSlot ( node.getString (  )  ) ;StaticSlot<JSType> propVar = scope.getSlot ( qualifiedName ) ;^135^^^^^120^150^StaticSlot<JSType> propVar = scope.getSlot ( qualifiedName ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^JSType restricted = null;JSType propVarType = null;^136^^^^^121^151^JSType propVarType = null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P12_Insert_Condition]^if  ( propVarType == null )  { JSType propVarType = null; }^136^^^^^121^151^JSType propVarType = null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^switch  ( node .getJSType (  )   )  {^118^^^^^103^133^switch  ( node.getType (  )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P14_Delete_Statement]^^118^119^120^^^103^133^switch  ( node.getType (  )  )  { case Token.NAME: StaticSlot<JSType> nameVar = scope.getSlot ( node.getString (  )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P7_Replace_Invocation]^StaticSlot<JSType> nameVar = scope .getSlot (  )  ;^120^^^^^105^135^StaticSlot<JSType> nameVar = scope.getSlot ( node.getString (  )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P14_Delete_Statement]^^120^^^^^105^135^StaticSlot<JSType> nameVar = scope.getSlot ( node.getString (  )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P7_Replace_Invocation]^StaticSlot<JSType> nameVar = scope.getSlot ( node .getType (  )   ) ;^120^^^^^105^135^StaticSlot<JSType> nameVar = scope.getSlot ( node.getString (  )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P14_Delete_Statement]^^131^132^133^134^^116^146^String qualifiedName = node.getQualifiedName (  ) ; if  ( qualifiedName == null )  { return null; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P7_Replace_Invocation]^StaticSlot<JSType> propVar = scope .getSlot (  )  ;^135^^^^^120^150^StaticSlot<JSType> propVar = scope.getSlot ( qualifiedName ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P14_Delete_Statement]^^135^136^137^138^139^120^150^StaticSlot<JSType> propVar = scope.getSlot ( qualifiedName ) ; JSType propVarType = null; if  ( propVar != null )  { propVarType = propVar.getType (  ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^return this;^148^^^^^133^163^return null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getTypeIfRefinable [RETURN_TYPE] JSType   Node node FlowScope scope [VARIABLES] JSTypeRegistry  typeRegistry  StaticSlot  nameVar  propVar  boolean  outcome  resultEqualsValue  JSType  nameVarType  propVarType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P2_Replace_Operator]^origType = origType != null ? getNativeType ( UNKNOWN_TYPE )  : origType;^167^^^^^156^174^origType = origType == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^origType = type == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^167^^^^^156^174^origType = origType == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P6_Replace_Expression]^origType = origType ( origType;^167^^^^^156^174^origType = origType == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^origType = origType == this ? getNativeType ( UNKNOWN_TYPE )  : origType;^167^^^^^156^174^origType = origType == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^propVarType = getNativeType ( UNKNOWN_TYPE ) ;origType = origType == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^167^^^^^156^174^origType = origType == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P1_Replace_Type]^char qualifiedName = node.getQualifiedName (  ) ;^163^^^^^156^174^String qualifiedName = node.getQualifiedName (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P7_Replace_Invocation]^JSType origType = node .getType (  )  ;^166^^^^^156^174^JSType origType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^JSType nameVarType = nameVar.getType (  ) ;JSType origType = node.getJSType (  ) ;^166^^^^^156^174^JSType origType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P7_Replace_Invocation]^switch  ( node .getJSType (  )   )  {^157^^^^^156^174^switch  ( node.getType (  )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P14_Delete_Statement]^^157^158^159^^^156^174^switch  ( node.getType (  )  )  { case Token.NAME: scope.inferSlotType ( node.getString (  ) , type ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^scope.inferSlotType ( node.getString (  ) , origType ) ;^159^^^^^156^174^scope.inferSlotType ( node.getString (  ) , type ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^scope.inferSlotType ( node.getString (  )  ) ;^159^^^^^156^174^scope.inferSlotType ( node.getString (  ) , type ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^scope.inferSlotType ( type.getString (  ) , node ) ;^159^^^^^156^174^scope.inferSlotType ( node.getString (  ) , type ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P7_Replace_Invocation]^scope.inferQualifiedSlot ( node.getString (  ) , type ) ;^159^^^^^156^174^scope.inferSlotType ( node.getString (  ) , type ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P7_Replace_Invocation]^scope.inferSlotType ( node .getType (  )  , type ) ;^159^^^^^156^174^scope.inferSlotType ( node.getString (  ) , type ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P14_Delete_Statement]^^159^160^^^^156^174^scope.inferSlotType ( node.getString (  ) , type ) ; break;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P14_Delete_Statement]^^159^^^^^156^174^scope.inferSlotType ( node.getString (  ) , type ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^Preconditions.checkNotNull ( value ) ;^164^^^^^156^174^Preconditions.checkNotNull ( qualifiedName ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P7_Replace_Invocation]^Preconditions.checkArgument ( qualifiedName ) ;^164^^^^^156^174^Preconditions.checkNotNull ( qualifiedName ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P7_Replace_Invocation]^Preconditions .checkArgument ( outcome )  ;^164^^^^^156^174^Preconditions.checkNotNull ( qualifiedName ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P8_Replace_Mix]^Preconditions.checkArgument ( value ) ;^164^^^^^156^174^Preconditions.checkNotNull ( qualifiedName ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P14_Delete_Statement]^^166^167^^^^156^174^JSType origType = node.getJSType (  ) ; origType = origType == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^propVarType = propVar.getType (  ) ;JSType origType = node.getJSType (  ) ;^166^^^^^156^174^JSType origType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^propVarType = node.getJSType (  ) ;JSType origType = node.getJSType (  ) ;^166^^^^^156^174^JSType origType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^nameVarType = node.getJSType (  ) ;JSType origType = node.getJSType (  ) ;^166^^^^^156^174^JSType origType = node.getJSType (  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P14_Delete_Statement]^^167^^^^^156^174^origType = origType == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^JSType ctorType = getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;origType = origType == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^167^^^^^156^174^origType = origType == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^return getNativeType ( UNKNOWN_TYPE ) ;origType = origType == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^167^^^^^156^174^origType = origType == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P11_Insert_Donor_Statement]^return caseTopType ( getNativeType ( UNKNOWN_TYPE )  ) ;origType = origType == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^167^^^^^156^174^origType = origType == null ? getNativeType ( UNKNOWN_TYPE )  : origType;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^scope.inferQualifiedSlot ( value, origType, type ) ;^168^^^^^156^174^scope.inferQualifiedSlot ( qualifiedName, origType, type ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^scope.inferQualifiedSlot (  origType, type ) ;^168^^^^^156^174^scope.inferQualifiedSlot ( qualifiedName, origType, type ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^scope.inferQualifiedSlot ( qualifiedName,  type ) ;^168^^^^^156^174^scope.inferQualifiedSlot ( qualifiedName, origType, type ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^scope.inferQualifiedSlot ( qualifiedName, origType ) ;^168^^^^^156^174^scope.inferQualifiedSlot ( qualifiedName, origType, type ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^scope.inferQualifiedSlot ( type, origType, qualifiedName ) ;^168^^^^^156^174^scope.inferQualifiedSlot ( qualifiedName, origType, type ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P5_Replace_Variable]^scope.inferQualifiedSlot ( qualifiedName, type, origType ) ;^168^^^^^156^174^scope.inferQualifiedSlot ( qualifiedName, origType, type ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P14_Delete_Statement]^^168^169^^171^172^156^174^scope.inferQualifiedSlot ( qualifiedName, origType, type ) ; break; default: throw new IllegalArgumentException  (" ")  ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] declareNameInScope [RETURN_TYPE] void   FlowScope scope Node node JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  origType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  Node  node  String  qualifiedName  value  FlowScope  scope  
[P12_Insert_Condition]^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ; }^182^^^^^181^188^JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P14_Delete_Statement]^^182^^^^^181^188^JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P2_Replace_Operator]^if  ( type != null || enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^183^^^^^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P2_Replace_Operator]^if  ( type == null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^183^^^^^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P5_Replace_Variable]^if  ( enumElementType != null && type.getPrimitiveType (  ) .equals ( type )  )  {^183^^^^^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P6_Replace_Expression]^if  ( type != null ) {^183^^^^^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P6_Replace_Expression]^if  (  enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^183^^^^^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P15_Unwrap_Block]^return enumElementType;^183^184^185^186^187^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { return enumElementType; } else { return type; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P16_Remove_Block]^^183^184^185^186^187^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { return enumElementType; } else { return type; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P8_Replace_Mix]^if  ( type != null && enumElementType.getPrimitiveType (  )  .equals ( type )   )  {^183^^^^^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P7_Replace_Invocation]^return typeRegistry .getNativeType ( this )  ;^191^192^^^^190^193^return typeRegistry.createUnionType ( OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseAllType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^191^192^^^^190^193^return typeRegistry.createUnionType ( OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseAllType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^196^^^^^195^197^return getNativeType ( NO_OBJECT_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^200^^^^^199^201^return getNativeType ( NO_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^204^^^^^203^205^return getNativeType ( BOOLEAN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseBooleanType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^212^^^^^211^213^return getNativeType ( NULL_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNullType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^216^^^^^215^217^return getNativeType ( NUMBER_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNumberType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^224^^^^^223^225^return getNativeType ( STRING_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseStringType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P7_Replace_Invocation]^return type .getAlternates (  )  ;^228^^^^^227^229^return type.getRestrictedUnion ( getNativeType ( VOID_TYPE )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^228^^^^^227^229^return type.getRestrictedUnion ( getNativeType ( VOID_TYPE )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^232^^^^^231^233^return getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnknownType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P8_Replace_Mix]^return this;^236^^^^^235^237^return null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P12_Insert_Condition]^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ; }^247^^^^^246^253^JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P14_Delete_Statement]^^247^^^^^246^253^JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P2_Replace_Operator]^if  ( type != null || enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^248^^^^^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P2_Replace_Operator]^if  ( type == null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^248^^^^^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P5_Replace_Variable]^if  ( enumElementType != null && type.getPrimitiveType (  ) .equals ( type )  )  {^248^^^^^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P6_Replace_Expression]^if  ( type != null ) {^248^^^^^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P6_Replace_Expression]^if  (  enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^248^^^^^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P8_Replace_Mix]^if  ( type != true && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^248^^^^^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P15_Unwrap_Block]^return enumElementType;^248^249^250^251^252^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { return enumElementType; } else { return type; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P16_Remove_Block]^^248^249^250^251^252^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { return enumElementType; } else { return type; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P14_Delete_Statement]^^256^257^^^^255^258^return typeRegistry.createUnionType ( OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE, VOID_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseAllType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^261^^^^^260^262^return getNativeType ( NO_OBJECT_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^265^^^^^264^266^return getNativeType ( NO_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^269^^^^^268^270^return getNativeType ( BOOLEAN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseBooleanType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P8_Replace_Mix]^return true;^277^^^^^276^278^return null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNullType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^281^^^^^280^282^return getNativeType ( NUMBER_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNumberType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^289^^^^^288^290^return getNativeType ( STRING_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseStringType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P8_Replace_Mix]^return type .getAlternates (  )  ;^293^^^^^292^294^return type.getRestrictedUnion ( getNativeType ( NULL_TYPE )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^293^^^^^292^294^return type.getRestrictedUnion ( getNativeType ( NULL_TYPE )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^297^^^^^296^298^return getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnknownType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^301^^^^^300^302^return getNativeType ( VOID_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P7_Replace_Invocation]^return RestrictByTypeOfResultVisitor ( getNativeType ( ALL_TYPE )  ) ;^323^^^^^322^324^return caseTopType ( getNativeType ( ALL_TYPE )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseAllType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^323^^^^^322^324^return caseTopType ( getNativeType ( ALL_TYPE )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseAllType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P7_Replace_Invocation]^return RestrictByTypeOfResultVisitor ( getNativeType ( UNKNOWN_TYPE )  ) ;^327^^^^^326^328^return caseTopType ( getNativeType ( UNKNOWN_TYPE )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnknownType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^327^^^^^326^328^return caseTopType ( getNativeType ( UNKNOWN_TYPE )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnknownType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P11_Insert_Donor_Statement]^JSType propVarType = null;JSType restricted = null;^331^^^^^330^343^JSType restricted = null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P12_Insert_Condition]^if  ( restricted == null )  { JSType restricted = null; }^331^^^^^330^343^JSType restricted = null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P2_Replace_Operator]^if  ( restrictedAlternate == null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P5_Replace_Variable]^if  ( alternate != null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P5_Replace_Variable]^if  ( alternateAlternate != null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P5_Replace_Variable]^if  ( restricted != null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P5_Replace_Variable]^if  ( restrictedAlternateAlternate != null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P6_Replace_Expression]^if  ( restricted == null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P8_Replace_Mix]^if  ( alternateAlternate != true )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P15_Unwrap_Block]^if (restricted == null) {    restricted = restrictedAlternate;}else {    restricted = restrictedAlternate.getLeastSupertype(restricted);};^334^335^336^337^338^330^343^if  ( restrictedAlternate != null )  { if  ( restricted == null )  { restricted = restrictedAlternate; } else { restricted = restrictedAlternate.getLeastSupertype ( restricted ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P16_Remove_Block]^^334^335^336^337^338^330^343^if  ( restrictedAlternate != null )  { if  ( restricted == null )  { restricted = restrictedAlternate; } else { restricted = restrictedAlternate.getLeastSupertype ( restricted ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P13_Insert_Block]^if  ( restricted == null )  {     restricted = restrictedAlternate; }else {     restricted = restrictedAlternate.getLeastSupertype ( restricted ) ; }^334^^^^^330^343^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P2_Replace_Operator]^if  ( restricted != null )  {^335^^^^^330^343^if  ( restricted == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P5_Replace_Variable]^if  ( alternate == null )  {^335^^^^^330^343^if  ( restricted == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P8_Replace_Mix]^if  ( restricted == false )  {^335^^^^^330^343^if  ( restricted == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P9_Replace_Statement]^if  ( restrictedAlternate != null )  {^335^^^^^330^343^if  ( restricted == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P9_Replace_Statement]^if  ( propVar != null )  {^335^^^^^330^343^if  ( restricted == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P9_Replace_Statement]^if  ( nameVarType == null )  {^335^^^^^330^343^if  ( restricted == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P9_Replace_Statement]^if  ( propVarType == null )  {^335^^^^^330^343^if  ( restricted == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P9_Replace_Statement]^if  ( qualifiedName == null )  {^335^^^^^330^343^if  ( restricted == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P15_Unwrap_Block]^restricted = restrictedAlternate;^335^336^337^338^339^330^343^if  ( restricted == null )  { restricted = restrictedAlternate; } else { restricted = restrictedAlternate.getLeastSupertype ( restricted ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P16_Remove_Block]^^335^336^337^338^339^330^343^if  ( restricted == null )  { restricted = restrictedAlternate; } else { restricted = restrictedAlternate.getLeastSupertype ( restricted ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P13_Insert_Block]^if  ( restrictedAlternate != null )  {     if  ( restricted == null )  {         restricted = restrictedAlternate;     }else {         restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;     } }^335^^^^^330^343^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P5_Replace_Variable]^restricted = alternate.getLeastSupertype ( restricted ) ;^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P5_Replace_Variable]^restricted = alternateAlternate.getLeastSupertype ( restricted ) ;^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P5_Replace_Variable]^restricted = restricted.getLeastSupertype ( restrictedAlternate ) ;^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P5_Replace_Variable]^restricted = restrictedAlternateAlternate.getLeastSupertype ( restricted ) ;^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P5_Replace_Variable]^restricted = restricted;^336^^^^^330^343^restricted = restrictedAlternate;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P8_Replace_Mix]^restricted =  alternate;^336^^^^^330^343^restricted = restrictedAlternate;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P8_Replace_Mix]^if  ( restricted == this )  {^335^^^^^330^343^if  ( restricted == null )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P8_Replace_Mix]^restricted =  null;^336^^^^^330^343^restricted = restrictedAlternate;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P5_Replace_Variable]^JSType restrictedAlternate = restricted.visit ( this ) ;^333^^^^^330^343^JSType restrictedAlternate = alternate.visit ( this ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P5_Replace_Variable]^JSType restrictedAlternate = restrictedAlternate.visit ( this ) ;^333^^^^^330^343^JSType restrictedAlternate = alternate.visit ( this ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^333^^^^^330^343^JSType restrictedAlternate = alternate.visit ( this ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P5_Replace_Variable]^return restrictedAlternate;^342^^^^^330^343^return restricted;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  alternate  restricted  restrictedAlternate  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^346^^^^^345^347^return getNativeType ( NO_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P12_Insert_Condition]^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ; }^359^^^^^349^365^JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P14_Delete_Statement]^^359^^^^^349^365^JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P2_Replace_Operator]^if  ( type != null || enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^360^^^^^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P2_Replace_Operator]^if  ( type == null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^360^^^^^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P5_Replace_Variable]^if  ( enumElementType != null && type.getPrimitiveType (  ) .equals ( type )  )  {^360^^^^^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P6_Replace_Expression]^if  ( type != null ) {^360^^^^^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P6_Replace_Expression]^if  (  enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^360^^^^^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P7_Replace_Invocation]^if  ( type != null && enumElementType.getPrimitiveType (  )  .equals ( type )   )  {^360^^^^^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P15_Unwrap_Block]^return enumElementType;^360^361^362^363^364^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { return enumElementType; } else { return type; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P16_Remove_Block]^^360^361^362^363^364^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { return enumElementType; } else { return type; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  EnumElementType  enumElementType  
[P8_Replace_Mix]^return false;^376^^^^^375^377^return null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P8_Replace_Mix]^return true;^380^^^^^379^381^return null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseBooleanType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P8_Replace_Mix]^return false;^384^^^^^383^385^return null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseFunctionType [RETURN_TYPE] JSType   FunctionType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  FunctionType  type  String  qualifiedName  value  
[P8_Replace_Mix]^return true;^388^^^^^387^389^return null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNullType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P8_Replace_Mix]^return false;^392^^^^^391^393^return null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNumberType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P8_Replace_Mix]^return this;^396^^^^^395^397^return null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P8_Replace_Mix]^return false;^400^^^^^399^401^return null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseStringType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P8_Replace_Mix]^return true;^404^^^^^403^405^return null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^421^^^^^420^422^return getNativeType ( NO_OBJECT_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^425^^^^^424^426^return getNativeType ( BOOLEAN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseBooleanType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^433^^^^^432^434^return getNativeType ( NULL_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNullType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^437^^^^^436^438^return getNativeType ( NUMBER_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNumberType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^445^^^^^444^446^return getNativeType ( STRING_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseStringType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P14_Delete_Statement]^^449^^^^^448^450^return getNativeType ( VOID_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  value  
[P2_Replace_Operator]^return result.equals ( value )  > resultEqualsValue;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^return result.equals ( qualifiedName )  == resultEqualsValue;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^return result.equals ( value )  == outcome;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^return value.equals ( result )  == resultEqualsValue;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^return result.equals ( resultEqualsValue )  == value;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P8_Replace_Mix]^return result.equals ( value )   ||  outcome;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^return qualifiedName.equals ( value )  == resultEqualsValue;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^if  ( outcome )  {^487^^^^^486^501^if  ( resultEqualsValue )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P8_Replace_Mix]^if  ( result.equals ( "number" )  )  {^488^^^^^486^501^if  ( value.equals ( "number" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "boooolean" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^} else if  ( result.equals ( "boolean" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P6_Replace_Expression]^} else {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P8_Replace_Mix]^}  if  ( result.equals ( "boolean" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P9_Replace_Statement]^} else if  ( value.equals ( "undefined" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P9_Replace_Statement]^} else if  ( value.equals ( "string" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P9_Replace_Statement]^} else if  ( value.equals ( "function" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "ttring" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^} else if  ( result.equals ( "string" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P6_Replace_Expression]^} else {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P8_Replace_Mix]^}  if  ( result.equals ( "string" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P9_Replace_Statement]^} else if  ( value.equals ( "undefined" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P9_Replace_Statement]^} else if  ( value.equals ( "boolean" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P9_Replace_Statement]^} else if  ( value.equals ( "function" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefinedunde" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^} else if  ( result.equals ( "undefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P6_Replace_Expression]^} else {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P8_Replace_Mix]^}  if  ( result.equals ( "undefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P9_Replace_Statement]^} else if  ( value.equals ( "string" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P9_Replace_Statement]^} else if  ( value.equals ( "boolean" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P9_Replace_Statement]^} else if  ( value.equals ( "function" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P15_Unwrap_Block]^return getNativeType(com.google.javascript.rhino.jstype.JSTypeNative.VOID_TYPE);^494^495^496^497^498^486^501^} else if  ( value.equals ( "undefined" )  )  { return getNativeType ( VOID_TYPE ) ; } else if  ( value.equals ( "function" )  )  { return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P16_Remove_Block]^^494^495^496^497^498^486^501^} else if  ( value.equals ( "undefined" )  )  { return getNativeType ( VOID_TYPE ) ; } else if  ( value.equals ( "function" )  )  { return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P13_Insert_Block]^if  ( value.equals ( "string" )  )  {     return getNativeType ( STRING_TYPE ) ; }else     if  ( value.equals ( "undefined" )  )  {         return getNativeType ( VOID_TYPE ) ;     }else         if  ( value.equals ( "function" )  )  {             return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;         }^494^^^^^486^501^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "cti" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^} else if  ( result.equals ( "function" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P6_Replace_Expression]^} else {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P8_Replace_Mix]^}  if  ( result.equals ( "function" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P9_Replace_Statement]^} else if  ( value.equals ( "undefined" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P9_Replace_Statement]^} else if  ( value.equals ( "string" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P9_Replace_Statement]^} else if  ( value.equals ( "boolean" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P15_Unwrap_Block]^return getNativeType(com.google.javascript.rhino.jstype.JSTypeNative.U2U_CONSTRUCTOR_TYPE);^496^497^498^^^486^501^} else if  ( value.equals ( "function" )  )  { return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P16_Remove_Block]^^496^497^498^^^486^501^} else if  ( value.equals ( "function" )  )  { return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P13_Insert_Block]^if  ( propVarType == null )  {     propVarType = getNativeType ( UNKNOWN_TYPE ) ; }^496^^^^^486^501^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P13_Insert_Block]^if  ( value.equals ( "function" )  )  {     return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^497^^^^^486^501^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P13_Insert_Block]^if  ( propVarType == null )  {     propVarType = getNativeType ( UNKNOWN_TYPE ) ; }^497^^^^^486^501^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^497^^^^^486^501^return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "unctunction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P13_Insert_Block]^if  ( value.equals ( "function" )  )  {     return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^495^^^^^486^501^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P13_Insert_Block]^if  ( propVarType == null )  {     propVarType = getNativeType ( UNKNOWN_TYPE ) ; }^495^^^^^486^501^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^495^^^^^486^501^return getNativeType ( VOID_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "unction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "fine" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P13_Insert_Block]^if  ( value.equals ( "function" )  )  {     return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^493^^^^^486^501^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P13_Insert_Block]^if  ( propVarType == null )  {     propVarType = getNativeType ( UNKNOWN_TYPE ) ; }^493^^^^^486^501^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^493^^^^^486^501^return getNativeType ( STRING_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "dendefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionu" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "unctio" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "sttring" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "efinndefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "nctiounction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P13_Insert_Block]^if  ( value.equals ( "function" )  )  {     return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^491^^^^^486^501^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P13_Insert_Block]^if  ( propVarType == null )  {     propVarType = getNativeType ( UNKNOWN_TYPE ) ; }^491^^^^^486^501^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^491^^^^^486^501^return getNativeType ( BOOLEAN_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "stri" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "ine" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "f" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "unctiunction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "functioni" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "undendefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "functi" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefinednd" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "u" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionfu" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "trtring" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefinedine" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "fun" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P13_Insert_Block]^if  ( value.equals ( "function" )  )  {     return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^489^^^^^486^501^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P13_Insert_Block]^if  ( propVarType == null )  {     propVarType = getNativeType ( UNKNOWN_TYPE ) ; }^489^^^^^486^501^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^489^^^^^486^501^return getNativeType ( NUMBER_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "bool" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "st" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "fu" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "iounction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "ndefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "functio" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionfunctio" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "func" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "c" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "strings" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "finndefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionnc" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "o" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefinedu" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefi" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "ti" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^if  ( value.equals ( "numbernumbe" )  )  {^488^^^^^486^501^if  ( value.equals ( "number" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "booleanboo" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "stringst" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefinedundef" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^if  ( value.equals ( "mbeumber" )  )  {^488^^^^^486^501^if  ( value.equals ( "number" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "booleanbo" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "stringstri" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionunctio" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionf" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P8_Replace_Mix]^}  if  ( value.equals ( "function" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "und" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "nctunction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefinedd" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionfun" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "stringrin" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "ndefndefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionn" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefinedund" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionfunc" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "ndefin" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "functiounction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "fuunction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "oolea" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "strin" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefinedundefin" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "tunction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "le" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefineddef" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "ncunction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "fndefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefinede" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "uncti" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "t" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "tring" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "unndefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "nunction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "ndendefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionunct" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionct" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "ooleoolean" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "stringstrin" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^} else if  ( value.equals ( "funcunction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  topType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P2_Replace_Operator]^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  != resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P2_Replace_Operator]^return  ( value.equals ( "object" )  && value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^return  ( value.equals ( "objectobj" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^return  ( value.equals ( "object" )  || value.equals ( "functunction" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^return  ( result.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^return  ( resultEqualsValue.equals ( "object" )  || value.equals ( "function" )  )  == value ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P6_Replace_Expression]^return  ( value.equals ( "object" )  || value.equals ( null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P8_Replace_Mix]^return   getNativeType ( NO_OBJECT_TYPE )  ;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^return  ( value.equals ( "o" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^return  ( value.equals ( "object" )  || value.equals ( "fu" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P11_Insert_Donor_Statement]^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P11_Insert_Donor_Statement]^return getNativeType ( BOOLEAN_TYPE ) ;resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P11_Insert_Donor_Statement]^return getNativeType ( NUMBER_TYPE ) ;resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P11_Insert_Donor_Statement]^return matchesExpectation ( "boolean" )  ? getNativeType ( BOOLEAN_TYPE )  : null;resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P11_Insert_Donor_Statement]^return getNativeType ( NO_OBJECT_TYPE ) ;resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P11_Insert_Donor_Statement]^return getNativeType ( UNKNOWN_TYPE ) ;resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P11_Insert_Donor_Statement]^return caseTopType ( getNativeType ( ALL_TYPE )  ) ;resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P11_Insert_Donor_Statement]^return matchesExpectation ( "number" )  ? getNativeType ( NUMBER_TYPE )  : null;resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P11_Insert_Donor_Statement]^return getNativeType ( VOID_TYPE ) ;resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P11_Insert_Donor_Statement]^return caseTopType ( getNativeType ( UNKNOWN_TYPE )  ) ;resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P11_Insert_Donor_Statement]^return getNativeType ( NO_TYPE ) ;resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P11_Insert_Donor_Statement]^return getNativeType ( NULL_TYPE ) ;resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "o" )  ? getNativeType ( BOOLEAN_TYPE )  : null;^509^^^^^508^510^return matchesExpectation ( "boolean" )  ? getNativeType ( BOOLEAN_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseBooleanType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P7_Replace_Invocation]^return caseTopType ( "boolean" )  ? getNativeType ( BOOLEAN_TYPE )  : null;^509^^^^^508^510^return matchesExpectation ( "boolean" )  ? getNativeType ( BOOLEAN_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseBooleanType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "bo" )  ? getNativeType ( BOOLEAN_TYPE )  : null;^509^^^^^508^510^return matchesExpectation ( "boolean" )  ? getNativeType ( BOOLEAN_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseBooleanType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^509^^^^^508^510^return matchesExpectation ( "boolean" )  ? getNativeType ( BOOLEAN_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseBooleanType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "fuunction" )  ? type : null;^513^^^^^512^514^return matchesExpectation ( "function" )  ? type : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseFunctionType [RETURN_TYPE] JSType   FunctionType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  FunctionType  type  String  qualifiedName  result  value  
[P7_Replace_Invocation]^return caseTopType ( "function" )  ? type : null;^513^^^^^512^514^return matchesExpectation ( "function" )  ? type : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseFunctionType [RETURN_TYPE] JSType   FunctionType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  FunctionType  type  String  qualifiedName  result  value  
[P8_Replace_Mix]^return caseTopType ( "function" )  ? type : false;^513^^^^^512^514^return matchesExpectation ( "function" )  ? type : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseFunctionType [RETURN_TYPE] JSType   FunctionType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  FunctionType  type  String  qualifiedName  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "f" )  ? type : null;^513^^^^^512^514^return matchesExpectation ( "function" )  ? type : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseFunctionType [RETURN_TYPE] JSType   FunctionType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  FunctionType  type  String  qualifiedName  result  value  
[P14_Delete_Statement]^^513^^^^^512^514^return matchesExpectation ( "function" )  ? type : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseFunctionType [RETURN_TYPE] JSType   FunctionType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  FunctionType  type  String  qualifiedName  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "obj" )  ? getNativeType ( NULL_TYPE )  : null;^517^^^^^516^518^return matchesExpectation ( "object" )  ? getNativeType ( NULL_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNullType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P7_Replace_Invocation]^return caseTopType ( "object" )  ? getNativeType ( NULL_TYPE )  : null;^517^^^^^516^518^return matchesExpectation ( "object" )  ? getNativeType ( NULL_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNullType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "" )  ? getNativeType ( NULL_TYPE )  : null;^517^^^^^516^518^return matchesExpectation ( "object" )  ? getNativeType ( NULL_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNullType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^517^^^^^516^518^return matchesExpectation ( "object" )  ? getNativeType ( NULL_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNullType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "umber" )  ? getNativeType ( NUMBER_TYPE )  : null;^521^^^^^520^522^return matchesExpectation ( "number" )  ? getNativeType ( NUMBER_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNumberType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P7_Replace_Invocation]^return caseTopType ( "number" )  ? getNativeType ( NUMBER_TYPE )  : null;^521^^^^^520^522^return matchesExpectation ( "number" )  ? getNativeType ( NUMBER_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNumberType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^521^^^^^520^522^return matchesExpectation ( "number" )  ? getNativeType ( NUMBER_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseNumberType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^if  ( value.equals ( "functi" )  )  {^525^^^^^524^530^if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P8_Replace_Mix]^if  ( result.equals ( "function" )  )  {^525^^^^^524^530^if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P15_Unwrap_Block]^com.google.javascript.rhino.jstype.JSType ctorType = getNativeType(com.google.javascript.rhino.jstype.JSTypeNative.U2U_CONSTRUCTOR_TYPE); return (resultEqualsValue) && (ctorType.isSubtype(type)) ? ctorType : null;^525^526^527^528^^524^530^if  ( value.equals ( "function" )  )  { JSType ctorType = getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P16_Remove_Block]^^525^526^527^528^^524^530^if  ( value.equals ( "function" )  )  { JSType ctorType = getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null; }^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P2_Replace_Operator]^return resultEqualsValue || ctorType.isSubtype ( type )  ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^return outcome && ctorType.isSubtype ( type )  ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^return resultEqualsValue && type.isSubtype ( ctorType )  ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^return type && ctorType.isSubtype ( resultEqualsValue )  ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P8_Replace_Mix]^return outcome ;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P13_Insert_Block]^if  ( value.equals ( "function" )  )  {     return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^526^^^^^524^530^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P13_Insert_Block]^if  ( propVarType == null )  {     propVarType = getNativeType ( UNKNOWN_TYPE ) ; }^526^^^^^524^530^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P13_Insert_Block]^if  ( value.equals ( "function" )  )  {     JSType ctorType = getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;     return  ( resultEqualsValue )  &&  ( ctorType.isSubtype ( type )  )  ? ctorType : null; }^526^^^^^524^530^[Delete]^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^526^^^^^524^530^JSType ctorType = getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P7_Replace_Invocation]^return resultEqualsValue && ctorType .getLeastSupertype ( ctorType )   ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P8_Replace_Mix]^return   ctorType.isSubtype ( type )  ? ctorType : this;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^if  ( value.equals ( "functionnct" )  )  {^525^^^^^524^530^if  ( value.equals ( "function" )  )  {^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "bject" )  ? type : null;^529^^^^^524^530^return matchesExpectation ( "object" )  ? type : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P7_Replace_Invocation]^return caseTopType ( "object" )  ? type : null;^529^^^^^524^530^return matchesExpectation ( "object" )  ? type : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^529^^^^^524^530^return matchesExpectation ( "object" )  ? type : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  ctorType  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "s" )  ? getNativeType ( STRING_TYPE )  : null;^533^^^^^532^534^return matchesExpectation ( "string" )  ? getNativeType ( STRING_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseStringType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P7_Replace_Invocation]^return caseTopType ( "string" )  ? getNativeType ( STRING_TYPE )  : null;^533^^^^^532^534^return matchesExpectation ( "string" )  ? getNativeType ( STRING_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseStringType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "strings" )  ? getNativeType ( STRING_TYPE )  : null;^533^^^^^532^534^return matchesExpectation ( "string" )  ? getNativeType ( STRING_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseStringType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^533^^^^^532^534^return matchesExpectation ( "string" )  ? getNativeType ( STRING_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseStringType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "un" )  ? getNativeType ( VOID_TYPE )  : null;^537^^^^^536^538^return matchesExpectation ( "undefined" )  ? getNativeType ( VOID_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P7_Replace_Invocation]^return caseTopType ( "undefined" )  ? getNativeType ( VOID_TYPE )  : null;^537^^^^^536^538^return matchesExpectation ( "undefined" )  ? getNativeType ( VOID_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "ndefndefined" )  ? getNativeType ( VOID_TYPE )  : null;^537^^^^^536^538^return matchesExpectation ( "undefined" )  ? getNativeType ( VOID_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^537^^^^^536^538^return matchesExpectation ( "undefined" )  ? getNativeType ( VOID_TYPE )  : null;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P2_Replace_Operator]^return type != null ? null : type.visit ( restrictUndefinedVisitor ) ;^545^^^^^544^546^return type == null ? null : type.visit ( restrictUndefinedVisitor ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedWithoutUndefined [RETURN_TYPE] JSType   JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^return restrictUndefinedVisitor == null ? null : type.visit ( type ) ;^545^^^^^544^546^return type == null ? null : type.visit ( restrictUndefinedVisitor ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedWithoutUndefined [RETURN_TYPE] JSType   JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P6_Replace_Expression]^return type ( type.visit ( restrictUndefinedVisitor ) ;^545^^^^^544^546^return type == null ? null : type.visit ( restrictUndefinedVisitor ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedWithoutUndefined [RETURN_TYPE] JSType   JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P7_Replace_Invocation]^return type == null ? null : type.isSubtype ( restrictUndefinedVisitor ) ;^545^^^^^544^546^return type == null ? null : type.visit ( restrictUndefinedVisitor ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedWithoutUndefined [RETURN_TYPE] JSType   JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P8_Replace_Mix]^return type == this ? this : type.isSubtype ( restrictUndefinedVisitor ) ;^545^^^^^544^546^return type == null ? null : type.visit ( restrictUndefinedVisitor ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedWithoutUndefined [RETURN_TYPE] JSType   JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^545^^^^^544^546^return type == null ? null : type.visit ( restrictUndefinedVisitor ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedWithoutUndefined [RETURN_TYPE] JSType   JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P2_Replace_Operator]^return type != null ? null : type.visit ( restrictNullVisitor ) ;^552^^^^^551^553^return type == null ? null : type.visit ( restrictNullVisitor ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedWithoutNull [RETURN_TYPE] JSType   JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^return restrictNullVisitor == null ? null : type.visit ( type ) ;^552^^^^^551^553^return type == null ? null : type.visit ( restrictNullVisitor ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedWithoutNull [RETURN_TYPE] JSType   JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P6_Replace_Expression]^return type ( type.visit ( restrictNullVisitor ) ;^552^^^^^551^553^return type == null ? null : type.visit ( restrictNullVisitor ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedWithoutNull [RETURN_TYPE] JSType   JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P7_Replace_Invocation]^return type == null ? null : type.isSubtype ( restrictNullVisitor ) ;^552^^^^^551^553^return type == null ? null : type.visit ( restrictNullVisitor ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedWithoutNull [RETURN_TYPE] JSType   JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P8_Replace_Mix]^return   null ;^552^^^^^551^553^return type == null ? null : type.visit ( restrictNullVisitor ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedWithoutNull [RETURN_TYPE] JSType   JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^return type == null ? null : type.visit ( 0 ) ;^552^^^^^551^553^return type == null ? null : type.visit ( restrictNullVisitor ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedWithoutNull [RETURN_TYPE] JSType   JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^552^^^^^551^553^return type == null ? null : type.visit ( restrictNullVisitor ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedWithoutNull [RETURN_TYPE] JSType   JSType type [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P2_Replace_Operator]^return type != null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^584^585^586^^^582^587^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P4_Replace_Constructor]^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor (  resultEqualsValue )  ) ;^584^585^586^^^582^587^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P4_Replace_Constructor]^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value )  ) ;^584^585^586^^^582^587^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( result, resultEqualsValue )  ) ;^584^585^586^^^582^587^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, outcome )  ) ;^584^585^586^^^582^587^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^return resultEqualsValue == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, type )  ) ;^584^585^586^^^582^587^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( resultEqualsValue, value )  ) ;^584^585^586^^^582^587^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P6_Replace_Expression]^return type ( type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^584^585^586^^^582^587^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P8_Replace_Mix]^return type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^584^585^586^^^582^587^return type == null ? null : type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P4_Replace_Constructor]^type.visit ( new RestrictByOneTypeOfResultVisitor (  resultEqualsValue )  ) ;^585^586^^^^582^587^type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P4_Replace_Constructor]^type.visit ( new RestrictByOneTypeOfResultVisitor ( value )  ) ;^585^586^^^^582^587^type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^type.visit ( new RestrictByOneTypeOfResultVisitor ( value, outcome )  ) ;^585^586^^^^582^587^type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^type.visit ( new RestrictByOneTypeOfResultVisitor ( resultEqualsValue, value )  ) ;^585^586^^^^582^587^type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P8_Replace_Mix]^type.visit ( new RestrictByOneTypeOfResultVisitor ( result, resultEqualsValue )  ) ;^585^586^^^^582^587^type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P14_Delete_Statement]^^585^586^^^^582^587^type.visit ( new RestrictByOneTypeOfResultVisitor ( value, resultEqualsValue )  ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getRestrictedByTypeOfResult [RETURN_TYPE] JSType   JSType type String value boolean resultEqualsValue [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  JSType  type  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  
[P5_Replace_Variable]^return typeId.getNativeType ( typeRegistry ) ;^590^^^^^589^591^return typeRegistry.getNativeType ( typeId ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getNativeType [RETURN_TYPE] JSType   JSTypeNative typeId [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  
[P7_Replace_Invocation]^return typeRegistry .getRestrictedByTypeOfResult ( null , qualifiedName , outcome )  ;^590^^^^^589^591^return typeRegistry.getNativeType ( typeId ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getNativeType [RETURN_TYPE] JSType   JSTypeNative typeId [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  
[P14_Delete_Statement]^^590^^^^^589^591^return typeRegistry.getNativeType ( typeId ) ;^[CLASS] ChainableReverseAbstractInterpreter 1 2 RestrictByTypeOfResultVisitor RestrictByTrueTypeOfResultVisitor RestrictByFalseTypeOfResultVisitor RestrictByOneTypeOfResultVisitor  [METHOD] getNativeType [RETURN_TYPE] JSType   JSTypeNative typeId [VARIABLES] JSTypeRegistry  typeRegistry  boolean  outcome  resultEqualsValue  Visitor  restrictNullVisitor  restrictUndefinedVisitor  ChainableReverseAbstractInterpreter  firstLink  lastLink  nextLink  CodingConvention  convention  String  qualifiedName  result  value  JSTypeNative  typeId  
[P7_Replace_Invocation]^JSType type = enumElementType.getPrimitiveType (  ) .equals ( this ) ;^182^^^^^181^188^JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[CLASS] 1  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P12_Insert_Condition]^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ; }^182^^^^^181^188^JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[CLASS] 1  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P14_Delete_Statement]^^182^^^^^181^188^JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[CLASS] 1  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P2_Replace_Operator]^if  ( type != null || enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^183^^^^^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] 1  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P2_Replace_Operator]^if  ( type == null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^183^^^^^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] 1  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P5_Replace_Variable]^if  ( enumElementType != null && type.getPrimitiveType (  ) .equals ( type )  )  {^183^^^^^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] 1  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P6_Replace_Expression]^if  ( type != null ) {^183^^^^^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] 1  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P6_Replace_Expression]^if  (  enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^183^^^^^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] 1  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P15_Unwrap_Block]^return enumElementType;^183^184^185^186^187^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { return enumElementType; } else { return type; }^[CLASS] 1  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P16_Remove_Block]^^183^184^185^186^187^181^188^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { return enumElementType; } else { return type; }^[CLASS] 1  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P5_Replace_Variable]^return this.createUnionType ( OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE ) ;^191^192^^^^190^193^return typeRegistry.createUnionType ( OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE ) ;^[CLASS] 1  [METHOD] caseAllType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P8_Replace_Mix]^return null.createUnionType ( OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE ) ;^191^192^^^^190^193^return typeRegistry.createUnionType ( OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE ) ;^[CLASS] 1  [METHOD] caseAllType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^191^192^^^^190^193^return typeRegistry.createUnionType ( OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE, NULL_TYPE ) ;^[CLASS] 1  [METHOD] caseAllType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^196^^^^^195^197^return getNativeType ( NO_OBJECT_TYPE ) ;^[CLASS] 1  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^200^^^^^199^201^return getNativeType ( NO_TYPE ) ;^[CLASS] 1  [METHOD] caseNoType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^204^^^^^203^205^return getNativeType ( BOOLEAN_TYPE ) ;^[CLASS] 1  [METHOD] caseBooleanType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^212^^^^^211^213^return getNativeType ( NULL_TYPE ) ;^[CLASS] 1  [METHOD] caseNullType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^216^^^^^215^217^return getNativeType ( NUMBER_TYPE ) ;^[CLASS] 1  [METHOD] caseNumberType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^224^^^^^223^225^return getNativeType ( STRING_TYPE ) ;^[CLASS] 1  [METHOD] caseStringType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^228^^^^^227^229^return type.getRestrictedUnion ( getNativeType ( VOID_TYPE )  ) ;^[CLASS] 1  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  boolean  
[P14_Delete_Statement]^^232^^^^^231^233^return getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] 1  [METHOD] caseUnknownType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P8_Replace_Mix]^return this;^236^^^^^235^237^return null;^[CLASS] 1  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P7_Replace_Invocation]^JSType type = enumElementType.getPrimitiveType (  ) .equals ( this ) ;^247^^^^^246^253^JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[CLASS] 2  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P12_Insert_Condition]^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ; }^247^^^^^246^253^JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[CLASS] 2  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P14_Delete_Statement]^^247^^^^^246^253^JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[CLASS] 2  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P2_Replace_Operator]^if  ( type != null || enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^248^^^^^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] 2  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P2_Replace_Operator]^if  ( type == null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^248^^^^^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] 2  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P5_Replace_Variable]^if  ( enumElementType != null && type.getPrimitiveType (  ) .equals ( type )  )  {^248^^^^^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] 2  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P6_Replace_Expression]^if  ( type != null ) {^248^^^^^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] 2  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P6_Replace_Expression]^if  (  enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^248^^^^^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] 2  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P15_Unwrap_Block]^return enumElementType;^248^249^250^251^252^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { return enumElementType; } else { return type; }^[CLASS] 2  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P16_Remove_Block]^^248^249^250^251^252^246^253^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { return enumElementType; } else { return type; }^[CLASS] 2  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P8_Replace_Mix]^return 3.createUnionType ( OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE, VOID_TYPE ) ;^256^257^^^^255^258^return typeRegistry.createUnionType ( OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE, VOID_TYPE ) ;^[CLASS] 2  [METHOD] caseAllType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^256^257^^^^255^258^return typeRegistry.createUnionType ( OBJECT_TYPE, NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE, VOID_TYPE ) ;^[CLASS] 2  [METHOD] caseAllType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^261^^^^^260^262^return getNativeType ( NO_OBJECT_TYPE ) ;^[CLASS] 2  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^265^^^^^264^266^return getNativeType ( NO_TYPE ) ;^[CLASS] 2  [METHOD] caseNoType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^269^^^^^268^270^return getNativeType ( BOOLEAN_TYPE ) ;^[CLASS] 2  [METHOD] caseBooleanType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P8_Replace_Mix]^return true;^277^^^^^276^278^return null;^[CLASS] 2  [METHOD] caseNullType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^281^^^^^280^282^return getNativeType ( NUMBER_TYPE ) ;^[CLASS] 2  [METHOD] caseNumberType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^289^^^^^288^290^return getNativeType ( STRING_TYPE ) ;^[CLASS] 2  [METHOD] caseStringType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^293^^^^^292^294^return type.getRestrictedUnion ( getNativeType ( NULL_TYPE )  ) ;^[CLASS] 2  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  boolean  
[P14_Delete_Statement]^^297^^^^^296^298^return getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] 2  [METHOD] caseUnknownType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^301^^^^^300^302^return getNativeType ( VOID_TYPE ) ;^[CLASS] 2  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^323^^^^^322^324^return caseTopType ( getNativeType ( ALL_TYPE )  ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseAllType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^327^^^^^326^328^return caseTopType ( getNativeType ( UNKNOWN_TYPE )  ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnknownType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P12_Insert_Condition]^if  ( restricted == null )  { JSType restricted = null; }^331^^^^^330^343^JSType restricted = null;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P2_Replace_Operator]^if  ( restrictedAlternate == null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P5_Replace_Variable]^if  ( alternate != null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P5_Replace_Variable]^if  ( alternateAlternate != null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P5_Replace_Variable]^if  ( restricted != null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P5_Replace_Variable]^if  ( restrictedAlternateAlternate != null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P6_Replace_Expression]^if  ( restricted == null )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P8_Replace_Mix]^if  ( restrictedAlternate != true )  {^334^^^^^330^343^if  ( restrictedAlternate != null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P15_Unwrap_Block]^if (restricted == null) {    restricted = restrictedAlternate;}else {    restricted = restrictedAlternate.getLeastSupertype(restricted);};^334^335^336^337^338^330^343^if  ( restrictedAlternate != null )  { if  ( restricted == null )  { restricted = restrictedAlternate; } else { restricted = restrictedAlternate.getLeastSupertype ( restricted ) ; }^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P16_Remove_Block]^^334^335^336^337^338^330^343^if  ( restrictedAlternate != null )  { if  ( restricted == null )  { restricted = restrictedAlternate; } else { restricted = restrictedAlternate.getLeastSupertype ( restricted ) ; }^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P13_Insert_Block]^if  ( restricted == null )  {     restricted = restrictedAlternate; }else {     restricted = restrictedAlternate.getLeastSupertype ( restricted ) ; }^334^^^^^330^343^[Delete]^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P2_Replace_Operator]^if  ( restricted != null )  {^335^^^^^330^343^if  ( restricted == null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P8_Replace_Mix]^if  ( restricted == this )  {^335^^^^^330^343^if  ( restricted == null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P9_Replace_Statement]^if  ( restrictedAlternate != null )  {^335^^^^^330^343^if  ( restricted == null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P15_Unwrap_Block]^restricted = restrictedAlternate;^335^336^337^338^339^330^343^if  ( restricted == null )  { restricted = restrictedAlternate; } else { restricted = restrictedAlternate.getLeastSupertype ( restricted ) ; }^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P16_Remove_Block]^^335^336^337^338^339^330^343^if  ( restricted == null )  { restricted = restrictedAlternate; } else { restricted = restrictedAlternate.getLeastSupertype ( restricted ) ; }^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P13_Insert_Block]^if  ( restrictedAlternate != null )  {     if  ( restricted == null )  {         restricted = restrictedAlternate;     }else {         restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;     } }^335^^^^^330^343^[Delete]^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P5_Replace_Variable]^restricted = alternate.getLeastSupertype ( restricted ) ;^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P5_Replace_Variable]^restricted = alternateAlternate.getLeastSupertype ( restricted ) ;^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P5_Replace_Variable]^restricted = restricted.getLeastSupertype ( restrictedAlternate ) ;^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P5_Replace_Variable]^restricted = restrictedAlternateAlternate.getLeastSupertype ( restricted ) ;^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P14_Delete_Statement]^^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P8_Replace_Mix]^restricted =  alternate;^336^^^^^330^343^restricted = restrictedAlternate;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P5_Replace_Variable]^restricted = restricted;^336^^^^^330^343^restricted = restrictedAlternate;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P5_Replace_Variable]^if  ( alternate == null )  {^335^^^^^330^343^if  ( restricted == null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P8_Replace_Mix]^if  ( alternate == false )  {^335^^^^^330^343^if  ( restricted == null )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P7_Replace_Invocation]^restricted = restrictedAlternate .visit ( null )  ;^338^^^^^330^343^restricted = restrictedAlternate.getLeastSupertype ( restricted ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P5_Replace_Variable]^JSType restrictedAlternate = restricted.visit ( this ) ;^333^^^^^330^343^JSType restrictedAlternate = alternate.visit ( this ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P7_Replace_Invocation]^JSType restrictedAlternate = alternate.getLeastSupertype ( this ) ;^333^^^^^330^343^JSType restrictedAlternate = alternate.visit ( this ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P8_Replace_Mix]^JSType restrictedAlternate = restricted.getLeastSupertype ( this ) ;^333^^^^^330^343^JSType restrictedAlternate = alternate.visit ( this ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P7_Replace_Invocation]^JSType restrictedAlternate = alternate .getLeastSupertype ( restricted )  ;^333^^^^^330^343^JSType restrictedAlternate = alternate.visit ( this ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P8_Replace_Mix]^JSType restrictedAlternate = restrictedAlternate.getLeastSupertype ( this ) ;^333^^^^^330^343^JSType restrictedAlternate = alternate.visit ( this ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P14_Delete_Statement]^^333^^^^^330^343^JSType restrictedAlternate = alternate.visit ( this ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P5_Replace_Variable]^return restrictedAlternate;^342^^^^^330^343^return restricted;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseUnionType [RETURN_TYPE] JSType   UnionType type [VARIABLES] UnionType  type  JSType  alternate  restricted  restrictedAlternate  boolean  
[P14_Delete_Statement]^^346^^^^^345^347^return getNativeType ( NO_TYPE ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseNoType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P7_Replace_Invocation]^JSType type = enumElementType.getPrimitiveType (  ) .equals ( this ) ;^359^^^^^349^365^JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P12_Insert_Condition]^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ; }^359^^^^^349^365^JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P7_Replace_Invocation]^JSType type = enumElementType.getPrimitiveType (  )  .getLeastSupertype ( type )  ;^359^^^^^349^365^JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P14_Delete_Statement]^^359^^^^^349^365^JSType type = enumElementType.getPrimitiveType (  ) .visit ( this ) ;^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P2_Replace_Operator]^if  ( type != null || enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^360^^^^^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P2_Replace_Operator]^if  ( type == null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^360^^^^^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P5_Replace_Variable]^if  ( enumElementType != null && type.getPrimitiveType (  ) .equals ( type )  )  {^360^^^^^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P6_Replace_Expression]^if  ( type != null ) {^360^^^^^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P6_Replace_Expression]^if  (  enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^360^^^^^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P8_Replace_Mix]^if  ( type != this && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^360^^^^^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  {^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P15_Unwrap_Block]^return enumElementType;^360^361^362^363^364^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { return enumElementType; } else { return type; }^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P16_Remove_Block]^^360^361^362^363^364^349^365^if  ( type != null && enumElementType.getPrimitiveType (  ) .equals ( type )  )  { return enumElementType; } else { return type; }^[CLASS] RestrictByTypeOfResultVisitor  [METHOD] caseEnumElementType [RETURN_TYPE] JSType   EnumElementType enumElementType [VARIABLES] JSType  type  boolean  EnumElementType  enumElementType  
[P8_Replace_Mix]^return this;^376^^^^^375^377^return null;^[CLASS] RestrictByTrueTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P8_Replace_Mix]^return this;^380^^^^^379^381^return null;^[CLASS] RestrictByTrueTypeOfResultVisitor  [METHOD] caseBooleanType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P8_Replace_Mix]^return this;^384^^^^^383^385^return null;^[CLASS] RestrictByTrueTypeOfResultVisitor  [METHOD] caseFunctionType [RETURN_TYPE] JSType   FunctionType type [VARIABLES] boolean  FunctionType  type  
[P8_Replace_Mix]^return true;^388^^^^^387^389^return null;^[CLASS] RestrictByTrueTypeOfResultVisitor  [METHOD] caseNullType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P8_Replace_Mix]^return false;^392^^^^^391^393^return null;^[CLASS] RestrictByTrueTypeOfResultVisitor  [METHOD] caseNumberType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P8_Replace_Mix]^return true;^396^^^^^395^397^return null;^[CLASS] RestrictByTrueTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  
[P8_Replace_Mix]^return this;^400^^^^^399^401^return null;^[CLASS] RestrictByTrueTypeOfResultVisitor  [METHOD] caseStringType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P8_Replace_Mix]^return true;^404^^^^^403^405^return null;^[CLASS] RestrictByTrueTypeOfResultVisitor  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^421^^^^^420^422^return getNativeType ( NO_OBJECT_TYPE ) ;^[CLASS] RestrictByFalseTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^425^^^^^424^426^return getNativeType ( BOOLEAN_TYPE ) ;^[CLASS] RestrictByFalseTypeOfResultVisitor  [METHOD] caseBooleanType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^433^^^^^432^434^return getNativeType ( NULL_TYPE ) ;^[CLASS] RestrictByFalseTypeOfResultVisitor  [METHOD] caseNullType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^437^^^^^436^438^return getNativeType ( NUMBER_TYPE ) ;^[CLASS] RestrictByFalseTypeOfResultVisitor  [METHOD] caseNumberType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^445^^^^^444^446^return getNativeType ( STRING_TYPE ) ;^[CLASS] RestrictByFalseTypeOfResultVisitor  [METHOD] caseStringType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P14_Delete_Statement]^^449^^^^^448^450^return getNativeType ( VOID_TYPE ) ;^[CLASS] RestrictByFalseTypeOfResultVisitor  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P1_Replace_Type]^private final char value;^462^^^^^457^467^private final String value;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P8_Replace_Mix]^private  boolean resultEqualsValue;^469^^^^^464^474^private final boolean resultEqualsValue;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] boolean  
[P8_Replace_Mix]^this.value =  null;^472^^^^^471^474^this.value = value;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] <init> [RETURN_TYPE] String,boolean)   String value boolean resultEqualsValue [VARIABLES] boolean  resultEqualsValue  String  value  
[P8_Replace_Mix]^this.resultEqualsValue =  null;^473^^^^^471^474^this.resultEqualsValue = resultEqualsValue;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] <init> [RETURN_TYPE] String,boolean)   String value boolean resultEqualsValue [VARIABLES] boolean  resultEqualsValue  String  value  
[P2_Replace_Operator]^return result.equals ( value )  <= resultEqualsValue;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P5_Replace_Variable]^return value.equals ( result )  == resultEqualsValue;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P5_Replace_Variable]^return resultEqualsValue.equals ( value )  == result;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P8_Replace_Mix]^return result.equals ( value )   !=  resultEqualsValue;;^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P14_Delete_Statement]^^482^^^^^481^483^return result.equals ( value )  == resultEqualsValue;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] matchesExpectation [RETURN_TYPE] boolean   String result [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P5_Replace_Variable]^if  ( result.equals ( "number" )  )  {^488^^^^^486^501^if  ( value.equals ( "number" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "ooolean" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P5_Replace_Variable]^} else if  ( result.equals ( "boolean" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P6_Replace_Expression]^} else {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P9_Replace_Statement]^} else if  ( value.equals ( "undefined" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P9_Replace_Statement]^} else if  ( value.equals ( "string" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P9_Replace_Statement]^} else if  ( value.equals ( "function" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "strtring" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P5_Replace_Variable]^} else if  ( result.equals ( "string" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P6_Replace_Expression]^} else {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P8_Replace_Mix]^}  if  ( result.equals ( "string" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P9_Replace_Statement]^} else if  ( value.equals ( "undefined" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P9_Replace_Statement]^} else if  ( value.equals ( "boolean" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P9_Replace_Statement]^} else if  ( value.equals ( "function" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "unndefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P5_Replace_Variable]^} else if  ( result.equals ( "undefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P6_Replace_Expression]^} else {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P9_Replace_Statement]^} else if  ( value.equals ( "string" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P9_Replace_Statement]^} else if  ( value.equals ( "boolean" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P9_Replace_Statement]^} else if  ( value.equals ( "function" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P15_Unwrap_Block]^return getNativeType(com.google.javascript.rhino.jstype.JSTypeNative.VOID_TYPE);^494^495^496^497^498^486^501^} else if  ( value.equals ( "undefined" )  )  { return getNativeType ( VOID_TYPE ) ; } else if  ( value.equals ( "function" )  )  { return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P16_Remove_Block]^^494^495^496^497^498^486^501^} else if  ( value.equals ( "undefined" )  )  { return getNativeType ( VOID_TYPE ) ; } else if  ( value.equals ( "function" )  )  { return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P13_Insert_Block]^if  ( value.equals ( "string" )  )  {     return getNativeType ( STRING_TYPE ) ; }else     if  ( value.equals ( "undefined" )  )  {         return getNativeType ( VOID_TYPE ) ;     }else         if  ( value.equals ( "function" )  )  {             return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;         }^494^^^^^486^501^[Delete]^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "ctiounction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P6_Replace_Expression]^} else {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P8_Replace_Mix]^} else if  ( result.equals ( "function" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P9_Replace_Statement]^} else if  ( value.equals ( "undefined" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P9_Replace_Statement]^} else if  ( value.equals ( "string" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P9_Replace_Statement]^} else if  ( value.equals ( "boolean" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P15_Unwrap_Block]^return getNativeType(com.google.javascript.rhino.jstype.JSTypeNative.U2U_CONSTRUCTOR_TYPE);^496^497^498^^^486^501^} else if  ( value.equals ( "function" )  )  { return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P16_Remove_Block]^^496^497^498^^^486^501^} else if  ( value.equals ( "function" )  )  { return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P13_Insert_Block]^if  ( value.equals ( "function" )  )  {     return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^497^^^^^486^501^[Delete]^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P14_Delete_Statement]^^497^^^^^486^501^return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P13_Insert_Block]^if  ( value.equals ( "function" )  )  {     return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^495^^^^^486^501^[Delete]^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P14_Delete_Statement]^^495^^^^^486^501^return getNativeType ( VOID_TYPE ) ;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "o" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "un" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionfunct" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P13_Insert_Block]^if  ( value.equals ( "function" )  )  {     return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^493^^^^^486^501^[Delete]^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P14_Delete_Statement]^^493^^^^^486^501^return getNativeType ( STRING_TYPE ) ;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "inendefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P8_Replace_Mix]^}  if  ( result.equals ( "undefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "fun" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P8_Replace_Mix]^}  if  ( result.equals ( "function" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "functioni" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionfu" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "sttring" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefinedefin" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P13_Insert_Block]^if  ( value.equals ( "function" )  )  {     return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^491^^^^^486^501^[Delete]^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P14_Delete_Statement]^^491^^^^^486^501^return getNativeType ( BOOLEAN_TYPE ) ;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefinedde" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionctio" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "functio" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "efindefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "endefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "u" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "ncunction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "ctunction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "oole" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "s" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefineddef" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P13_Insert_Block]^if  ( value.equals ( "function" )  )  {     return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^489^^^^^486^501^[Delete]^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P14_Delete_Statement]^^489^^^^^486^501^return getNativeType ( NUMBER_TYPE ) ;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P8_Replace_Mix]^}  if  ( result.equals ( "boolean" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "t" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefinedund" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "tiunction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionf" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefinendefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "ncti" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefinedu" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "ctiunction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "nunction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "stringt" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefinede" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "uncti" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "strin" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "unction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "uunction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "dendefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "fu" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "fi" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "fuunction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionfunc" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "functiont" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^if  ( value.equals ( "numberbe" )  )  {^488^^^^^486^501^if  ( value.equals ( "number" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "eoolean" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "trintring" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "nd" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^if  ( value.equals ( "" )  )  {^488^^^^^486^501^if  ( value.equals ( "number" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "oolean" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "efndefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "functiunction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "def" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionfun" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "stringst" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefineddefin" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "str" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "u" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "functiono" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "ndendefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "unctiunction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P8_Replace_Mix]^}  if  ( value.equals ( "function" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionc" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "bo" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "stringtr" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "undndefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "ri" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefinedundefin" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "functionu" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "undefinedn" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "cunction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "f" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "st" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "nde" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "nctiounction" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "ti" )  )  {^496^^^^^486^501^} else if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "indefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "booleanol" )  )  {^490^^^^^486^501^} else if  ( value.equals ( "boolean" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "stringtrin" )  )  {^492^^^^^486^501^} else if  ( value.equals ( "string" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P3_Replace_Literal]^} else if  ( value.equals ( "definndefined" )  )  {^494^^^^^486^501^} else if  ( value.equals ( "undefined" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseTopType [RETURN_TYPE] JSType   JSType topType [VARIABLES] boolean  resultEqualsValue  String  result  value  JSType  topType  
[P2_Replace_Operator]^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  != resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P2_Replace_Operator]^return  ( value.equals ( "object" )  && value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P3_Replace_Literal]^return  ( value.equals ( "objebject" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P3_Replace_Literal]^return  ( value.equals ( "object" )  || value.equals ( "functi" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P5_Replace_Variable]^return  ( result.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P5_Replace_Variable]^return  ( resultEqualsValue.equals ( "object" )  || value.equals ( "function" )  )  == value ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P6_Replace_Expression]^return  ( value.equals ( "object" )  || value.equals ( null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P8_Replace_Mix]^return null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P3_Replace_Literal]^return  ( value.equals ( "bbject" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P14_Delete_Statement]^^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P3_Replace_Literal]^return  ( value.equals ( "object" )  || value.equals ( "fuunction" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^504^505^^^^503^506^return  ( value.equals ( "object" )  || value.equals ( "function" )  )  == resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P14_Delete_Statement]^^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P11_Insert_Donor_Statement]^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P11_Insert_Donor_Statement]^return getNativeType ( NUMBER_TYPE ) ;resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P11_Insert_Donor_Statement]^return getNativeType ( BOOLEAN_TYPE ) ;resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P11_Insert_Donor_Statement]^return matchesExpectation ( "boolean" )  ? getNativeType ( BOOLEAN_TYPE )  : null;resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P11_Insert_Donor_Statement]^return matchesExpectation ( "number" )  ? getNativeType ( NUMBER_TYPE )  : null;resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P11_Insert_Donor_Statement]^return getNativeType ( VOID_TYPE ) ;resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^505^^^^^503^506^resultEqualsValue ? getNativeType ( NO_OBJECT_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNoObjectType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "booleanl" )  ? getNativeType ( BOOLEAN_TYPE )  : null;^509^^^^^508^510^return matchesExpectation ( "boolean" )  ? getNativeType ( BOOLEAN_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseBooleanType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P7_Replace_Invocation]^return caseTopType ( "boolean" )  ? getNativeType ( BOOLEAN_TYPE )  : null;^509^^^^^508^510^return matchesExpectation ( "boolean" )  ? getNativeType ( BOOLEAN_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseBooleanType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P8_Replace_Mix]^return caseTopType ( "boolean" )  ? getNativeType ( BOOLEAN_TYPE )  : false;^509^^^^^508^510^return matchesExpectation ( "boolean" )  ? getNativeType ( BOOLEAN_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseBooleanType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "boo" )  ? getNativeType ( BOOLEAN_TYPE )  : null;^509^^^^^508^510^return matchesExpectation ( "boolean" )  ? getNativeType ( BOOLEAN_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseBooleanType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P14_Delete_Statement]^^509^^^^^508^510^return matchesExpectation ( "boolean" )  ? getNativeType ( BOOLEAN_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseBooleanType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "functi" )  ? type : null;^513^^^^^512^514^return matchesExpectation ( "function" )  ? type : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseFunctionType [RETURN_TYPE] JSType   FunctionType type [VARIABLES] boolean  resultEqualsValue  String  result  value  FunctionType  type  
[P7_Replace_Invocation]^return caseTopType ( "function" )  ? type : null;^513^^^^^512^514^return matchesExpectation ( "function" )  ? type : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseFunctionType [RETURN_TYPE] JSType   FunctionType type [VARIABLES] boolean  resultEqualsValue  String  result  value  FunctionType  type  
[P3_Replace_Literal]^return matchesExpectation ( "functionfunct" )  ? type : null;^513^^^^^512^514^return matchesExpectation ( "function" )  ? type : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseFunctionType [RETURN_TYPE] JSType   FunctionType type [VARIABLES] boolean  resultEqualsValue  String  result  value  FunctionType  type  
[P14_Delete_Statement]^^513^^^^^512^514^return matchesExpectation ( "function" )  ? type : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseFunctionType [RETURN_TYPE] JSType   FunctionType type [VARIABLES] boolean  resultEqualsValue  String  result  value  FunctionType  type  
[P7_Replace_Invocation]^return caseTopType ( "object" )  ? getNativeType ( NULL_TYPE )  : null;^517^^^^^516^518^return matchesExpectation ( "object" )  ? getNativeType ( NULL_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNullType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "objectob" )  ? getNativeType ( NULL_TYPE )  : null;^517^^^^^516^518^return matchesExpectation ( "object" )  ? getNativeType ( NULL_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNullType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P14_Delete_Statement]^^517^^^^^516^518^return matchesExpectation ( "object" )  ? getNativeType ( NULL_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNullType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "numbe" )  ? getNativeType ( NUMBER_TYPE )  : null;^521^^^^^520^522^return matchesExpectation ( "number" )  ? getNativeType ( NUMBER_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNumberType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P7_Replace_Invocation]^return caseTopType ( "number" )  ? getNativeType ( NUMBER_TYPE )  : null;^521^^^^^520^522^return matchesExpectation ( "number" )  ? getNativeType ( NUMBER_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNumberType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "nuumber" )  ? getNativeType ( NUMBER_TYPE )  : null;^521^^^^^520^522^return matchesExpectation ( "number" )  ? getNativeType ( NUMBER_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNumberType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P14_Delete_Statement]^^521^^^^^520^522^return matchesExpectation ( "number" )  ? getNativeType ( NUMBER_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseNumberType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P3_Replace_Literal]^if  ( value.equals ( "functionnct" )  )  {^525^^^^^524^530^if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P5_Replace_Variable]^if  ( result.equals ( "function" )  )  {^525^^^^^524^530^if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P15_Unwrap_Block]^com.google.javascript.rhino.jstype.JSType ctorType = getNativeType(com.google.javascript.rhino.jstype.JSTypeNative.U2U_CONSTRUCTOR_TYPE); return (resultEqualsValue) && (ctorType.isSubtype(type)) ? ctorType : null;^525^526^527^528^^524^530^if  ( value.equals ( "function" )  )  { JSType ctorType = getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null; }^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P16_Remove_Block]^^525^526^527^528^^524^530^if  ( value.equals ( "function" )  )  { JSType ctorType = getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null; }^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P2_Replace_Operator]^return resultEqualsValue || ctorType.isSubtype ( type )  ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P5_Replace_Variable]^return ctorType && resultEqualsValue.isSubtype ( type )  ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P5_Replace_Variable]^return type && ctorType.isSubtype ( resultEqualsValue )  ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P8_Replace_Mix]^return resultEqualsValue ;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P13_Insert_Block]^if  ( value.equals ( "function" )  )  {     return getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; }^526^^^^^524^530^[Delete]^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P13_Insert_Block]^if  ( value.equals ( "function" )  )  {     JSType ctorType = getNativeType ( U2U_CONSTRUCTOR_TYPE ) ;     return  ( resultEqualsValue )  &&  ( ctorType.isSubtype ( type )  )  ? ctorType : null; }^526^^^^^524^530^[Delete]^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P14_Delete_Statement]^^526^527^^^^524^530^JSType ctorType = getNativeType ( U2U_CONSTRUCTOR_TYPE ) ; return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P5_Replace_Variable]^return resultEqualsValue && type.isSubtype ( ctorType )  ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P14_Delete_Statement]^^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P8_Replace_Mix]^return   ctorType.isSubtype ( type )  ? ctorType : null;^527^^^^^524^530^return resultEqualsValue && ctorType.isSubtype ( type )  ? ctorType : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P3_Replace_Literal]^if  ( value.equals ( "functionu" )  )  {^525^^^^^524^530^if  ( value.equals ( "function" )  )  {^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P3_Replace_Literal]^return matchesExpectation ( "objectbje" )  ? type : null;^529^^^^^524^530^return matchesExpectation ( "object" )  ? type : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P7_Replace_Invocation]^return caseTopType ( "object" )  ? type : null;^529^^^^^524^530^return matchesExpectation ( "object" )  ? type : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P3_Replace_Literal]^return matchesExpectation ( "o" )  ? type : null;^529^^^^^524^530^return matchesExpectation ( "object" )  ? type : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P14_Delete_Statement]^^529^^^^^524^530^return matchesExpectation ( "object" )  ? type : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseObjectType [RETURN_TYPE] JSType   ObjectType type [VARIABLES] ObjectType  type  boolean  resultEqualsValue  String  result  value  JSType  ctorType  
[P3_Replace_Literal]^return matchesExpectation ( "stringtr" )  ? getNativeType ( STRING_TYPE )  : null;^533^^^^^532^534^return matchesExpectation ( "string" )  ? getNativeType ( STRING_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseStringType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P7_Replace_Invocation]^return caseTopType ( "string" )  ? getNativeType ( STRING_TYPE )  : null;^533^^^^^532^534^return matchesExpectation ( "string" )  ? getNativeType ( STRING_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseStringType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "" )  ? getNativeType ( STRING_TYPE )  : null;^533^^^^^532^534^return matchesExpectation ( "string" )  ? getNativeType ( STRING_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseStringType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P14_Delete_Statement]^^533^^^^^532^534^return matchesExpectation ( "string" )  ? getNativeType ( STRING_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseStringType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "undefinedndef" )  ? getNativeType ( VOID_TYPE )  : null;^537^^^^^536^538^return matchesExpectation ( "undefined" )  ? getNativeType ( VOID_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P7_Replace_Invocation]^return caseTopType ( "undefined" )  ? getNativeType ( VOID_TYPE )  : null;^537^^^^^536^538^return matchesExpectation ( "undefined" )  ? getNativeType ( VOID_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P8_Replace_Mix]^return caseTopType ( "undefined" )  ? getNativeType ( VOID_TYPE )  : false;^537^^^^^536^538^return matchesExpectation ( "undefined" )  ? getNativeType ( VOID_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P3_Replace_Literal]^return matchesExpectation ( "un" )  ? getNativeType ( VOID_TYPE )  : null;^537^^^^^536^538^return matchesExpectation ( "undefined" )  ? getNativeType ( VOID_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
[P14_Delete_Statement]^^537^^^^^536^538^return matchesExpectation ( "undefined" )  ? getNativeType ( VOID_TYPE )  : null;^[CLASS] RestrictByOneTypeOfResultVisitor  [METHOD] caseVoidType [RETURN_TYPE] JSType   [VARIABLES] boolean  resultEqualsValue  String  result  value  
