[P8_Replace_Mix]^private  final Logger logger = Logger.getLogger ( AliasStrings.class.getName (  )  ) ;^47^48^^^^47^48^private static final Logger logger = Logger.getLogger ( AliasStrings.class.getName (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P1_Replace_Type]^private static final char STRING_ALIAS_PREFIX = "$$S_";^51^^^^^46^56^private static final String STRING_ALIAS_PREFIX = "$$S_";^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P3_Replace_Literal]^private static final String STRING_ALIAS_PREFIX = "$S_";^51^^^^^46^56^private static final String STRING_ALIAS_PREFIX = "$$S_";^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P8_Replace_Mix]^private Matcher blacklist  = null ;^58^^^^^53^63^private Matcher blacklist = null;^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P8_Replace_Mix]^private final Map<String, StringInfo> stringInfoMap  = null ;^68^69^^^^68^69^private final Map<String, StringInfo> stringInfoMap = new LinkedHashMap<String, StringInfo> (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P8_Replace_Mix]^private  Set<String> usedHashedAliases = new LinkedHashSet<String> (  ) ;^71^^^^^66^76^private final Set<String> usedHashedAliases = new LinkedHashSet<String> (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P8_Replace_Mix]^private final Map<JSModule, Node> moduleVarParentMap ;^77^78^^^^77^78^private final Map<JSModule, Node> moduleVarParentMap = new HashMap<JSModule, Node> (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P1_Replace_Type]^short  unitTestHashReductionMask = ~0L;^82^^^^^77^87^long unitTestHashReductionMask = ~0L;^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P8_Replace_Mix]^long unitTestHashReductionMask = ~0;^82^^^^^77^87^long unitTestHashReductionMask = ~0L;^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P8_Replace_Mix]^Node node;^363^^^^^358^368^final Node node;^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P8_Replace_Mix]^Node parent;^364^^^^^359^369^final Node parent;^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P1_Replace_Type]^final  short  id;^377^^^^^372^382^final int id;^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P1_Replace_Type]^short  numOccurrences;^382^^^^^377^387^int numOccurrences;^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P8_Replace_Mix]^long  numOccurrences;^382^^^^^377^387^int numOccurrences;^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P12_Insert_Condition]^if  ( info.numOccurrences > info.numOccurrencesInfrequentlyExecuted )  { int numOccurrences; int numOccurrencesInfrequentlyExecuted; }^382^383^^^^377^387^int numOccurrences; int numOccurrencesInfrequentlyExecuted;^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P1_Replace_Type]^short  numOccurrencesInfrequentlyExecuted;^383^^^^^378^388^int numOccurrencesInfrequentlyExecuted;^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P8_Replace_Mix]^long  numOccurrencesInfrequentlyExecuted;^383^^^^^378^388^int numOccurrencesInfrequentlyExecuted;^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P12_Insert_Condition]^if  ( info.numOccurrences > info.numOccurrencesInfrequentlyExecuted )  { int numOccurrencesInfrequentlyExecuted; }^383^^^^^378^388^int numOccurrencesInfrequentlyExecuted;^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P12_Insert_Condition]^if  ( info.siblingToInsertVarDeclBefore == null )  { Node siblingToInsertVarDeclBefore; }^387^^^^^382^392^Node siblingToInsertVarDeclBefore;^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P1_Replace_Type]^char aliasName;^389^^^^^384^394^String aliasName;^[CLASS] AliasStrings StringOccurrence StringInfo   [VARIABLES] 
[P8_Replace_Mix]^this.compiler =  null;^100^^^^^95^109^this.compiler = compiler;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^this.node = node;this.compiler = compiler;^100^^^^^95^109^this.compiler = compiler;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^this.moduleGraph =  null;^101^^^^^95^109^this.moduleGraph = moduleGraph;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^this.aliasableStrings =  null;^102^^^^^95^109^this.aliasableStrings = strings;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( blacklistRegex.length (  )  >= 0 )  {^103^^^^^95^109^if  ( blacklistRegex.length (  )  != 0 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^if  ( blacklistRegex.length (  )  != -4 )  {^103^^^^^95^109^if  ( blacklistRegex.length (  )  != 0 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^if  ( blacklistRegex.length() - 7  != 0 )  {^103^^^^^95^109^if  ( blacklistRegex.length (  )  != 0 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( aliasName.length (  )  != 0 )  {^103^^^^^95^109^if  ( blacklistRegex.length (  )  != 0 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^if  ( blacklistRegex.charAt (  )  != 0 )  {^103^^^^^95^109^if  ( blacklistRegex.length (  )  != 0 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^if  ( blacklistRegex .getBytes (  )   != 0 )  {^103^^^^^95^109^if  ( blacklistRegex.length (  )  != 0 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( blacklistRegex.length (  )  != 0  )  {^103^^^^^95^109^if  ( blacklistRegex.length (  )  != 0 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^this.blacklist = java.util.regex.Pattern.compile(blacklistRegex).matcher("");^103^104^105^106^107^95^109^if  ( blacklistRegex.length (  )  != 0 )  { this.blacklist = Pattern.compile ( blacklistRegex ) .matcher ( "" ) ; } else { this.blacklist = null; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^103^104^105^106^107^95^109^if  ( blacklistRegex.length (  )  != 0 )  { this.blacklist = Pattern.compile ( blacklistRegex ) .matcher ( "" ) ; } else { this.blacklist = null; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^this.blacklist = false;^106^^^^^95^109^this.blacklist = null;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^this.isAliased = false;this.blacklist = null;^106^^^^^95^109^this.blacklist = null;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^this.blacklist = Pattern.compile ( aliasName ) .matcher ( "" ) ;^104^^^^^95^109^this.blacklist = Pattern.compile ( blacklistRegex ) .matcher ( "" ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^this.blacklist = Pattern.matcher ( blacklistRegex ) .matcher ( "" ) ;^104^^^^^95^109^this.blacklist = Pattern.compile ( blacklistRegex ) .matcher ( "" ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^this.blacklist = Pattern.matcher ( aliasName ) .matcher ( "" ) ;^104^^^^^95^109^this.blacklist = Pattern.compile ( blacklistRegex ) .matcher ( "" ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^104^^^^^95^109^this.blacklist = Pattern.compile ( blacklistRegex ) .matcher ( "" ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^this.blacklist =  Pattern.compile ( null ) .matcher ( "" ) ;^104^^^^^95^109^this.blacklist = Pattern.compile ( blacklistRegex ) .matcher ( "" ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^if  ( blacklistRegex.length() + 0  != 0 )  {^103^^^^^95^109^if  ( blacklistRegex.length (  )  != 0 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^this.outputStringUsage = isAliased;^108^^^^^95^109^this.outputStringUsage = outputStringUsage;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] String,boolean)   AbstractCompiler compiler JSModuleGraph moduleGraph String> strings String blacklistRegex boolean outputStringUsage [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^this.node = siblingToInsertVarDeclBefore;^367^^^^^366^369^this.node = node;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] Node)   Node node Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^this.compiler = compiler;this.node = node;^367^^^^^366^369^this.node = node;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] Node)   Node node Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^this.id = id;this.node = node;^367^^^^^366^369^this.node = node;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] Node)   Node node Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^this.parent = parent;this.node = node;^367^^^^^366^369^this.node = node;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] Node)   Node node Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^this.parent = siblingToInsertVarDeclBefore;^368^^^^^366^369^this.parent = parent;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] Node)   Node node Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^this.node = node;this.parent = parent;^368^^^^^366^369^this.parent = parent;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] Node)   Node node Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^this.id = numOccurrencesInfrequentlyExecuted;^392^^^^^391^395^this.id = id;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] AliasStrings$StringInfo(int)   int id [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^this.node = node;this.id = id;^392^^^^^391^395^this.id = id;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] AliasStrings$StringInfo(int)   int id [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^this.occurrences  =  this.occurrences ;^393^^^^^391^395^this.occurrences = new ArrayList<StringOccurrence> (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] AliasStrings$StringInfo(int)   int id [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P1_Replace_Type]^this.occurrences = new  LinkedList <StringOccurrence> (  ) ;^393^^^^^391^395^this.occurrences = new ArrayList<StringOccurrence> (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] AliasStrings$StringInfo(int)   int id [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^this.isAliased = true;^394^^^^^391^395^this.isAliased = false;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] AliasStrings$StringInfo(int)   int id [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^this.blacklist = null;this.isAliased = false;^394^^^^^391^395^this.isAliased = false;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] AliasStrings$StringInfo(int)   int id [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^info.isAliased = true;this.isAliased = false;^394^^^^^391^395^this.isAliased = false;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] <init> [RETURN_TYPE] AliasStrings$StringInfo(int)   int id [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  node  parent  parentForNewVarDecl  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^logger.info ( "Aliasing common stringsng c" ) ;^115^^^^^114^129^logger.info ( "Aliasing common strings" ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^logger .getLogger ( aliasName )  ;^115^^^^^114^129^logger.info ( "Aliasing common strings" ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^115^^^^^114^129^logger.info ( "Aliasing common strings" ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^logger.info ( sb.toString (  )  ) ;logger.info ( "Aliasing common strings" ) ;^115^^^^^114^129^logger.info ( "Aliasing common strings" ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler, siblingToInsertVarDeclBefore, this ) ;^118^^^^^114^129^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler,  this ) ;^118^^^^^114^129^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^NodeTraversal.traverse (  root, this ) ;^118^^^^^114^129^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^NodeTraversal.traverse ( root, compiler, this ) ;^118^^^^^114^129^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^NodeTraversal.traverse ( compiler, parentForNewVarDecl, this ) ;^118^^^^^114^129^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^118^^^^^114^129^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^outputStringUsage (  ) ;^121^^^^^114^129^replaceStringsWithAliases (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^121^^^^^114^129^replaceStringsWithAliases (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^replaceStringsWithAliases (  ) ;^124^^^^^114^129^addAliasDeclarationNodes (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^124^^^^^114^129^addAliasDeclarationNodes (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( isAliased )  {^126^^^^^114^129^if  ( outputStringUsage )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^if  ( replaceStringsWithAliases )  {^126^^^^^114^129^if  ( outputStringUsage )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^outputStringUsage();^126^127^128^^^114^129^if  ( outputStringUsage )  { outputStringUsage (  ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^126^127^128^^^114^129^if  ( outputStringUsage )  { outputStringUsage (  ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^replaceStringsWithAliases (  ) ;^127^^^^^114^129^outputStringUsage (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^127^^^^^114^129^outputStringUsage (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P12_Insert_Condition]^if  ( outputStringUsage )  { outputStringUsage (  ) ; }^127^^^^^114^129^outputStringUsage (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  externs  node  parent  parentForNewVarDecl  root  siblingToInsertVarDeclBefore  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( n.getType (  )  == Token.STRING || parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( n.getType (  )  >= Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  >= Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  == Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( n.getType (  )  != Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  > Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( n.getType (  )  <= Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P4_Replace_Constructor]^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey (  parent )  )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P4_Replace_Constructor]^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n )  )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( n.getType (  )  == Token.STRING && siblingToInsertVarDeclBefore.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.3 && !NodeUtil.isObjectLitKey ( n, parent )  )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.STRING && n.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( n.getType (  )  == Token.STRING ) {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  (  parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ((n.getType() == STRING) && (parent.getType() != GETPROP) && parent.getType() != REGEXP) )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( (n.getType() == STRING && parent.getType() != GETPROP) )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( n.getType (  )  == STRING )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( parent.getType (  )  != GETPROP )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( parent.getType (  )  != REGEXP )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( blacklist != null && find() )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( blacklist != null )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( aliasableStrings == null || aliasableStrings.contains(str) )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( aliasableStrings == null )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( t.inGlobalScope() || isInThrowExpression(n) )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( info.numOccurrences == 1 )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ancestor.getType() == SCRIPT )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ((module != null) && (info.moduleToContainDecl != null)) && (module != info.moduleToContainDecl) && !(moduleGraph.dependsOn(module, info.moduleToContainDecl)) )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ((module != null) && (info.moduleToContainDecl != null) && module != info.moduleToContainDecl) )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( (module != null && info.moduleToContainDecl != null) )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( module != null )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( info.moduleToContainDecl != null )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( module != info.moduleToContainDecl )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( varParent == null )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^if  ( n.newString (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^if  ( n .getString (  )   == Token.STRING && parent^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( varParent.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( "undefined".equals ( blacklistRegex )  )  {^145^^^^^130^160^if  ( "undefined".equals ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^if  ( "undefined" .getBytes (  )   )  {^145^^^^^130^160^if  ( "undefined".equals ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^return ;^145^146^147^^^130^160^if  ( "undefined".equals ( str )  )  { return; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^145^146^147^^^130^160^if  ( "undefined".equals ( str )  )  { return; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( blacklist != null || blacklist.reset ( str ) .find (  )  )  {^149^^^^^134^164^if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( blacklist == null && blacklist.reset ( str ) .find (  )  )  {^149^^^^^134^164^if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( blacklist != null && blacklist.reset ( blacklistRegex ) .find (  )  )  {^149^^^^^134^164^if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( str != null && blacklist.reset ( blacklist ) .find (  )  )  {^149^^^^^134^164^if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( blacklist != null ) {^149^^^^^134^164^if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  (  blacklist.reset ( str ) .find (  )  )  {^149^^^^^134^164^if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^if  ( blacklist != null && blacklist.reset ( str ) .reset (  )  )  {^149^^^^^134^164^if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( blacklist != this && blacklist.reset ( blacklistRegex ) .find (  )  )  {^149^^^^^134^164^if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^return ;^149^150^151^^^134^164^if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  { return; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^149^150^151^^^134^164^if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  { return; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( aliasableStrings == null && aliasableStrings.contains ( str )  )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( aliasableStrings != null || aliasableStrings.contains ( str )  )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( aliasableStrings == null || aliasableStrings.contains ( blacklistRegex )  )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( aliasableStrings == prevull || aliasableStrings.contains ( str )  )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( aliasableStrings == null ) {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  (  aliasableStrings.contains ( str )  )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( t.inGlobalScope() || isInThrowExpression(n) )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( info.numOccurrences == 1 )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ancestor.getType() == SCRIPT )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ((module != null) && (info.moduleToContainDecl != null)) && (module != info.moduleToContainDecl) && !(moduleGraph.dependsOn(module, info.moduleToContainDecl)) )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ((module != null) && (info.moduleToContainDecl != null) && module != info.moduleToContainDecl) )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( (module != null && info.moduleToContainDecl != null) )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( module != null )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( info.moduleToContainDecl != null )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( module != info.moduleToContainDecl )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( varParent == null )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^if  ( aliasableStrings == null || aliasableStrings.add ( str )  )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( aliasableStrings == true || aliasableStrings.add ( str )  )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( t.inGlobalScope (  )  && isInThrowExpression ( n )  )  {^160^^^^^145^175^if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( t.inGlobalScope (  )  || isInThrowExpression ( varParent )  )  {^160^^^^^145^175^if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( t.inGlobalScope (  )  ) {^160^^^^^145^175^if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  (  isInThrowExpression ( n )  )  {^160^^^^^145^175^if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^if  ( t.inGlobalScope (  )  || getOrCreateStringInfo ( n )  )  {^160^^^^^145^175^if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( t.inGlobalScope (  )  || isInThrowExpression ( root )  )  {^160^^^^^145^175^if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^(info.numOccurrencesInfrequentlyExecuted)++;^160^161^162^^^145^175^if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  { info.numOccurrencesInfrequentlyExecuted++; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^160^161^162^^^145^175^if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  { info.numOccurrencesInfrequentlyExecuted++; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( info.numOccurrences != 1 )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^if  ( info.numOccurrences == -4 )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( numOccurrencesInfrequentlyExecuted == 1 )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ancestor.getType() == SCRIPT )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ((module != null) && (info.moduleToContainDecl != null)) && (module != info.moduleToContainDecl) && !(moduleGraph.dependsOn(module, info.moduleToContainDecl)) )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ((module != null) && (info.moduleToContainDecl != null) && module != info.moduleToContainDecl) )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( (module != null && info.moduleToContainDecl != null) )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( module != null )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( info.moduleToContainDecl != null )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( module != info.moduleToContainDecl )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( varParent == null )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( info.numOccurrences == 1 % 3 )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P9_Replace_Statement]^if  ( info.numOccurrences > 1 )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( module != null || info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( module == null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( module != null && info.moduleToContainDecl == null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( module != null && info.moduleToContainDecl != null && module == info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( module != null && moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn (  info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( info.moduleToContainDecl != null && module != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( info != null && module.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( module != null ) {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  (  info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ((module != null) && (info.moduleToContainDecl != null) && module != info.moduleToContainDecl) )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( (module != null && info.moduleToContainDecl != null) )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( info.moduleToContainDecl != null )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( module != info.moduleToContainDecl )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( varParent == null )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  (  info.moduleToContainDecl != this && module != info.moduleToContainDecl && !moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( varParent != null )  {^194^^^^^185^201^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( parentForNewVarDecl == null )  {^194^^^^^185^201^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( varParent == false )  {^194^^^^^185^201^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P9_Replace_Statement]^if  ( info == null )  {^194^^^^^185^201^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P9_Replace_Statement]^if  ( aliasName == null )  {^194^^^^^185^201^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^varParent = compiler.getNodeForCodeInsertion(module); moduleVarParentMap.put(module, varParent);^194^195^196^197^^185^201^if  ( varParent == null )  { varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^194^195^196^197^^185^201^if  ( varParent == null )  { varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^varParent = compiler.getNodeForCodeInsertion ( moduleToContainDecl ) ;^195^^^^^185^201^varParent = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^varParent = module.getNodeForCodeInsertion ( compiler ) ;^195^^^^^185^201^varParent = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^195^196^^^^185^201^varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^moduleVarParentMap.put ( moduleToContainDecl, varParent ) ;^196^^^^^185^201^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^moduleVarParentMap.put ( module, prev ) ;^196^^^^^185^201^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^moduleVarParentMap.put (  varParent ) ;^196^^^^^185^201^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^moduleVarParentMap.put ( module ) ;^196^^^^^185^201^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^moduleVarParentMap.put ( varParent, module ) ;^196^^^^^185^201^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^196^^^^^185^201^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = moduleToContainDeclGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = moduleGraph.getDeepestCommonDependency ( module, moduleToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = moduleGraph.getDeepestCommonDependency (  info.moduleToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = moduleGraph.getDeepestCommonDependency ( module.moduleToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = moduleGraph.getDeepestCommonDependency ( module ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = infoGraph.getDeepestCommonDependency ( module, module.moduleToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = info.getDeepestCommonDependency ( module, moduleGraph.moduleToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = info.moduleToContainDecl.getDeepestCommonDependency ( module, moduleGraph ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^module = moduleGraph.dependsOn ( module, info.moduleToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^module =  moduleToContainDeclGraph.getDeepestCommonDependency ( moduleToContainDecl, info.moduleToContainDeclToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.moduleToContainDecl = moduleToContainDecl;^198^^^^^185^201^info.moduleToContainDecl = module;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.moduleToContainDecl =  module;^198^^^^^185^201^info.moduleToContainDecl = module;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^info.moduleToContainDecl = t.getModule (  ) ;info.moduleToContainDecl = module;^198^^^^^185^201^info.moduleToContainDecl = module;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl = prev;^199^^^^^185^201^info.parentForNewVarDecl = varParent;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.parentForNewVarDecl =  varParent;^199^^^^^185^201^info.parentForNewVarDecl = varParent;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^info.parentForNewVarDecl = ancestor;info.parentForNewVarDecl = varParent;^199^^^^^185^201^info.parentForNewVarDecl = varParent;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.siblingToInsertVarDeclBefore = parentForNewVarDecl.getFirstChild (  ) ;^200^^^^^185^201^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^info.siblingToInsertVarDeclBefore = varParent.newString (  ) ;^200^^^^^185^201^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.siblingToInsertVarDeclBefore =  varParent.getFirstChild (  ) ;^200^^^^^185^201^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^info.siblingToInsertVarDeclBefore = prev;info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^200^^^^^185^201^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P12_Insert_Condition]^if  ( info.siblingToInsertVarDeclBefore == null )  { info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ; }^200^^^^^185^201^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^Node varParent = moduleToContainDeclVarParentMap.get ( module ) ;^193^^^^^185^201^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^Node varParent = moduleVarParentMapVarParentMap.get ( module ) ;^193^^^^^185^201^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^Node varParent = module.get ( moduleVarParentMap ) ;^193^^^^^185^201^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = info.moduleToContainDeclGraph.getDeepestCommonDependency ( module, module ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl.moduleToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^module = moduleGraph .dependsOn ( module , moduleToContainDecl )  ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^module = moduleToContainDeclGraph.dependsOn ( module, info.moduleToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^193^^^^^185^201^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^varParent = compiler .reportCodeChange (  )  ;^195^^^^^185^201^varParent = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^195^^^^^185^201^varParent = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^moduleVarParentMap.put ( module, siblingToInsertVarDeclBefore ) ;^196^^^^^185^201^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.siblingToInsertVarDeclBefore = prev.getFirstChild (  ) ;^200^^^^^185^201^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^info.siblingToInsertVarDeclBefore = varParent .getString (  )  ;^200^^^^^185^201^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.siblingToInsertVarDeclBefore = siblingToInsertVarDeclBefore.getFirstChild (  ) ;^200^^^^^185^201^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^200^201^^^^185^201^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( varParent != null )  {^194^^^^^179^209^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( siblingToInsertVarDeclBefore == null )  {^194^^^^^179^209^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( varParent == true )  {^194^^^^^179^209^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P9_Replace_Statement]^if  ( info == null )  {^194^^^^^179^209^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P9_Replace_Statement]^if  ( aliasName == null )  {^194^^^^^179^209^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^varParent = compiler.getNodeForCodeInsertion(module); moduleVarParentMap.put(module, varParent);^194^195^196^197^^179^209^if  ( varParent == null )  { varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^194^195^196^197^^179^209^if  ( varParent == null )  { varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^varParent = compiler.getNodeForCodeInsertion ( moduleToContainDecl ) ;^195^^^^^180^210^varParent = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^varParent = module.getNodeForCodeInsertion ( compiler ) ;^195^^^^^180^210^varParent = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^195^^^^^180^210^varParent = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^moduleVarParentMap.put ( moduleToContainDecl, varParent ) ;^196^^^^^181^211^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^moduleVarParentMap.put ( module, parentForNewVarDecl ) ;^196^^^^^181^211^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^moduleVarParentMap.put (  varParent ) ;^196^^^^^181^211^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^moduleVarParentMap.put ( module ) ;^196^^^^^181^211^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^moduleVarParentMap.put ( varParent, module ) ;^196^^^^^181^211^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^moduleVarParentMap .get ( moduleToContainDecl )  ;^196^^^^^181^211^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^196^^^^^181^211^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = moduleToContainDeclGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = moduleGraph.getDeepestCommonDependency ( module, moduleToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = moduleGraph.getDeepestCommonDependency (  info.moduleToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = moduleGraph.getDeepestCommonDependency ( module.moduleToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = moduleGraph.getDeepestCommonDependency ( module ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = info.moduleToContainDeclGraph.getDeepestCommonDependency ( module, module ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = info.getDeepestCommonDependency ( module, moduleGraph.moduleToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = moduleGraph.getDeepestCommonDependency ( module, info ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^module = moduleGraph.dependsOn ( module, info.moduleToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^module =  moduleToContainDeclGraph.getDeepestCommonDependency ( moduleToContainDecl, info.moduleToContainDeclToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.moduleToContainDecl = moduleToContainDecl;^198^^^^^183^213^info.moduleToContainDecl = module;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.moduleToContainDecl =  module;^198^^^^^183^213^info.moduleToContainDecl = module;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^info.moduleToContainDecl = t.getModule (  ) ;info.moduleToContainDecl = module;^198^^^^^183^213^info.moduleToContainDecl = module;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl = root;^199^^^^^184^214^info.parentForNewVarDecl = varParent;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.parentForNewVarDecl =  varParent;^199^^^^^184^214^info.parentForNewVarDecl = varParent;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^info.parentForNewVarDecl = ancestor;info.parentForNewVarDecl = varParent;^199^^^^^184^214^info.parentForNewVarDecl = varParent;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.siblingToInsertVarDeclBefore = parentForNewVarDecl.getFirstChild (  ) ;^200^^^^^185^215^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^info.siblingToInsertVarDeclBefore = varParent.newString (  ) ;^200^^^^^185^215^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^info.siblingToInsertVarDeclBefore = varParent .getString (  )  ;^200^^^^^185^215^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.siblingToInsertVarDeclBefore =  varParent.getFirstChild (  ) ;^200^^^^^185^215^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^info.siblingToInsertVarDeclBefore = prev;info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^200^^^^^185^215^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P12_Insert_Condition]^if  ( info.siblingToInsertVarDeclBefore == null )  { info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ; }^200^^^^^185^215^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^Node varParent = moduleToContainDeclVarParentMap.get ( module ) ;^193^^^^^178^208^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^Node varParent = moduleVarParentMapVarParentMap.get ( module ) ;^193^^^^^178^208^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^Node varParent = module.get ( moduleVarParentMap ) ;^193^^^^^178^208^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^Node varParent = moduleVarParentMap .put ( module , root )  ;^193^^^^^178^208^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^JSModule module = t .inGlobalScope (  )  ;^184^^^^^169^199^JSModule module = t.getModule (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^184^^^^^169^199^JSModule module = t.getModule (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^info.moduleToContainDecl = t.getModule (  ) ;JSModule module = t.getModule (  ) ;^184^^^^^169^199^JSModule module = t.getModule (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^!moduleGraph.dependsOn ( moduleToContainDecl, info.moduleToContainDecl )  )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^!moduleGraph.dependsOn ( module, moduleToContainDecl )  )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^!moduleGraph.dependsOn (  info.moduleToContainDecl )  )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^!moduleGraph.dependsOn ( module.moduleToContainDecl )  )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^!moduleGraph.dependsOn ( module )  )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^!moduleGraph.dependsOn ( module, info.moduleToContainDecl.moduleToContainDecl )  )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^!moduleGraph.dependsOn ( info.moduleToContainDecl, module )  )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^!moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl )  )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^!moduleGraph .getDeepestCommonDependency ( module , module )   )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl.moduleToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = module.getDeepestCommonDependency ( moduleGraph, info.moduleToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^193^^^^^178^208^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^varParent = compiler .reportCodeChange (  )  ;^195^^^^^180^210^varParent = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^195^196^^^^180^210^varParent = compiler.getNodeForCodeInsertion ( module ) ; moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.siblingToInsertVarDeclBefore = siblingToInsertVarDeclBefore.getFirstChild (  ) ;^200^^^^^185^215^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^200^201^^^^185^215^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( ancestor.getType (  )  != Token.SCRIPT )  {^173^^^^^158^188^if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( siblingToInsertVarDeclBefore.getType (  )  == Token.SCRIPT )  {^173^^^^^158^188^if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( ancestor.getType (  )  == Token.0 )  {^173^^^^^158^188^if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^if  ( ancestor.newString (  )  == Token.SCRIPT )  {^173^^^^^158^188^if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( varParent.getType (  )  == Token.SCRIPT )  {^173^^^^^158^188^if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^info.parentForNewVarDecl = ancestor; info.siblingToInsertVarDeclBefore = prev; break;^173^174^175^176^177^158^188^if  ( ancestor.getType (  )  == Token.SCRIPT )  { info.parentForNewVarDecl = ancestor; info.siblingToInsertVarDeclBefore = prev; break; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^173^174^175^176^177^158^188^if  ( ancestor.getType (  )  == Token.SCRIPT )  { info.parentForNewVarDecl = ancestor; info.siblingToInsertVarDeclBefore = prev; break; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl = varParent;^174^^^^^159^189^info.parentForNewVarDecl = ancestor;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.parentForNewVarDecl =  ancestor;^174^^^^^159^189^info.parentForNewVarDecl = ancestor;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^info.parentForNewVarDecl = varParent;info.parentForNewVarDecl = ancestor;^174^^^^^159^189^info.parentForNewVarDecl = ancestor;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.siblingToInsertVarDeclBefore = root;^175^^^^^160^190^info.siblingToInsertVarDeclBefore = prev;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.siblingToInsertVarDeclBefore =  prev;^175^^^^^160^190^info.siblingToInsertVarDeclBefore = prev;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;info.siblingToInsertVarDeclBefore = prev;^175^^^^^160^190^info.siblingToInsertVarDeclBefore = prev;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P12_Insert_Condition]^if  ( info.siblingToInsertVarDeclBefore == null )  { info.siblingToInsertVarDeclBefore = prev; }^175^^^^^160^190^info.siblingToInsertVarDeclBefore = prev;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.moduleToContainDecl =  t.getModule (  ) ;^166^^^^^151^181^info.moduleToContainDecl = t.getModule (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^info.moduleToContainDecl = module;info.moduleToContainDecl = t.getModule (  ) ;^166^^^^^151^181^info.moduleToContainDecl = t.getModule (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P12_Insert_Condition]^if  ( info.siblingToInsertVarDeclBefore == null )  { info.siblingToInsertVarDeclBefore = prev; break; }^175^176^^^^160^190^info.siblingToInsertVarDeclBefore = prev; break;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^prev =  varParent;^178^^^^^163^193^prev = ancestor;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^Node prev = varParent;^171^^^^^156^186^Node prev = n;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^Node prev = siblingToInsertVarDeclBefore;^171^^^^^156^186^Node prev = n;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^166^^^^^151^181^info.moduleToContainDecl = t.getModule (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^JSModule module = t.getModule (  ) ;info.moduleToContainDecl = t.getModule (  ) ;^166^^^^^151^181^info.moduleToContainDecl = t.getModule (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^for  ( Node ancestor : siblingToInsertVarDeclBefore.getAncestors (  )  )  {^172^^^^^157^187^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^for  ( Node ancestor : n.newString (  )  )  {^172^^^^^157^187^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^for  ( Node ancestor : n .getType (  )   )  {^172^^^^^157^187^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^for  ( Node ancestor : varParent.getAncestors (  )  )  {^172^^^^^157^187^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^172^173^174^175^176^157^187^for  ( Node ancestor : n.getAncestors (  )  )  { if  ( ancestor.getType (  )  == Token.SCRIPT )  { info.parentForNewVarDecl = ancestor; info.siblingToInsertVarDeclBefore = prev; break; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( root.getType (  )  == Token.SCRIPT )  {^173^^^^^158^188^if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( varParent.newString (  )  == Token.SCRIPT )  {^173^^^^^158^188^if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( ancestor.getType (  )  <= Token.SCRIPT )  {^173^^^^^158^188^if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^if  ( ancestor .getString (  )   == Token.SCRIPT )  {^173^^^^^158^188^if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl = prev;^174^^^^^159^189^info.parentForNewVarDecl = ancestor;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( moduleToContainDecl != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( module != false && info.moduleToContainDecl != false && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( root == null )  {^194^^^^^185^201^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^varParent =  compiler.getNodeForCodeInsertion ( null ) ;^195^^^^^185^201^varParent = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl = parentForNewVarDecl;^199^^^^^185^201^info.parentForNewVarDecl = varParent;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.siblingToInsertVarDeclBefore = root.newString (  ) ;^200^^^^^185^201^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( prev == null )  {^194^^^^^179^209^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^varParent =  compiler.getNodeForCodeInsertion ( null ) ;^195^^^^^180^210^varParent = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^prev = prev;^178^^^^^163^193^prev = ancestor;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = infoGraph.getDeepestCommonDependency ( module, module.moduleToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = info.moduleToContainDecl.getDeepestCommonDependency ( module, moduleGraph ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl = siblingToInsertVarDeclBefore;^199^^^^^184^214^info.parentForNewVarDecl = varParent;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.siblingToInsertVarDeclBefore = prev.getFirstChild (  ) ;^200^^^^^185^215^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P4_Replace_Constructor]^StringOccurrence occurrence = new StringInfo ( stringInfoMap.size (  )  )  ;^154^^^^^139^169^StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P4_Replace_Constructor]^StringOccurrence occurrence = new StringOccurrence (  parent ) ;^154^^^^^139^169^StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P4_Replace_Constructor]^StringOccurrence occurrence = new StringOccurrence ( n ) ;^154^^^^^139^169^StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^StringOccurrence occurrence = varParentew StringOccurrence ( n, parent ) ;^154^^^^^139^169^StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^StringOccurrence occurrence = new StringOccurrence ( n, root ) ;^154^^^^^139^169^StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^StringOccurrence occurrence = parentew StringOccurrence ( n, n ) ;^154^^^^^139^169^StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^StringOccurrence occurrence = prevew StringOccurrence ( n, parent ) ;^154^^^^^139^169^StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^StringInfo info = getOrCreateStringInfo ( blacklistRegex ) ;^155^^^^^140^170^StringInfo info = getOrCreateStringInfo ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^StringInfo info = isInThrowExpression ( str ) ;^155^^^^^140^170^StringInfo info = getOrCreateStringInfo ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^StringInfo info = isInThrowExpression ( blacklistRegex ) ;^155^^^^^140^170^StringInfo info = getOrCreateStringInfo ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = entry.getValue (  ) ;StringInfo info = getOrCreateStringInfo ( str ) ;^155^^^^^140^170^StringInfo info = getOrCreateStringInfo ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = stringInfoMap.get ( str ) ;StringInfo info = getOrCreateStringInfo ( str ) ;^155^^^^^140^170^StringInfo info = getOrCreateStringInfo ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = stringInfoMap.get ( string ) ;StringInfo info = getOrCreateStringInfo ( str ) ;^155^^^^^140^170^StringInfo info = getOrCreateStringInfo ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^String str = n.getString (  ) ;StringInfo info = getOrCreateStringInfo ( str ) ;^155^^^^^140^170^StringInfo info = getOrCreateStringInfo ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^155^^^^^140^170^StringInfo info = getOrCreateStringInfo ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^157^158^^^^142^172^info.occurrences.add ( occurrence ) ; info.numOccurrences++;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( t.inGlobalScope (  )  || isInThrowExpression ( prev )  )  {^160^^^^^145^175^if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.moduleToContainDecl = t .inGlobalScope (  )  ;^166^^^^^151^181^info.moduleToContainDecl = t.getModule (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^for  ( Node ancestor : varParent .getType (  )   )  {^172^^^^^157^187^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( siblingToInsertVarDeclBefore .getString (  )   == Token.SCRIPT )  {^173^^^^^158^188^if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^Node varParent = moduleVarParentMap .put ( module , externs )  ;^193^^^^^178^208^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^moduleVarParentMap .get ( module )  ;^196^^^^^181^211^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( n.inGlobalScope (  )  || isInThrowExpression ( t )  )  {^160^^^^^145^175^if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^if  ( t .getModule (  )   || isInThrowExpression ( n )  )  {^160^^^^^145^175^if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^if  ( info.numOccurrences == -2 )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( info == 1 )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( numOccurrencesInfrequentlyExecuted == 2 )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( module != this ) {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( siblingToInsertVarDeclBefore == null )  {^194^^^^^185^201^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( varParent == true )  {^194^^^^^185^201^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = module.getDeepestCommonDependency ( moduleGraph, info.moduleToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^Node varParent = moduleVarParentMap .put ( moduleToContainDecl , root )  ;^193^^^^^185^201^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^module = moduleToContainDeclGraph .dependsOn ( moduleToContainDecl , moduleToContainDecl )  ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^Node varParent = 3.get ( module ) ;^193^^^^^185^201^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^Node varParent = this.get ( module ) ;^193^^^^^185^201^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^moduleVarParentMap .get ( moduleToContainDecl )  ;^196^^^^^185^201^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( varParent == false )  {^194^^^^^179^209^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl = parentForNewVarDecl;^199^^^^^184^214^info.parentForNewVarDecl = varParent;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.siblingToInsertVarDeclBefore = root.getFirstChild (  ) ;^200^^^^^185^215^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^!moduleGraph .getDeepestCommonDependency ( module , moduleToContainDecl )   )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^module = moduleGraph .dependsOn ( module , module )  ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^moduleVarParentMap.put ( module, siblingToInsertVarDeclBefore ) ;^196^^^^^181^211^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.siblingToInsertVarDeclBefore = siblingToInsertVarDeclBefore .getString (  )  ;^200^^^^^185^215^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( ancestor.getType (  )  >= Token.SCRIPT )  {^173^^^^^158^188^if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( varParent .getString (  )   == Token.SCRIPT )  {^173^^^^^158^188^if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl = root;^174^^^^^159^189^info.parentForNewVarDecl = ancestor;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl = siblingToInsertVarDeclBefore;^174^^^^^159^189^info.parentForNewVarDecl = ancestor;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.siblingToInsertVarDeclBefore = parentForNewVarDecl;^175^^^^^160^190^info.siblingToInsertVarDeclBefore = prev;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^for  ( Node ancestor : prev.getAncestors (  )  )  {^172^^^^^157^187^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( prev.getType (  )  == Token.SCRIPT )  {^173^^^^^158^188^if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.siblingToInsertVarDeclBefore = varParent;^175^^^^^160^190^info.siblingToInsertVarDeclBefore = prev;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( module != null && info != null && module != info.moduleToContainDecl.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( module != true && info.moduleToContainDecl != true && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( varParent == this )  {^194^^^^^185^201^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^moduleVarParentMap.put ( module, root ) ;^196^^^^^185^201^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl = root;^199^^^^^185^201^info.parentForNewVarDecl = varParent;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^module = moduleGraph .dependsOn ( module , module )  ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^Node varParent = moduleVarParentMap .put ( moduleToContainDecl , node )  ;^193^^^^^185^201^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.siblingToInsertVarDeclBefore = root.getFirstChild (  ) ;^200^^^^^185^201^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( root == null )  {^194^^^^^179^209^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( varParent == this )  {^194^^^^^179^209^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^moduleVarParentMap.put ( module, root ) ;^196^^^^^181^211^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^prev = root;^178^^^^^163^193^prev = ancestor;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^StringOccurrence occurrence = siblingToInsertVarDeclBeforeew StringOccurrence ( n, parent ) ;^154^^^^^139^169^StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^StringOccurrence occurrence = new StringOccurrence ( n, varParent ) ;^154^^^^^139^169^StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P1_Replace_Type]^char str = n.getchar (  ) ;^140^^^^^125^155^String str = n.getString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^String str = varParent.getString (  ) ;^140^^^^^125^155^String str = n.getString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^String str = n.newString (  ) ;^140^^^^^125^155^String str = n.getString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^String str = root.getString (  ) ;^140^^^^^125^155^String str = n.getString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = entry.getValue (  ) ;String str = n.getString (  ) ;^140^^^^^125^155^String str = n.getString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^String literal = entry.getKey (  ) ;String str = n.getString (  ) ;^140^^^^^125^155^String str = n.getString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringBuilder sb = new StringBuilder (  ) ;String str = n.getString (  ) ;^140^^^^^125^155^String str = n.getString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = getOrCreateStringInfo ( str ) ;String str = n.getString (  ) ;^140^^^^^125^155^String str = n.getString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^String encoded = sb.toString (  ) ;String str = n.getString (  ) ;^140^^^^^125^155^String str = n.getString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^StringOccurrence occurrence = rootew StringOccurrence ( n, parent ) ;^154^^^^^139^169^StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^Node prev = root;^171^^^^^156^186^Node prev = n;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^Node varParent = 4.get ( module ) ;^193^^^^^178^208^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^140^^^^^125^155^String str = n.getString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^return sb.toString (  ) ;String str = n.getString (  ) ;^140^^^^^125^155^String str = n.getString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^if  ( "undefinedund".equals ( str )  )  {^145^^^^^130^160^if  ( "undefined".equals ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P13_Insert_Block]^if  ( "undefined".equals ( str )  )  {     return ; }^145^^^^^130^160^[Delete]^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( str == null || aliasableStrings.contains ( aliasableStrings )  )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( t.inGlobalScope (  )  || isInThrowExpression ( siblingToInsertVarDeclBefore )  )  {^160^^^^^145^175^if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( t.inGlobalScope (  )  || getOrCreateStringInfo ( root )  )  {^160^^^^^145^175^if  ( t.inGlobalScope (  )  || isInThrowExpression ( n )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^for  ( Node ancestor : root.getAncestors (  )  )  {^172^^^^^157^187^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^!moduleGraph.dependsOn ( info, module.moduleToContainDecl )  )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^!moduleGraph .getDeepestCommonDependency ( moduleToContainDecl , module )   )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^moduleVarParentMap.put ( module, prev ) ;^196^^^^^181^211^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.siblingToInsertVarDeclBefore = parentForNewVarDecl.newString (  ) ;^200^^^^^185^215^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^if  ( "n".equals ( str )  )  {^145^^^^^130^160^if  ( "undefined".equals ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( blacklist != false && blacklist.reset ( str ) .find (  )  )  {^149^^^^^134^164^if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( aliasableStrings == varParentull || aliasableStrings.contains ( str )  )  {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( aliasableStrings == true ) {^153^^^^^138^168^if  ( aliasableStrings == null || aliasableStrings.contains ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( info.numOccurrences < 1 )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( info.numOccurrences >= 1 )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^if  ( info.numOccurrences == -5 )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( info.numOccurrences == 1 << 2 )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^moduleVarParentMap .get ( module )  ;^196^^^^^185^201^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^module = moduleGraph .dependsOn ( moduleToContainDecl , module )  ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl = prev;^199^^^^^184^214^info.parentForNewVarDecl = varParent;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^Node varParent = moduleVarParentMap .put ( moduleToContainDecl , prev )  ;^193^^^^^178^208^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^module = moduleGraph .dependsOn ( moduleToContainDecl , moduleToContainDecl )  ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^module = moduleToContainDeclGraph.dependsOn ( module, info.moduleToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^Node varParent = null.get ( module ) ;^193^^^^^178^208^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( ancestor.getType (  )  < Token.SCRIPT )  {^173^^^^^158^188^if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.siblingToInsertVarDeclBefore = siblingToInsertVarDeclBefore;^175^^^^^160^190^info.siblingToInsertVarDeclBefore = prev;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^for  ( Node ancestor : varParent.newString (  )  )  {^172^^^^^157^187^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( ancestor.getType (  )  > Token.SCRIPT )  {^173^^^^^158^188^if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( module != true ) {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( parentForNewVarDecl == false )  {^194^^^^^185^201^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^moduleVarParentMap.put ( module, parentForNewVarDecl ) ;^196^^^^^185^201^moduleVarParentMap.put ( module, varParent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( parentForNewVarDecl == null )  {^194^^^^^179^209^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^prev = siblingToInsertVarDeclBefore;^178^^^^^163^193^prev = ancestor;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^157^^^^^142^172^info.occurrences.add ( occurrence ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^for  ( Node ancestor : root.newString (  )  )  {^172^^^^^157^187^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( info.numOccurrences <= 1 )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^if  ( info.numOccurrences == -3 )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( info.numOccurrences == 1L )  {^164^^^^^149^179^if  ( info.numOccurrences == 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( module != false ) {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( parentForNewVarDecl == this )  {^194^^^^^185^201^if  ( varParent == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl = siblingToInsertVarDeclBefore;^199^^^^^185^201^info.parentForNewVarDecl = varParent;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = moduleGraph.getDeepestCommonDependency ( module, info ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^Node varParent = moduleVarParentMap .put ( module , parentForNewVarDecl )  ;^193^^^^^178^208^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( root.newString (  )  == Token.SCRIPT )  {^173^^^^^158^188^if  ( ancestor.getType (  )  == Token.SCRIPT )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( moduleToContainDecl != this ) {^185^186^187^188^^170^200^if  ( module != null && info.moduleToContainDecl != null && module != info.moduleToContainDecl && !moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^module = moduleGraph .dependsOn ( moduleToContainDecl , moduleToContainDecl )  ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^module = moduleGraphGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^191^192^^^^185^201^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^Node varParent = moduleVarParentMap .put ( module , parentForNewVarDecl )  ;^193^^^^^185^201^Node varParent = moduleVarParentMap.get ( module ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.siblingToInsertVarDeclBefore = parentForNewVarDecl .getString (  )  ;^200^^^^^185^201^info.siblingToInsertVarDeclBefore = varParent.getFirstChild (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^module =  nullGraph.getDeepestCommonDependency ( null, info.nullToContainDecl ) ;^191^192^^^^176^206^module = moduleGraph.getDeepestCommonDependency ( module, info.moduleToContainDecl ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^String str = varParent.newString (  ) ;^140^^^^^125^155^String str = n.getString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^StringOccurrence occurrence = new StringOccurrence ( n, prev ) ;^154^^^^^139^169^StringOccurrence occurrence = new StringOccurrence ( n, parent ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( prev.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^135^136^137^138^^120^150^if  ( n.getType (  )  == Token.STRING && parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^parent.getType (  )  != Token.GETPROP && siblingToInsertVarDeclBefore.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^136^137^138^^^121^151^parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^parent.newString (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^136^137^138^^^121^151^parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^parent.newString (  )  != Token.GETPROP && varParent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^136^137^138^^^121^151^parent.getType (  )  != Token.GETPROP && parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, varParent )  )  {^137^138^^^^122^152^parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^parent.newString (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^137^138^^^^122^152^parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^parent .getString (  )   != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, varParent )  )  {^137^138^^^^122^152^parent.getType (  )  != Token.REGEXP && !NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^!NodeUtil.isObjectLitKey ( varParent, parent )  )  {^138^^^^^123^153^!NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^!NodeUtil.isObjectLitKey (  parent )  )  {^138^^^^^123^153^!NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^!NodeUtil.isObjectLitKey ( n )  )  {^138^^^^^123^153^!NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^!NodeUtil.isObjectLitKey ( parent, n )  )  {^138^^^^^123^153^!NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^!NodeUtil.isObjectLitKey ( root, parent )  )  {^138^^^^^123^153^!NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^138^139^140^^^123^153^!NodeUtil.isObjectLitKey ( n, parent )  )  {  String str = n.getString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^String str = siblingToInsertVarDeclBefore.getString (  ) ;^140^^^^^125^155^String str = n.getString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^String str = prev.getString (  ) ;^140^^^^^125^155^String str = n.getString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^if  ( "fi".equals ( str )  )  {^145^^^^^130^160^if  ( "undefined".equals ( str )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( blacklist != null && blacklist.reset ( blacklistRegex ) .reset (  )  )  {^149^^^^^134^164^if  ( blacklist != null && blacklist.reset ( str ) .find (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^!moduleGraph.dependsOn ( module, info )  )  {^188^^^^^173^203^!moduleGraph.dependsOn ( module, info.moduleToContainDecl )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  NodeTraversal  t  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^StringInfo info = blacklistRegexInfoMap.get ( string ) ;^212^^^^^211^218^StringInfo info = stringInfoMap.get ( string ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^StringInfo info = stringInfoMapInfoMap.get ( string ) ;^212^^^^^211^218^StringInfo info = stringInfoMap.get ( string ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^StringInfo info = string.get ( stringInfoMap ) ;^212^^^^^211^218^StringInfo info = stringInfoMap.get ( string ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^StringInfo info = this.get ( string ) ;^212^^^^^211^218^StringInfo info = stringInfoMap.get ( string ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = entry.getValue (  ) ;StringInfo info = stringInfoMap.get ( string ) ;^212^^^^^211^218^StringInfo info = stringInfoMap.get ( string ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = stringInfoMap.get ( str ) ;StringInfo info = stringInfoMap.get ( string ) ;^212^^^^^211^218^StringInfo info = stringInfoMap.get ( string ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = getOrCreateStringInfo ( str ) ;StringInfo info = stringInfoMap.get ( string ) ;^212^^^^^211^218^StringInfo info = stringInfoMap.get ( string ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^StringInfo info = strInfoMap.get ( string ) ;^212^^^^^211^218^StringInfo info = stringInfoMap.get ( string ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^212^^^^^211^218^StringInfo info = stringInfoMap.get ( string ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( info != null )  {^213^^^^^211^218^if  ( info == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( info == false )  {^213^^^^^211^218^if  ( info == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P9_Replace_Statement]^if  ( varParent == null )  {^213^^^^^211^218^if  ( info == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P9_Replace_Statement]^if  ( aliasName == null )  {^213^^^^^211^218^if  ( info == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^info = new com.google.javascript.jscomp.AliasStrings.StringInfo(stringInfoMap.size()); stringInfoMap.put(string, info);^213^214^215^216^^211^218^if  ( info == null )  { info = new StringInfo ( stringInfoMap.size (  )  ) ; stringInfoMap.put ( string, info ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^213^214^215^216^^211^218^if  ( info == null )  { info = new StringInfo ( stringInfoMap.size (  )  ) ; stringInfoMap.put ( string, info ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^info = new StringInfo ( stringInfoMap.size() + 7  ) ;^214^^^^^211^218^info = new StringInfo ( stringInfoMap.size (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P4_Replace_Constructor]^info = info =  new StringOccurrence ( n, parent )   ) ;^214^^^^^211^218^info = new StringInfo ( stringInfoMap.size (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^info = new StringInfo ( stringInfoMap.keySet (  )  ) ;^214^^^^^211^218^info = new StringInfo ( stringInfoMap.size (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info =  new StringOccurrence ( n, parent )   ) ;^214^^^^^211^218^info = new StringInfo ( stringInfoMap.size (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P13_Insert_Block]^if  ( info == null )  {     info = new StringInfo ( stringInfoMap.size (  )  ) ;     stringInfoMap.put ( string, info ) ; }^214^^^^^211^218^[Delete]^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^info = new StringInfo ( stringInfoMap.size() - 9  ) ;^214^^^^^211^218^info = new StringInfo ( stringInfoMap.size (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^info = new StringInfo ( stringInfoMap.size() + 8  ) ;^214^^^^^211^218^info = new StringInfo ( stringInfoMap.size (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^214^215^^^^211^218^info = new StringInfo ( stringInfoMap.size (  )  ) ; stringInfoMap.put ( string, info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = stringInfoMap.get ( str ) ;info = new StringInfo ( stringInfoMap.size (  )  ) ;^214^^^^^211^218^info = new StringInfo ( stringInfoMap.size (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^stringInfoMap.put ( str, info ) ;^215^^^^^211^218^stringInfoMap.put ( string, info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^stringInfoMap.put (  info ) ;^215^^^^^211^218^stringInfoMap.put ( string, info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^stringInfoMap.put ( string ) ;^215^^^^^211^218^stringInfoMap.put ( string, info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^stringInfoMap .get ( module )  ;^215^^^^^211^218^stringInfoMap.put ( string, info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^215^^^^^211^218^stringInfoMap.put ( string, info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^info = new StringInfo ( stringInfoMap.size() - 2  ) ;^214^^^^^211^218^info = new StringInfo ( stringInfoMap.size (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^info = new StringInfo ( stringInfoMap.size() + 6  ) ;^214^^^^^211^218^info = new StringInfo ( stringInfoMap.size (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^info = new StringInfo ( stringInfoMap.size() - 0  ) ;^214^^^^^211^218^info = new StringInfo ( stringInfoMap.size (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^214^^^^^211^218^info = new StringInfo ( stringInfoMap.size (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^stringInfoMap.put ( blacklistRegex, info ) ;^215^^^^^211^218^stringInfoMap.put ( string, info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^stringInfoMap.put ( info, string ) ;^215^^^^^211^218^stringInfoMap.put ( string, info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getOrCreateStringInfo [RETURN_TYPE] AliasStrings$StringInfo   String string [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^return false;^228^^^^^223^248^return true;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] isInThrowExpression [RETURN_TYPE] boolean   Node n [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^return true;^244^^^^^223^248^return false;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] isInThrowExpression [RETURN_TYPE] boolean   Node n [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^for  ( Node ancestor : siblingToInsertVarDeclBefore.getAncestors (  )  )  {^225^^^^^223^248^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] isInThrowExpression [RETURN_TYPE] boolean   Node n [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^for  ( Node ancestor : n.newString (  )  )  {^225^^^^^223^248^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] isInThrowExpression [RETURN_TYPE] boolean   Node n [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^for  ( Node ancestor : n .getType (  )   )  {^225^^^^^223^248^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] isInThrowExpression [RETURN_TYPE] boolean   Node n [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^for  ( Node ancestor : root.newString (  )  )  {^225^^^^^223^248^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] isInThrowExpression [RETURN_TYPE] boolean   Node n [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^switch  ( varParent.getType (  )  )  {^226^^^^^223^248^switch  ( ancestor.getType (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] isInThrowExpression [RETURN_TYPE] boolean   Node n [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^switch  ( ancestor.newString (  )  )  {^226^^^^^223^248^switch  ( ancestor.getType (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] isInThrowExpression [RETURN_TYPE] boolean   Node n [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^switch  ( varParent.newString (  )  )  {^226^^^^^223^248^switch  ( ancestor.getType (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] isInThrowExpression [RETURN_TYPE] boolean   Node n [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^226^227^228^^^223^248^switch  ( ancestor.getType (  )  )  { case Token.THROW: return true;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] isInThrowExpression [RETURN_TYPE] boolean   Node n [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^return true;^247^^^^^223^248^return false;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] isInThrowExpression [RETURN_TYPE] boolean   Node n [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( shouldReplaceWithAlias ( string, info )  )  {^257^^^^^253^264^if  ( shouldReplaceWithAlias ( literal, info )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( shouldReplaceWithAlias (  info )  )  {^257^^^^^253^264^if  ( shouldReplaceWithAlias ( literal, info )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( shouldReplaceWithAlias ( literal )  )  {^257^^^^^253^264^if  ( shouldReplaceWithAlias ( literal, info )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( shouldReplaceWithAlias ( info, literal )  )  {^257^^^^^253^264^if  ( shouldReplaceWithAlias ( literal, info )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^for (com.google.javascript.jscomp.AliasStrings.StringOccurrence occurrence : info.occurrences) {    replaceStringWithAliasName(occurrence, info.getVariableName(literal), info);};^257^258^259^260^261^253^264^if  ( shouldReplaceWithAlias ( literal, info )  )  { for  ( StringOccurrence occurrence : info.occurrences )  { replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^257^258^259^260^261^253^264^if  ( shouldReplaceWithAlias ( literal, info )  )  { for  ( StringOccurrence occurrence : info.occurrences )  { replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^replaceStringWithAliasName ( occurrence, info.getVariableName ( string ) , info ) ;^259^260^^^^253^264^replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^replaceStringWithAliasName (  info.getVariableName ( literal ) , info ) ;^259^260^^^^253^264^replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^replaceStringWithAliasName ( occurrence.getVariableName ( literal ) , info ) ;^259^260^^^^253^264^replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^replaceStringWithAliasName ( literal, info.getVariableName ( occurrence ) , info ) ;^259^260^^^^253^264^replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^replaceStringWithAliasName ( info, occurrence.getVariableName ( literal ) , info ) ;^259^260^^^^253^264^replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^replaceStringWithAliasName ( occurrence, info.encodeStringAsIdentifier ( literal ) , info ) ;^259^260^^^^253^264^replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^259^260^^^^253^264^replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^occurrence, info.getVariableName ( literal ) , info ) ;replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ;^259^260^^^^253^264^replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^occurrence, info.getVariableName ( string ) , info ) ;^260^^^^^253^264^occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^occurrence.getVariableName ( literal ) , info ) ;^260^^^^^253^264^occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^occurrence, literal.getVariableName ( info ) , info ) ;^260^^^^^253^264^occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^occurrence, info.encodeStringAsIdentifier ( literal ) , info ) ;^260^^^^^253^264^occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^260^^^^^253^264^occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ;occurrence, info.getVariableName ( literal ) , info ) ;^260^^^^^253^264^occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P1_Replace_Type]^char literal = entry.getKey (  ) ;^255^^^^^253^264^String literal = entry.getKey (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = entry.getValue (  ) ;String literal = entry.getKey (  ) ;^255^^^^^253^264^String literal = entry.getKey (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^int sizeOfLiteral = 2 + str.length (  ) ;String literal = entry.getKey (  ) ;^255^^^^^253^264^String literal = entry.getKey (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^String alias = info.getVariableName ( entry.getKey (  )  ) ;String literal = entry.getKey (  ) ;^255^^^^^253^264^String literal = entry.getKey (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringBuilder sb = new StringBuilder (  ) ;String literal = entry.getKey (  ) ;^255^^^^^253^264^String literal = entry.getKey (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^String str = n.getString (  ) ;String literal = entry.getKey (  ) ;^255^^^^^253^264^String literal = entry.getKey (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^StringInfo info = 3.getValue (  ) ;^256^^^^^253^264^StringInfo info = entry.getValue (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^StringInfo info = entry .getKey (  )  ;^256^^^^^253^264^StringInfo info = entry.getValue (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^String literal = entry.getKey (  ) ;StringInfo info = entry.getValue (  ) ;^256^^^^^253^264^StringInfo info = entry.getValue (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = stringInfoMap.get ( str ) ;StringInfo info = entry.getValue (  ) ;^256^^^^^253^264^StringInfo info = entry.getValue (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = stringInfoMap.get ( string ) ;StringInfo info = entry.getValue (  ) ;^256^^^^^253^264^StringInfo info = entry.getValue (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^String str = n.getString (  ) ;StringInfo info = entry.getValue (  ) ;^256^^^^^253^264^StringInfo info = entry.getValue (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = getOrCreateStringInfo ( str ) ;StringInfo info = entry.getValue (  ) ;^256^^^^^253^264^StringInfo info = entry.getValue (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^for  ( Entry<String, StringInfo> entry : stringInfoMap.keySet (  )  )  {^254^^^^^253^264^for  ( Entry<String, StringInfo> entry : stringInfoMap.entrySet (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^String literal = 1.getKey (  ) ;^255^^^^^253^264^String literal = entry.getKey (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^255^^^^^253^264^String literal = entry.getKey (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^256^^^^^253^264^StringInfo info = entry.getValue (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^replaceStringWithAliasName ( occurrence, literal.getVariableName ( info ) , info ) ;^259^260^^^^253^264^replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^replaceStringWithAliasName ( occurrence, info .StringInfo ( numOccurrences )  , info ) ;^259^260^^^^253^264^replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^replaceStringWithAliasName ( occurrence, info.encodeStringAsIdentifier ( string ) , info ) ;^259^260^^^^253^264^replaceStringWithAliasName ( occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^occurrence, info .StringInfo ( numOccurrencesInfrequentlyExecuted )  , info ) ;^260^^^^^253^264^occurrence, info.getVariableName ( literal ) , info ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringsWithAliases [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  varParent  String  STRING_ALIAS_PREFIX  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( !outputStringUsage )  {^273^^^^^270^290^if  ( !info.isAliased )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^continue;^273^274^275^^^270^290^if  ( !info.isAliased )  { continue; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^273^274^275^^^270^290^if  ( !info.isAliased )  { continue; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( info.siblingToInsertVarDeclBefore != null )  {^282^^^^^270^290^if  ( info.siblingToInsertVarDeclBefore == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( prev == null )  {^282^^^^^270^290^if  ( info.siblingToInsertVarDeclBefore == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( info.siblingToInsertVarDeclBefore == this )  {^282^^^^^270^290^if  ( info.siblingToInsertVarDeclBefore == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^info.parentForNewVarDecl.addChildToFront(var);^282^283^284^285^286^270^290^if  ( info.siblingToInsertVarDeclBefore == null )  { info.parentForNewVarDecl.addChildToFront ( var ) ; } else { info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^282^283^284^285^286^270^290^if  ( info.siblingToInsertVarDeclBefore == null )  { info.parentForNewVarDecl.addChildToFront ( var ) ; } else { info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl.addChildBefore ( parentForNewVarDecl, info.siblingToInsertVarDeclBefore ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl.addChildBefore ( var, parentForNewVarDecl ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl.addChildBefore ( var.siblingToInsertVarDeclBefore ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl.addChildBefore (  info.siblingToInsertVarDeclBefore ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl.addChildBefore ( var ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore.siblingToInsertVarDeclBefore ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl.addChildBefore ( info.siblingToInsertVarDeclBefore, var ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.parentForNewVarDecl.addChildBefore ( root, info.siblingToInsertVarDeclBefore ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^285^286^287^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^info.parentForNewVarDecl.addChildToFront ( var ) ;info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl.addChildToFront ( root ) ;^283^^^^^270^290^info.parentForNewVarDecl.addChildToFront ( var ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^info.parentForNewVarDecl.addChildBefore ( var ) ;^283^^^^^270^290^info.parentForNewVarDecl.addChildToFront ( var ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^info.parentForNewVarDecl .addChildToBack ( varParent )  ;^283^^^^^270^290^info.parentForNewVarDecl.addChildToFront ( var ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.parentForNewVarDecl.addChildToFront ( varParent ) ;^283^^^^^270^290^info.parentForNewVarDecl.addChildToFront ( var ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^283^^^^^270^290^info.parentForNewVarDecl.addChildToFront ( var ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;info.parentForNewVarDecl.addChildToFront ( var ) ;^283^^^^^270^290^info.parentForNewVarDecl.addChildToFront ( var ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^StringInfo info = entry .getKey (  )  ;^272^^^^^270^290^StringInfo info = entry.getValue (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^String literal = entry.getKey (  ) ;StringInfo info = entry.getValue (  ) ;^272^^^^^270^290^StringInfo info = entry.getValue (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = stringInfoMap.get ( str ) ;StringInfo info = entry.getValue (  ) ;^272^^^^^270^290^StringInfo info = entry.getValue (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = stringInfoMap.get ( string ) ;StringInfo info = entry.getValue (  ) ;^272^^^^^270^290^StringInfo info = entry.getValue (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^String str = n.getString (  ) ;StringInfo info = entry.getValue (  ) ;^272^^^^^270^290^StringInfo info = entry.getValue (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = getOrCreateStringInfo ( str ) ;StringInfo info = entry.getValue (  ) ;^272^^^^^270^290^StringInfo info = entry.getValue (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P1_Replace_Type]^char alias = info.getVariableName ( entry.getKey (  )  ) ;^276^^^^^270^290^String alias = info.getVariableName ( entry.getKey (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^String alias = entry.getVariableName ( info.getKey (  )  ) ;^276^^^^^270^290^String alias = info.getVariableName ( entry.getKey (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^String alias = info.encodeStringAsIdentifier ( entry.getKey (  )  ) ;^276^^^^^270^290^String alias = info.getVariableName ( entry.getKey (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^String alias = info .StringInfo ( numOccurrences )  ;^276^^^^^270^290^String alias = info.getVariableName ( entry.getKey (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^String literal = entry.getKey (  ) ;String alias = info.getVariableName ( entry.getKey (  )  ) ;^276^^^^^270^290^String alias = info.getVariableName ( entry.getKey (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^Node value = Node.replaceChild ( Token.STRING, entry.getKey (  )  ) ;^277^^^^^270^290^Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^Node value = Node.newString ( Token.STRING, entry .getValue (  )   ) ;^277^^^^^270^290^Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^Node name = Node.newString ( Token.NAME, alias ) ;Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;^277^^^^^270^290^Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^Node name = Node.newString ( Token.NAME, str ) ;^278^^^^^270^290^Node name = Node.newString ( Token.NAME, alias ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^Node name = Node.replaceChild ( Token.NAME, alias ) ;^278^^^^^270^290^Node name = Node.newString ( Token.NAME, alias ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^Node name = Node.newString ( Token.NAME, literal ) ;^278^^^^^270^290^Node name = Node.newString ( Token.NAME, alias ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^Node var = new Node ( Token.VAR ) ;Node name = Node.newString ( Token.NAME, alias ) ;^278^^^^^270^290^Node name = Node.newString ( Token.NAME, alias ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;Node name = Node.newString ( Token.NAME, alias ) ;^278^^^^^270^290^Node name = Node.newString ( Token.NAME, alias ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^Node name = Node.newString ( Token.NAME, alias ) ;Node var = new Node ( Token.VAR ) ;^280^^^^^270^290^Node var = new Node ( Token.VAR ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^for  ( Entry<String, StringInfo> entry : stringInfoMap.keySet (  )  )  {^271^^^^^270^290^for  ( Entry<String, StringInfo> entry : stringInfoMap.entrySet (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^271^272^273^274^275^270^290^for  ( Entry<String, StringInfo> entry : stringInfoMap.entrySet (  )  )  { StringInfo info = entry.getValue (  ) ; if  ( !info.isAliased )  { continue; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^272^^^^^270^290^StringInfo info = entry.getValue (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^276^^^^^270^290^String alias = info.getVariableName ( entry.getKey (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^276^277^^^^270^290^String alias = info.getVariableName ( entry.getKey (  )  ) ; Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^277^278^^^^270^290^Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ; Node name = Node.newString ( Token.NAME, alias ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, name )  ) ;Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;^277^^^^^270^290^Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^277^^^^^270^290^Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^Node name = Node.newString ( Token.NAME, string ) ;^278^^^^^270^290^Node name = Node.newString ( Token.NAME, alias ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^278^279^^^^270^290^Node name = Node.newString ( Token.NAME, alias ) ; name.addChildToBack ( value ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, name )  ) ;Node name = Node.newString ( Token.NAME, alias ) ;^278^^^^^270^290^Node name = Node.newString ( Token.NAME, alias ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^name.addChildToBack ( root ) ;^279^^^^^270^290^name.addChildToBack ( value ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^name.addChildBefore ( value ) ;^279^^^^^270^290^name.addChildToBack ( value ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^name .addChildToFront ( parentForNewVarDecl )  ;^279^^^^^270^290^name.addChildToBack ( value ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^name.addChildBefore ( prev ) ;^279^^^^^270^290^name.addChildToBack ( value ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^279^280^^^^270^290^name.addChildToBack ( value ) ; Node var = new Node ( Token.VAR ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^var.addChildToBack ( name ) ;name.addChildToBack ( value ) ;^279^^^^^270^290^name.addChildToBack ( value ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^var.addChildToBack ( value ) ;^281^^^^^270^290^var.addChildToBack ( name ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^var.addChildBefore ( name ) ;^281^^^^^270^290^var.addChildToBack ( name ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^var.addChildToBack ( varParent ) ;^281^^^^^270^290^var.addChildToBack ( name ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^281^^^^^270^290^var.addChildToBack ( name ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^name.addChildToBack ( value ) ;var.addChildToBack ( name ) ;^281^^^^^270^290^var.addChildToBack ( name ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.parentForNewVarDecl.addChildToFront ( parentForNewVarDecl ) ;^283^^^^^270^290^info.parentForNewVarDecl.addChildToFront ( var ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl.addChildBefore ( var, prev ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl.addChildBefore ( info, var.siblingToInsertVarDeclBefore ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^info.parentForNewVarDecl.addChildBefore ( var, info ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^info.parentForNewVarDecl.addChildBefore ( var, value ) ;^285^286^^^^270^290^info.parentForNewVarDecl.addChildBefore ( var, info.siblingToInsertVarDeclBefore ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^288^^^^^270^290^compiler.reportCodeChange (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] addAliasDeclarationNodes [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  AbstractCompiler  compiler  Entry  entry  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( info.numOccurrences >= info.numOccurrencesInfrequentlyExecuted )  {^302^^^^^298^325^if  ( info.numOccurrences > info.numOccurrencesInfrequentlyExecuted )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( sizeOfVariable > info.numOccurrencesInfrequentlyExecuted )  {^302^^^^^298^325^if  ( info.numOccurrences > info.numOccurrencesInfrequentlyExecuted )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( info.numOccurrences > sizeOfAliases )  {^302^^^^^298^325^if  ( info.numOccurrences > info.numOccurrencesInfrequentlyExecuted )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( info.numOccurrences.numOccurrences > infoInfrequentlyExecuted )  {^302^^^^^298^325^if  ( info.numOccurrences > info.numOccurrencesInfrequentlyExecuted )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( info.numOccurrencesInfrequentlyExecuted > info.numOccurrences )  {^302^^^^^298^325^if  ( info.numOccurrences > info.numOccurrencesInfrequentlyExecuted )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( info.numOccurrencesInfrequentlyExecuted.numOccurrences > info )  {^302^^^^^298^325^if  ( info.numOccurrences > info.numOccurrencesInfrequentlyExecuted )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^return true;^302^303^304^^^298^325^if  ( info.numOccurrences > info.numOccurrencesInfrequentlyExecuted )  { return true; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^302^303^304^^^298^325^if  ( info.numOccurrences > info.numOccurrencesInfrequentlyExecuted )  { return true; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^return false;^303^^^^^298^325^return true;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P1_Replace_Type]^short  sizeOfLiteral = 2 + str.length (  ) ;^317^^^^^298^325^int sizeOfLiteral = 2 + str.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^int sizeOfLiteral = 2 + str.length (  >  ) ;^317^^^^^298^325^int sizeOfLiteral = 2 + str.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^int sizeOfLiteral = id + str.length (  ) ;^317^^^^^298^325^int sizeOfLiteral = 2 + str.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^int sizeOfLiteral = 2 + str.length() - 5 ;^317^^^^^298^325^int sizeOfLiteral = 2 + str.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^int sizeOfLiteral = 2 + string.length (  ) ;^317^^^^^298^325^int sizeOfLiteral = 2 + str.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^int sizeOfLiteral = 2 + str.charAt (  ) ;^317^^^^^298^325^int sizeOfLiteral = 2 + str.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^int sizeOfLiteral = 2 + str .getBytes (  )  ;^317^^^^^298^325^int sizeOfLiteral = 2 + str.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^int sizeOfLiteral = 2 + blacklistRegex.charAt (  ) ;^317^^^^^298^325^int sizeOfLiteral = 2 + str.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^String literal = entry.getKey (  ) ;int sizeOfLiteral = 2 + str.length (  ) ;^317^^^^^298^325^int sizeOfLiteral = 2 + str.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^final int length = s.length (  ) ;int sizeOfLiteral = 2 + str.length (  ) ;^317^^^^^298^325^int sizeOfLiteral = 2 + str.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^int sizeOfLiteral = 2 + str.length() - 9 ;^317^^^^^298^325^int sizeOfLiteral = 2 + str.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^317^318^^^^298^325^int sizeOfLiteral = 2 + str.length (  ) ; int sizeOfStrings = info.numOccurrences * sizeOfLiteral;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P1_Replace_Type]^short  sizeOfStrings = info.numOccurrences * sizeOfLiteral;^318^^^^^298^325^int sizeOfStrings = info.numOccurrences * sizeOfLiteral;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^int - sizeOfStrings = info.numOccurrences * sizeOfLiteral;^318^^^^^298^325^int sizeOfStrings = info.numOccurrences * sizeOfLiteral;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^int sizeOfStrings = info.numOccurrences * sizeOfVariable;^318^^^^^298^325^int sizeOfStrings = info.numOccurrences * sizeOfLiteral;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^int sizeOfStrings = sizeOfVariable * sizeOfLiteral;^318^^^^^298^325^int sizeOfStrings = info.numOccurrences * sizeOfLiteral;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^int sizeOfStrings = sizeOfLiteral.numOccurrences * info;^318^^^^^298^325^int sizeOfStrings = info.numOccurrences * sizeOfLiteral;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^int sizeOfStrings = sizeOfLiteral * info.numOccurrences;^318^^^^^298^325^int sizeOfStrings = info.numOccurrences * sizeOfLiteral;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^int sizeOfStrings = info * sizeOfLiteral;^318^^^^^298^325^int sizeOfStrings = info.numOccurrences * sizeOfLiteral;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^int sizeOfStrings = sizeOfAliases * sizeOfLiteral;^318^^^^^298^325^int sizeOfStrings = info.numOccurrences * sizeOfLiteral;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P1_Replace_Type]^short  sizeOfVariable = 3;^319^^^^^298^325^int sizeOfVariable = 3;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^int sizeOfVariable = sizeOfVariable;^319^^^^^298^325^int sizeOfVariable = 3;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P1_Replace_Type]^short  sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^321^322^^^^298^325^int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^int sizeOfAliases = 6  >=  sizeOfVariable  >=  sizeOfLiteral + info.numOccurrences * sizeOfVariable;^321^322^^^^298^325^int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^int sizeOfAliases = 6  <  sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^321^322^^^^298^325^int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^int / sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^321^322^^^^298^325^int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^int sizeOfAliases = sizeOfStrings + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^321^322^^^^298^325^int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^int sizeOfAliases = 6 + sizeOfStrings + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^321^322^^^^298^325^int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^int sizeOfAliases = 6 + sizeOfVariable + sizeOfVariable + info.numOccurrences * sizeOfVariable;^321^322^^^^298^325^int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + sizeOfVariable * sizeOfVariable;^321^322^^^^298^325^int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^int sizeOfAliases = 6 + info.numOccurrences + sizeOfLiteral + sizeOfVariable * sizeOfVariable;^321^322^^^^298^325^int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^int sizeOfAliases = 6 + sizeOfVariable + info.numOccurrences + sizeOfLiteral * sizeOfVariable;^321^322^^^^298^325^int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^int sizeOfAliases = 6 + info + sizeOfLiteral + sizeOfVariable.numOccurrences * sizeOfVariable;^321^322^^^^298^325^int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + sizeOfLiteral * sizeOfVariable;^321^322^^^^298^325^int sizeOfAliases = 6 + sizeOfVariable + sizeOfLiteral + info.numOccurrences * sizeOfVariable;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^return sizeOfAliases <= sizeOfStrings;^324^^^^^298^325^return sizeOfAliases < sizeOfStrings;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^return sizeOfVariable < sizeOfStrings;^324^^^^^298^325^return sizeOfAliases < sizeOfStrings;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^return sizeOfAliases < sizeOfVariable;^324^^^^^298^325^return sizeOfAliases < sizeOfStrings;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^return sizeOfStrings < sizeOfAliases;^324^^^^^298^325^return sizeOfAliases < sizeOfStrings;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^return sizeOfAliases  ;^324^^^^^298^325^return sizeOfAliases < sizeOfStrings;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] shouldReplaceWithAlias [RETURN_TYPE] boolean   String str StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^occurrence.parent.replaceChild ( occurrence.node, Node.newString ( Token.NAME, string )  ) ;^333^334^^^^330^337^occurrence.parent.replaceChild ( occurrence.node, Node.newString ( Token.NAME, name )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^occurrence.parent.replaceChild ( var, Node.newString ( Token.NAME, name )  ) ;^333^334^^^^330^337^occurrence.parent.replaceChild ( occurrence.node, Node.newString ( Token.NAME, name )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^occurrence.parent.replaceChild ( occurrence.node, Node.newString ( Token.NAME )  ) ;^333^334^^^^330^337^occurrence.parent.replaceChild ( occurrence.node, Node.newString ( Token.NAME, name )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^occurrence.parent.replaceChild (  Node.newString ( Token.NAME, name )  ) ;^333^334^^^^330^337^occurrence.parent.replaceChild ( occurrence.node, Node.newString ( Token.NAME, name )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^occurrence.parent.replaceChild ( occurrence.node.node, Node.newString ( Token.NAME, name )  ) ;^333^334^^^^330^337^occurrence.parent.replaceChild ( occurrence.node, Node.newString ( Token.NAME, name )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^occurrence.parent.replaceChild ( name, Node.newString ( Token.NAME, occurrence.node )  ) ;^333^334^^^^330^337^occurrence.parent.replaceChild ( occurrence.node, Node.newString ( Token.NAME, name )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^occurrence.parent.replaceChild ( occurrence.node, Node.replaceChild ( Token.NAME, name )  ) ;^333^334^^^^330^337^occurrence.parent.replaceChild ( occurrence.node, Node.newString ( Token.NAME, name )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^occurrence.parent.replaceChild ( occurrence.node, Node.newString ( Token.NAME, literal )  ) ;^333^334^^^^330^337^occurrence.parent.replaceChild ( occurrence.node, Node.newString ( Token.NAME, name )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^333^334^^^^330^337^occurrence.parent.replaceChild ( occurrence.node, Node.newString ( Token.NAME, name )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^Node.newString ( Token.NAME, str )  ) ;^334^^^^^330^337^Node.newString ( Token.NAME, name )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^Node.replaceChild ( Token.NAME, name )  ) ;^334^^^^^330^337^Node.newString ( Token.NAME, name )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^Node.newString ( Token.NAME, string )  ) ;^334^^^^^330^337^Node.newString ( Token.NAME, name )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^334^335^^^^330^337^Node.newString ( Token.NAME, name )  ) ; info.isAliased = true;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^Node name = Node.newString ( Token.NAME, alias ) ;Node.newString ( Token.NAME, name )  ) ;^334^^^^^330^337^Node.newString ( Token.NAME, name )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^Node value = Node.newString ( Token.STRING, entry.getKey (  )  ) ;Node.newString ( Token.NAME, name )  ) ;^334^^^^^330^337^Node.newString ( Token.NAME, name )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^info.isAliased = false;^335^^^^^330^337^info.isAliased = true;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^this.isAliased = false;info.isAliased = true;^335^^^^^330^337^info.isAliased = true;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^compiler .getNodeForCodeInsertion ( module )  ;^336^^^^^330^337^compiler.reportCodeChange (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^336^^^^^330^337^compiler.reportCodeChange (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] replaceStringWithAliasName [RETURN_TYPE] void   StringOccurrence occurrence String name StringInfo info [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  StringOccurrence  occurrence  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^StringBuilder sb = new StringBuilder ( "ore than oncetrings used more than once:\n" ) ;^343^^^^^342^355^StringBuilder sb = new StringBuilder ( "Strings used more than once:\n" ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^StringBuilder sb = new StringBuilder ( " more t" ) ;^343^^^^^342^355^StringBuilder sb = new StringBuilder ( "Strings used more than once:\n" ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringBuilder sb = new StringBuilder (  ) ;StringBuilder sb = new StringBuilder ( "Strings used more than once:\n" ) ;^343^^^^^342^355^StringBuilder sb = new StringBuilder ( "Strings used more than once:\n" ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( info.numOccurrences >= 1 )  {^346^^^^^342^355^if  ( info.numOccurrences > 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^if  ( info.numOccurrences > -4 )  {^346^^^^^342^355^if  ( info.numOccurrences > 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( sizeOfVariable > 1 )  {^346^^^^^342^355^if  ( info.numOccurrences > 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( info.numOccurrences.numOccurrences > 1 )  {^346^^^^^342^355^if  ( info.numOccurrences > 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( sizeOfStrings > 3 )  {^346^^^^^342^355^if  ( info.numOccurrences > 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P9_Replace_Statement]^if  ( info.numOccurrences == 1 )  {^346^^^^^342^355^if  ( info.numOccurrences > 1 )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^sb.append(info.numOccurrences); sb.append(": "); sb.append(str); sb.append('\n');^346^347^348^349^350^342^355^if  ( info.numOccurrences > 1 )  { sb.append ( info.numOccurrences ) ; sb.append ( ": " ) ; sb.append ( str ) ; sb.append ( '\n' ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^346^347^348^349^350^342^355^if  ( info.numOccurrences > 1 )  { sb.append ( info.numOccurrences ) ; sb.append ( ": " ) ; sb.append ( str ) ; sb.append ( '\n' ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^sb.append ( sizeOfVariable ) ;^347^^^^^342^355^sb.append ( info.numOccurrences ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^sb.append ( info.numOccurrences.numOccurrences ) ;^347^^^^^342^355^sb.append ( info.numOccurrences ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^347^348^^^^342^355^sb.append ( info.numOccurrences ) ; sb.append ( ": " ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( Integer.toHexString ( ch )  ) ;sb.append ( info.numOccurrences ) ;^347^^^^^342^355^sb.append ( info.numOccurrences ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( prefix ) ;sb.append ( info.numOccurrences ) ;^347^^^^^342^355^sb.append ( info.numOccurrences ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^sb.append ( ": :" ) ;^348^^^^^342^355^sb.append ( ": " ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^sb .append ( sizeOfAliases )  ;^348^^^^^342^355^sb.append ( ": " ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^348^^^^^342^355^sb.append ( ": " ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ch ) ;sb.append ( ": " ) ;^348^^^^^342^355^sb.append ( ": " ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '$' ) ;sb.append ( ": " ) ;^348^^^^^342^355^sb.append ( ": " ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '\n' ) ;sb.append ( ": " ) ;^348^^^^^342^355^sb.append ( ": " ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( prefix ) ;sb.append ( ": " ) ;^348^^^^^342^355^sb.append ( ": " ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( str ) ;sb.append ( ": " ) ;^348^^^^^342^355^sb.append ( ": " ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '_' ) ;sb.append ( ": " ) ;^348^^^^^342^355^sb.append ( ": " ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^sb.append ( literal ) ;^349^^^^^342^355^sb.append ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^sb.append ( string ) ;^349^^^^^342^355^sb.append ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^349^350^^^^342^355^sb.append ( str ) ; sb.append ( '\n' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ch ) ;sb.append ( str ) ;^349^^^^^342^355^sb.append ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '$' ) ;sb.append ( str ) ;^349^^^^^342^355^sb.append ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '\n' ) ;sb.append ( str ) ;^349^^^^^342^355^sb.append ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ": " ) ;sb.append ( str ) ;^349^^^^^342^355^sb.append ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( prefix ) ;sb.append ( str ) ;^349^^^^^342^355^sb.append ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '_' ) ;sb.append ( str ) ;^349^^^^^342^355^sb.append ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^sb .append ( numOccurrences )  ;^350^^^^^342^355^sb.append ( '\n' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^sb .append ( numOccurrencesInfrequentlyExecuted )  ;^350^^^^^342^355^sb.append ( '\n' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^350^^^^^342^355^sb.append ( '\n' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ch ) ;sb.append ( '\n' ) ;^350^^^^^342^355^sb.append ( '\n' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '$' ) ;sb.append ( '\n' ) ;^350^^^^^342^355^sb.append ( '\n' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ": " ) ;sb.append ( '\n' ) ;^350^^^^^342^355^sb.append ( '\n' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( prefix ) ;sb.append ( '\n' ) ;^350^^^^^342^355^sb.append ( '\n' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( str ) ;sb.append ( '\n' ) ;^350^^^^^342^355^sb.append ( '\n' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '_' ) ;sb.append ( '\n' ) ;^350^^^^^342^355^sb.append ( '\n' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P1_Replace_Type]^for  ( char str : stringInfoMap.keySet (  )  )  {^344^^^^^342^355^for  ( String str : stringInfoMap.keySet (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^StringInfo info = nameingInfoMap.get ( str ) ;^345^^^^^342^355^StringInfo info = stringInfoMap.get ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^StringInfo info = stringInfoMapingInfoMap.get ( str ) ;^345^^^^^342^355^StringInfo info = stringInfoMap.get ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^StringInfo info = str.get ( stringInfoMap ) ;^345^^^^^342^355^StringInfo info = stringInfoMap.get ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^StringInfo info = stringInfoMap .put ( module , varParent )  ;^345^^^^^342^355^StringInfo info = stringInfoMap.get ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = entry.getValue (  ) ;StringInfo info = stringInfoMap.get ( str ) ;^345^^^^^342^355^StringInfo info = stringInfoMap.get ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = stringInfoMap.get ( string ) ;StringInfo info = stringInfoMap.get ( str ) ;^345^^^^^342^355^StringInfo info = stringInfoMap.get ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringInfo info = getOrCreateStringInfo ( str ) ;StringInfo info = stringInfoMap.get ( str ) ;^345^^^^^342^355^StringInfo info = stringInfoMap.get ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^for  ( String str : stringInfoMap.entrySet (  )  )  {^344^^^^^342^355^for  ( String str : stringInfoMap.keySet (  )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^StringInfo info = stringingInfoMap.get ( str ) ;^345^^^^^342^355^StringInfo info = stringInfoMap.get ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^StringInfo info = stringInfoMap .put ( moduleToContainDecl , ancestor )  ;^345^^^^^342^355^StringInfo info = stringInfoMap.get ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^345^^^^^342^355^StringInfo info = stringInfoMap.get ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^info = new StringInfo ( stringInfoMap.size (  )  ) ;StringInfo info = stringInfoMap.get ( str ) ;^345^^^^^342^355^StringInfo info = stringInfoMap.get ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^sb.append ( sizeOfLiteral ) ;^347^^^^^342^355^sb.append ( info.numOccurrences ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^sb.append ( info ) ;^347^^^^^342^355^sb.append ( info.numOccurrences ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^sb .append ( sizeOfAliases )  ;^347^^^^^342^355^sb.append ( info.numOccurrences ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^sb .append ( numOccurrences )  ;^348^^^^^342^355^sb.append ( ": " ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^sb.append ( name ) ;^349^^^^^342^355^sb.append ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^349^^^^^342^355^sb.append ( str ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^logger .getLogger ( str )  ;^354^^^^^342^355^logger.info ( sb.toString (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^logger.info ( sb.append (  )  ) ;^354^^^^^342^355^logger.info ( sb.toString (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^logger .getLogger ( STRING_ALIAS_PREFIX )  ;^354^^^^^342^355^logger.info ( sb.toString (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^354^^^^^342^355^logger.info ( sb.toString (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^return sb.toString (  ) ;logger.info ( sb.toString (  )  ) ;^354^^^^^342^355^logger.info ( sb.toString (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^logger.info ( "Aliasing common strings" ) ;logger.info ( sb.toString (  )  ) ;^354^^^^^342^355^logger.info ( sb.toString (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^String encoded = sb.toString (  ) ;logger.info ( sb.toString (  )  ) ;^354^^^^^342^355^logger.info ( sb.toString (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^logger.info ( sb .StringBuilder ( blacklistRegex )   ) ;^354^^^^^342^355^logger.info ( sb.toString (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] outputStringUsage [RETURN_TYPE] void   [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  StringInfo  info  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( aliasName != null )  {^399^^^^^398^404^if  ( aliasName == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( stringLiteral == null )  {^399^^^^^398^404^if  ( aliasName == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( aliasName == this )  {^399^^^^^398^404^if  ( aliasName == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P9_Replace_Statement]^if  ( info == null )  {^399^^^^^398^404^if  ( aliasName == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P9_Replace_Statement]^if  ( varParent == null )  {^399^^^^^398^404^if  ( aliasName == null )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^aliasName = encodeStringAsIdentifier(com.google.javascript.jscomp.AliasStrings.STRING_ALIAS_PREFIX, stringLiteral);^399^400^401^402^^398^404^if  ( aliasName == null )  { aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^399^400^401^402^^398^404^if  ( aliasName == null )  { aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, string ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^aliasName = encodeStringAsIdentifier ( string, stringLiteral ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^aliasName = encodeStringAsIdentifier (  stringLiteral ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^aliasName = encodeStringAsIdentifier ( stringLiteral, STRING_ALIAS_PREFIX ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^aliasName = getVariableName ( STRING_ALIAS_PREFIX, stringLiteral ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P13_Insert_Block]^if  (  ( aliasName )  == null )  {     aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ; }^400^^^^^398^404^[Delete]^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, name ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^encodeStringAsIdentifier ( name, stringLiteral ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^encodeStringAsIdentifier (  stringLiteral ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^encodeStringAsIdentifier ( stringLiteral, STRING_ALIAS_PREFIX ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^getVariableName ( STRING_ALIAS_PREFIX, stringLiteral ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^getVariableName ( name, stringLiteral ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^401^402^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P13_Insert_Block]^if  (  ( aliasName )  == null )  {     aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ; }^401^^^^^398^404^[Delete]^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, name ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^encodeStringAsIdentifier ( string, stringLiteral ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^getVariableName ( STRING_ALIAS_PREFIX, string ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^return str;^403^^^^^398^404^return aliasName;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^return stringLiteral;^403^^^^^398^404^return aliasName;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  Matcher  blacklist  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  literal  name  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  unitTestHashReductionMask  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P1_Replace_Type]^final  short  MAX_LIMIT = 20;^427^^^^^412^442^final int MAX_LIMIT = 20;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^final int MAX_LIMIT = sizeOfLiteral;^427^^^^^412^442^final int MAX_LIMIT = 20;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P1_Replace_Type]^final  short  length = s.length (  ) ;^428^^^^^413^443^final int length = s.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^final int length = s.length() - 7 ;^428^^^^^413^443^final int length = s.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^final int length = name.length (  ) ;^428^^^^^413^443^final int length = s.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^final int length = s.charAt (  ) ;^428^^^^^413^443^final int length = s.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^final int length = s .getBytes (  )  ;^428^^^^^413^443^final int length = s.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^final int length = name .getBytes (  )  ;^428^^^^^413^443^final int length = s.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^int sizeOfLiteral = 2 + str.length (  ) ;final int length = s.length (  ) ;^428^^^^^413^443^final int length = s.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^final int limit = Math.min ( length, MAX_LIMIT ) ;final int length = s.length (  ) ;^428^^^^^413^443^final int length = s.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^final int length = s.length() - 6 ;^428^^^^^413^443^final int length = s.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^final int length = stringLiteral.length (  ) ;^428^^^^^413^443^final int length = s.length (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^428^429^^^^413^443^final int length = s.length (  ) ; final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P1_Replace_Type]^final  long  limit = Math.min ( length, MAX_LIMIT ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^final int limit = Math.min ( sizeOfLiteral, MAX_LIMIT ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^final int limit = Math.min (  MAX_LIMIT ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^final int limit = Math.min ( length ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^final int limit = Math.min ( MAX_LIMIT, length ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^final int limit = Math.min ( sizeOfStrings, MAX_LIMIT ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^final int length = s.length (  ) ;final int limit = Math.min ( length, MAX_LIMIT ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^final int limit = Math.min ( sizeOfVariable, MAX_LIMIT ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^final int limit = Math.min ( length, sizeOfStrings ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringBuilder sb = new StringBuilder ( "Strings used more than once:\n" ) ;StringBuilder sb = new StringBuilder (  ) ;^431^^^^^416^446^StringBuilder sb = new StringBuilder (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^String literal = entry.getKey (  ) ;StringBuilder sb = new StringBuilder (  ) ;^431^^^^^416^446^StringBuilder sb = new StringBuilder (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^String str = n.getString (  ) ;StringBuilder sb = new StringBuilder (  ) ;^431^^^^^416^446^StringBuilder sb = new StringBuilder (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^String encoded = sb.toString (  ) ;StringBuilder sb = new StringBuilder (  ) ;^431^^^^^416^446^StringBuilder sb = new StringBuilder (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^sb.append ( s ) ;^432^^^^^417^447^sb.append ( prefix ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^sb.append ( str ) ;^432^^^^^417^447^sb.append ( prefix ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^432^433^^^^417^447^sb.append ( prefix ) ; boolean protectHex = false;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ch ) ;sb.append ( prefix ) ;^432^^^^^417^447^sb.append ( prefix ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '$' ) ;sb.append ( prefix ) ;^432^^^^^417^447^sb.append ( prefix ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '\n' ) ;sb.append ( prefix ) ;^432^^^^^417^447^sb.append ( prefix ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ": " ) ;sb.append ( prefix ) ;^432^^^^^417^447^sb.append ( prefix ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( str ) ;sb.append ( prefix ) ;^432^^^^^417^447^sb.append ( prefix ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '_' ) ;sb.append ( prefix ) ;^432^^^^^417^447^sb.append ( prefix ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( info.numOccurrences ) ;sb.append ( prefix ) ;^432^^^^^417^447^sb.append ( prefix ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^boolean protectHex = true;^433^^^^^418^448^boolean protectHex = false;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( outputStringUsage )  {^438^^^^^423^453^if  ( protectHex )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( (ch >= '0' && ch <= '9') )  {^438^^^^^423^453^if  ( protectHex )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ch >= '0' )  {^438^^^^^423^453^if  ( protectHex )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ch <= '9' )  {^438^^^^^423^453^if  ( protectHex )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( (ch >= 'a' && ch <= 'f') )  {^438^^^^^423^453^if  ( protectHex )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ch >= 'a' )  {^438^^^^^423^453^if  ( protectHex )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ch <= 'f' )  {^438^^^^^423^453^if  ( protectHex )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^if (((ch >= '0') && (ch <= '9')) || ((ch >= 'a') && (ch <= 'f'))) {    sb.append('_');}; protectHex = false;^438^439^440^441^442^423^453^if  ( protectHex )  { if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  { sb.append ( '_' ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^438^439^440^441^442^423^453^if  ( protectHex )  { if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  { sb.append ( '_' ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  && ( ch >= 'a' && ch <= 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  (  ( ch >= '0' || ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  (  ( ch > '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch < '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  || ( ch > 'a' && ch <= 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch == 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  (  ( ch >= '0' && ch <= '9' )  ) {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  (  ( ch >= 'a' && ch <= 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ch >= '0' )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ch <= '9' )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ch >= 'a' )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ch <= 'f' )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^sb.append('_');^439^440^441^442^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  { sb.append ( '_' ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^439^440^441^442^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  { sb.append ( '_' ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P13_Insert_Block]^if  ( protectHex )  {     if  (  (  ( ch >= '0' )  &&  ( ch <= '9' )  )  ||  (  ( ch >= 'a' )  &&  ( ch <= 'f' )  )  )  {         sb.append ( '_' ) ;     }     protectHex = false; }^439^^^^^424^454^[Delete]^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^441^^^^^439^442^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ch ) ;sb.append ( '_' ) ;^441^^^^^439^442^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '$' ) ;sb.append ( '_' ) ;^441^^^^^439^442^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '\n' ) ;sb.append ( '_' ) ;^441^^^^^439^442^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ": " ) ;sb.append ( '_' ) ;^441^^^^^439^442^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( prefix ) ;sb.append ( '_' ) ;^441^^^^^439^442^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( str ) ;sb.append ( '_' ) ;^441^^^^^439^442^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^protectHex = true;^443^^^^^428^458^protectHex = false;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^protectHex = true;protectHex = false;^443^^^^^428^458^protectHex = false;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^441^^^^^426^456^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ch ) ;sb.append ( '_' ) ;^441^^^^^426^456^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '$' ) ;sb.append ( '_' ) ;^441^^^^^426^456^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '\n' ) ;sb.append ( '_' ) ;^441^^^^^426^456^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ": " ) ;sb.append ( '_' ) ;^441^^^^^426^456^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( prefix ) ;sb.append ( '_' ) ;^441^^^^^426^456^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( str ) ;sb.append ( '_' ) ;^441^^^^^426^456^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  && ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  (  ( ch >= '0' || ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  (  ( ch > '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch < '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  || ( ch > 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch < 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch > 'a' && ch <= 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch < 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  (  ( ch >= '0' && ch <= '9' )  ) {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  (  ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ((ch >= '0') && (ch <= '9') || (ch >= 'A') && (ch <= 'Z')) )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ch >= '0' )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ch <= '9' )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( (ch >= 'A' && ch <= 'Z') )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ch >= 'A' )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ch <= 'Z' )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( (ch >= 'a' && ch <= 'z') )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ch >= 'a' )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P6_Replace_Expression]^if  ( ch <= 'z' )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P9_Replace_Statement]^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P13_Insert_Block]^if  ( protectHex )  {     if  (  (  ( ch >= '0' )  &&  ( ch <= '9' )  )  ||  (  ( ch >= 'a' )  &&  ( ch <= 'f' )  )  )  {         sb.append ( '_' ) ;     }     protectHex = false; }^446^^^^^431^461^[Delete]^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^protectHex = false;^453^^^^^446^454^protectHex = true;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^protectHex = false;protectHex = true;^453^^^^^446^454^protectHex = true;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^sb .append ( numOccurrencesInfrequentlyExecuted )  ;^451^^^^^446^454^sb.append ( '$' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^451^^^^^446^454^sb.append ( '$' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ch ) ;sb.append ( '$' ) ;^451^^^^^446^454^sb.append ( '$' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '\n' ) ;sb.append ( '$' ) ;^451^^^^^446^454^sb.append ( '$' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ": " ) ;sb.append ( '$' ) ;^451^^^^^446^454^sb.append ( '$' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( prefix ) ;sb.append ( '$' ) ;^451^^^^^446^454^sb.append ( '$' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( str ) ;sb.append ( '$' ) ;^451^^^^^446^454^sb.append ( '$' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '_' ) ;sb.append ( '$' ) ;^451^^^^^446^454^sb.append ( '$' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^sb .append ( length )  ;^452^^^^^446^454^sb.append ( Integer.toHexString ( ch )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^452^^^^^446^454^sb.append ( Integer.toHexString ( ch )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( Long.toHexString ( hash )  ) ;sb.append ( Integer.toHexString ( ch )  ) ;^452^^^^^446^454^sb.append ( Integer.toHexString ( ch )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( info.numOccurrences ) ;sb.append ( Integer.toHexString ( ch )  ) ;^452^^^^^446^454^sb.append ( Integer.toHexString ( ch )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^449^^^^^446^454^sb.append ( ch ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '$' ) ;sb.append ( ch ) ;^449^^^^^446^454^sb.append ( ch ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '\n' ) ;sb.append ( ch ) ;^449^^^^^446^454^sb.append ( ch ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ": " ) ;sb.append ( ch ) ;^449^^^^^446^454^sb.append ( ch ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( prefix ) ;sb.append ( ch ) ;^449^^^^^446^454^sb.append ( ch ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( str ) ;sb.append ( ch ) ;^449^^^^^446^454^sb.append ( ch ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '_' ) ;sb.append ( ch ) ;^449^^^^^446^454^sb.append ( ch ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P1_Replace_Type]^for  (  short  i = 0; i < limit; i++ )  {^435^^^^^420^450^for  ( int i = 0; i < limit; i++ )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^for  ( int i = 0; i == limit; i++ )  {^435^^^^^420^450^for  ( int i = 0; i < limit; i++ )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^for  ( int i = MAX_LIMIT; i < limit; i++ )  {^435^^^^^420^450^for  ( int i = 0; i < limit; i++ )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^for  ( int i = 0; i < sizeOfLiteral; i++ )  {^435^^^^^420^450^for  ( int i = 0; i < limit; i++ )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^for  ( limitnt i = 0; i < i; i++ )  {^435^^^^^420^450^for  ( int i = 0; i < limit; i++ )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^for  ( sizeOfVariablent i = 0; i < limit; i++ )  {^435^^^^^420^450^for  ( int i = 0; i < limit; i++ )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch < 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^sb .append ( sizeOfLiteral )  ;^441^^^^^439^442^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^sb .append ( sizeOfAliases )  ;^441^^^^^439^442^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch > 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^sb .append ( i )  ;^451^^^^^446^454^sb.append ( '$' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^sb .append ( sizeOfAliases )  ;^452^^^^^446^454^sb.append ( Integer.toHexString ( ch )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^452^453^^^^446^454^sb.append ( Integer.toHexString ( ch )  ) ; protectHex = true;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^sb .append ( length )  ;^449^^^^^446^454^sb.append ( ch ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^protectHex = false;^453^^^^^438^468^protectHex = true;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^protectHex = false;protectHex = true;^453^^^^^438^468^protectHex = true;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P1_Replace_Type]^int ch = s.charAt ( i ) ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^char ch = name.charAt ( i ) ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^char ch = s.charAt ( sizeOfStrings ) ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^char ch = i.charAt ( s ) ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^char ch = s .getBytes (  )  ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^char ch = stringLiteral.charAt ( i ) ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^char ch = s.charAt ( sizeOfLiteral ) ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^char ch = prefix .getBytes (  )  ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^sb .append ( limit )  ;^449^^^^^434^464^sb.append ( ch ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^449^^^^^434^464^sb.append ( ch ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '$' ) ;sb.append ( ch ) ;^449^^^^^434^464^sb.append ( ch ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '\n' ) ;sb.append ( ch ) ;^449^^^^^434^464^sb.append ( ch ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ": " ) ;sb.append ( ch ) ;^449^^^^^434^464^sb.append ( ch ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( prefix ) ;sb.append ( ch ) ;^449^^^^^434^464^sb.append ( ch ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( str ) ;sb.append ( ch ) ;^449^^^^^434^464^sb.append ( ch ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '_' ) ;sb.append ( ch ) ;^449^^^^^434^464^sb.append ( ch ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^451^^^^^436^466^sb.append ( '$' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ch ) ;sb.append ( '$' ) ;^451^^^^^436^466^sb.append ( '$' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '\n' ) ;sb.append ( '$' ) ;^451^^^^^436^466^sb.append ( '$' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ": " ) ;sb.append ( '$' ) ;^451^^^^^436^466^sb.append ( '$' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( prefix ) ;sb.append ( '$' ) ;^451^^^^^436^466^sb.append ( '$' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( str ) ;sb.append ( '$' ) ;^451^^^^^436^466^sb.append ( '$' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '_' ) ;sb.append ( '$' ) ;^451^^^^^436^466^sb.append ( '$' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^452^^^^^437^467^sb.append ( Integer.toHexString ( ch )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( Long.toHexString ( hash )  ) ;sb.append ( Integer.toHexString ( ch )  ) ;^452^^^^^437^467^sb.append ( Integer.toHexString ( ch )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( info.numOccurrences ) ;sb.append ( Integer.toHexString ( ch )  ) ;^452^^^^^437^467^sb.append ( Integer.toHexString ( ch )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P1_Replace_Type]^for  (  long  i = 0; i < limit; i++ )  {^435^^^^^420^450^for  ( int i = 0; i < limit; i++ )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^for  ( int i = sizeOfAliases; i < limit; i++ )  {^435^^^^^420^450^for  ( int i = 0; i < limit; i++ )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^char ch = s.charAt ( sizeOfVariable ) ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^char ch = str.charAt ( i ) ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^sb .append ( numOccurrences )  ;^441^^^^^426^456^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^sb .append ( sizeOfLiteral )  ;^449^^^^^434^464^sb.append ( ch ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^sb .append ( sizeOfLiteral )  ;^451^^^^^436^466^sb.append ( '$' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^451^452^^^^436^466^sb.append ( '$' ) ; sb.append ( Integer.toHexString ( ch )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^452^453^^^^437^467^sb.append ( Integer.toHexString ( ch )  ) ; protectHex = true;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^if  ( length != limit )  {^457^^^^^442^472^if  ( length == limit )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( sizeOfLiteral == limit )  {^457^^^^^442^472^if  ( length == limit )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( length == sizeOfAliases )  {^457^^^^^442^472^if  ( length == limit )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( limit == length )  {^457^^^^^442^472^if  ( length == limit )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( sizeOfVariable == limit )  {^457^^^^^442^472^if  ( length == limit )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^return sb.toString();^457^458^459^^^442^472^if  ( length == limit )  { return sb.toString (  ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^457^458^459^^^442^472^if  ( length == limit )  { return sb.toString (  ) ; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^return sb.append (  ) ;^458^^^^^443^473^return sb.toString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^458^^^^^443^473^return sb.toString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^return sb .StringBuilder ( prefix )  ;^458^^^^^443^473^return sb.toString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^crc32.update ( stringLiteral.getBytes (  )  ) ;^464^^^^^449^479^crc32.update ( s.getBytes (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^crc32.update ( s.charAt (  )  ) ;^464^^^^^449^479^crc32.update ( s.getBytes (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^crc32.update ( prefix.getBytes (  )  ) ;^464^^^^^449^479^crc32.update ( s.getBytes (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^464^465^^^^449^479^crc32.update ( s.getBytes (  )  ) ; long hash = crc32.getValue (  )  & unitTestHashReductionMask;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^crc32.update ( s .length (  )   ) ;^464^^^^^449^479^crc32.update ( s.getBytes (  )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P1_Replace_Type]^short  hash = crc32.getValue (  )  & unitTestHashReductionMask;^465^^^^^450^480^long hash = crc32.getValue (  )  & unitTestHashReductionMask;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P2_Replace_Operator]^long hash = crc32.getValue (  )   ||  unitTestHashReductionMask;^465^^^^^450^480^long hash = crc32.getValue (  )  & unitTestHashReductionMask;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^long hash = unitTestHashReductionMask.getValue (  )  & crc32;^465^^^^^450^480^long hash = crc32.getValue (  )  & unitTestHashReductionMask;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^long hash = crc32.update (  )  & unitTestHashReductionMask;^465^^^^^450^480^long hash = crc32.getValue (  )  & unitTestHashReductionMask;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^long hash = crc32 .getKey (  )   & unitTestHashReductionMask;^465^^^^^450^480^long hash = crc32.getValue (  )  & unitTestHashReductionMask;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^465^^^^^450^480^long hash = crc32.getValue (  )  & unitTestHashReductionMask;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^sb .append ( sizeOfVariable )  ;^466^^^^^451^481^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^466^^^^^451^481^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ch ) ;sb.append ( '_' ) ;^466^^^^^451^481^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '$' ) ;sb.append ( '_' ) ;^466^^^^^451^481^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( '\n' ) ;sb.append ( '_' ) ;^466^^^^^451^481^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( ": " ) ;sb.append ( '_' ) ;^466^^^^^451^481^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( prefix ) ;sb.append ( '_' ) ;^466^^^^^451^481^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( str ) ;sb.append ( '_' ) ;^466^^^^^451^481^sb.append ( '_' ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^sb.append ( Long.toHexString ( unitTestHashReductionMask )  ) ;^467^^^^^452^482^sb.append ( Long.toHexString ( hash )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^467^^^^^452^482^sb.append ( Long.toHexString ( hash )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^sb.append ( Integer.toHexString ( ch )  ) ;sb.append ( Long.toHexString ( hash )  ) ;^467^^^^^452^482^sb.append ( Long.toHexString ( hash )  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^467^468^^^^452^482^sb.append ( Long.toHexString ( hash )  ) ; String encoded = sb.toString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P1_Replace_Type]^char encoded = sb.tochar (  ) ;^468^^^^^453^483^String encoded = sb.toString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^String encoded = sb.append (  ) ;^468^^^^^453^483^String encoded = sb.toString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^StringBuilder sb = new StringBuilder (  ) ;String encoded = sb.toString (  ) ;^468^^^^^453^483^String encoded = sb.toString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^String str = n.getString (  ) ;String encoded = sb.toString (  ) ;^468^^^^^453^483^String encoded = sb.toString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^String encoded = sb .StringBuilder ( blacklistRegex )  ;^468^^^^^453^483^String encoded = sb.toString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P14_Delete_Statement]^^468^^^^^453^483^String encoded = sb.toString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^return sb.toString (  ) ;String encoded = sb.toString (  ) ;^468^^^^^453^483^String encoded = sb.toString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P11_Insert_Donor_Statement]^logger.info ( sb.toString (  )  ) ;String encoded = sb.toString (  ) ;^468^^^^^453^483^String encoded = sb.toString (  ) ;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( !usedHashedAliases.add ( stringLiteral )  )  {^469^^^^^454^484^if  ( !usedHashedAliases.add ( encoded )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P7_Replace_Invocation]^if  ( !usedHashedAliases.contains ( encoded )  )  {^469^^^^^454^484^if  ( !usedHashedAliases.add ( encoded )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^if  ( !usedHashedAliases.contains ( s )  )  {^469^^^^^454^484^if  ( !usedHashedAliases.add ( encoded )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P15_Unwrap_Block]^encoded += "_" + (id);^469^470^^^473^454^484^if  ( !usedHashedAliases.add ( encoded )  )  {  encoded += "_" + id; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P16_Remove_Block]^^469^470^^^473^454^484^if  ( !usedHashedAliases.add ( encoded )  )  {  encoded += "_" + id; }^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^encoded += "_" + sizeOfAliases;^473^^^^^458^488^encoded += "_" + id;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^encoded + =  encoded +;^473^^^^^458^488^encoded += "_" + id;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P3_Replace_Literal]^encoded += "" + id;^473^^^^^458^488^encoded += "_" + id;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^encoded += "_" + numOccurrencesInfrequentlyExecuted;^473^^^^^458^488^encoded += "_" + id;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^encoded + = null ;^473^^^^^458^488^encoded += "_" + id;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^if  ( !usedHashedAliases.add ( prefix )  )  {^469^^^^^454^484^if  ( !usedHashedAliases.add ( encoded )  )  {^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P5_Replace_Variable]^return str;^475^^^^^460^490^return encoded;^[CLASS] AliasStrings StringOccurrence StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^Node node;^363^^^^^358^368^final Node node;^[CLASS] StringOccurrence  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] Set  aliasableStrings  strings  usedHashedAliases  StringBuilder  sb  Matcher  blacklist  CRC32  crc32  Node  ancestor  externs  n  name  node  parent  parentForNewVarDecl  prev  root  siblingToInsertVarDeclBefore  value  var  varParent  String  STRING_ALIAS_PREFIX  alias  aliasName  blacklistRegex  encoded  literal  name  prefix  s  str  string  stringLiteral  Logger  logger  JSModuleGraph  moduleGraph  long  hash  unitTestHashReductionMask  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  sizeOfAliases  sizeOfLiteral  sizeOfStrings  sizeOfVariable  AbstractCompiler  compiler  boolean  isAliased  outputStringUsage  protectHex  char  ch  JSModule  module  moduleToContainDecl  List  occurrences  Map  moduleVarParentMap  stringInfoMap  
[P8_Replace_Mix]^this.node =  parent;^367^^^^^366^369^this.node = node;^[CLASS] StringOccurrence  [METHOD] <init> [RETURN_TYPE] Node)   Node node Node parent [VARIABLES] Node  node  parent  boolean  
[P11_Insert_Donor_Statement]^this.parent = parent;this.node = node;^367^^^^^366^369^this.node = node;^[CLASS] StringOccurrence  [METHOD] <init> [RETURN_TYPE] Node)   Node node Node parent [VARIABLES] Node  node  parent  boolean  
[P5_Replace_Variable]^this.parent = node;^368^^^^^366^369^this.parent = parent;^[CLASS] StringOccurrence  [METHOD] <init> [RETURN_TYPE] Node)   Node node Node parent [VARIABLES] Node  node  parent  boolean  
[P11_Insert_Donor_Statement]^this.node = node;this.parent = parent;^368^^^^^366^369^this.parent = parent;^[CLASS] StringOccurrence  [METHOD] <init> [RETURN_TYPE] Node)   Node node Node parent [VARIABLES] Node  node  parent  boolean  
[P1_Replace_Type]^final  short  id;^377^^^^^372^382^final int id;^[CLASS] StringInfo  [METHOD] <init> [RETURN_TYPE] Node)   Node node Node parent [VARIABLES] Node  node  parent  boolean  
[P1_Replace_Type]^short  numOccurrences;^382^^^^^377^387^int numOccurrences;^[CLASS] StringInfo  [METHOD] <init> [RETURN_TYPE] Node)   Node node Node parent [VARIABLES] Node  node  parent  boolean  
[P8_Replace_Mix]^long  numOccurrences;^382^^^^^377^387^int numOccurrences;^[CLASS] StringInfo  [METHOD] <init> [RETURN_TYPE] Node)   Node node Node parent [VARIABLES] Node  node  parent  boolean  
[P1_Replace_Type]^long  numOccurrencesInfrequentlyExecuted;^383^^^^^378^388^int numOccurrencesInfrequentlyExecuted;^[CLASS] StringInfo  [METHOD] <init> [RETURN_TYPE] Node)   Node node Node parent [VARIABLES] Node  node  parent  boolean  
[P1_Replace_Type]^char aliasName;^389^^^^^384^394^String aliasName;^[CLASS] StringInfo  [METHOD] <init> [RETURN_TYPE] Node)   Node node Node parent [VARIABLES] Node  node  parent  boolean  
[P5_Replace_Variable]^this.id = numOccurrencesInfrequentlyExecuted;^392^^^^^391^395^this.id = id;^[CLASS] StringInfo  [METHOD] <init> [RETURN_TYPE] AliasStrings$StringInfo(int)   int id [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P8_Replace_Mix]^this.occurrences  =  this.occurrences ;^393^^^^^391^395^this.occurrences = new ArrayList<StringOccurrence> (  ) ;^[CLASS] StringInfo  [METHOD] <init> [RETURN_TYPE] AliasStrings$StringInfo(int)   int id [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P1_Replace_Type]^this.occurrences = new  LinkedHashSet <StringOccurrence> (  ) ;^393^^^^^391^395^this.occurrences = new ArrayList<StringOccurrence> (  ) ;^[CLASS] StringInfo  [METHOD] <init> [RETURN_TYPE] AliasStrings$StringInfo(int)   int id [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P3_Replace_Literal]^this.isAliased = true;^394^^^^^391^395^this.isAliased = false;^[CLASS] StringInfo  [METHOD] <init> [RETURN_TYPE] AliasStrings$StringInfo(int)   int id [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P2_Replace_Operator]^if  ( aliasName != null )  {^399^^^^^398^404^if  ( aliasName == null )  {^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P8_Replace_Mix]^if  ( aliasName == true )  {^399^^^^^398^404^if  ( aliasName == null )  {^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P15_Unwrap_Block]^aliasName = encodeStringAsIdentifier(com.google.javascript.jscomp.AliasStrings.STRING_ALIAS_PREFIX, stringLiteral);^399^400^401^402^^398^404^if  ( aliasName == null )  { aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ; }^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P16_Remove_Block]^^399^400^401^402^^398^404^if  ( aliasName == null )  { aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ; }^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P5_Replace_Variable]^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, aliasName ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P5_Replace_Variable]^aliasName = encodeStringAsIdentifier ( aliasName, stringLiteral ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P5_Replace_Variable]^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P5_Replace_Variable]^aliasName = encodeStringAsIdentifier (  stringLiteral ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P5_Replace_Variable]^aliasName = encodeStringAsIdentifier ( stringLiteral, STRING_ALIAS_PREFIX ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P7_Replace_Invocation]^aliasName = getVariableName ( STRING_ALIAS_PREFIX, stringLiteral ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P8_Replace_Mix]^aliasName =  encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, null ) ;^400^401^^^^398^404^aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P13_Insert_Block]^if  (  ( aliasName )  == null )  {     aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ; }^400^^^^^398^404^[Delete]^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P5_Replace_Variable]^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, aliasName ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P5_Replace_Variable]^encodeStringAsIdentifier ( aliasName, stringLiteral ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P5_Replace_Variable]^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P5_Replace_Variable]^encodeStringAsIdentifier (  stringLiteral ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P5_Replace_Variable]^encodeStringAsIdentifier ( stringLiteral, STRING_ALIAS_PREFIX ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P7_Replace_Invocation]^getVariableName ( STRING_ALIAS_PREFIX, stringLiteral ) ;^401^^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P14_Delete_Statement]^^401^402^^^^398^404^encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ; }^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P13_Insert_Block]^if  (  ( aliasName )  == null )  {     aliasName = encodeStringAsIdentifier ( STRING_ALIAS_PREFIX, stringLiteral ) ; }^401^^^^^398^404^[Delete]^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P5_Replace_Variable]^return stringLiteral;^403^^^^^398^404^return aliasName;^[CLASS] StringInfo  [METHOD] getVariableName [RETURN_TYPE] String   String stringLiteral [VARIABLES] boolean  isAliased  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  stringLiteral  int  id  numOccurrences  numOccurrencesInfrequentlyExecuted  
[P1_Replace_Type]^final  short  MAX_LIMIT = 20;^427^^^^^412^442^final int MAX_LIMIT = 20;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P3_Replace_Literal]^final int MAX_LIMIT = length;^427^^^^^412^442^final int MAX_LIMIT = 20;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P1_Replace_Type]^final  long  length = s.length (  ) ;^428^^^^^413^443^final int length = s.length (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P3_Replace_Literal]^final int length = s.length() + 4 ;^428^^^^^413^443^final int length = s.length (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P7_Replace_Invocation]^final int length = s.charAt (  ) ;^428^^^^^413^443^final int length = s.length (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P7_Replace_Invocation]^final int length = s .getBytes (  )  ;^428^^^^^413^443^final int length = s.length (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P8_Replace_Mix]^final int length = stringLiteral.charAt (  ) ;^428^^^^^413^443^final int length = s.length (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^final int limit = Math.min ( length, MAX_LIMIT ) ;final int length = s.length (  ) ;^428^^^^^413^443^final int length = s.length (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P3_Replace_Literal]^final int length = s.length() + 3 ;^428^^^^^413^443^final int length = s.length (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^final int length = stringLiteral.length (  ) ;^428^^^^^413^443^final int length = s.length (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^428^429^^^^413^443^final int length = s.length (  ) ; final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P1_Replace_Type]^final  long  limit = Math.min ( length, MAX_LIMIT ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^final int limit = Math.min ( numOccurrencesInfrequentlyExecuted, MAX_LIMIT ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^final int limit = Math.min ( length, numOccurrences ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^final int limit = Math.min (  MAX_LIMIT ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^final int limit = Math.min ( length ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^final int limit = Math.min ( MAX_LIMIT, length ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^final int length = s.length (  ) ;final int limit = Math.min ( length, MAX_LIMIT ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^final int limit = Math.min ( numOccurrences, MAX_LIMIT ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^final int limit = Math.min ( length, numOccurrencesInfrequentlyExecuted ) ;^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^429^^^^^414^444^final int limit = Math.min ( length, MAX_LIMIT ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^String encoded = sb.toString (  ) ;StringBuilder sb = new StringBuilder (  ) ;^431^^^^^416^446^StringBuilder sb = new StringBuilder (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^sb.append ( stringLiteral ) ;^432^^^^^417^447^sb.append ( prefix ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P7_Replace_Invocation]^sb .append ( s )  ;^432^^^^^417^447^sb.append ( prefix ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^432^^^^^417^447^sb.append ( prefix ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( ch ) ;sb.append ( prefix ) ;^432^^^^^417^447^sb.append ( prefix ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( '$' ) ;sb.append ( prefix ) ;^432^^^^^417^447^sb.append ( prefix ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( '_' ) ;sb.append ( prefix ) ;^432^^^^^417^447^sb.append ( prefix ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P3_Replace_Literal]^boolean protectHex = true;^433^^^^^418^448^boolean protectHex = false;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^if  ( isAliased )  {^438^^^^^423^453^if  ( protectHex )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( (ch >= '0' && ch <= '9') )  {^438^^^^^423^453^if  ( protectHex )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( ch >= '0' )  {^438^^^^^423^453^if  ( protectHex )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( ch <= '9' )  {^438^^^^^423^453^if  ( protectHex )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( (ch >= 'a' && ch <= 'f') )  {^438^^^^^423^453^if  ( protectHex )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( ch >= 'a' )  {^438^^^^^423^453^if  ( protectHex )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( ch <= 'f' )  {^438^^^^^423^453^if  ( protectHex )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P15_Unwrap_Block]^if (((ch >= '0') && (ch <= '9')) || ((ch >= 'a') && (ch <= 'f'))) {    sb.append('_');}; protectHex = false;^438^439^440^441^442^423^453^if  ( protectHex )  { if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  { sb.append ( '_' ) ; }^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P16_Remove_Block]^^438^439^440^441^442^423^453^if  ( protectHex )  { if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  { sb.append ( '_' ) ; }^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  && ( ch >= 'a' && ch <= 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch >= '0' || ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch > '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch < '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  || ( ch > 'a' && ch <= 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch < 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  (  ( ch >= '0' && ch <= '9' )  ) {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  (  ( ch >= 'a' && ch <= 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( ch >= '0' )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( ch <= '9' )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( ch >= 'a' )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( ch <= 'f' )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P15_Unwrap_Block]^sb.append('_');^439^440^441^442^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  { sb.append ( '_' ) ; }^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P16_Remove_Block]^^439^440^441^442^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  { sb.append ( '_' ) ; }^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P13_Insert_Block]^if  ( protectHex )  {     if  (  (  ( ch >= '0' )  &&  ( ch <= '9' )  )  ||  (  ( ch >= 'a' )  &&  ( ch <= 'f' )  )  )  {         sb.append ( '_' ) ;     }     protectHex = false; }^439^^^^^424^454^[Delete]^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P7_Replace_Invocation]^sb .append ( aliasName )  ;^441^^^^^439^442^sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P8_Replace_Mix]^sb .append ( encoded )  ;^441^^^^^439^442^sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^441^^^^^439^442^sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( ch ) ;sb.append ( '_' ) ;^441^^^^^439^442^sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( '$' ) ;sb.append ( '_' ) ;^441^^^^^439^442^sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( prefix ) ;sb.append ( '_' ) ;^441^^^^^439^442^sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P3_Replace_Literal]^protectHex = true;^443^^^^^428^458^protectHex = false;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^protectHex = true;protectHex = false;^443^^^^^428^458^protectHex = false;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P7_Replace_Invocation]^sb .append ( aliasName )  ;^441^^^^^426^456^sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^441^^^^^426^456^sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( ch ) ;sb.append ( '_' ) ;^441^^^^^426^456^sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( '$' ) ;sb.append ( '_' ) ;^441^^^^^426^456^sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( prefix ) ;sb.append ( '_' ) ;^441^^^^^426^456^sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  || ( ch < 'a' && ch <= 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  && ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch >= '0' || ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch > '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch > '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  || ( ch < 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch < 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch > 'a' && ch <= 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch < 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  (  ( ch >= '0' && ch <= '9' )  ) {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  (  ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( ((ch >= '0') && (ch <= '9') || (ch >= 'A') && (ch <= 'Z')) )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( ch >= '0' )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( ch <= '9' )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( (ch >= 'A' && ch <= 'Z') )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( ch >= 'A' )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( ch <= 'Z' )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( (ch >= 'a' && ch <= 'z') )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( ch >= 'a' )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P6_Replace_Expression]^if  ( ch <= 'z' )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P9_Replace_Statement]^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P13_Insert_Block]^if  ( protectHex )  {     if  (  (  ( ch >= '0' )  &&  ( ch <= '9' )  )  ||  (  ( ch >= 'a' )  &&  ( ch <= 'f' )  )  )  {         sb.append ( '_' ) ;     }     protectHex = false; }^446^^^^^431^461^[Delete]^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P3_Replace_Literal]^protectHex = false;^453^^^^^446^454^protectHex = true;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^protectHex = false;protectHex = true;^453^^^^^446^454^protectHex = true;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P7_Replace_Invocation]^sb .append ( prefix )  ;^451^^^^^446^454^sb.append ( '$' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^451^^^^^446^454^sb.append ( '$' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( ch ) ;sb.append ( '$' ) ;^451^^^^^446^454^sb.append ( '$' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( prefix ) ;sb.append ( '$' ) ;^451^^^^^446^454^sb.append ( '$' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( '_' ) ;sb.append ( '$' ) ;^451^^^^^446^454^sb.append ( '$' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^452^^^^^446^454^sb.append ( Integer.toHexString ( ch )  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( Long.toHexString ( hash )  ) ;sb.append ( Integer.toHexString ( ch )  ) ;^452^^^^^446^454^sb.append ( Integer.toHexString ( ch )  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^452^453^^^^446^454^sb.append ( Integer.toHexString ( ch )  ) ; protectHex = true;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P8_Replace_Mix]^sb .append ( stringLiteral )  ;^449^^^^^446^454^sb.append ( ch ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^449^^^^^446^454^sb.append ( ch ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( '$' ) ;sb.append ( ch ) ;^449^^^^^446^454^sb.append ( ch ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( prefix ) ;sb.append ( ch ) ;^449^^^^^446^454^sb.append ( ch ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( '_' ) ;sb.append ( ch ) ;^449^^^^^446^454^sb.append ( ch ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P1_Replace_Type]^for  (  short  i = 0; i < limit; i++ )  {^435^^^^^420^450^for  ( int i = 0; i < limit; i++ )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^for  ( int i = 0; i <= limit; i++ )  {^435^^^^^420^450^for  ( int i = 0; i < limit; i++ )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^for  ( limitnt i = 0; i < limit; i++ )  {^435^^^^^420^450^for  ( int i = 0; i < limit; i++ )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^for  ( int i = 0; i < numOccurrencesInfrequentlyExecuted; i++ )  {^435^^^^^420^450^for  ( int i = 0; i < limit; i++ )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch < '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch == '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P8_Replace_Mix]^sb .append ( prefix )  ;^441^^^^^426^456^sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch > '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^439^440^^^^424^454^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'a' && ch <= 'f' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch < '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  (  ( ch >= '0' && ch <= '9' )  || ( ch > 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^446^447^448^^^431^461^if  (  ( ch >= '0' && ch <= '9' )  || ( ch >= 'A' && ch <= 'Z' )  || ( ch >= 'a' && ch <= 'z' )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P7_Replace_Invocation]^sb .append ( encoded )  ;^452^^^^^446^454^sb.append ( Integer.toHexString ( ch )  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P8_Replace_Mix]^sb .append ( prefix )  ;^452^^^^^446^454^sb.append ( Integer.toHexString ( ch )  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P7_Replace_Invocation]^sb .append ( prefix )  ;^449^^^^^446^454^sb.append ( ch ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P3_Replace_Literal]^protectHex = false;^453^^^^^438^468^protectHex = true;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^protectHex = false;protectHex = true;^453^^^^^438^468^protectHex = true;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P1_Replace_Type]^String ch = s.charAt ( i ) ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^char ch = stringLiteral.charAt ( i ) ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^char ch = s.charAt ( limit ) ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^char ch = i.charAt ( s ) ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P7_Replace_Invocation]^char ch = s .getBytes (  )  ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P8_Replace_Mix]^char ch = s.charAt ( numOccurrencesInfrequentlyExecuted ) ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^char ch = prefix.charAt ( i ) ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^449^^^^^434^464^sb.append ( ch ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( '$' ) ;sb.append ( ch ) ;^449^^^^^434^464^sb.append ( ch ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( prefix ) ;sb.append ( ch ) ;^449^^^^^434^464^sb.append ( ch ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( '_' ) ;sb.append ( ch ) ;^449^^^^^434^464^sb.append ( ch ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^451^452^^^^436^466^sb.append ( '$' ) ; sb.append ( Integer.toHexString ( ch )  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( ch ) ;sb.append ( '$' ) ;^451^^^^^436^466^sb.append ( '$' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( prefix ) ;sb.append ( '$' ) ;^451^^^^^436^466^sb.append ( '$' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( '_' ) ;sb.append ( '$' ) ;^451^^^^^436^466^sb.append ( '$' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P7_Replace_Invocation]^sb .append ( encoded )  ;^452^^^^^437^467^sb.append ( Integer.toHexString ( ch )  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^452^453^^^^437^467^sb.append ( Integer.toHexString ( ch )  ) ; protectHex = true;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( Long.toHexString ( hash )  ) ;sb.append ( Integer.toHexString ( ch )  ) ;^452^^^^^437^467^sb.append ( Integer.toHexString ( ch )  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^452^^^^^437^467^sb.append ( Integer.toHexString ( ch )  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P3_Replace_Literal]^for  ( int i = i; i < limit; i++ )  {^435^^^^^420^450^for  ( int i = 0; i < limit; i++ )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P1_Replace_Type]^int ch = s.charAt ( i ) ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P8_Replace_Mix]^char ch = prefix .getBytes (  )  ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^char ch = s.charAt ( numOccurrences ) ;^436^^^^^421^451^char ch = s.charAt ( i ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P8_Replace_Mix]^sb .append ( s )  ;^441^^^^^426^456^sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P8_Replace_Mix]^sb .append ( prefix )  ;^449^^^^^434^464^sb.append ( ch ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P8_Replace_Mix]^sb .append ( aliasName )  ;^451^^^^^436^466^sb.append ( '$' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^if  ( length != limit )  {^457^^^^^442^472^if  ( length == limit )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^if  ( numOccurrencesInfrequentlyExecuted == limit )  {^457^^^^^442^472^if  ( length == limit )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^if  ( length == numOccurrencesInfrequentlyExecuted )  {^457^^^^^442^472^if  ( length == limit )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^if  ( limit == length )  {^457^^^^^442^472^if  ( length == limit )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P15_Unwrap_Block]^return sb.toString();^457^458^459^^^442^472^if  ( length == limit )  { return sb.toString (  ) ; }^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P16_Remove_Block]^^457^458^459^^^442^472^if  ( length == limit )  { return sb.toString (  ) ; }^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P7_Replace_Invocation]^return sb.append (  ) ;^458^^^^^443^473^return sb.toString (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P8_Replace_Mix]^return sb .StringBuilder (  )  ;^458^^^^^443^473^return sb.toString (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^458^^^^^443^473^return sb.toString (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^crc32.update ( stringLiteral.getBytes (  )  ) ;^464^^^^^449^479^crc32.update ( s.getBytes (  )  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P7_Replace_Invocation]^crc32.update ( s.charAt (  )  ) ;^464^^^^^449^479^crc32.update ( s.getBytes (  )  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^464^465^^^^449^479^crc32.update ( s.getBytes (  )  ) ; long hash = crc32.getValue (  )  & unitTestHashReductionMask;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P7_Replace_Invocation]^crc32.update ( s .length (  )   ) ;^464^^^^^449^479^crc32.update ( s.getBytes (  )  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P8_Replace_Mix]^crc32.update ( prefix.getBytes (  )  ) ;^464^^^^^449^479^crc32.update ( s.getBytes (  )  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P1_Replace_Type]^int  hash = crc32.getValue (  )  & unitTestHashReductionMask;^465^^^^^450^480^long hash = crc32.getValue (  )  & unitTestHashReductionMask;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P2_Replace_Operator]^long hash = crc32.getValue (  )   ==  unitTestHashReductionMask;^465^^^^^450^480^long hash = crc32.getValue (  )  & unitTestHashReductionMask;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^long hash = unitTestHashReductionMask.getValue (  )  & crc32;^465^^^^^450^480^long hash = crc32.getValue (  )  & unitTestHashReductionMask;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P7_Replace_Invocation]^long hash = crc32.update (  )  & unitTestHashReductionMask;^465^^^^^450^480^long hash = crc32.getValue (  )  & unitTestHashReductionMask;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^465^466^^^^450^480^long hash = crc32.getValue (  )  & unitTestHashReductionMask; sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P8_Replace_Mix]^sb .append ( s )  ;^466^^^^^451^481^sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^466^^^^^451^481^sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( ch ) ;sb.append ( '_' ) ;^466^^^^^451^481^sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( '$' ) ;sb.append ( '_' ) ;^466^^^^^451^481^sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( prefix ) ;sb.append ( '_' ) ;^466^^^^^451^481^sb.append ( '_' ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^467^^^^^452^482^sb.append ( Long.toHexString ( hash )  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^sb.append ( Integer.toHexString ( ch )  ) ;sb.append ( Long.toHexString ( hash )  ) ;^467^^^^^452^482^sb.append ( Long.toHexString ( hash )  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^467^468^^^^452^482^sb.append ( Long.toHexString ( hash )  ) ; String encoded = sb.toString (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P1_Replace_Type]^char encoded = sb.tochar (  ) ;^468^^^^^453^483^String encoded = sb.toString (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P7_Replace_Invocation]^String encoded = sb.append (  ) ;^468^^^^^453^483^String encoded = sb.toString (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P7_Replace_Invocation]^String encoded = sb .StringBuilder (  )  ;^468^^^^^453^483^String encoded = sb.toString (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^StringBuilder sb = new StringBuilder (  ) ;String encoded = sb.toString (  ) ;^468^^^^^453^483^String encoded = sb.toString (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P14_Delete_Statement]^^468^^^^^453^483^String encoded = sb.toString (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P11_Insert_Donor_Statement]^return sb.toString (  ) ;String encoded = sb.toString (  ) ;^468^^^^^453^483^String encoded = sb.toString (  ) ;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P8_Replace_Mix]^if  ( !usedHashedAliases.add ( stringLiteral )  )  {^469^^^^^454^484^if  ( !usedHashedAliases.add ( encoded )  )  {^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P15_Unwrap_Block]^encoded += "_" + (id);^469^470^^^473^454^484^if  ( !usedHashedAliases.add ( encoded )  )  {  encoded += "_" + id; }^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P16_Remove_Block]^^469^470^^^473^454^484^if  ( !usedHashedAliases.add ( encoded )  )  {  encoded += "_" + id; }^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P3_Replace_Literal]^encoded += "" + id;^473^^^^^458^488^encoded += "_" + id;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^encoded += "_" + numOccurrencesInfrequentlyExecuted;^473^^^^^458^488^encoded += "_" + id;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P8_Replace_Mix]^encoded +;^473^^^^^458^488^encoded += "_" + id;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P8_Replace_Mix]^encoded + =  encoded +;^473^^^^^458^488^encoded += "_" + id;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P5_Replace_Variable]^return s;^475^^^^^460^490^return encoded;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
[P8_Replace_Mix]^return stringLiteral;^475^^^^^460^490^return encoded;^[CLASS] StringInfo  [METHOD] encodeStringAsIdentifier [RETURN_TYPE] String   String prefix String s [VARIABLES] boolean  isAliased  protectHex  StringBuilder  sb  CRC32  crc32  Node  parentForNewVarDecl  siblingToInsertVarDeclBefore  char  ch  JSModule  moduleToContainDecl  List  occurrences  String  aliasName  encoded  prefix  s  stringLiteral  int  MAX_LIMIT  i  id  length  limit  numOccurrences  numOccurrencesInfrequentlyExecuted  long  hash  
