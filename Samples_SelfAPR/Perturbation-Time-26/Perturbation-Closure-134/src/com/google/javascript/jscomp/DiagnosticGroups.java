[P8_Replace_Mix]^private  static Map<String, DiagnosticGroup> groupsByName = Maps.newHashMap (  ) ;^33^34^^^^33^34^private final static Map<String, DiagnosticGroup> groupsByName = Maps.newHashMap (  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P1_Replace_Type]^static final char DIAGNOSTIC_GROUP_NAMES = "accessControls, checkVars, " + "checkTypes, deprecated, fileoverviewTags, invalidCasts, " + "missingProperties, nonStandardJsDocs, strictModuleDepCheck, " + "undefinedVars, unknownDefines, visibility";^50^51^52^53^^50^53^static final String DIAGNOSTIC_GROUP_NAMES = "accessControls, checkVars, " + "checkTypes, deprecated, fileoverviewTags, invalidCasts, " + "missingProperties, nonStandardJsDocs, strictModuleDepCheck, " + "undefinedVars, unknownDefines, visibility";^[CLASS] DiagnosticGroups   [VARIABLES] 
[P2_Replace_Operator]^static final String DIAGNOSTIC_GROUP_NAMES = "accessControls, checkVars, " + "checkTypes, deprecated, fileoverviewTags, invalidCasts, "  &  "missingProperties, nonStandardJsDocs, strictModuleDepCheck, " + "undefinedVars, unknownDefines, visibility";^50^51^52^53^^50^53^static final String DIAGNOSTIC_GROUP_NAMES = "accessControls, checkVars, " + "checkTypes, deprecated, fileoverviewTags, invalidCasts, " + "missingProperties, nonStandardJsDocs, strictModuleDepCheck, " + "undefinedVars, unknownDefines, visibility";^[CLASS] DiagnosticGroups   [VARIABLES] 
[P3_Replace_Literal]^static final String DIAGNOSTIC_GROUP_NAMES = "accessC" + "checkTypes, deprecated, fileoverviewTags, invalidCasts, " + "missingProperties, nonStandardJsDocs, strictModuleDepCheck, " + "undefinedVars, unknownDefines, visibility";^50^51^52^53^^50^53^static final String DIAGNOSTIC_GROUP_NAMES = "accessControls, checkVars, " + "checkTypes, deprecated, fileoverviewTags, invalidCasts, " + "missingProperties, nonStandardJsDocs, strictModuleDepCheck, " + "undefinedVars, unknownDefines, visibility";^[CLASS] DiagnosticGroups   [VARIABLES] 
[P3_Replace_Literal]^static final String DIAGNOSTIC_GROUP_NAMES = "accessControls, checkVars, " + "pes, deprecated, fi" + "missingProperties, nonStandardJsDocs, strictModuleDepCheck, " + "undefinedVars, unknownDefines, visibility";^50^51^52^53^^50^53^static final String DIAGNOSTIC_GROUP_NAMES = "accessControls, checkVars, " + "checkTypes, deprecated, fileoverviewTags, invalidCasts, " + "missingProperties, nonStandardJsDocs, strictModuleDepCheck, " + "undefinedVars, unknownDefines, visibility";^[CLASS] DiagnosticGroups   [VARIABLES] 
[P3_Replace_Literal]^static final String DIAGNOSTIC_GROUP_NAMES = "accessControls, checkVars, " + "checkTypes, deprecated, fileoverviewTags, invalidCasts, " + "issingProperties, nonStandardJsDocs, strictModuleDepCheck, " + "undefinedVars, unknownDefines, visibility";^50^51^52^53^^50^53^static final String DIAGNOSTIC_GROUP_NAMES = "accessControls, checkVars, " + "checkTypes, deprecated, fileoverviewTags, invalidCasts, " + "missingProperties, nonStandardJsDocs, strictModuleDepCheck, " + "undefinedVars, unknownDefines, visibility";^[CLASS] DiagnosticGroups   [VARIABLES] 
[P3_Replace_Literal]^static final String DIAGNOSTIC_GROUP_NAMES = "accessControls, checkVars, " + "checkTypes, deprecated, fileoverviewTags, invalidCasts, " + "missingProperties, nonStandardJsDocs, strictModuleDepCheck, " + "undefinedVars, unknownDefines, visibilityinedVars, unkno";^50^51^52^53^^50^53^static final String DIAGNOSTIC_GROUP_NAMES = "accessControls, checkVars, " + "checkTypes, deprecated, fileoverviewTags, invalidCasts, " + "missingProperties, nonStandardJsDocs, strictModuleDepCheck, " + "undefinedVars, unknownDefines, visibility";^[CLASS] DiagnosticGroups   [VARIABLES] 
[P8_Replace_Mix]^static final String DIAGNOSTIC_GROUP_NAMES  = null ;^50^51^52^53^^50^53^static final String DIAGNOSTIC_GROUP_NAMES = "accessControls, checkVars, " + "checkTypes, deprecated, fileoverviewTags, invalidCasts, " + "missingProperties, nonStandardJsDocs, strictModuleDepCheck, " + "undefinedVars, unknownDefines, visibility";^[CLASS] DiagnosticGroups   [VARIABLES] 
[P3_Replace_Literal]^public static DiagnosticGroup DEPRECATED = DiagnosticGroups .registerGroup ( "deprecateddeprecate", new DiagnosticGroup ( CheckAccessControls.DEPRECATED_NAME,^55^56^57^58^^55^63^public static DiagnosticGroup DEPRECATED = DiagnosticGroups .registerGroup ( "deprecated", new DiagnosticGroup ( CheckAccessControls.DEPRECATED_NAME,^[CLASS] DiagnosticGroups   [VARIABLES] 
[P5_Replace_Variable]^public static DiagnosticGroup DEPRECATED = DiagnosticGroups .registerGroup ( "deprecated", new DiagnosticGroup (^55^56^57^58^^55^63^public static DiagnosticGroup DEPRECATED = DiagnosticGroups .registerGroup ( "deprecated", new DiagnosticGroup ( CheckAccessControls.DEPRECATED_NAME,^[CLASS] DiagnosticGroups   [VARIABLES] 
[P7_Replace_Invocation]^public static DiagnosticGroup DEPRECATED = DiagnosticGroups .forName ( "deprecated", new DiagnosticGroup ( CheckAccessControls.DEPRECATED_NAME,^55^56^57^58^^55^63^public static DiagnosticGroup DEPRECATED = DiagnosticGroups .registerGroup ( "deprecated", new DiagnosticGroup ( CheckAccessControls.DEPRECATED_NAME,^[CLASS] DiagnosticGroups   [VARIABLES] 
[P8_Replace_Mix]^public  DiagnosticGroup DEPRECATED = DiagnosticGroups .registerGroup ( "deprecated", new DiagnosticGroup ( CheckAccessControls.DEPRECATED_NAME,^55^56^57^58^^55^63^public static DiagnosticGroup DEPRECATED = DiagnosticGroups .registerGroup ( "deprecated", new DiagnosticGroup ( CheckAccessControls.DEPRECATED_NAME,^[CLASS] DiagnosticGroups   [VARIABLES] 
[P3_Replace_Literal]^public static DiagnosticGroup VISIBILITY = DiagnosticGroups .registerGroup ( "v", new DiagnosticGroup ( CheckAccessControls.BAD_PRIVATE_GLOBAL_ACCESS,^65^66^67^68^^65^72^public static DiagnosticGroup VISIBILITY = DiagnosticGroups .registerGroup ( "visibility", new DiagnosticGroup ( CheckAccessControls.BAD_PRIVATE_GLOBAL_ACCESS,^[CLASS] DiagnosticGroups   [VARIABLES] 
[P5_Replace_Variable]^public static DiagnosticGroup VISIBILITY = DiagnosticGroups .registerGroup ( "visibility", new DiagnosticGroup ( this,^65^66^67^68^^65^72^public static DiagnosticGroup VISIBILITY = DiagnosticGroups .registerGroup ( "visibility", new DiagnosticGroup ( CheckAccessControls.BAD_PRIVATE_GLOBAL_ACCESS,^[CLASS] DiagnosticGroups   [VARIABLES] 
[P5_Replace_Variable]^public static DiagnosticGroup VISIBILITY = DiagnosticGroups .registerGroup ( "visibility", new DiagnosticGroup (^65^66^67^68^^65^72^public static DiagnosticGroup VISIBILITY = DiagnosticGroups .registerGroup ( "visibility", new DiagnosticGroup ( CheckAccessControls.BAD_PRIVATE_GLOBAL_ACCESS,^[CLASS] DiagnosticGroups   [VARIABLES] 
[P7_Replace_Invocation]^public static DiagnosticGroup VISIBILITY = DiagnosticGroups .forName ( "visibility", new DiagnosticGroup ( CheckAccessControls.BAD_PRIVATE_GLOBAL_ACCESS,^65^66^67^68^^65^72^public static DiagnosticGroup VISIBILITY = DiagnosticGroups .registerGroup ( "visibility", new DiagnosticGroup ( CheckAccessControls.BAD_PRIVATE_GLOBAL_ACCESS,^[CLASS] DiagnosticGroups   [VARIABLES] 
[P8_Replace_Mix]^public static DiagnosticGroup VISIBILITY ;^65^66^67^68^^65^72^public static DiagnosticGroup VISIBILITY = DiagnosticGroups .registerGroup ( "visibility", new DiagnosticGroup ( CheckAccessControls.BAD_PRIVATE_GLOBAL_ACCESS,^[CLASS] DiagnosticGroups   [VARIABLES] 
[P3_Replace_Literal]^public static DiagnosticGroup NON_STANDARD_JSDOC = DiagnosticGroups.registerGroup ( "nStonStandardJsDocs", new DiagnosticGroup ( RhinoErrorReporter.BAD_JSDOC_ANNOTATION )  ) ;^74^75^76^^^74^76^public static DiagnosticGroup NON_STANDARD_JSDOC = DiagnosticGroups.registerGroup ( "nonStandardJsDocs", new DiagnosticGroup ( RhinoErrorReporter.BAD_JSDOC_ANNOTATION )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P7_Replace_Invocation]^public static DiagnosticGroup NON_STANDARD_JSDOC = DiagnosticGroups.forName ( "nonStandardJsDocs", new DiagnosticGroup ( RhinoErrorReporter.BAD_JSDOC_ANNOTATION )  ) ;^74^75^76^^^74^76^public static DiagnosticGroup NON_STANDARD_JSDOC = DiagnosticGroups.registerGroup ( "nonStandardJsDocs", new DiagnosticGroup ( RhinoErrorReporter.BAD_JSDOC_ANNOTATION )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P8_Replace_Mix]^public static DiagnosticGroup NON_STANDARD_JSDOC  = null ;^74^75^76^^^74^76^public static DiagnosticGroup NON_STANDARD_JSDOC = DiagnosticGroups.registerGroup ( "nonStandardJsDocs", new DiagnosticGroup ( RhinoErrorReporter.BAD_JSDOC_ANNOTATION )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P5_Replace_Variable]^public static DiagnosticGroup ACCESS_CONTROLS = DiagnosticGroups.registerGroup ( "accessControls", new DiagnosticGroup (  VISIBILITY )  ) ;^78^79^80^^^78^80^public static DiagnosticGroup ACCESS_CONTROLS = DiagnosticGroups.registerGroup ( "accessControls", new DiagnosticGroup ( DEPRECATED, VISIBILITY )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P5_Replace_Variable]^public static DiagnosticGroup ACCESS_CONTROLS = DiagnosticGroups.registerGroup ( "accessControls", new DiagnosticGroup ( DEPRECATED )  ) ;^78^79^80^^^78^80^public static DiagnosticGroup ACCESS_CONTROLS = DiagnosticGroups.registerGroup ( "accessControls", new DiagnosticGroup ( DEPRECATED, VISIBILITY )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P5_Replace_Variable]^public static DiagnosticGroup ACCESS_CONTROLS = DiagnosticGroups.registerGroup ( "accessControls", new DiagnosticGroup ( VISIBILITY, DEPRECATED )  ) ;^78^79^80^^^78^80^public static DiagnosticGroup ACCESS_CONTROLS = DiagnosticGroups.registerGroup ( "accessControls", new DiagnosticGroup ( DEPRECATED, VISIBILITY )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P7_Replace_Invocation]^public static DiagnosticGroup ACCESS_CONTROLS = DiagnosticGroups.forName ( "accessControls", new DiagnosticGroup ( DEPRECATED, VISIBILITY )  ) ;^78^79^80^^^78^80^public static DiagnosticGroup ACCESS_CONTROLS = DiagnosticGroups.registerGroup ( "accessControls", new DiagnosticGroup ( DEPRECATED, VISIBILITY )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P8_Replace_Mix]^public static DiagnosticGroup ACCESS_CONTROLS ;^78^79^80^^^78^80^public static DiagnosticGroup ACCESS_CONTROLS = DiagnosticGroups.registerGroup ( "accessControls", new DiagnosticGroup ( DEPRECATED, VISIBILITY )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P3_Replace_Literal]^public static DiagnosticGroup INVALID_CASTS = DiagnosticGroups .registerGroup ( "id", new DiagnosticGroup ( TypeValidator.INVALID_CAST )  ) ;^82^83^84^^^82^84^public static DiagnosticGroup INVALID_CASTS = DiagnosticGroups .registerGroup ( "invalidCasts", new DiagnosticGroup ( TypeValidator.INVALID_CAST )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P7_Replace_Invocation]^public static DiagnosticGroup INVALID_CASTS = DiagnosticGroups .forName ( "invalidCasts", new DiagnosticGroup ( TypeValidator.INVALID_CAST )  ) ;^82^83^84^^^82^84^public static DiagnosticGroup INVALID_CASTS = DiagnosticGroups .registerGroup ( "invalidCasts", new DiagnosticGroup ( TypeValidator.INVALID_CAST )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P8_Replace_Mix]^public static DiagnosticGroup INVALID_CASTS ;^82^83^84^^^82^84^public static DiagnosticGroup INVALID_CASTS = DiagnosticGroups .registerGroup ( "invalidCasts", new DiagnosticGroup ( TypeValidator.INVALID_CAST )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P3_Replace_Literal]^public static DiagnosticGroup FILEOVERVIEW_JSDOC = DiagnosticGroups.registerGroup ( "fileoverviewTagsfileoverviewTag", new DiagnosticGroup ( RhinoErrorReporter.EXTRA_FILEOVERVIEW )  ) ;^86^87^88^^^86^88^public static DiagnosticGroup FILEOVERVIEW_JSDOC = DiagnosticGroups.registerGroup ( "fileoverviewTags", new DiagnosticGroup ( RhinoErrorReporter.EXTRA_FILEOVERVIEW )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P7_Replace_Invocation]^public static DiagnosticGroup FILEOVERVIEW_JSDOC = DiagnosticGroups.forName ( "fileoverviewTags", new DiagnosticGroup ( RhinoErrorReporter.EXTRA_FILEOVERVIEW )  ) ;^86^87^88^^^86^88^public static DiagnosticGroup FILEOVERVIEW_JSDOC = DiagnosticGroups.registerGroup ( "fileoverviewTags", new DiagnosticGroup ( RhinoErrorReporter.EXTRA_FILEOVERVIEW )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P8_Replace_Mix]^public static DiagnosticGroup FILEOVERVIEW_JSDOC  = null ;^86^87^88^^^86^88^public static DiagnosticGroup FILEOVERVIEW_JSDOC = DiagnosticGroups.registerGroup ( "fileoverviewTags", new DiagnosticGroup ( RhinoErrorReporter.EXTRA_FILEOVERVIEW )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P3_Replace_Literal]^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheckric", new DiagnosticGroup ( VarCheck.STRICT_MODULE_DEP_ERROR, CheckGlobalNames.STRICT_MODULE_DEP_QNAME )  ) ;^90^91^92^93^^90^93^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheck", new DiagnosticGroup ( VarCheck.STRICT_MODULE_DEP_ERROR, CheckGlobalNames.STRICT_MODULE_DEP_QNAME )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P5_Replace_Variable]^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheck", new DiagnosticGroup (  CheckGlobalNames.STRICT_MODULE_DEP_QNAME )  ) ;^90^91^92^93^^90^93^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheck", new DiagnosticGroup ( VarCheck.STRICT_MODULE_DEP_ERROR, CheckGlobalNames.STRICT_MODULE_DEP_QNAME )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P5_Replace_Variable]^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheck", new DiagnosticGroup ( VarCheck.STRICT_MODULE_DEP_ERROR )  ) ;^90^91^92^93^^90^93^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheck", new DiagnosticGroup ( VarCheck.STRICT_MODULE_DEP_ERROR, CheckGlobalNames.STRICT_MODULE_DEP_QNAME )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P5_Replace_Variable]^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheck", new DiagnosticGroup ( CheckGlobalNames.STRICT_MODULE_DEP_QNAME, VarCheck.STRICT_MODULE_DEP_ERROR )  ) ;^90^91^92^93^^90^93^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheck", new DiagnosticGroup ( VarCheck.STRICT_MODULE_DEP_ERROR, CheckGlobalNames.STRICT_MODULE_DEP_QNAME )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P7_Replace_Invocation]^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.forName ( "strictModuleDepCheck", new DiagnosticGroup ( VarCheck.STRICT_MODULE_DEP_ERROR, CheckGlobalNames.STRICT_MODULE_DEP_QNAME )  ) ;^90^91^92^93^^90^93^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheck", new DiagnosticGroup ( VarCheck.STRICT_MODULE_DEP_ERROR, CheckGlobalNames.STRICT_MODULE_DEP_QNAME )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P8_Replace_Mix]^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK ;^90^91^92^93^^90^93^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheck", new DiagnosticGroup ( VarCheck.STRICT_MODULE_DEP_ERROR, CheckGlobalNames.STRICT_MODULE_DEP_QNAME )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P3_Replace_Literal]^public static DiagnosticGroup UNKNOWN_DEFINES = DiagnosticGroups.registerGroup ( "efinnknownDefines", new DiagnosticGroup ( ProcessDefines.UNKNOWN_DEFINE_WARNING )  ) ;^95^96^97^^^95^97^public static DiagnosticGroup UNKNOWN_DEFINES = DiagnosticGroups.registerGroup ( "unknownDefines", new DiagnosticGroup ( ProcessDefines.UNKNOWN_DEFINE_WARNING )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P7_Replace_Invocation]^public static DiagnosticGroup UNKNOWN_DEFINES = DiagnosticGroups.forName ( "unknownDefines", new DiagnosticGroup ( ProcessDefines.UNKNOWN_DEFINE_WARNING )  ) ;^95^96^97^^^95^97^public static DiagnosticGroup UNKNOWN_DEFINES = DiagnosticGroups.registerGroup ( "unknownDefines", new DiagnosticGroup ( ProcessDefines.UNKNOWN_DEFINE_WARNING )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P8_Replace_Mix]^public  DiagnosticGroup UNKNOWN_DEFINES = DiagnosticGroups.registerGroup ( "unknownDefines", new DiagnosticGroup ( ProcessDefines.UNKNOWN_DEFINE_WARNING )  ) ;^95^96^97^^^95^97^public static DiagnosticGroup UNKNOWN_DEFINES = DiagnosticGroups.registerGroup ( "unknownDefines", new DiagnosticGroup ( ProcessDefines.UNKNOWN_DEFINE_WARNING )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P3_Replace_Literal]^public static DiagnosticGroup MISSING_PROPERTIES = DiagnosticGroups.registerGroup ( "issingPropertissingProperties", new DiagnosticGroup ( TypeCheck.INEXISTENT_PROPERTY )  ) ;^99^100^101^^^99^101^public static DiagnosticGroup MISSING_PROPERTIES = DiagnosticGroups.registerGroup ( "missingProperties", new DiagnosticGroup ( TypeCheck.INEXISTENT_PROPERTY )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P7_Replace_Invocation]^public static DiagnosticGroup MISSING_PROPERTIES = DiagnosticGroups.forName ( "missingProperties", new DiagnosticGroup ( TypeCheck.INEXISTENT_PROPERTY )  ) ;^99^100^101^^^99^101^public static DiagnosticGroup MISSING_PROPERTIES = DiagnosticGroups.registerGroup ( "missingProperties", new DiagnosticGroup ( TypeCheck.INEXISTENT_PROPERTY )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P8_Replace_Mix]^public static DiagnosticGroup MISSING_PROPERTIES  = null ;^99^100^101^^^99^101^public static DiagnosticGroup MISSING_PROPERTIES = DiagnosticGroups.registerGroup ( "missingProperties", new DiagnosticGroup ( TypeCheck.INEXISTENT_PROPERTY )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P3_Replace_Literal]^public static DiagnosticGroup UNDEFINED_VARIABLES = DiagnosticGroups.registerGroup ( "undendefinedVars", new DiagnosticGroup ( VarCheck.UNDEFINED_VAR_ERROR )  ) ;^103^104^105^^^103^105^public static DiagnosticGroup UNDEFINED_VARIABLES = DiagnosticGroups.registerGroup ( "undefinedVars", new DiagnosticGroup ( VarCheck.UNDEFINED_VAR_ERROR )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P7_Replace_Invocation]^public static DiagnosticGroup UNDEFINED_VARIABLES = DiagnosticGroups.forName ( "undefinedVars", new DiagnosticGroup ( VarCheck.UNDEFINED_VAR_ERROR )  ) ;^103^104^105^^^103^105^public static DiagnosticGroup UNDEFINED_VARIABLES = DiagnosticGroups.registerGroup ( "undefinedVars", new DiagnosticGroup ( VarCheck.UNDEFINED_VAR_ERROR )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P8_Replace_Mix]^public static DiagnosticGroup UNDEFINED_VARIABLES ;^103^104^105^^^103^105^public static DiagnosticGroup UNDEFINED_VARIABLES = DiagnosticGroups.registerGroup ( "undefinedVars", new DiagnosticGroup ( VarCheck.UNDEFINED_VAR_ERROR )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[P5_Replace_Variable]^public static DiagnosticGroup CHECK_VARIABLES = DiagnosticGroups.registerGroup ( "checkVars", new DiagnosticGroup (^107^108^109^110^^107^111^public static DiagnosticGroup CHECK_VARIABLES = DiagnosticGroups.registerGroup ( "checkVars", new DiagnosticGroup ( VarCheck.UNDEFINED_VAR_ERROR,^[CLASS] DiagnosticGroups   [VARIABLES] 
[P7_Replace_Invocation]^public static DiagnosticGroup CHECK_VARIABLES = DiagnosticGroups.forName ( "checkVars", new DiagnosticGroup ( VarCheck.UNDEFINED_VAR_ERROR,^107^108^109^110^^107^111^public static DiagnosticGroup CHECK_VARIABLES = DiagnosticGroups.registerGroup ( "checkVars", new DiagnosticGroup ( VarCheck.UNDEFINED_VAR_ERROR,^[CLASS] DiagnosticGroups   [VARIABLES] 
[P8_Replace_Mix]^public  DiagnosticGroup CHECK_VARIABLES = DiagnosticGroups.registerGroup ( "checkVars", new DiagnosticGroup ( VarCheck.UNDEFINED_VAR_ERROR,^107^108^109^110^^107^111^public static DiagnosticGroup CHECK_VARIABLES = DiagnosticGroups.registerGroup ( "checkVars", new DiagnosticGroup ( VarCheck.UNDEFINED_VAR_ERROR,^[CLASS] DiagnosticGroups   [VARIABLES] 
[P3_Replace_Literal]^public static DiagnosticGroup CHECK_TYPES = DiagnosticGroups.registerGroup ( "checkTypesch", new DiagnosticGroup ( TypeValidator.ALL_DIAGNOSTICS,^113^114^115^116^^113^117^public static DiagnosticGroup CHECK_TYPES = DiagnosticGroups.registerGroup ( "checkTypes", new DiagnosticGroup ( TypeValidator.ALL_DIAGNOSTICS,^[CLASS] DiagnosticGroups   [VARIABLES] 
[P5_Replace_Variable]^public static DiagnosticGroup CHECK_TYPES = DiagnosticGroups.registerGroup ( "checkTypes", new DiagnosticGroup (^113^114^115^116^^113^117^public static DiagnosticGroup CHECK_TYPES = DiagnosticGroups.registerGroup ( "checkTypes", new DiagnosticGroup ( TypeValidator.ALL_DIAGNOSTICS,^[CLASS] DiagnosticGroups   [VARIABLES] 
[P7_Replace_Invocation]^public static DiagnosticGroup CHECK_TYPES = DiagnosticGroups.forName ( "checkTypes", new DiagnosticGroup ( TypeValidator.ALL_DIAGNOSTICS,^113^114^115^116^^113^117^public static DiagnosticGroup CHECK_TYPES = DiagnosticGroups.registerGroup ( "checkTypes", new DiagnosticGroup ( TypeValidator.ALL_DIAGNOSTICS,^[CLASS] DiagnosticGroups   [VARIABLES] 
[P8_Replace_Mix]^public  DiagnosticGroup CHECK_TYPES = DiagnosticGroups.registerGroup ( "checkTypes", new DiagnosticGroup ( TypeValidator.ALL_DIAGNOSTICS,^113^114^115^116^^113^117^public static DiagnosticGroup CHECK_TYPES = DiagnosticGroups.registerGroup ( "checkTypes", new DiagnosticGroup ( TypeValidator.ALL_DIAGNOSTICS,^[CLASS] DiagnosticGroups   [VARIABLES] 
[P5_Replace_Variable]^groupsByName.put ( DIAGNOSTIC_GROUP_NAMES, group ) ;^38^^^^^36^40^groupsByName.put ( name, group ) ;^[CLASS] DiagnosticGroups  [METHOD] registerGroup [RETURN_TYPE] DiagnosticGroup   String name DiagnosticGroup group [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[P5_Replace_Variable]^groupsByName.put ( name, STRICT_MODULE_DEP_CHECK ) ;^38^^^^^36^40^groupsByName.put ( name, group ) ;^[CLASS] DiagnosticGroups  [METHOD] registerGroup [RETURN_TYPE] DiagnosticGroup   String name DiagnosticGroup group [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[P5_Replace_Variable]^groupsByName.put (  group ) ;^38^^^^^36^40^groupsByName.put ( name, group ) ;^[CLASS] DiagnosticGroups  [METHOD] registerGroup [RETURN_TYPE] DiagnosticGroup   String name DiagnosticGroup group [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[P5_Replace_Variable]^groupsByName.put ( name ) ;^38^^^^^36^40^groupsByName.put ( name, group ) ;^[CLASS] DiagnosticGroups  [METHOD] registerGroup [RETURN_TYPE] DiagnosticGroup   String name DiagnosticGroup group [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[P5_Replace_Variable]^groupsByName.put ( group, name ) ;^38^^^^^36^40^groupsByName.put ( name, group ) ;^[CLASS] DiagnosticGroups  [METHOD] registerGroup [RETURN_TYPE] DiagnosticGroup   String name DiagnosticGroup group [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[P7_Replace_Invocation]^groupsByName .get ( DIAGNOSTIC_GROUP_NAMES )  ;^38^^^^^36^40^groupsByName.put ( name, group ) ;^[CLASS] DiagnosticGroups  [METHOD] registerGroup [RETURN_TYPE] DiagnosticGroup   String name DiagnosticGroup group [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[P14_Delete_Statement]^^38^39^^^^36^40^groupsByName.put ( name, group ) ; return group;^[CLASS] DiagnosticGroups  [METHOD] registerGroup [RETURN_TYPE] DiagnosticGroup   String name DiagnosticGroup group [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[P11_Insert_Donor_Statement]^return groupsByName.get ( name ) ;groupsByName.put ( name, group ) ;^38^^^^^36^40^groupsByName.put ( name, group ) ;^[CLASS] DiagnosticGroups  [METHOD] registerGroup [RETURN_TYPE] DiagnosticGroup   String name DiagnosticGroup group [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[P5_Replace_Variable]^return UNDEFINED_VARIABLES;^39^^^^^36^40^return group;^[CLASS] DiagnosticGroups  [METHOD] registerGroup [RETURN_TYPE] DiagnosticGroup   String name DiagnosticGroup group [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[P8_Replace_Mix]^return STRICT_MODULE_DEP_CHECK;^39^^^^^36^40^return group;^[CLASS] DiagnosticGroups  [METHOD] registerGroup [RETURN_TYPE] DiagnosticGroup   String name DiagnosticGroup group [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[P5_Replace_Variable]^return groupsByName.get ( DIAGNOSTIC_GROUP_NAMES ) ;^44^^^^^43^45^return groupsByName.get ( name ) ;^[CLASS] DiagnosticGroups  [METHOD] forName [RETURN_TYPE] DiagnosticGroup   String name [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[P5_Replace_Variable]^return name.get ( groupsByName ) ;^44^^^^^43^45^return groupsByName.get ( name ) ;^[CLASS] DiagnosticGroups  [METHOD] forName [RETURN_TYPE] DiagnosticGroup   String name [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[P14_Delete_Statement]^^44^^^^^43^45^return groupsByName.get ( name ) ;^[CLASS] DiagnosticGroups  [METHOD] forName [RETURN_TYPE] DiagnosticGroup   String name [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[P1_Replace_Type]^for  ( char name : diagnosticGroups )  {^124^^^^^122^129^for  ( String name : diagnosticGroups )  {^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[P5_Replace_Variable]^DiagnosticGroup group = forName ( DIAGNOSTIC_GROUP_NAMES ) ;^125^^^^^122^129^DiagnosticGroup group = forName ( name ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[P14_Delete_Statement]^^125^126^127^128^^122^129^DiagnosticGroup group = forName ( name ) ; Preconditions.checkNotNull ( group, "No warning class for name: " + name ) ; options.setWarningLevel ( group, level ) ; }^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[P2_Replace_Operator]^Preconditions.checkNotNull ( group, "No warning class for name: "  ^  name ) ;^126^^^^^122^129^Preconditions.checkNotNull ( group, "No warning class for name: " + name ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[P3_Replace_Literal]^Preconditions.checkNotNull ( group, " warning class " + name ) ;^126^^^^^122^129^Preconditions.checkNotNull ( group, "No warning class for name: " + name ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[P5_Replace_Variable]^Preconditions.checkNotNull ( VISIBILITY, "No warning class for name: " + name ) ;^126^^^^^122^129^Preconditions.checkNotNull ( group, "No warning class for name: " + name ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[P5_Replace_Variable]^Preconditions.checkNotNull ( group, "No warning class for DIAGNOSTIC_GROUP_NAMES: " + name ) ;^126^^^^^122^129^Preconditions.checkNotNull ( group, "No warning class for name: " + name ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[P5_Replace_Variable]^Preconditions.checkNotNull (  "No warning class for name: " + name ) ;^126^^^^^122^129^Preconditions.checkNotNull ( group, "No warning class for name: " + name ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[P5_Replace_Variable]^Preconditions.checkNotNull ( name, "No warning class for group: " + name ) ;^126^^^^^122^129^Preconditions.checkNotNull ( group, "No warning class for name: " + name ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[P8_Replace_Mix]^Preconditions.checkNotNull ( NON_STANDARD_JSDOC, "No warning class for name: " + name ) ;^126^^^^^122^129^Preconditions.checkNotNull ( group, "No warning class for name: " + name ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[P14_Delete_Statement]^^126^127^128^^^122^129^Preconditions.checkNotNull ( group, "No warning class for name: " + name ) ; options.setWarningLevel ( group, level ) ; }^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[P5_Replace_Variable]^options.setWarningLevel ( NON_STANDARD_JSDOC, level ) ;^127^^^^^122^129^options.setWarningLevel ( group, level ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[P5_Replace_Variable]^options.setWarningLevel (  level ) ;^127^^^^^122^129^options.setWarningLevel ( group, level ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[P5_Replace_Variable]^options.setWarningLevel ( group ) ;^127^^^^^122^129^options.setWarningLevel ( group, level ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[P5_Replace_Variable]^options.setWarningLevel ( level, group ) ;^127^^^^^122^129^options.setWarningLevel ( group, level ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[P14_Delete_Statement]^^127^^^^^122^129^options.setWarningLevel ( group, level ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
