[P3_Replace_Literal]^static final DiagnosticType UNSAFE_NAMESPACE_WARNING = DiagnosticType.warning ( "_UNSAFE_SC_UNSAFE_NAMESPACE", "incomplete alias created for namespace {0}" ) ;^76^77^78^79^^76^79^static final DiagnosticType UNSAFE_NAMESPACE_WARNING = DiagnosticType.warning ( "JSC_UNSAFE_NAMESPACE", "incomplete alias created for namespace {0}" ) ;^[CLASS] CollapseProperties 1   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType UNSAFE_NAMESPACE_WARNING = DiagnosticType.warning ( "JSC_UNSAFE_NAMESPACE", "incomplete alias created for namespace {0}mplete alias created for namespa" ) ;^76^77^78^79^^76^79^static final DiagnosticType UNSAFE_NAMESPACE_WARNING = DiagnosticType.warning ( "JSC_UNSAFE_NAMESPACE", "incomplete alias created for namespace {0}" ) ;^[CLASS] CollapseProperties 1   [VARIABLES] 
[P8_Replace_Mix]^static  DiagnosticType UNSAFE_NAMESPACE_WARNING = DiagnosticType.warning ( "JSC_UNSAFE_NAMESPACE", "incomplete alias created for namespace {0}" ) ;^76^77^78^79^^76^79^static final DiagnosticType UNSAFE_NAMESPACE_WARNING = DiagnosticType.warning ( "JSC_UNSAFE_NAMESPACE", "incomplete alias created for namespace {0}" ) ;^[CLASS] CollapseProperties 1   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType NAMESPACE_REDEFINED_WARNING = DiagnosticType.warning ( "FINSC_NAMESPACE_REDEFINED", "namespace {0} should not be redefined" ) ;^81^82^83^84^^81^84^static final DiagnosticType NAMESPACE_REDEFINED_WARNING = DiagnosticType.warning ( "JSC_NAMESPACE_REDEFINED", "namespace {0} should not be redefined" ) ;^[CLASS] CollapseProperties 1   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType NAMESPACE_REDEFINED_WARNING = DiagnosticType.warning ( "JSC_NAMESPACE_REDEFINED", "namespac" ) ;^81^82^83^84^^81^84^static final DiagnosticType NAMESPACE_REDEFINED_WARNING = DiagnosticType.warning ( "JSC_NAMESPACE_REDEFINED", "namespace {0} should not be redefined" ) ;^[CLASS] CollapseProperties 1   [VARIABLES] 
[P8_Replace_Mix]^final DiagnosticType NAMESPACE_REDEFINED_WARNING = DiagnosticType.warning ( "JSC_NAMESPACE_REDEFINED", "namespace {0} should not be redefined" ) ;^81^82^83^84^^81^84^static final DiagnosticType NAMESPACE_REDEFINED_WARNING = DiagnosticType.warning ( "JSC_NAMESPACE_REDEFINED", "namespace {0} should not be redefined" ) ;^[CLASS] CollapseProperties 1   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType UNSAFE_THIS = DiagnosticType.warning ( "JSC_UNSAFE_THSC_UNSAFE_THIS", "dangerous use of 'this' in static method {0}" ) ;^86^87^88^^^86^88^static final DiagnosticType UNSAFE_THIS = DiagnosticType.warning ( "JSC_UNSAFE_THIS", "dangerous use of 'this' in static method {0}" ) ;^[CLASS] CollapseProperties 1   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType UNSAFE_THIS = DiagnosticType.warning ( "JSC_UNSAFE_THIS", "dangerous use of 'this' angerous use of 'this' in static method {0}" ) ;^86^87^88^^^86^88^static final DiagnosticType UNSAFE_THIS = DiagnosticType.warning ( "JSC_UNSAFE_THIS", "dangerous use of 'this' in static method {0}" ) ;^[CLASS] CollapseProperties 1   [VARIABLES] 
[P8_Replace_Mix]^static  DiagnosticType UNSAFE_THIS = DiagnosticType.warning ( "JSC_UNSAFE_THIS", "dangerous use of 'this' in static method {0}" ) ;^86^87^88^^^86^88^static final DiagnosticType UNSAFE_THIS = DiagnosticType.warning ( "JSC_UNSAFE_THIS", "dangerous use of 'this' in static method {0}" ) ;^[CLASS] CollapseProperties 1   [VARIABLES] 
[P8_Replace_Mix]^private  boolean collapsePropertiesOnExternTypes;^98^^^^^93^103^private final boolean collapsePropertiesOnExternTypes;^[CLASS] CollapseProperties 1   [VARIABLES] 
[P12_Insert_Condition]^if  ( collapsePropertiesOnExternTypes )  { private final boolean collapsePropertiesOnExternTypes; }^98^^^^^93^103^private final boolean collapsePropertiesOnExternTypes;^[CLASS] CollapseProperties 1   [VARIABLES] 
[P8_Replace_Mix]^this.compiler =  null;^112^^^^^110^115^this.compiler = compiler;^[CLASS] CollapseProperties 1  [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean,boolean)   AbstractCompiler compiler boolean collapsePropertiesOnExternTypes boolean inlineAliases [VARIABLES] AbstractCompiler  compiler  List  globalNames  boolean  collapsePropertiesOnExternTypes  inlineAliases  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P5_Replace_Variable]^this.collapsePropertiesOnExternTypes = inlineAliases;^113^^^^^110^115^this.collapsePropertiesOnExternTypes = collapsePropertiesOnExternTypes;^[CLASS] CollapseProperties 1  [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean,boolean)   AbstractCompiler compiler boolean collapsePropertiesOnExternTypes boolean inlineAliases [VARIABLES] AbstractCompiler  compiler  List  globalNames  boolean  collapsePropertiesOnExternTypes  inlineAliases  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P5_Replace_Variable]^this.inlineAliases = collapsePropertiesOnExternTypes;^114^^^^^110^115^this.inlineAliases = inlineAliases;^[CLASS] CollapseProperties 1  [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean,boolean)   AbstractCompiler compiler boolean collapsePropertiesOnExternTypes boolean inlineAliases [VARIABLES] AbstractCompiler  compiler  List  globalNames  boolean  collapsePropertiesOnExternTypes  inlineAliases  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P5_Replace_Variable]^if  ( inlineAliases )  {^122^^^^^120^149^if  ( collapsePropertiesOnExternTypes )  {^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P15_Unwrap_Block]^namespace = new com.google.javascript.jscomp.GlobalNamespace(compiler, externs, root);^122^123^124^125^126^120^149^if  ( collapsePropertiesOnExternTypes )  { namespace = new GlobalNamespace ( compiler, externs, root ) ; } else { namespace = new GlobalNamespace ( compiler, root ) ; }^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P16_Remove_Block]^^122^123^124^125^126^120^149^if  ( collapsePropertiesOnExternTypes )  { namespace = new GlobalNamespace ( compiler, externs, root ) ; } else { namespace = new GlobalNamespace ( compiler, root ) ; }^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^namespace = new GlobalNamespace ( compiler, externs ) ;^125^^^^^122^126^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^namespace = new GlobalNamespace ( compiler ) ;^125^^^^^122^126^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^namespace = new GlobalNamespace (  root ) ;^125^^^^^122^126^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^namespace = new GlobalNamespace ( root, compiler ) ;^125^^^^^122^126^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P11_Insert_Donor_Statement]^namespace = new GlobalNamespace ( compiler, externs, root ) ;namespace = new GlobalNamespace ( compiler, root ) ;^125^^^^^122^126^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P4_Replace_Constructor]^namespace = new GlobalNamespace ( compiler,  root ) ;^123^^^^^120^149^namespace = new GlobalNamespace ( compiler, externs, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P4_Replace_Constructor]^namespace = new GlobalNamespace ( compiler, externs ) ;^123^^^^^120^149^namespace = new GlobalNamespace ( compiler, externs, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^namespace = new GlobalNamespace ( compiler, root, root ) ;^123^^^^^120^149^namespace = new GlobalNamespace ( compiler, externs, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^namespace = new GlobalNamespace (  externs, root ) ;^123^^^^^120^149^namespace = new GlobalNamespace ( compiler, externs, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^namespace = new GlobalNamespace ( externs, compiler, root ) ;^123^^^^^120^149^namespace = new GlobalNamespace ( compiler, externs, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^namespace = new GlobalNamespace ( compiler, root, externs ) ;^123^^^^^120^149^namespace = new GlobalNamespace ( compiler, externs, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^namespace = new GlobalNamespace ( root, externs, compiler ) ;^123^^^^^120^149^namespace = new GlobalNamespace ( compiler, externs, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P11_Insert_Donor_Statement]^namespace = new GlobalNamespace ( compiler, root ) ;namespace = new GlobalNamespace ( compiler, externs, root ) ;^123^^^^^120^149^namespace = new GlobalNamespace ( compiler, externs, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^namespace = new GlobalNamespace ( compiler, externs, externs ) ;^123^^^^^120^149^namespace = new GlobalNamespace ( compiler, externs, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^namespace = new GlobalNamespace ( compiler, externs ) ;^125^^^^^120^149^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^namespace = new GlobalNamespace ( compiler ) ;^125^^^^^120^149^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^namespace = new GlobalNamespace (  root ) ;^125^^^^^120^149^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^namespace = new GlobalNamespace ( root, compiler ) ;^125^^^^^120^149^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P11_Insert_Donor_Statement]^namespace = new GlobalNamespace ( compiler, externs, root ) ;namespace = new GlobalNamespace ( compiler, root ) ;^125^^^^^120^149^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^if  ( collapsePropertiesOnExternTypes )  {^128^^^^^120^149^if  ( inlineAliases )  {^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P7_Replace_Invocation]^if  ( updateFunctionDeclarationAtFunctionNode )  {^128^^^^^120^149^if  ( inlineAliases )  {^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P9_Replace_Statement]^if  ( initialized )  {^128^^^^^120^149^if  ( inlineAliases )  {^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P15_Unwrap_Block]^inlineAliases(namespace);^128^129^130^^^120^149^if  ( inlineAliases )  { inlineAliases ( namespace ) ; }^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P16_Remove_Block]^^128^129^130^^^120^149^if  ( inlineAliases )  { inlineAliases ( namespace ) ; }^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P7_Replace_Invocation]^updateFunctionDeclarationAtFunctionNode ( namespace ) ;^129^^^^^120^149^inlineAliases ( namespace ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P14_Delete_Statement]^^129^^^^^120^149^inlineAliases ( namespace ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P12_Insert_Condition]^if  ( inlineAliasIfPossible ( ref, namespace )  )  { inlineAliases ( namespace ) ; }^129^^^^^120^149^inlineAliases ( namespace ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P7_Replace_Invocation]^nameMap = namespace.scanNewNodes (  ) ;^131^^^^^120^149^nameMap = namespace.getNameIndex (  ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P7_Replace_Invocation]^nameMap = namespace .getNameForest (  )  ;^131^^^^^120^149^nameMap = namespace.getNameIndex (  ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P8_Replace_Mix]^nameMap =  null.getNameIndex (  ) ;^131^^^^^120^149^nameMap = namespace.getNameIndex (  ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P11_Insert_Donor_Statement]^globalNames = namespace.getNameForest (  ) ;nameMap = namespace.getNameIndex (  ) ;^131^^^^^120^149^nameMap = namespace.getNameIndex (  ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P14_Delete_Statement]^^131^132^^^^120^149^nameMap = namespace.getNameIndex (  ) ; globalNames = namespace.getNameForest (  ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P11_Insert_Donor_Statement]^Name p = nameMap.get ( qName ) ;nameMap = namespace.getNameIndex (  ) ;^131^^^^^120^149^nameMap = namespace.getNameIndex (  ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P7_Replace_Invocation]^globalNames = namespace.scanNewNodes (  ) ;^132^^^^^120^149^globalNames = namespace.getNameForest (  ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P8_Replace_Mix]^globalNames =  null.getNameForest (  ) ;^132^^^^^120^149^globalNames = namespace.getNameForest (  ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P11_Insert_Donor_Statement]^nameMap = namespace.getNameIndex (  ) ;globalNames = namespace.getNameForest (  ) ;^132^^^^^120^149^globalNames = namespace.getNameForest (  ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P7_Replace_Invocation]^globalNames = namespace .getNameIndex (  )  ;^132^^^^^120^149^globalNames = namespace.getNameForest (  ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P14_Delete_Statement]^^132^^^^^120^149^globalNames = namespace.getNameForest (  ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = parent.getParent (  ) ;globalNames = namespace.getNameForest (  ) ;^132^^^^^120^149^globalNames = namespace.getNameForest (  ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = varNode.getParent (  ) ;globalNames = namespace.getNameForest (  ) ;^132^^^^^120^149^globalNames = namespace.getNameForest (  ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P14_Delete_Statement]^^133^^^^^120^149^checkNamespaces (  ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^flattenReferencesToCollapsibleDescendantNames (  n.name ) ;^136^^^^^120^149^flattenReferencesToCollapsibleDescendantNames ( n, n.name ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^flattenReferencesToCollapsibleDescendantNames ( n ) ;^136^^^^^120^149^flattenReferencesToCollapsibleDescendantNames ( n, n.name ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P7_Replace_Invocation]^flattenReferencesTo ( n, n.name ) ;^136^^^^^120^149^flattenReferencesToCollapsibleDescendantNames ( n, n.name ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P14_Delete_Statement]^^136^^^^^120^149^flattenReferencesToCollapsibleDescendantNames ( n, n.name ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P11_Insert_Donor_Statement]^collapseDeclarationOfNameAndDescendants ( n, n.name ) ;flattenReferencesToCollapsibleDescendantNames ( n, n.name ) ;^136^^^^^120^149^flattenReferencesToCollapsibleDescendantNames ( n, n.name ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P11_Insert_Donor_Statement]^flattenReferencesToCollapsibleDescendantNames ( p, propAlias ) ;flattenReferencesToCollapsibleDescendantNames ( n, n.name ) ;^136^^^^^120^149^flattenReferencesToCollapsibleDescendantNames ( n, n.name ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^collapseDeclarationOfNameAndDescendants (  n.name ) ;^143^^^^^120^149^collapseDeclarationOfNameAndDescendants ( n, n.name ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P5_Replace_Variable]^collapseDeclarationOfNameAndDescendants ( n ) ;^143^^^^^120^149^collapseDeclarationOfNameAndDescendants ( n, n.name ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P7_Replace_Invocation]^flattenReferencesToCollapsibleDescendantNames ( n, n.name ) ;^143^^^^^120^149^collapseDeclarationOfNameAndDescendants ( n, n.name ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P14_Delete_Statement]^^143^^^^^120^149^collapseDeclarationOfNameAndDescendants ( n, n.name ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P11_Insert_Donor_Statement]^collapseDeclarationOfNameAndDescendants ( p, appendPropForAlias ( alias, p.name )  ) ;collapseDeclarationOfNameAndDescendants ( n, n.name ) ;^143^^^^^120^149^collapseDeclarationOfNameAndDescendants ( n, n.name ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P11_Insert_Donor_Statement]^flattenReferencesToCollapsibleDescendantNames ( n, n.name ) ;collapseDeclarationOfNameAndDescendants ( n, n.name ) ;^143^^^^^120^149^collapseDeclarationOfNameAndDescendants ( n, n.name ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P3_Replace_Literal]^new Normalize.PropogateConstantAnnotations ( compiler, true ) ;^148^^^^^120^149^new Normalize.PropogateConstantAnnotations ( compiler, false ) ;^[CLASS] CollapseProperties 1  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  externs  root  List  globalNames  Map  nameMap  GlobalNamespace  namespace  Name  n  
[P7_Replace_Invocation]^Deque<Name> workList = new ArrayDeque<Name> ( namespace.scanNewNodes (  )  ) ;^168^^^^^153^183^Deque<Name> workList = new ArrayDeque<Name> ( namespace.getNameForest (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P8_Replace_Mix]^Deque<Name> workList = new ArrayDeque<Name> ( namespace .getNameIndex (  )   ) ;^168^^^^^153^183^Deque<Name> workList = new ArrayDeque<Name> ( namespace.getNameForest (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P14_Delete_Statement]^^168^^^^^153^183^Deque<Name> workList = new ArrayDeque<Name> ( namespace.getNameForest (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P2_Replace_Operator]^if  ( name.globalSets == 1 || name.localSets == 0 && name.aliasingGets > 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P2_Replace_Operator]^if  ( name.globalSets >= 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P2_Replace_Operator]^if  ( name.globalSets == 1 && name.localSets < 0 && name.aliasingGets > 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P2_Replace_Operator]^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets >= 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P2_Replace_Operator]^if  ( name.globalSets <= 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P3_Replace_Literal]^if  ( name.globalSets == 7 && name.localSets == 0 && name.aliasingGets > 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P3_Replace_Literal]^if  ( name.globalSets == 1 && name.localSets == -4 && name.aliasingGets > -4 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P3_Replace_Literal]^if  ( name.globalSets == 1 && name.localSets == 8 && name.aliasingGets > 8 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  ( name.globalSets == 1 ) {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  (  name.localSets == 0 && name.aliasingGets > 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  ( (name.globalSets == 1 && name.localSets == 0) )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  ( name.localSets == 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  ( name.aliasingGets > 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  ( ref.type == ALIASING_GET && isLocal() )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  ( ref.type == ALIASING_GET )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P8_Replace_Mix]^if  ( name.globalSets == 2 && name.localSets == 0 && name.aliasingGets > 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P2_Replace_Operator]^if  ( ref.type == Type.ALIASING_GET || ref.scope.isLocal (  )  )  {^178^^^^^172^185^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P2_Replace_Operator]^if  ( ref.type != Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^178^^^^^172^185^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  ( ref.type == Type.ALIASING_GET ) {^178^^^^^172^185^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  (  ref.scope.isLocal (  )  )  {^178^^^^^172^185^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  ( ref.type == ALIASING_GET )  {^178^^^^^172^185^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P15_Unwrap_Block]^if (inlineAliasIfPossible(ref, namespace)) {    name.removeRef(ref);};^178^179^180^181^182^172^185^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {  if  ( inlineAliasIfPossible ( ref, namespace )  )  { name.removeRef ( ref ) ; }^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P16_Remove_Block]^^178^179^180^181^182^172^185^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {  if  ( inlineAliasIfPossible ( ref, namespace )  )  { name.removeRef ( ref ) ; }^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P13_Insert_Block]^if  (  ( ref.type )  ==  ( ALIASING_GET )  )  {     warnAboutNamespaceAliasing ( name, ref ) ; }^178^^^^^172^185^[Delete]^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P5_Replace_Variable]^if  ( inlineAliasIfPossible (  namespace )  )  {^180^^^^^172^185^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P5_Replace_Variable]^if  ( inlineAliasIfPossible ( ref )  )  {^180^^^^^172^185^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P5_Replace_Variable]^if  ( inlineAliasIfPossible ( refspace )  )  {^180^^^^^172^185^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P5_Replace_Variable]^if  ( inlineAliasIfPossible ( namespace, ref )  )  {^180^^^^^172^185^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P5_Replace_Variable]^if  ( inlineAliasIfPossible ( ref, name )  )  {^180^^^^^172^185^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P5_Replace_Variable]^if  ( inlineAliasIfPossible ( name, refspace )  )  {^180^^^^^172^185^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P7_Replace_Invocation]^if  ( warnAboutNamespaceAliasing ( ref, namespace )  )  {^180^^^^^172^185^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P15_Unwrap_Block]^name.removeRef(ref);^180^181^182^^^172^185^if  ( inlineAliasIfPossible ( ref, namespace )  )  { name.removeRef ( ref ) ; }^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P16_Remove_Block]^^180^181^182^^^172^185^if  ( inlineAliasIfPossible ( ref, namespace )  )  { name.removeRef ( ref ) ; }^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P14_Delete_Statement]^^181^^^^^172^185^name.removeRef ( ref ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P11_Insert_Donor_Statement]^gramps.removeChild ( varNode ) ;name.removeRef ( ref ) ;^181^^^^^172^185^name.removeRef ( ref ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P11_Insert_Donor_Statement]^varNode.removeChild ( ref.node ) ;name.removeRef ( ref ) ;^181^^^^^172^185^name.removeRef ( ref ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P11_Insert_Donor_Statement]^objlit.removeChild ( key ) ;name.removeRef ( ref ) ;^181^^^^^172^185^name.removeRef ( ref ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P11_Insert_Donor_Statement]^parent.removeChild ( rvalue ) ;name.removeRef ( ref ) ;^181^^^^^172^185^name.removeRef ( ref ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P13_Insert_Block]^if  ( inlineAliasIfPossible ( ref, namespace )  )  {     name.removeRef ( ref ) ; }^180^^^^^172^185^[Delete]^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P5_Replace_Variable]^if  ( inlineAliasIfPossible ( ref, namespacespace )  )  {^180^^^^^172^185^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P8_Replace_Mix]^name .addRef ( ref )  ;^181^^^^^172^185^name.removeRef ( ref ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P14_Delete_Statement]^^176^^^^^172^185^List<Ref> refs = Lists.newArrayList ( name.refs ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P2_Replace_Operator]^if  ( ref.type == Type.ALIASING_GET || ref.scope.isLocal (  )  )  {^178^^^^^163^193^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P2_Replace_Operator]^if  ( ref.type != Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^178^^^^^163^193^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  ( ref.type == Type.ALIASING_GET ) {^178^^^^^163^193^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  (  ref.scope.isLocal (  )  )  {^178^^^^^163^193^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  ( ref.type == ALIASING_GET )  {^178^^^^^163^193^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P15_Unwrap_Block]^if (inlineAliasIfPossible(ref, namespace)) {    name.removeRef(ref);};^178^179^180^181^182^163^193^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {  if  ( inlineAliasIfPossible ( ref, namespace )  )  { name.removeRef ( ref ) ; }^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P16_Remove_Block]^^178^179^180^181^182^163^193^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {  if  ( inlineAliasIfPossible ( ref, namespace )  )  { name.removeRef ( ref ) ; }^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P13_Insert_Block]^if  (  ( ref.type )  ==  ( ALIASING_GET )  )  {     warnAboutNamespaceAliasing ( name, ref ) ; }^178^^^^^163^193^[Delete]^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P5_Replace_Variable]^if  ( inlineAliasIfPossible (  namespace )  )  {^180^^^^^165^195^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P5_Replace_Variable]^if  ( inlineAliasIfPossible ( ref )  )  {^180^^^^^165^195^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P5_Replace_Variable]^if  ( inlineAliasIfPossible ( refspace )  )  {^180^^^^^165^195^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P5_Replace_Variable]^if  ( inlineAliasIfPossible ( namespace, ref )  )  {^180^^^^^165^195^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P5_Replace_Variable]^if  ( inlineAliasIfPossible ( name, refspace )  )  {^180^^^^^165^195^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P7_Replace_Invocation]^if  ( warnAboutNamespaceAliasing ( ref, namespace )  )  {^180^^^^^165^195^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P15_Unwrap_Block]^name.removeRef(ref);^180^181^182^^^165^195^if  ( inlineAliasIfPossible ( ref, namespace )  )  { name.removeRef ( ref ) ; }^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P16_Remove_Block]^^180^181^182^^^165^195^if  ( inlineAliasIfPossible ( ref, namespace )  )  { name.removeRef ( ref ) ; }^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P14_Delete_Statement]^^181^^^^^166^196^name.removeRef ( ref ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P11_Insert_Donor_Statement]^gramps.removeChild ( varNode ) ;name.removeRef ( ref ) ;^181^^^^^166^196^name.removeRef ( ref ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P11_Insert_Donor_Statement]^varNode.removeChild ( ref.node ) ;name.removeRef ( ref ) ;^181^^^^^166^196^name.removeRef ( ref ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P11_Insert_Donor_Statement]^objlit.removeChild ( key ) ;name.removeRef ( ref ) ;^181^^^^^166^196^name.removeRef ( ref ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P11_Insert_Donor_Statement]^parent.removeChild ( rvalue ) ;name.removeRef ( ref ) ;^181^^^^^166^196^name.removeRef ( ref ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P13_Insert_Block]^if  ( inlineAliasIfPossible ( ref, namespace )  )  {     name.removeRef ( ref ) ; }^180^^^^^165^195^[Delete]^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P8_Replace_Mix]^name .addRef ( ref )  ;^181^^^^^166^196^name.removeRef ( ref ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P2_Replace_Operator]^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  || name.aliasingGets == 0 && name.props != null )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P2_Replace_Operator]^if  (  ( name.type == Name.Type.OBJECTLIT && name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P2_Replace_Operator]^if  (  ( name.type != Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P2_Replace_Operator]^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets != 0 && name.props != null )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P2_Replace_Operator]^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props == null )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P3_Replace_Literal]^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == -6 && name.props != null )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  (  ( name.type == Name.Type.OBJECTLIT ) {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  (  name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  ( ((name.type == OBJECTLIT) || (name.type == FUNCTION) && name.aliasingGets == 0) )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  ( (name.type == OBJECTLIT || name.type == FUNCTION) )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  ( name.type == OBJECTLIT )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  ( name.type == FUNCTION )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  ( name.aliasingGets == 0 )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P6_Replace_Expression]^if  ( name.props != null )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P8_Replace_Mix]^if  (  name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 - 2 && name.props != null )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P14_Delete_Statement]^^194^^^^^189^195^workList.addAll ( name.props ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P8_Replace_Mix]^Name name = 2.pop (  ) ;^170^^^^^155^185^Name name = workList.pop (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P7_Replace_Invocation]^Name name = workList .isEmpty (  )  ;^170^^^^^155^185^Name name = workList.pop (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P14_Delete_Statement]^^170^^^^^155^185^Name name = workList.pop (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P14_Delete_Statement]^^176^^^^^161^191^List<Ref> refs = Lists.newArrayList ( name.refs ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P14_Delete_Statement]^^194^^^^^179^209^workList.addAll ( name.props ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P2_Replace_Operator]^if  ( name.globalSets != 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P2_Replace_Operator]^if  ( name.globalSets == 1 && name.localSets > 0 && name.aliasingGets > 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P3_Replace_Literal]^if  ( name.globalSets == -7 && name.localSets == 0 && name.aliasingGets > 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P3_Replace_Literal]^if  ( name.globalSets == 1 && name.localSets == 4 && name.aliasingGets > 4 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P3_Replace_Literal]^if  ( name.globalSets == 1 && name.localSets == -1 && name.aliasingGets > -1 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P8_Replace_Mix]^if  ( name.globalSets == 1L && name.localSets == 0 && name.aliasingGets > 0 )  {^172^173^^^^157^187^if  ( name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P2_Replace_Operator]^if  ( ref.type < Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^178^^^^^172^185^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P2_Replace_Operator]^if  ( ref.type < Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^178^^^^^163^193^if  ( ref.type == Type.ALIASING_GET && ref.scope.isLocal (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P5_Replace_Variable]^if  ( inlineAliasIfPossible ( ref, namespacespace )  )  {^180^^^^^165^195^if  ( inlineAliasIfPossible ( ref, namespace )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P3_Replace_Literal]^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 6 && name.props != null )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P8_Replace_Mix]^if  (  name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 >> 2 && name.props != null )  {^189^190^191^^^174^204^if  (  ( name.type == Name.Type.OBJECTLIT || name.type == Name.Type.FUNCTION )  && name.aliasingGets == 0 && name.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P7_Replace_Invocation]^while  ( !workList .pop (  )   )  {^169^^^^^154^184^while  ( !workList.isEmpty (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P14_Delete_Statement]^^169^170^^^^154^184^while  ( !workList.isEmpty (  )  )  { Name name = workList.pop (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P5_Replace_Variable]^Name name = null.pop (  ) ;^170^^^^^155^185^Name name = workList.pop (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P8_Replace_Mix]^Name name = 1.pop (  ) ;^170^^^^^155^185^Name name = workList.pop (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliases [RETURN_TYPE] void   GlobalNamespace namespace [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  
[P8_Replace_Mix]^Node aliasParent = alias.node .cloneTree (  )  ;^204^^^^^189^219^Node aliasParent = alias.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node currentParent = gramps.getParent (  ) ;Node aliasParent = alias.node.getParent (  ) ;^204^^^^^189^219^Node aliasParent = alias.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node newNode = alias.node.cloneTree (  ) ;Node aliasParent = alias.node.getParent (  ) ;^204^^^^^189^219^Node aliasParent = alias.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getNext (  ) ;Node aliasParent = alias.node.getParent (  ) ;^204^^^^^189^219^Node aliasParent = alias.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node varParent = ref.node.getAncestor ( 3 ) ;Node aliasParent = alias.node.getParent (  ) ;^204^^^^^189^219^Node aliasParent = alias.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node rParent = r.node.getParent (  ) ;Node aliasParent = alias.node.getParent (  ) ;^204^^^^^189^219^Node aliasParent = alias.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node gramps = parent.getParent (  ) ;Node aliasParent = alias.node.getParent (  ) ;^204^^^^^189^219^Node aliasParent = alias.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node greatGreatGramps = greatGramps.getParent (  ) ;Node aliasParent = alias.node.getParent (  ) ;^204^^^^^189^219^Node aliasParent = alias.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node gramps = varNode.getParent (  ) ;Node aliasParent = alias.node.getParent (  ) ;^204^^^^^189^219^Node aliasParent = alias.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;Node aliasParent = alias.node.getParent (  ) ;^204^^^^^189^219^Node aliasParent = alias.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node greatGramps = gramps.getParent (  ) ;Node aliasParent = alias.node.getParent (  ) ;^204^^^^^189^219^Node aliasParent = alias.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node varNode = ref.node.getParent (  ) ;Node aliasParent = alias.node.getParent (  ) ;^204^^^^^189^219^Node aliasParent = alias.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node gramps = ref.node.getAncestor ( 2 ) ;Node aliasParent = alias.node.getParent (  ) ;^204^^^^^189^219^Node aliasParent = alias.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^204^^^^^189^219^Node aliasParent = alias.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P2_Replace_Operator]^if  ( aliasParent.getType (  )  != Token.NAME )  {^205^^^^^190^220^if  ( aliasParent.getType (  )  == Token.NAME )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P6_Replace_Expression]^if  ( aliasRefs.isWellDefined() && aliasRefs.firstReferenceIsAssigningDeclaration() && aliasRefs.isAssignedOnce() )  {^205^^^^^190^220^if  ( aliasParent.getType (  )  == Token.NAME )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P6_Replace_Expression]^if  ( aliasRefs.isWellDefined( && aliasRefs.firstReferenceIsAssigningDeclaration()) )  {^205^^^^^190^220^if  ( aliasParent.getType (  )  == Token.NAME )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P6_Replace_Expression]^if  ( size - 1 )  {^205^^^^^190^220^if  ( aliasParent.getType (  )  == Token.NAME )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P6_Replace_Expression]^if  ( i < size )  {^205^^^^^190^220^if  ( aliasParent.getType (  )  == Token.NAME )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^if  ( aliasParent.putBooleanProp (  )  == Token.NAME )  {^205^^^^^190^220^if  ( aliasParent.getType (  )  == Token.NAME )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P9_Replace_Statement]^if  ( n.getType (  )  == Token.THIS )  {^205^^^^^190^220^if  ( aliasParent.getType (  )  == Token.NAME )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P9_Replace_Statement]^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^205^^^^^190^220^if  ( aliasParent.getType (  )  == Token.NAME )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P9_Replace_Statement]^if  ( value.getType (  )  == Token.FUNCTION )  {^205^^^^^190^220^if  ( aliasParent.getType (  )  == Token.NAME )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P2_Replace_Operator]^if  ( aliasRefs.isWellDefined (  ) || aliasRefs.firstReferenceIsAssigningDeclaration (  ) && aliasRefs.isAssignedOnce (  )  )  {^217^218^219^^^202^232^if  ( aliasRefs.isWellDefined (  ) && aliasRefs.firstReferenceIsAssigningDeclaration (  ) && aliasRefs.isAssignedOnce (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P6_Replace_Expression]^if  ( aliasRefs.isWellDefined (  ) ) {^217^218^219^^^202^232^if  ( aliasRefs.isWellDefined (  ) && aliasRefs.firstReferenceIsAssigningDeclaration (  ) && aliasRefs.isAssignedOnce (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P6_Replace_Expression]^if  (  aliasRefs.firstReferenceIsAssigningDeclaration (  ) && aliasRefs.isAssignedOnce (  )  )  {^217^218^219^^^202^232^if  ( aliasRefs.isWellDefined (  ) && aliasRefs.firstReferenceIsAssigningDeclaration (  ) && aliasRefs.isAssignedOnce (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P6_Replace_Expression]^if  ( aliasRefs.isWellDefined( && aliasRefs.firstReferenceIsAssigningDeclaration()) )  {^217^218^219^^^202^232^if  ( aliasRefs.isWellDefined (  ) && aliasRefs.firstReferenceIsAssigningDeclaration (  ) && aliasRefs.isAssignedOnce (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P6_Replace_Expression]^if  ( size - 1 )  {^217^218^219^^^202^232^if  ( aliasRefs.isWellDefined (  ) && aliasRefs.firstReferenceIsAssigningDeclaration (  ) && aliasRefs.isAssignedOnce (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P6_Replace_Expression]^if  ( i < size )  {^217^218^219^^^202^232^if  ( aliasRefs.isWellDefined (  ) && aliasRefs.firstReferenceIsAssigningDeclaration (  ) && aliasRefs.isAssignedOnce (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^if  ( aliasRefs .isAssignedOnce (  )  && aliasRefs.firstReferenceIsAssigningDeclaration (  ) && aliasRefs.isAssignedOnce (  )  )  {^217^218^219^^^202^232^if  ( aliasRefs.isWellDefined (  ) && aliasRefs.firstReferenceIsAssigningDeclaration (  ) && aliasRefs.isAssignedOnce (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^if  ( aliasRefs.isWellDefined (  ) && aliasRefs .isAssignedOnce (  )  && aliasRefs.isAssignedOnce (  )  )  {^217^218^219^^^202^232^if  ( aliasRefs.isWellDefined (  ) && aliasRefs.firstReferenceIsAssigningDeclaration (  ) && aliasRefs.isAssignedOnce (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^if  ( aliasRefs.isWellDefined (  ) && aliasRefs.firstReferenceIsAssigningDeclaration (  ) && aliasRefs .isWellDefined (  )   )  {^217^218^219^^^202^232^if  ( aliasRefs.isWellDefined (  ) && aliasRefs.firstReferenceIsAssigningDeclaration (  ) && aliasRefs.isAssignedOnce (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P1_Replace_Type]^for  (  long  i = 1; i < size; i++ )  {^223^^^^^217^240^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P2_Replace_Operator]^for  ( int i = 1; i <= size; i++ )  {^223^^^^^217^240^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^for  ( int i = i; i < size; i++ )  {^223^^^^^217^240^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^ReferenceCollectingCallback.Reference aliasRef = aliasRefs.references .get ( i )  ;^224^225^^^^217^240^ReferenceCollectingCallback.Reference aliasRef = aliasRefs.references.get ( i ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^Node newNode = alias.node .getParent (  )  ;^227^^^^^217^240^Node newNode = alias.node.cloneTree (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getNext (  ) ;Node newNode = alias.node.cloneTree (  ) ;^227^^^^^217^240^Node newNode = alias.node.cloneTree (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;Node newNode = alias.node.cloneTree (  ) ;^227^^^^^217^240^Node newNode = alias.node.cloneTree (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node rParent = r.node.getParent (  ) ;Node newNode = alias.node.cloneTree (  ) ;^227^^^^^217^240^Node newNode = alias.node.cloneTree (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node gramps = varNode.getParent (  ) ;Node newNode = alias.node.cloneTree (  ) ;^227^^^^^217^240^Node newNode = alias.node.cloneTree (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node aliasParent = alias.node.getParent (  ) ;Node newNode = alias.node.cloneTree (  ) ;^227^^^^^217^240^Node newNode = alias.node.cloneTree (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;Node newNode = alias.node.cloneTree (  ) ;^227^^^^^217^240^Node newNode = alias.node.cloneTree (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node varNode = ref.node.getParent (  ) ;Node newNode = alias.node.cloneTree (  ) ;^227^^^^^217^240^Node newNode = alias.node.cloneTree (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P8_Replace_Mix]^aliasRefs.references .get ( i )  ;^225^^^^^217^240^aliasRefs.references.get ( i ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^225^^^^^217^240^aliasRefs.references.get ( i ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^int size = aliasRefs.references.size (  ) ;aliasRefs.references.get ( i ) ;^225^^^^^217^240^aliasRefs.references.get ( i ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^227^^^^^217^240^Node newNode = alias.node.cloneTree (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , aliasParent ) ;^228^^^^^217^240^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  )  ) ;^228^^^^^217^240^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^aliasRef.getParent (  ) .replaceChild ( newNode.getNameNode (  ) , aliasRef ) ;^228^^^^^217^240^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^aliasRef.getParent (  )  .replaceChild ( aliasParent )  ;^228^^^^^217^240^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P8_Replace_Mix]^aliasRef.getParent (  ) .replaceChild ( 3.getNameNode (  ) , newNode ) ;^228^^^^^217^240^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^228^229^^^^217^240^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ; newNodes.add ( newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^parent.replaceChild ( ref.node, nameNode ) ;aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^228^^^^^217^240^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^aliasRef .cloneTree (  )  .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^228^^^^^217^240^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^aliasRef.getParent (  ) .replaceChild ( aliasRef .getParent (  )  , newNode ) ;^228^^^^^217^240^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^228^^^^^217^240^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^newNodes.add ( aliasParent ) ;^229^^^^^217^240^newNodes.add ( newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^229^^^^^217^240^newNodes.add ( newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^varNode.addChildToBack ( nameNode ) ;newNodes.add ( newNode ) ;^229^^^^^217^240^newNodes.add ( newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^return false;^239^^^^^217^240^return true;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P1_Replace_Type]^short  size = aliasRefs.references.size (  ) ;^221^^^^^217^240^int size = aliasRefs.references.size (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^int size = aliasRefs.references.size() - 1 ;^221^^^^^217^240^int size = aliasRefs.references.size (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^int size = aliasRefs.references.get (  ) ;^221^^^^^217^240^int size = aliasRefs.references.size (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P2_Replace_Operator]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size  >=  1 ) ;^222^^^^^217^240^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - size ) ;^222^^^^^217^240^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( i - 1 ) ;^222^^^^^217^240^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P1_Replace_Type]^for  (  short  i = 1; i < size; i++ )  {^223^^^^^217^240^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^for  ( int i = -5; i < size; i++ )  {^223^^^^^217^240^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^int size = aliasRefs.references.size() + 3 ;^221^^^^^217^240^int size = aliasRefs.references.size (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^221^222^^^^217^240^int size = aliasRefs.references.size (  ) ; Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^aliasRefs.references.get ( i ) ;int size = aliasRefs.references.size (  ) ;^221^^^^^217^240^int size = aliasRefs.references.size (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P2_Replace_Operator]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size  ||  1 ) ;^222^^^^^217^240^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size  ) ;^222^^^^^217^240^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^222^^^^^217^240^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^aliasParent.replaceChild (  new Node ( Token.NULL )  ) ;^233^^^^^217^240^aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^233^234^^^^217^240^aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ; compiler.reportCodeChange (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ;^233^^^^^217^240^aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^varParent.replaceChild ( gramps, varNode ) ;aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ;^233^^^^^217^240^aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^parent.replaceChild ( ref.node, nameNode ) ;aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ;^233^^^^^217^240^aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^compiler.report (  ) ;^234^^^^^217^240^compiler.reportCodeChange (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^234^^^^^217^240^compiler.reportCodeChange (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^namespace.scanNewNodes ( alias.scope ) ;^238^^^^^217^240^namespace.scanNewNodes ( alias.scope, newNodes ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^namespace.scanNewNodes (  newNodes ) ;^238^^^^^217^240^namespace.scanNewNodes ( alias.scope, newNodes ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^namespace .getNameIndex (  )  ;^238^^^^^217^240^namespace.scanNewNodes ( alias.scope, newNodes ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^238^239^^^^217^240^namespace.scanNewNodes ( alias.scope, newNodes ) ; return true;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P1_Replace_Type]^for  (  short  i = 1; i < size; i++ )  {^223^^^^^208^238^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P2_Replace_Operator]^for  ( int i = 1; i <= size; i++ )  {^223^^^^^208^238^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^for  ( int i = i; i < size; i++ )  {^223^^^^^208^238^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^ReferenceCollectingCallback.Reference aliasRef = aliasRefs.references .get ( i )  ;^224^225^^^^209^239^ReferenceCollectingCallback.Reference aliasRef = aliasRefs.references.get ( i ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^Node newNode = alias.node .getParent (  )  ;^227^^^^^212^242^Node newNode = alias.node.cloneTree (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getNext (  ) ;Node newNode = alias.node.cloneTree (  ) ;^227^^^^^212^242^Node newNode = alias.node.cloneTree (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;Node newNode = alias.node.cloneTree (  ) ;^227^^^^^212^242^Node newNode = alias.node.cloneTree (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node rParent = r.node.getParent (  ) ;Node newNode = alias.node.cloneTree (  ) ;^227^^^^^212^242^Node newNode = alias.node.cloneTree (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node gramps = varNode.getParent (  ) ;Node newNode = alias.node.cloneTree (  ) ;^227^^^^^212^242^Node newNode = alias.node.cloneTree (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node aliasParent = alias.node.getParent (  ) ;Node newNode = alias.node.cloneTree (  ) ;^227^^^^^212^242^Node newNode = alias.node.cloneTree (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;Node newNode = alias.node.cloneTree (  ) ;^227^^^^^212^242^Node newNode = alias.node.cloneTree (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^Node varNode = ref.node.getParent (  ) ;Node newNode = alias.node.cloneTree (  ) ;^227^^^^^212^242^Node newNode = alias.node.cloneTree (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P8_Replace_Mix]^aliasRefs.references .get ( size )  ;^225^^^^^210^240^aliasRefs.references.get ( i ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^225^^^^^210^240^aliasRefs.references.get ( i ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^int size = aliasRefs.references.size (  ) ;aliasRefs.references.get ( i ) ;^225^^^^^210^240^aliasRefs.references.get ( i ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^227^228^^^^212^242^Node newNode = alias.node.cloneTree (  ) ; aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , aliasParent ) ;^228^^^^^213^243^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  )  ) ;^228^^^^^213^243^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^aliasRef.getParent (  ) .replaceChild ( newNode.getNameNode (  ) , aliasRef ) ;^228^^^^^213^243^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^aliasRef .cloneTree (  )  .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^228^^^^^213^243^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^228^229^^^^213^243^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ; newNodes.add ( newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^parent.replaceChild ( ref.node, nameNode ) ;aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^228^^^^^213^243^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^aliasRef.getParent (  ) .replaceChild ( aliasRef .getParent (  )  , newNode ) ;^228^^^^^213^243^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^228^^^^^213^243^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^newNodes.add ( aliasParent ) ;^229^^^^^214^244^newNodes.add ( newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^229^^^^^214^244^newNodes.add ( newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^varNode.addChildToBack ( nameNode ) ;newNodes.add ( newNode ) ;^229^^^^^214^244^newNodes.add ( newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^return false;^239^^^^^224^254^return true;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^new ReferenceCollectingCallback (  ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR, Predicates.<Var>equalTo ( aliasVar )  ) ;^210^211^212^^^195^225^new ReferenceCollectingCallback ( compiler, ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR, Predicates.<Var>equalTo ( aliasVar )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^new ReferenceCollectingCallback ( compiler, ReferenceCollectingCallback. Predicates.<Var>equalTo ( aliasVar )  ) ;^210^211^212^^^195^225^new ReferenceCollectingCallback ( compiler, ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR, Predicates.<Var>equalTo ( aliasVar )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^new ReferenceCollectingCallback ( aliasVar, ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR, Predicates.<Var>equalTo ( compiler )  ) ;^210^211^212^^^195^225^new ReferenceCollectingCallback ( compiler, ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR, Predicates.<Var>equalTo ( aliasVar )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^( new NodeTraversal ( compiler )  ) .traverseAtScope ( scope ) ;^213^^^^^198^228^( new NodeTraversal ( compiler, collector )  ) .traverseAtScope ( scope ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^( new NodeTraversal (  collector )  ) .traverseAtScope ( scope ) ;^213^^^^^198^228^( new NodeTraversal ( compiler, collector )  ) .traverseAtScope ( scope ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^( new NodeTraversal ( collector, compiler )  ) .traverseAtScope ( scope ) ;^213^^^^^198^228^( new NodeTraversal ( compiler, collector )  ) .traverseAtScope ( scope ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^Var aliasVar = scope.getVar ( newNode.getString (  )  ) ;^208^^^^^193^223^Var aliasVar = scope.getVar ( aliasParent.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^Var aliasVar = aliasParent.getVar ( scope.getString (  )  ) ;^208^^^^^193^223^Var aliasVar = scope.getVar ( aliasParent.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^Var aliasVar = scope.getVar ( aliasParent.newString (  )  ) ;^208^^^^^193^223^Var aliasVar = scope.getVar ( aliasParent.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^ReferenceCollectingCallback collector = new ReferenceCollectingCallback (  ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR, Predicates.<Var>equalTo ( aliasVar )  ) ;^209^210^211^212^^194^224^ReferenceCollectingCallback collector = new ReferenceCollectingCallback ( compiler, ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR, Predicates.<Var>equalTo ( aliasVar )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^ReferenceCollectingCallback collector = new ReferenceCollectingCallback ( compiler, ReferenceCollectingCallback. Predicates.<Var>equalTo ( aliasVar )  ) ;^209^210^211^212^^194^224^ReferenceCollectingCallback collector = new ReferenceCollectingCallback ( compiler, ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR, Predicates.<Var>equalTo ( aliasVar )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^ReferenceCollectingCallback collector = new ReferenceCollectingCallback ( aliasVar, ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR, Predicates.<Var>equalTo ( compiler )  ) ;^209^210^211^212^^194^224^ReferenceCollectingCallback collector = new ReferenceCollectingCallback ( compiler, ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR, Predicates.<Var>equalTo ( aliasVar )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^ReferenceCollection aliasRefs = aliasVar.getReferenceCollection ( collector ) ;^215^216^^^^200^230^ReferenceCollection aliasRefs = collector.getReferenceCollection ( aliasVar ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P1_Replace_Type]^short  size = aliasRefs.references.size (  ) ;^221^^^^^206^236^int size = aliasRefs.references.size (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^int size = aliasRefs.references.size() - 1 ;^221^^^^^206^236^int size = aliasRefs.references.size (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^int size = aliasRefs.references.get (  ) ;^221^^^^^206^236^int size = aliasRefs.references.size (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P2_Replace_Operator]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size  |  1 ) ;^222^^^^^207^237^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size  ) ;^222^^^^^207^237^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( i - 1 ) ;^222^^^^^207^237^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^for  ( int i = 9; i < size; i++ )  {^223^^^^^208^238^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^208^^^^^193^223^Var aliasVar = scope.getVar ( aliasParent.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^212^213^^^^197^227^Predicates.<Var>equalTo ( aliasVar )  ) ; ( new NodeTraversal ( compiler, collector )  ) .traverseAtScope ( scope ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^( new NodeTraversal ( compiler, scope )  ) .traverseAtScope ( collector ) ;^213^^^^^198^228^( new NodeTraversal ( compiler, collector )  ) .traverseAtScope ( scope ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^( new NodeTraversal ( scope, collector )  ) .traverseAtScope ( compiler ) ;^213^^^^^198^228^( new NodeTraversal ( compiler, collector )  ) .traverseAtScope ( scope ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^( new NodeTraversal ( compiler, collector )  ) .traverse ( scope ) ;^213^^^^^198^228^( new NodeTraversal ( compiler, collector )  ) .traverseAtScope ( scope ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^213^^^^^198^228^( new NodeTraversal ( compiler, collector )  ) .traverseAtScope ( scope ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^216^^^^^201^231^collector.getReferenceCollection ( aliasVar ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^&& aliasRefs .isAssignedOnce (  )  && aliasRefs.isAssignedOnce (  )  )  {^218^219^^^^203^233^&& aliasRefs.firstReferenceIsAssigningDeclaration (  ) && aliasRefs.isAssignedOnce (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^&& aliasRefs .isWellDefined (  )   )  {^219^^^^^204^234^&& aliasRefs.isAssignedOnce (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^219^220^221^^^204^234^&& aliasRefs.isAssignedOnce (  )  )  {  int size = aliasRefs.references.size (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^int size = aliasRefs.references.size() + 4 ;^221^^^^^206^236^int size = aliasRefs.references.size (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^221^^^^^206^236^int size = aliasRefs.references.size (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^aliasRefs.references.get ( i ) ;int size = aliasRefs.references.size (  ) ;^221^^^^^206^236^int size = aliasRefs.references.size (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P2_Replace_Operator]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size  <=  1 ) ;^222^^^^^207^237^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^222^^^^^207^237^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^aliasRef.getParent (  ) .replaceChild ( this.getNameNode (  ) , newNode ) ;^228^^^^^213^243^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^aliasRef.getParent (  )  .replaceChild ( newNode )  ;^228^^^^^213^243^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^aliasParent.replaceChild (  new Node ( Token.NULL )  ) ;^233^^^^^218^248^aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^233^^^^^218^248^aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ;^233^^^^^218^248^aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^varParent.replaceChild ( gramps, varNode ) ;aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ;^233^^^^^218^248^aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P11_Insert_Donor_Statement]^parent.replaceChild ( ref.node, nameNode ) ;aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ;^233^^^^^218^248^aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^compiler.report (  ) ;^234^^^^^219^249^compiler.reportCodeChange (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^234^^^^^219^249^compiler.reportCodeChange (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^namespace.scanNewNodes ( alias.scope ) ;^238^^^^^223^253^namespace.scanNewNodes ( alias.scope, newNodes ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^namespace.scanNewNodes (  newNodes ) ;^238^^^^^223^253^namespace.scanNewNodes ( alias.scope, newNodes ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^namespace .getNameIndex (  )  ;^238^^^^^223^253^namespace.scanNewNodes ( alias.scope, newNodes ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^238^^^^^223^253^namespace.scanNewNodes ( alias.scope, newNodes ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P8_Replace_Mix]^ReferenceCollectingCallback.Reference aliasRef = aliasRefs.references .get ( size )  ;^224^225^^^^217^240^ReferenceCollectingCallback.Reference aliasRef = aliasRefs.references.get ( i ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^aliasRefs.references .get ( size )  ;^225^^^^^217^240^aliasRefs.references.get ( i ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^227^228^^^^217^240^Node newNode = alias.node.cloneTree (  ) ; aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^int size = aliasRefs.references.size() + 0 ;^221^^^^^217^240^int size = aliasRefs.references.size (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^for  ( int i = 5; i < size; i++ )  {^223^^^^^217^240^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^int size = aliasRefs.references.size() - 9 ;^221^^^^^217^240^int size = aliasRefs.references.size (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P2_Replace_Operator]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size  !=  1 ) ;^222^^^^^217^240^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P8_Replace_Mix]^aliasRef .cloneTree (  )  .replaceChild ( aliasRef.getNameNode (  ) , aliasParent ) ;^228^^^^^217^240^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^aliasRef.getParent (  ) .replaceChild ( 0.getNameNode (  ) , newNode ) ;^228^^^^^217^240^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^aliasParent .replaceChild ( aliasParent )  ;^233^^^^^217^240^aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P1_Replace_Type]^for  (  long  i = 1; i < size; i++ )  {^223^^^^^208^238^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^for  ( int i = 8; i < size; i++ )  {^223^^^^^208^238^for  ( int i = 1; i < size; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^ReferenceCollectingCallback.Reference aliasRef = aliasRefs.references .get ( size )  ;^224^225^^^^209^239^ReferenceCollectingCallback.Reference aliasRef = aliasRefs.references.get ( i ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^aliasRef.getParent (  ) .replaceChild ( 1.getNameNode (  ) , newNode ) ;^228^^^^^213^243^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^aliasParent.replaceChild ( alias.node, new Node ( Token.this )  ) ;^233^^^^^218^248^aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^int size = aliasRefs.references.size() + 0 ;^221^^^^^206^236^int size = aliasRefs.references.size (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P2_Replace_Operator]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size  ==  1 ) ;^222^^^^^207^237^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^if  ( newNode.getType (  )  == Token.NAME )  {^205^^^^^190^220^if  ( aliasParent.getType (  )  == Token.NAME )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^if  ( aliasParent .getString (  )   == Token.NAME )  {^205^^^^^190^220^if  ( aliasParent.getType (  )  == Token.NAME )  {^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^212^^^^^197^227^Predicates.<Var>equalTo ( aliasVar )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^int size = aliasRefs.references.size() + 3 ;^221^^^^^206^236^int size = aliasRefs.references.size (  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P2_Replace_Operator]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size  >  1 ) ;^222^^^^^207^237^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - size ) ;^222^^^^^207^237^Set<Node> newNodes = Sets.newHashSetWithExpectedSize ( size - 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P5_Replace_Variable]^aliasRef.getParent (  ) .replaceChild ( 2.getNameNode (  ) , newNode ) ;^228^^^^^213^243^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P7_Replace_Invocation]^aliasParent .replaceChild ( aliasParent )  ;^233^^^^^218^248^aliasParent.replaceChild ( alias.node, new Node ( Token.NULL )  ) ;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P14_Delete_Statement]^^238^239^^^^223^253^namespace.scanNewNodes ( alias.scope, newNodes ) ; return true;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P3_Replace_Literal]^return true;^243^^^^^228^258^return false;^[CLASS] CollapseProperties 1  [METHOD] inlineAliasIfPossible [RETURN_TYPE] boolean   Ref alias GlobalNamespace namespace [VARIABLES] ReferenceCollectingCallback  collector  Set  newNodes  Var  aliasVar  Reference  aliasRef  Node  aliasParent  newNode  GlobalNamespace  namespace  int  i  size  AbstractCompiler  compiler  Ref  alias  boolean  collapsePropertiesOnExternTypes  inlineAliases  Scope  scope  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  ReferenceCollection  aliasRefs  
[P2_Replace_Operator]^if  ( name.isNamespace (  )  || name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P2_Replace_Operator]^if  ( name.isNamespace (  )  && name.refs == null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P2_Replace_Operator]^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 && name.localSets + name.globalSets > 1 )  )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P2_Replace_Operator]^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets >= 0 || name.localSets + name.globalSets > 1 )  )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P2_Replace_Operator]^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets == 0 || name.localSets + name.globalSets > 1 )  )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P2_Replace_Operator]^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets  >  name.globalSets > 1 )  )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P3_Replace_Literal]^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets >  )  )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 ) {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  (  name.localSets + name.globalSets > 1 )  )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  ( name.isNamespace( && name.refs != null) )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  ( name.refs != null )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  ( (name.aliasingGets > 0 || (name.localSets + name.globalSets) > 1) )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  ( name.aliasingGets > 0 )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  (  ( name.localSets )  +  ( name.globalSets )  > 1 )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  ( name.localSets + name.globalSets )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  ( name.declaration != null )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  ( ref.type == SET_FROM_GLOBAL || ref.type == SET_FROM_LOCAL )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  ( ref.type == SET_FROM_GLOBAL )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  ( ref.type == SET_FROM_LOCAL )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  ( ref.type == ALIASING_GET )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P7_Replace_Invocation]^if  ( name.addRef (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P8_Replace_Mix]^if  ( name.isNamespace (  )  && name.refs != this && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P13_Insert_Block]^if  (  (  ( ref.type )  ==  ( SET_FROM_GLOBAL )  )  ||  (  ( ref.type )  ==  ( SET_FROM_LOCAL )  )  )  {     if  ( initialized )  {         warnAboutNamespaceRedefinition ( name, ref ) ;     }     initialized = true; }else     if  (  ( ref.type )  ==  ( ALIASING_GET )  )  {         warnAboutNamespaceAliasing ( name, ref ) ;     }^252^^^^^250^269^[Delete]^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P2_Replace_Operator]^if  ( ref.type == Ref.Type.SET_FROM_GLOBAL && ref.type == Ref.Type.SET_FROM_LOCAL )  {^256^257^^^^250^269^if  ( ref.type == Ref.Type.SET_FROM_GLOBAL || ref.type == Ref.Type.SET_FROM_LOCAL )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P2_Replace_Operator]^if  ( ref.type != Ref.Type.SET_FROM_GLOBAL || ref.type == Ref.Type.SET_FROM_LOCAL )  {^256^257^^^^250^269^if  ( ref.type == Ref.Type.SET_FROM_GLOBAL || ref.type == Ref.Type.SET_FROM_LOCAL )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P2_Replace_Operator]^if  ( ref.type >= Ref.Type.SET_FROM_GLOBAL || ref.type == Ref.Type.SET_FROM_LOCAL )  {^256^257^^^^250^269^if  ( ref.type == Ref.Type.SET_FROM_GLOBAL || ref.type == Ref.Type.SET_FROM_LOCAL )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  ( ref.type == Ref.Type.SET_FROM_GLOBAL ) {^256^257^^^^250^269^if  ( ref.type == Ref.Type.SET_FROM_GLOBAL || ref.type == Ref.Type.SET_FROM_LOCAL )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  (  ref.type == Ref.Type.SET_FROM_LOCAL )  {^256^257^^^^250^269^if  ( ref.type == Ref.Type.SET_FROM_GLOBAL || ref.type == Ref.Type.SET_FROM_LOCAL )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  ( ref.type == SET_FROM_GLOBAL )  {^256^257^^^^250^269^if  ( ref.type == Ref.Type.SET_FROM_GLOBAL || ref.type == Ref.Type.SET_FROM_LOCAL )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  ( ref.type == SET_FROM_LOCAL )  {^256^257^^^^250^269^if  ( ref.type == Ref.Type.SET_FROM_GLOBAL || ref.type == Ref.Type.SET_FROM_LOCAL )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  ( ref.type == ALIASING_GET )  {^256^257^^^^250^269^if  ( ref.type == Ref.Type.SET_FROM_GLOBAL || ref.type == Ref.Type.SET_FROM_LOCAL )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P15_Unwrap_Block]^if (initialized) {    warnAboutNamespaceRedefinition(name, ref);}; initialized = true;^256^257^258^259^260^250^269^if  ( ref.type == Ref.Type.SET_FROM_GLOBAL || ref.type == Ref.Type.SET_FROM_LOCAL )  { if  ( initialized )  { warnAboutNamespaceRedefinition ( name, ref ) ; }^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P16_Remove_Block]^^256^257^258^259^260^250^269^if  ( ref.type == Ref.Type.SET_FROM_GLOBAL || ref.type == Ref.Type.SET_FROM_LOCAL )  { if  ( initialized )  { warnAboutNamespaceRedefinition ( name, ref ) ; }^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P2_Replace_Operator]^} else if  ( ref.type <= Ref.Type.ALIASING_GET )  {^263^^^^^250^269^} else if  ( ref.type == Ref.Type.ALIASING_GET )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P6_Replace_Expression]^} else {^263^^^^^250^269^} else if  ( ref.type == Ref.Type.ALIASING_GET )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P8_Replace_Mix]^}  if  ( ref.type == Ref.Type.ALIASING_GET )  {^263^^^^^250^269^} else if  ( ref.type == Ref.Type.ALIASING_GET )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P15_Unwrap_Block]^warnAboutNamespaceAliasing(name, ref);^263^264^265^^^250^269^} else if  ( ref.type == Ref.Type.ALIASING_GET )  { warnAboutNamespaceAliasing ( name, ref ) ; }^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P16_Remove_Block]^^263^264^265^^^250^269^} else if  ( ref.type == Ref.Type.ALIASING_GET )  { warnAboutNamespaceAliasing ( name, ref ) ; }^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P13_Insert_Block]^if  (  (  ( ref.type )  ==  ( ALIASING_GET )  )  &&  ( isLocal (  )  )  )  {     if  ( inlineAliasIfPossible ( ref, namespace )  )  {         name.removeRef ( ref ) ;     } }^263^^^^^250^269^[Delete]^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P5_Replace_Variable]^warnAboutNamespaceAliasing (  ref ) ;^264^^^^^250^269^warnAboutNamespaceAliasing ( name, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P5_Replace_Variable]^warnAboutNamespaceAliasing ( name ) ;^264^^^^^250^269^warnAboutNamespaceAliasing ( name, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P5_Replace_Variable]^warnAboutNamespaceAliasing ( ref, name ) ;^264^^^^^250^269^warnAboutNamespaceAliasing ( name, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P7_Replace_Invocation]^warnAboutNamespaceRedefinition ( name, ref ) ;^264^^^^^250^269^warnAboutNamespaceAliasing ( name, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P14_Delete_Statement]^^264^^^^^250^269^warnAboutNamespaceAliasing ( name, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P11_Insert_Donor_Statement]^warnAboutNamespaceRedefinition ( name, ref ) ;warnAboutNamespaceAliasing ( name, ref ) ;^264^^^^^250^269^warnAboutNamespaceAliasing ( name, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P5_Replace_Variable]^if  ( inlineAliases )  {^258^^^^^250^269^if  ( initialized )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P15_Unwrap_Block]^warnAboutNamespaceRedefinition(name, ref);^258^259^260^^^250^269^if  ( initialized )  { warnAboutNamespaceRedefinition ( name, ref ) ; }^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P16_Remove_Block]^^258^259^260^^^250^269^if  ( initialized )  { warnAboutNamespaceRedefinition ( name, ref ) ; }^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P5_Replace_Variable]^warnAboutNamespaceRedefinition (  ref ) ;^259^^^^^250^269^warnAboutNamespaceRedefinition ( name, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P5_Replace_Variable]^warnAboutNamespaceRedefinition ( name ) ;^259^^^^^250^269^warnAboutNamespaceRedefinition ( name, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P5_Replace_Variable]^warnAboutNamespaceRedefinition ( ref, name ) ;^259^^^^^250^269^warnAboutNamespaceRedefinition ( name, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P7_Replace_Invocation]^warnAboutNamespaceAliasing ( name, ref ) ;^259^^^^^250^269^warnAboutNamespaceRedefinition ( name, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P14_Delete_Statement]^^259^^^^^250^269^warnAboutNamespaceRedefinition ( name, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P11_Insert_Donor_Statement]^warnAboutNamespaceAliasing ( name, ref ) ;warnAboutNamespaceRedefinition ( name, ref ) ;^259^^^^^250^269^warnAboutNamespaceRedefinition ( name, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P13_Insert_Block]^if  ( initialized )  {     warnAboutNamespaceRedefinition ( name, ref ) ; }^259^^^^^250^269^[Delete]^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P3_Replace_Literal]^initialized = false;^262^^^^^250^269^initialized = true;^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P2_Replace_Operator]^boolean initialized = name.declaration == null;^254^^^^^250^269^boolean initialized = name.declaration != null;^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P2_Replace_Operator]^} else if  ( ref.type > Ref.Type.ALIASING_GET )  {^263^^^^^250^269^} else if  ( ref.type == Ref.Type.ALIASING_GET )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P2_Replace_Operator]^} else if  ( ref.type < Ref.Type.ALIASING_GET )  {^263^^^^^250^269^} else if  ( ref.type == Ref.Type.ALIASING_GET )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P5_Replace_Variable]^for  ( Name name : 0.values (  )  )  {^251^^^^^250^269^for  ( Name name : nameMap.values (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P7_Replace_Invocation]^if  ( name .canEliminate (  )   && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^252^253^^^^250^269^if  ( name.isNamespace (  )  && name.refs != null && ( name.aliasingGets > 0 || name.localSets + name.globalSets > 1 )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkNamespaces [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  name  
[P5_Replace_Variable]^compiler.report ( JSError.make ( ref.sourceName.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^278^279^280^^^277^281^compiler.report ( JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^compiler.report ( JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING.fullName (  )  )  ) ;^278^279^280^^^277^281^compiler.report ( JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^compiler.report ( JSError.make (  ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^278^279^280^^^277^281^compiler.report ( JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^compiler.report ( JSError.make ( ref.sourceName,  UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^278^279^280^^^277^281^compiler.report ( JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^compiler.report ( JSError.make ( ref.sourceName, ref.node,  nameObj.fullName (  )  )  ) ;^278^279^280^^^277^281^compiler.report ( JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.addRef (  )  )  ) ;^278^279^280^^^277^281^compiler.report ( JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P8_Replace_Mix]^compiler.report ( JSError .make ( UNSAFE_THIS )   ) ;^278^279^280^^^277^281^compiler.report ( JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P14_Delete_Statement]^^278^279^280^^^277^281^compiler.report ( JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^JSError.make ( ref.sourceName.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^279^280^^^^277^281^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING.fullName (  )  )  ) ;^279^280^^^^277^281^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^JSError.make (  ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^279^280^^^^277^281^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^JSError.make ( ref.sourceName,  UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^279^280^^^^277^281^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^JSError.make ( ref.sourceName, ref.node,  nameObj.fullName (  )  )  ) ;^279^280^^^^277^281^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P7_Replace_Invocation]^JSError .make ( NAMESPACE_REDEFINED_WARNING )   ) ;^279^280^^^^277^281^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P7_Replace_Invocation]^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.addRef (  )  )  ) ;^279^280^^^^277^281^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P7_Replace_Invocation]^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj .canEliminate (  )   )  ) ;^279^280^^^^277^281^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P14_Delete_Statement]^^279^280^^^^277^281^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P11_Insert_Donor_Statement]^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^279^280^^^^277^281^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P11_Insert_Donor_Statement]^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^279^280^^^^277^281^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P11_Insert_Donor_Statement]^NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^279^280^^^^277^281^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P11_Insert_Donor_Statement]^UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^279^280^^^^277^281^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P7_Replace_Invocation]^UNSAFE_NAMESPACE_WARNING, nameObj.addRef (  )  )  ) ;^280^^^^^277^281^UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P7_Replace_Invocation]^UNSAFE_NAMESPACE_WARNING, nameObj .canEliminate (  )   )  ) ;^280^^^^^277^281^UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P14_Delete_Statement]^^280^^^^^277^281^UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P11_Insert_Donor_Statement]^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^280^^^^^277^281^UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P11_Insert_Donor_Statement]^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^280^^^^^277^281^UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P11_Insert_Donor_Statement]^NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^280^^^^^277^281^UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P11_Insert_Donor_Statement]^UNSAFE_THIS, name.fullName (  )  )  ) ;UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^280^^^^^277^281^UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceAliasing [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^compiler.report ( JSError.make ( ref.sourceName.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^290^291^292^^^289^293^compiler.report ( JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^compiler.report ( JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING.fullName (  )  )  ) ;^290^291^292^^^289^293^compiler.report ( JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^compiler.report ( JSError.make (  ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^290^291^292^^^289^293^compiler.report ( JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^compiler.report ( JSError.make ( ref.sourceName,  NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^290^291^292^^^289^293^compiler.report ( JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^compiler.report ( JSError.make ( ref.sourceName, ref.node,  nameObj.fullName (  )  )  ) ;^290^291^292^^^289^293^compiler.report ( JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P7_Replace_Invocation]^compiler .reportCodeChange (  )   ) ;^290^291^292^^^289^293^compiler.report ( JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P7_Replace_Invocation]^compiler.report ( JSError .make ( UNSAFE_NAMESPACE_WARNING )   ) ;^290^291^292^^^289^293^compiler.report ( JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.addRef (  )  )  ) ;^290^291^292^^^289^293^compiler.report ( JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P14_Delete_Statement]^^290^291^292^^^289^293^compiler.report ( JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^JSError.make ( ref.sourceName.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^291^292^^^^289^293^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING.fullName (  )  )  ) ;^291^292^^^^289^293^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^JSError.make (  ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^291^292^^^^289^293^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^JSError.make ( ref.sourceName,  NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^291^292^^^^289^293^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P5_Replace_Variable]^JSError.make ( ref.sourceName, ref.node,  nameObj.fullName (  )  )  ) ;^291^292^^^^289^293^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P7_Replace_Invocation]^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.addRef (  )  )  ) ;^291^292^^^^289^293^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P8_Replace_Mix]^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj .canEliminate (  )   )  ) ;^291^292^^^^289^293^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P14_Delete_Statement]^^291^292^^^^289^293^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P11_Insert_Donor_Statement]^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^291^292^^^^289^293^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P11_Insert_Donor_Statement]^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^291^292^^^^289^293^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P11_Insert_Donor_Statement]^NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^291^292^^^^289^293^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P11_Insert_Donor_Statement]^UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^291^292^^^^289^293^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P7_Replace_Invocation]^NAMESPACE_REDEFINED_WARNING, nameObj.addRef (  )  )  ) ;^292^^^^^289^293^NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P7_Replace_Invocation]^NAMESPACE_REDEFINED_WARNING, nameObj .canEliminate (  )   )  ) ;^292^^^^^289^293^NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P14_Delete_Statement]^^292^^^^^289^293^NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P11_Insert_Donor_Statement]^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^292^^^^^289^293^NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P11_Insert_Donor_Statement]^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^292^^^^^289^293^NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P11_Insert_Donor_Statement]^UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^292^^^^^289^293^NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P11_Insert_Donor_Statement]^UNSAFE_THIS, name.fullName (  )  )  ) ;NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^292^^^^^289^293^NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] warnAboutNamespaceRedefinition [RETURN_TYPE] void   Name nameObj Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  Name  nameObj  
[P2_Replace_Operator]^if  ( n.props != null )  return;^304^^^^^302^315^if  ( n.props == null )  return;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P8_Replace_Mix]^if  ( n.props == false )  return;^304^^^^^302^315^if  ( n.props == null )  return;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P12_Insert_Condition]^if  ( addAfter == null )  { if  ( n.props == null )  return; }^304^^^^^302^315^if  ( n.props == null )  return;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P12_Insert_Condition]^if  ( n.props != null )  { if  ( n.props == null )  return; }^304^^^^^302^315^if  ( n.props == null )  return;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P12_Insert_Condition]^if  ( p != null )  { if  ( n.props == null )  return; }^304^^^^^302^315^if  ( n.props == null )  return;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P12_Insert_Condition]^if  ( n.refs != null )  { if  ( n.props == null )  return; }^304^^^^^302^315^if  ( n.props == null )  return;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^if  ( n.canCollapse (  )  )  {^309^^^^^302^315^if  ( p.canCollapse (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^if  ( p.addRef (  )  )  {^309^^^^^302^315^if  ( p.canCollapse (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P9_Replace_Statement]^if  ( n.hasChildren (  )  )  {^309^^^^^302^315^if  ( p.canCollapse (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P15_Unwrap_Block]^flattenReferencesTo(p, propAlias);^309^310^311^^^302^315^if  ( p.canCollapse (  )  )  { flattenReferencesTo ( p, propAlias ) ; }^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P16_Remove_Block]^^309^310^311^^^302^315^if  ( p.canCollapse (  )  )  { flattenReferencesTo ( p, propAlias ) ; }^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenReferencesTo ( n, propAlias ) ;^310^^^^^302^315^flattenReferencesTo ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenReferencesTo ( p, alias ) ;^310^^^^^302^315^flattenReferencesTo ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenReferencesTo (  propAlias ) ;^310^^^^^302^315^flattenReferencesTo ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenReferencesTo ( p ) ;^310^^^^^302^315^flattenReferencesTo ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenReferencesTo ( propAlias, p ) ;^310^^^^^302^315^flattenReferencesTo ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^flattenReferencesToCollapsibleDescendantNames ( p, propAlias ) ;^310^^^^^302^315^flattenReferencesTo ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P14_Delete_Statement]^^310^^^^^302^315^flattenReferencesTo ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P13_Insert_Block]^if  ( p.canCollapse (  )  )  {     flattenReferencesTo ( p, propAlias ) ; }^310^^^^^302^315^[Delete]^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P1_Replace_Type]^char propAlias = appendPropForAlias ( alias, p.name ) ;^307^^^^^302^315^String propAlias = appendPropForAlias ( alias, p.name ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^String propAlias = appendPropForAlias (  p.name ) ;^307^^^^^302^315^String propAlias = appendPropForAlias ( alias, p.name ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^String propAlias = appendPropForAlias ( alias.name ) ;^307^^^^^302^315^String propAlias = appendPropForAlias ( alias, p.name ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^String propAlias = appendPropForAlias ( alias ) ;^307^^^^^302^315^String propAlias = appendPropForAlias ( alias, p.name ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^String propAlias = flattenReferencesTo ( alias, p.name ) ;^307^^^^^302^315^String propAlias = appendPropForAlias ( alias, p.name ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P14_Delete_Statement]^^307^^^^^302^315^String propAlias = appendPropForAlias ( alias, p.name ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^if  ( p .canCollapseUnannotatedChildNames (  )   )  {^309^^^^^302^315^if  ( p.canCollapse (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P8_Replace_Mix]^flattenReferencesToCollapsibleDescendantNames ( p, alias ) ;^310^^^^^302^315^flattenReferencesTo ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenReferencesToCollapsibleDescendantNames ( n, propAlias ) ;^313^^^^^302^315^flattenReferencesToCollapsibleDescendantNames ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenReferencesToCollapsibleDescendantNames ( p, alias ) ;^313^^^^^302^315^flattenReferencesToCollapsibleDescendantNames ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenReferencesToCollapsibleDescendantNames (  propAlias ) ;^313^^^^^302^315^flattenReferencesToCollapsibleDescendantNames ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenReferencesToCollapsibleDescendantNames ( p ) ;^313^^^^^302^315^flattenReferencesToCollapsibleDescendantNames ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenReferencesToCollapsibleDescendantNames ( propAlias, p ) ;^313^^^^^302^315^flattenReferencesToCollapsibleDescendantNames ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^flattenReferencesTo ( p, propAlias ) ;^313^^^^^302^315^flattenReferencesToCollapsibleDescendantNames ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P8_Replace_Mix]^flattenReferencesTo ( n, propAlias ) ;^313^^^^^302^315^flattenReferencesToCollapsibleDescendantNames ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P14_Delete_Statement]^^313^^^^^302^315^flattenReferencesToCollapsibleDescendantNames ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^flattenReferencesToCollapsibleDescendantNames ( n, n.name ) ;flattenReferencesToCollapsibleDescendantNames ( p, propAlias ) ;^313^^^^^302^315^flattenReferencesToCollapsibleDescendantNames ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^flattenReferencesTo ( p, propAlias ) ;flattenReferencesToCollapsibleDescendantNames ( p, propAlias ) ;^313^^^^^302^315^flattenReferencesToCollapsibleDescendantNames ( p, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesToCollapsibleDescendantNames [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  propAlias  Map  nameMap  Name  n  p  
[P2_Replace_Operator]^if  ( n.refs == null )  {^325^^^^^324^350^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( node, rParent)) && (r.getTwin() == null) || r.isSet() )  {^325^^^^^324^350^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( (r.getTwin() == null || r.isSet()) )  {^325^^^^^324^350^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( r.getTwin (  )  == null )  {^325^^^^^324^350^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P8_Replace_Mix]^if  ( n.refs != false )  {^325^^^^^324^350^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P9_Replace_Statement]^if  ( nameToAddAfter != null )  {^325^^^^^324^350^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P9_Replace_Statement]^if  ( addAfter == null )  {^325^^^^^324^350^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P9_Replace_Statement]^if  ( n.props != null )  {^325^^^^^324^350^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P9_Replace_Statement]^if  ( p != null )  {^325^^^^^324^350^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P13_Insert_Block]^if  (  ( n.refs )  != null )  {     for  ( Ref r : n.refs )  {         if  (  (  ( r.getTwin (  )  )  == null )  ||  ( r.isSet (  )  )  )  {             flattenNameRefAtDepth ( alias, r.node, depth, originalName ) ;         }     } }^325^^^^^324^350^[Delete]^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P2_Replace_Operator]^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  || ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^335^336^^^^324^350^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P2_Replace_Operator]^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null && r.isSet (  )  )  )  {^335^336^^^^324^350^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P2_Replace_Operator]^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  != null || r.isSet (  )  )  )  {^335^336^^^^324^350^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^if  ( !NodeUtil.isObjectLitKey ( r.nodeParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^335^336^^^^324^350^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^if  ( !NodeUtil.isObjectLitKey ( r.node )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^335^336^^^^324^350^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^if  ( !NodeUtil.isObjectLitKey (  rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^335^336^^^^324^350^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null ) {^335^336^^^^324^350^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  (  r.isSet (  )  )  )  {^335^336^^^^324^350^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( (r.getTwin() == null || r.isSet()) )  {^335^336^^^^324^350^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( r.getTwin (  )  == null )  {^335^336^^^^324^350^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^if  ( !NodeUtil .isStatementBlock ( rParent )   && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^335^336^^^^324^350^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P8_Replace_Mix]^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == true || r.isSet (  )  )  )  {^335^336^^^^324^350^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P15_Unwrap_Block]^flattenNameRef(alias, r.node, rParent, originalName);^335^336^337^338^^324^350^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  { flattenNameRef ( alias, r.node, rParent, originalName ) ; }^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P16_Remove_Block]^^335^336^337^338^^324^350^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  { flattenNameRef ( alias, r.node, rParent, originalName ) ; }^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P13_Insert_Block]^if  (  ( n.refs )  != null )  {     for  ( Ref r : n.refs )  {         if  (  (  ( r.getTwin (  )  )  == null )  ||  ( r.isSet (  )  )  )  {             flattenNameRefAtDepth ( alias, r.node, depth, originalName ) ;         }     } }^335^^^^^324^350^[Delete]^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenNameRef (  r.node, rParent, originalName ) ;^337^^^^^335^338^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenNameRef ( alias.node, rParent, originalName ) ;^337^^^^^335^338^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenNameRef ( alias, r.node,  originalName ) ;^337^^^^^335^338^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenNameRef ( alias, r.node, rParent ) ;^337^^^^^335^338^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenNameRef ( alias,  rParent, originalName ) ;^337^^^^^335^338^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^flattenNameRefAtDepth ( alias, r.node, rParent, originalName ) ;^337^^^^^335^338^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P14_Delete_Statement]^^337^^^^^335^338^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^flattenNameRefAtDepth ( alias, r.node, depth, originalName ) ;flattenNameRef ( alias, r.node, rParent, originalName ) ;^337^^^^^335^338^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;flattenNameRef ( alias, r.node, rParent, originalName ) ;^337^^^^^335^338^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;flattenNameRef ( alias, r.node, rParent, originalName ) ;^337^^^^^335^338^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^( r.getTwin (  )  == null || r.isSet (  )  )  )  { flattenNameRef ( alias, r.node, rParent, originalName ) ;flattenNameRef ( alias, r.node, rParent, originalName ) ;^337^^^^^335^338^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P1_Replace_Type]^char originalName = n.fullName (  ) ;^326^^^^^324^350^String originalName = n.fullName (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^String originalName = p.fullName (  ) ;^326^^^^^324^350^String originalName = n.fullName (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^String originalName = n.addRef (  ) ;^326^^^^^324^350^String originalName = n.fullName (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P8_Replace_Mix]^String originalName = p.addRef (  ) ;^326^^^^^324^350^String originalName = n.fullName (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P8_Replace_Mix]^Node rParent = r.node .cloneTree (  )  ;^328^^^^^324^350^Node rParent = r.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P14_Delete_Statement]^^326^^^^^324^350^String originalName = n.fullName (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P14_Delete_Statement]^^328^^^^^324^350^Node rParent = r.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P14_Delete_Statement]^^336^337^^^^324^350^( r.getTwin (  )  == null || r.isSet (  )  )  )  { flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenNameRef (  r.node, rParent, originalName ) ;^337^^^^^324^350^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenNameRef ( alias.node, rParent, originalName ) ;^337^^^^^324^350^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenNameRef ( alias, r.node,  originalName ) ;^337^^^^^324^350^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenNameRef ( alias, r.node, rParent ) ;^337^^^^^324^350^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenNameRef ( alias,  rParent, originalName ) ;^337^^^^^324^350^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^flattenNameRefAtDepth ( alias, r.node, rParent, originalName ) ;^337^^^^^324^350^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P14_Delete_Statement]^^337^^^^^324^350^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^flattenNameRefAtDepth ( alias, r.node, depth, originalName ) ;flattenNameRef ( alias, r.node, rParent, originalName ) ;^337^^^^^324^350^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;flattenNameRef ( alias, r.node, rParent, originalName ) ;^337^^^^^324^350^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;flattenNameRef ( alias, r.node, rParent, originalName ) ;^337^^^^^324^350^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^( r.getTwin (  )  == null || r.isSet (  )  )  )  { flattenNameRef ( alias, r.node, rParent, originalName ) ;flattenNameRef ( alias, r.node, rParent, originalName ) ;^337^^^^^324^350^flattenNameRef ( alias, r.node, rParent, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P8_Replace_Mix]^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == true ) {^335^336^^^^324^350^if  ( !NodeUtil.isObjectLitKey ( r.node, rParent )  && ( r.getTwin (  )  == null || r.isSet (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^String originalName = n .canEliminate (  )  ;^326^^^^^324^350^String originalName = n.fullName (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P8_Replace_Mix]^String originalName = p .canEliminate (  )  ;^326^^^^^324^350^String originalName = n.fullName (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P2_Replace_Operator]^if  ( n.props == null )  {^345^^^^^324^350^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P8_Replace_Mix]^if  ( n.props != false )  {^345^^^^^324^350^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P15_Unwrap_Block]^for (com.google.javascript.jscomp.GlobalNamespace.Name p : n.props) {    flattenPrefixes(alias, p, 1);};^345^346^347^348^^324^350^if  ( n.props != null )  { for  ( Name p : n.props )  { flattenPrefixes ( alias, p, 1 ) ; }^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P16_Remove_Block]^^345^346^347^348^^324^350^if  ( n.props != null )  { for  ( Name p : n.props )  { flattenPrefixes ( alias, p, 1 ) ; }^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P3_Replace_Literal]^flattenPrefixes ( alias, p, 10 ) ;^347^^^^^324^350^flattenPrefixes ( alias, p, 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenPrefixes ( originalName, p, 1 ) ;^347^^^^^324^350^flattenPrefixes ( alias, p, 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenPrefixes ( alias, n, 1 ) ;^347^^^^^324^350^flattenPrefixes ( alias, p, 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenPrefixes (  p, 1 ) ;^347^^^^^324^350^flattenPrefixes ( alias, p, 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenPrefixes ( alias,  1 ) ;^347^^^^^324^350^flattenPrefixes ( alias, p, 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^flattenPrefixes ( p, alias, 1 ) ;^347^^^^^324^350^flattenPrefixes ( alias, p, 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^updateSimpleDeclaration ( alias, p, 1 ) ;^347^^^^^324^350^flattenPrefixes ( alias, p, 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P14_Delete_Statement]^^347^^^^^324^350^flattenPrefixes ( alias, p, 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^p, appendPropForAlias ( alias, p.name )  ) ;flattenPrefixes ( alias, p, 1 ) ;^347^^^^^324^350^flattenPrefixes ( alias, p, 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^flattenPrefixes ( alias, p, depth + 1 ) ;flattenPrefixes ( alias, p, 1 ) ;^347^^^^^324^350^flattenPrefixes ( alias, p, 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P3_Replace_Literal]^flattenPrefixes ( alias, p, 7 ) ;^347^^^^^324^350^flattenPrefixes ( alias, p, 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P8_Replace_Mix]^updateSimpleDeclaration ( alias, n, 1 ) ;^347^^^^^324^350^flattenPrefixes ( alias, p, 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenReferencesTo [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  rParent  List  globalNames  refs  String  alias  originalName  Map  nameMap  Name  n  p  
[P1_Replace_Type]^char originalName = n.fullName (  ) ;^364^^^^^361^386^String originalName = n.fullName (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P7_Replace_Invocation]^String originalName = n.addRef (  ) ;^364^^^^^361^386^String originalName = n.fullName (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P7_Replace_Invocation]^String originalName = n .canEliminate (  )  ;^364^^^^^361^386^String originalName = n.fullName (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P8_Replace_Mix]^String originalName = p.fullName (  ) ;^364^^^^^361^386^String originalName = n.fullName (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P14_Delete_Statement]^^364^^^^^361^386^String originalName = n.fullName (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P2_Replace_Operator]^if  ( n.declaration != null || n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^365^366^^^^361^386^if  ( n.declaration != null && n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P2_Replace_Operator]^if  ( n.declaration == null && n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^365^366^^^^361^386^if  ( n.declaration != null && n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P2_Replace_Operator]^if  ( n.declaration != null && n.declaration.node == null && n.declaration.node.getType (  )  == Token.GETPROP )  {^365^366^^^^361^386^if  ( n.declaration != null && n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P2_Replace_Operator]^if  ( n.declaration != null && n.declaration.node != null && n.declaration.node.getType (  )  != Token.GETPROP )  {^365^366^^^^361^386^if  ( n.declaration != null && n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P6_Replace_Expression]^if  ( n.declaration != null ) {^365^366^^^^361^386^if  ( n.declaration != null && n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P6_Replace_Expression]^if  (  n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^365^366^^^^361^386^if  ( n.declaration != null && n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P6_Replace_Expression]^if  ( (n.declaration != null && node != null) )  {^365^366^^^^361^386^if  ( n.declaration != null && n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P6_Replace_Expression]^if  ( node != null )  {^365^366^^^^361^386^if  ( n.declaration != null && n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P6_Replace_Expression]^if  ( getType (  )  == GETPROP )  {^365^366^^^^361^386^if  ( n.declaration != null && n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P8_Replace_Mix]^if  ( n.declaration != false ) {^365^366^^^^361^386^if  ( n.declaration != null && n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P15_Unwrap_Block]^flattenNameRefAtDepth(alias, n.declaration.node, depth, originalName);^365^366^367^368^^361^386^if  ( n.declaration != null && n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  { flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ; }^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P16_Remove_Block]^^365^366^367^368^^361^386^if  ( n.declaration != null && n.declaration.node != null && n.declaration.node.getType (  )  == Token.GETPROP )  { flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ; }^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenNameRefAtDepth (  n.declaration.node, depth, originalName ) ;^367^^^^^361^386^flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenNameRefAtDepth ( alias.declaration.node, depth, originalName ) ;^367^^^^^361^386^flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenNameRefAtDepth ( alias, n.declaration.node,  originalName ) ;^367^^^^^361^386^flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenNameRefAtDepth ( alias, n.declaration.node, depth ) ;^367^^^^^361^386^flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenNameRefAtDepth ( alias, n.declaration. depth, originalName ) ;^367^^^^^361^386^flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenNameRefAtDepth ( alias.node, depth, originalName ) ;^367^^^^^361^386^flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P7_Replace_Invocation]^flattenNameRef ( alias, n.declaration.node, depth, originalName ) ;^367^^^^^361^386^flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P14_Delete_Statement]^^367^^^^^361^386^flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P11_Insert_Donor_Statement]^flattenNameRefAtDepth ( alias, r.node, depth, originalName ) ;flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;^367^^^^^361^386^flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P11_Insert_Donor_Statement]^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;^367^^^^^361^386^flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P11_Insert_Donor_Statement]^flattenNameRef ( alias, r.node, rParent, originalName ) ;flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;^367^^^^^361^386^flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P11_Insert_Donor_Statement]^n.declaration.node.getType (  )  == Token.GETPROP )  { flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;^367^^^^^361^386^flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P8_Replace_Mix]^n.declaration.node .getString (  )   == Token.GETPROP )  {^366^^^^^361^386^n.declaration.node.getType (  )  == Token.GETPROP )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P14_Delete_Statement]^^366^367^^^^361^386^n.declaration.node.getType (  )  == Token.GETPROP )  { flattenNameRefAtDepth ( alias, n.declaration.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P2_Replace_Operator]^if  ( n.refs == null )  {^370^^^^^361^386^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P6_Replace_Expression]^if  ( r.getTwin() == null || r.isSet() )  {^370^^^^^361^386^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P6_Replace_Expression]^if  ( r.getTwin (  )  == null )  {^370^^^^^361^386^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P8_Replace_Mix]^if  ( n.refs != this )  {^370^^^^^361^386^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P9_Replace_Statement]^if  ( nameToAddAfter != null )  {^370^^^^^361^386^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P9_Replace_Statement]^if  ( addAfter == null )  {^370^^^^^361^386^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P9_Replace_Statement]^if  ( n.props != null )  {^370^^^^^361^386^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P9_Replace_Statement]^if  ( p != null )  {^370^^^^^361^386^if  ( n.refs != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P2_Replace_Operator]^if  ( r.getTwin (  )  == null && r.isSet (  )  )  {^375^^^^^361^386^if  ( r.getTwin (  )  == null || r.isSet (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P2_Replace_Operator]^if  ( r.getTwin (  )  != null || r.isSet (  )  )  {^375^^^^^361^386^if  ( r.getTwin (  )  == null || r.isSet (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P6_Replace_Expression]^if  ( r.getTwin (  )  == null ) {^375^^^^^361^386^if  ( r.getTwin (  )  == null || r.isSet (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P6_Replace_Expression]^if  (  r.isSet (  )  )  {^375^^^^^361^386^if  ( r.getTwin (  )  == null || r.isSet (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P8_Replace_Mix]^if  ( r.getTwin (  )  == this || r.isSet (  )  )  {^375^^^^^361^386^if  ( r.getTwin (  )  == null || r.isSet (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P15_Unwrap_Block]^flattenNameRefAtDepth(alias, r.node, depth, originalName);^375^376^377^^^361^386^if  ( r.getTwin (  )  == null || r.isSet (  )  )  { flattenNameRefAtDepth ( alias, r.node, depth, originalName ) ; }^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P16_Remove_Block]^^375^376^377^^^361^386^if  ( r.getTwin (  )  == null || r.isSet (  )  )  { flattenNameRefAtDepth ( alias, r.node, depth, originalName ) ; }^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenNameRefAtDepth (  r.node, depth, originalName ) ;^376^^^^^361^386^flattenNameRefAtDepth ( alias, r.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenNameRefAtDepth ( alias.node, depth, originalName ) ;^376^^^^^361^386^flattenNameRefAtDepth ( alias, r.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenNameRefAtDepth ( alias, r.node,  originalName ) ;^376^^^^^361^386^flattenNameRefAtDepth ( alias, r.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenNameRefAtDepth ( alias, r.node, depth ) ;^376^^^^^361^386^flattenNameRefAtDepth ( alias, r.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenNameRefAtDepth ( alias,  depth, originalName ) ;^376^^^^^361^386^flattenNameRefAtDepth ( alias, r.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P7_Replace_Invocation]^flattenNameRef ( alias, r.node, depth, originalName ) ;^376^^^^^361^386^flattenNameRefAtDepth ( alias, r.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P14_Delete_Statement]^^376^^^^^361^386^flattenNameRefAtDepth ( alias, r.node, depth, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P13_Insert_Block]^if  (  (  ( r.getTwin (  )  )  == null )  ||  ( r.isSet (  )  )  )  {     flattenNameRefAtDepth ( alias, r.node, depth, originalName ) ; }^376^^^^^361^386^[Delete]^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P8_Replace_Mix]^if  ( r.getTwin (  )  == false || r.isSet (  )  )  {^375^^^^^361^386^if  ( r.getTwin (  )  == null || r.isSet (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P2_Replace_Operator]^if  ( n.props == null )  {^381^^^^^361^386^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P6_Replace_Expression]^if  ( depth + 1 )  {^381^^^^^361^386^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P8_Replace_Mix]^if  ( n.props != true )  {^381^^^^^361^386^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P15_Unwrap_Block]^for (com.google.javascript.jscomp.GlobalNamespace.Name p : n.props) {    flattenPrefixes(alias, p, (depth + 1));};^381^382^383^384^^361^386^if  ( n.props != null )  { for  ( Name p : n.props )  { flattenPrefixes ( alias, p, depth + 1 ) ; }^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P16_Remove_Block]^^381^382^383^384^^361^386^if  ( n.props != null )  { for  ( Name p : n.props )  { flattenPrefixes ( alias, p, depth + 1 ) ; }^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P2_Replace_Operator]^flattenPrefixes ( alias, p, depth  <=  1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P3_Replace_Literal]^flattenPrefixes ( alias, p, depth  ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenPrefixes ( originalName, p, depth + 1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenPrefixes ( alias, n, depth + 1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenPrefixes (  p, depth + 1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenPrefixes ( alias,  depth + 1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenPrefixes ( alias, p + 1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenPrefixes ( depth, p, alias + 1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenPrefixes ( p, alias, depth + 1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P7_Replace_Invocation]^flattenNameRefAtDepth ( alias, p, depth + 1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P14_Delete_Statement]^^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P11_Insert_Donor_Statement]^flattenNameRefAtDepth ( alias, r.node, depth, originalName ) ;flattenPrefixes ( alias, p, depth + 1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P11_Insert_Donor_Statement]^flattenPrefixes ( alias, p, 1 ) ;flattenPrefixes ( alias, p, depth + 1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P2_Replace_Operator]^flattenPrefixes ( alias, p, depth  <<  1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P5_Replace_Variable]^flattenPrefixes ( alias, depth, p + 1 ) ;^383^^^^^361^386^flattenPrefixes ( alias, p, depth + 1 ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenPrefixes [RETURN_TYPE] void   String alias Name n int depth [VARIABLES] AbstractCompiler  compiler  Ref  r  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  Name  n  p  
[P1_Replace_Type]^for  (  short  i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^402^^^^^397^408^for  ( int i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P2_Replace_Operator]^for  ( int i = 1; i < depth || n.hasChildren (  ) ; i++ )  {^402^^^^^397^408^for  ( int i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P2_Replace_Operator]^for  ( int i = 1; i <= depth && n.hasChildren (  ) ; i++ )  {^402^^^^^397^408^for  ( int i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P3_Replace_Literal]^for  ( int i = depth; i < depth && n.hasChildren (  ) ; i++ )  {^402^^^^^397^408^for  ( int i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P5_Replace_Variable]^for  ( depthnt i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^402^^^^^397^408^for  ( int i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P5_Replace_Variable]^for  ( depthnt i = 1; i < i && n.hasChildren (  ) ; i++ )  {^402^^^^^397^408^for  ( int i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P5_Replace_Variable]^for  ( nnt i = 1; i < depth && i.hasChildren (  ) ; i++ )  {^402^^^^^397^408^for  ( int i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P7_Replace_Invocation]^for  ( int i = 1; i < depth && n.putBooleanProp (  ) ; i++ )  {^402^^^^^397^408^for  ( int i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P8_Replace_Mix]^for  ( depthnt i = 1; i < depth && n .addChildToFront ( n )  ; i++ )  {^402^^^^^397^408^for  ( int i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P7_Replace_Invocation]^n = n.putBooleanProp (  ) ;^403^^^^^397^408^n = n.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P8_Replace_Mix]^n =  null.getFirstChild (  ) ;^403^^^^^397^408^n = n.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P8_Replace_Mix]^n = n .getLastChild (  )  ;^403^^^^^397^408^n = n.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P14_Delete_Statement]^^403^^^^^397^408^n = n.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getFirstChild (  ) ;n = n.getFirstChild (  ) ;^403^^^^^397^408^n = n.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P3_Replace_Literal]^for  ( int i = -2; i < depth && n.hasChildren (  ) ; i++ )  {^402^^^^^397^408^for  ( int i = 1; i < depth && n.hasChildren (  ) ; i++ )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P14_Delete_Statement]^^402^403^404^^^397^408^for  ( int i = 1; i < depth && n.hasChildren (  ) ; i++ )  { n = n.getFirstChild (  ) ; }^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P7_Replace_Invocation]^if  ( n.putBooleanProp (  )  )  {^405^^^^^397^408^if  ( n.hasChildren (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P9_Replace_Statement]^if  ( !varNode.hasChildren (  )  )  {^405^^^^^397^408^if  ( n.hasChildren (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P9_Replace_Statement]^if  ( p.canCollapse (  )  )  {^405^^^^^397^408^if  ( n.hasChildren (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P15_Unwrap_Block]^flattenNameRef(alias, n.getFirstChild(), n, originalName);^405^406^407^^^397^408^if  ( n.hasChildren (  )  )  { flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ; }^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P16_Remove_Block]^^405^406^407^^^397^408^if  ( n.hasChildren (  )  )  { flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ; }^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P5_Replace_Variable]^flattenNameRef ( originalName, n.getFirstChild (  ) , n, originalName ) ;^406^^^^^397^408^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P5_Replace_Variable]^flattenNameRef (  n.getFirstChild (  ) , n, originalName ) ;^406^^^^^397^408^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P5_Replace_Variable]^flattenNameRef ( alias, n.getFirstChild (  ) ,  originalName ) ;^406^^^^^397^408^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P5_Replace_Variable]^flattenNameRef ( alias, n.getFirstChild (  ) , n ) ;^406^^^^^397^408^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P5_Replace_Variable]^flattenNameRef ( originalName, n.getFirstChild (  ) , n, alias ) ;^406^^^^^397^408^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P5_Replace_Variable]^flattenNameRef ( alias, originalName.getFirstChild (  ) , n, n ) ;^406^^^^^397^408^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P7_Replace_Invocation]^flattenNameRefAtDepth ( alias, n.getFirstChild (  ) , n, originalName ) ;^406^^^^^397^408^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P7_Replace_Invocation]^flattenNameRef ( alias, n.putBooleanProp (  ) , n, originalName ) ;^406^^^^^397^408^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P7_Replace_Invocation]^flattenNameRef ( alias, n .getLastChild (  )  , n, originalName ) ;^406^^^^^397^408^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P14_Delete_Statement]^^406^^^^^397^408^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P13_Insert_Block]^if  ( n.hasChildren (  )  )  {     flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ; }^406^^^^^397^408^[Delete]^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P8_Replace_Mix]^if  ( n .addChildToFront ( n )   )  {^405^^^^^397^408^if  ( n.hasChildren (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P5_Replace_Variable]^flattenNameRef ( alias, n.getFirstChild (  ) , n, alias ) ;^406^^^^^397^408^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P5_Replace_Variable]^flattenNameRef ( n, alias.getFirstChild (  ) , n, originalName ) ;^406^^^^^397^408^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P8_Replace_Mix]^flattenNameRefAtDepth ( alias, n.getFirstChild (  ) , n, alias ) ;^406^^^^^397^408^flattenNameRef ( alias, n.getFirstChild (  ) , n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRefAtDepth [RETURN_TYPE] void   String alias Node n int depth String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  List  globalNames  refs  String  alias  originalName  Map  nameMap  int  depth  i  
[P5_Replace_Variable]^Node ref = NodeUtil.newName ( originalName, n, originalName ) ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P5_Replace_Variable]^Node ref = NodeUtil.newName ( alias, parent, originalName ) ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P5_Replace_Variable]^Node ref = NodeUtil.newName ( alias, n, alias ) ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P5_Replace_Variable]^Node ref = NodeUtil.newName (  n, originalName ) ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P5_Replace_Variable]^Node ref = NodeUtil.newName ( alias,  originalName ) ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P5_Replace_Variable]^Node ref = NodeUtil.newName ( alias, n ) ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P5_Replace_Variable]^Node ref = NodeUtil.newName ( originalName, n, alias ) ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P5_Replace_Variable]^Node ref = NodeUtil.newName ( n, alias, originalName ) ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P5_Replace_Variable]^Node ref = NodeUtil.newName ( alias, originalName, n ) ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P11_Insert_Donor_Statement]^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;Node ref = NodeUtil.newName ( alias, n, originalName ) ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P5_Replace_Variable]^Node ref = NodeUtil.newName ( alias, ref, originalName ) ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P7_Replace_Invocation]^Node ref = NodeUtil .newName ( originalName )  ;^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P14_Delete_Statement]^^428^^^^^418^432^Node ref = NodeUtil.newName ( alias, n, originalName ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P5_Replace_Variable]^NodeUtil.copyNameAnnotations ( parent.getLastChild (  ) , ref ) ;^429^^^^^418^432^NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P5_Replace_Variable]^NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , parent ) ;^429^^^^^418^432^NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P5_Replace_Variable]^NodeUtil.copyNameAnnotations ( n.getLastChild (  )  ) ;^429^^^^^418^432^NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P5_Replace_Variable]^NodeUtil.copyNameAnnotations ( ref.getLastChild (  ) , n ) ;^429^^^^^418^432^NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P7_Replace_Invocation]^NodeUtil .isStatementBlock ( parent )  ;^429^^^^^418^432^NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P7_Replace_Invocation]^NodeUtil.copyNameAnnotations ( n.putBooleanProp (  ) , ref ) ;^429^^^^^418^432^NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P14_Delete_Statement]^^429^430^^^^418^432^NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , ref ) ; parent.replaceChild ( n, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P11_Insert_Donor_Statement]^NodeUtil.copyNameAnnotations ( ref.node.getLastChild (  ) , nameNode ) ;NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , ref ) ;^429^^^^^418^432^NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P5_Replace_Variable]^NodeUtil.copyNameAnnotations ( ref.getLastChild (  ) , ref ) ;^429^^^^^418^432^NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P7_Replace_Invocation]^NodeUtil.copyNameAnnotations ( n .getFirstChild (  )  , ref ) ;^429^^^^^418^432^NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P14_Delete_Statement]^^429^^^^^418^432^NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P5_Replace_Variable]^parent.replaceChild ( parent, ref ) ;^430^^^^^418^432^parent.replaceChild ( n, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P5_Replace_Variable]^parent.replaceChild (  ref ) ;^430^^^^^418^432^parent.replaceChild ( n, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P5_Replace_Variable]^parent.replaceChild ( n ) ;^430^^^^^418^432^parent.replaceChild ( n, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P14_Delete_Statement]^^430^431^^^^418^432^parent.replaceChild ( n, ref ) ; compiler.reportCodeChange (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P11_Insert_Donor_Statement]^objlit.removeChild ( value ) ;parent.replaceChild ( n, ref ) ;^430^^^^^418^432^parent.replaceChild ( n, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P11_Insert_Donor_Statement]^objlit.removeChild ( key ) ;parent.replaceChild ( n, ref ) ;^430^^^^^418^432^parent.replaceChild ( n, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P11_Insert_Donor_Statement]^objlit.replaceChildAfter ( key, refNode ) ;parent.replaceChild ( n, ref ) ;^430^^^^^418^432^parent.replaceChild ( n, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P11_Insert_Donor_Statement]^varParent.replaceChild ( gramps, varNode ) ;parent.replaceChild ( n, ref ) ;^430^^^^^418^432^parent.replaceChild ( n, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P11_Insert_Donor_Statement]^parent.removeChild ( rvalue ) ;parent.replaceChild ( n, ref ) ;^430^^^^^418^432^parent.replaceChild ( n, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P11_Insert_Donor_Statement]^varParent.removeChild ( varNode ) ;parent.replaceChild ( n, ref ) ;^430^^^^^418^432^parent.replaceChild ( n, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P11_Insert_Donor_Statement]^greatGramps.replaceChild ( gramps, varNode ) ;parent.replaceChild ( n, ref ) ;^430^^^^^418^432^parent.replaceChild ( n, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P11_Insert_Donor_Statement]^parent.replaceChild ( ref.node, nameNode ) ;parent.replaceChild ( n, ref ) ;^430^^^^^418^432^parent.replaceChild ( n, ref ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P7_Replace_Invocation]^compiler.report (  ) ;^431^^^^^418^432^compiler.reportCodeChange (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P14_Delete_Statement]^^431^^^^^418^432^compiler.reportCodeChange (  ) ;^[CLASS] CollapseProperties 1  [METHOD] flattenNameRef [RETURN_TYPE] void   String alias Node n Node parent String originalName [VARIABLES] AbstractCompiler  compiler  boolean  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  ref  List  globalNames  refs  String  alias  originalName  Map  nameMap  
[P5_Replace_Variable]^boolean canCollapseChildNames = p.canCollapseUnannotatedChildNames (  ) ;^443^^^^^442^465^boolean canCollapseChildNames = n.canCollapseUnannotatedChildNames (  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^boolean canCollapseChildNames = n.addRef (  ) ;^443^^^^^442^465^boolean canCollapseChildNames = n.canCollapseUnannotatedChildNames (  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P12_Insert_Condition]^if  ( n.canCollapse (  )  && canCollapseChildNames )  { boolean canCollapseChildNames = n.canCollapseUnannotatedChildNames (  ) ; }^443^^^^^442^465^boolean canCollapseChildNames = n.canCollapseUnannotatedChildNames (  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P14_Delete_Statement]^^443^^^^^442^465^boolean canCollapseChildNames = n.canCollapseUnannotatedChildNames (  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P2_Replace_Operator]^if  ( n.canCollapse (  )  || canCollapseChildNames )  {^446^^^^^442^465^if  ( n.canCollapse (  )  && canCollapseChildNames )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^if  ( p.canCollapse (  )  && canCollapseChildNames )  {^446^^^^^442^465^if  ( n.canCollapse (  )  && canCollapseChildNames )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^if  ( n.canCollapse (  )  && inlineAliases )  {^446^^^^^442^465^if  ( n.canCollapse (  )  && canCollapseChildNames )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( n.canCollapse (  )  ) {^446^^^^^442^465^if  ( n.canCollapse (  )  && canCollapseChildNames )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  (  canCollapseChildNames )  {^446^^^^^442^465^if  ( n.canCollapse (  )  && canCollapseChildNames )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^if  ( n.addRef (  )  && canCollapseChildNames )  {^446^^^^^442^465^if  ( n.canCollapse (  )  && canCollapseChildNames )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^if  ( n .canCollapseUnannotatedChildNames (  )   && canCollapseChildNames )  {^446^^^^^442^465^if  ( n.canCollapse (  )  && canCollapseChildNames )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P8_Replace_Mix]^if  ( n .canCollapseUnannotatedChildNames (  )   ) {^446^^^^^442^465^if  ( n.canCollapse (  )  && canCollapseChildNames )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P15_Unwrap_Block]^updateObjLitOrFunctionDeclaration(n, alias);^446^447^448^^^442^465^if  ( n.canCollapse (  )  && canCollapseChildNames )  { updateObjLitOrFunctionDeclaration ( n, alias ) ; }^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P16_Remove_Block]^^446^447^448^^^442^465^if  ( n.canCollapse (  )  && canCollapseChildNames )  { updateObjLitOrFunctionDeclaration ( n, alias ) ; }^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^updateObjLitOrFunctionDeclaration ( p, alias ) ;^447^^^^^442^465^updateObjLitOrFunctionDeclaration ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^updateObjLitOrFunctionDeclaration (  alias ) ;^447^^^^^442^465^updateObjLitOrFunctionDeclaration ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^updateObjLitOrFunctionDeclaration ( n ) ;^447^^^^^442^465^updateObjLitOrFunctionDeclaration ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^updateObjLitOrFunctionDeclaration ( alias, n ) ;^447^^^^^442^465^updateObjLitOrFunctionDeclaration ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^updateObjLitOrFunctionDeclarationAtAssignNode ( n, alias ) ;^447^^^^^442^465^updateObjLitOrFunctionDeclaration ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P14_Delete_Statement]^^447^^^^^442^465^updateObjLitOrFunctionDeclaration ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^updateObjLitOrFunctionDeclarationAtAssignNode ( n, alias ) ;updateObjLitOrFunctionDeclaration ( n, alias ) ;^447^^^^^442^465^updateObjLitOrFunctionDeclaration ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^updateObjLitOrFunctionDeclarationAtVarNode ( n ) ;updateObjLitOrFunctionDeclaration ( n, alias ) ;^447^^^^^442^465^updateObjLitOrFunctionDeclaration ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P2_Replace_Operator]^if  ( n.props == null )  {^450^^^^^442^465^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( (((!(p.inExterns) && canCollapseChildNames) && (p.declaration != null)) && node != null)) && getParent() != null) && getType() == ASSIGN )  {^450^^^^^442^465^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( (((!(p.inExterns) && canCollapseChildNames) && (p.declaration != null)) && node != null) && getParent() != null) )  {^450^^^^^442^465^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( ((!(p.inExterns) && canCollapseChildNames) && (p.declaration != null) && node != null) )  {^450^^^^^442^465^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( (!(p.inExterns) && canCollapseChildNames && p.declaration != null) )  {^450^^^^^442^465^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( !(p.inExterns && canCollapseChildNames) )  {^450^^^^^442^465^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( p.declaration != null )  {^450^^^^^442^465^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( node != null )  {^450^^^^^442^465^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( getParent (  )  != null )  {^450^^^^^442^465^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( getParent (  ) .getType (  )  == ASSIGN )  {^450^^^^^442^465^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P8_Replace_Mix]^if  ( n.props != false )  {^450^^^^^442^465^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P2_Replace_Operator]^if  ( !p.inExterns || canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P2_Replace_Operator]^if  ( !p.inExterns && canCollapseChildNames && p.declaration == null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P2_Replace_Operator]^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node == null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P2_Replace_Operator]^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  == null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P2_Replace_Operator]^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  != Token.ASSIGN )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( !p.inExterns ) {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  (  canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( (((!(p.inExterns) && canCollapseChildNames) && (p.declaration != null)) && node != null) && getParent() != null) )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( ((!(p.inExterns) && canCollapseChildNames) && (p.declaration != null) && node != null) )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( (!(p.inExterns) && canCollapseChildNames && p.declaration != null) )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( !(p.inExterns && canCollapseChildNames) )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( p.declaration != null )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( node != null )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( getParent (  )  != null )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P6_Replace_Expression]^if  ( getParent (  ) .getType (  )  == ASSIGN )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node .cloneTree (  )   != null && p.declaration.node^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .removeChild (  )  == Token.ASSIGN )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^updateSimpleDeclaration ( appendPropForAlias (  p.name ) , p, p.declaration ) ;^460^461^^^^442^465^updateSimpleDeclaration ( appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^updateSimpleDeclaration ( appendPropForAlias ( alias, p.name ) ,  p.declaration ) ;^460^461^^^^442^465^updateSimpleDeclaration ( appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^updateSimpleDeclaration ( appendPropForAlias ( alias ) , p, p.declaration ) ;^460^461^^^^442^465^updateSimpleDeclaration ( appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^updateSimpleDeclaration ( appendPropForAlias ( alias, p.name ) , p ) ;^460^461^^^^442^465^updateSimpleDeclaration ( appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^flattenNameRef ( appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^460^461^^^^442^465^updateSimpleDeclaration ( appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^updateSimpleDeclaration ( flattenReferencesTo ( alias, p.name ) , p, p.declaration ) ;^460^461^^^^442^465^updateSimpleDeclaration ( appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P14_Delete_Statement]^^460^461^^^^442^465^updateSimpleDeclaration ( appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^String propAlias = appendPropForAlias ( alias, p.name ) ;updateSimpleDeclaration ( appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^460^461^^^^442^465^updateSimpleDeclaration ( appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^p, appendPropForAlias ( alias, p.name )  ) ;updateSimpleDeclaration ( appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^460^461^^^^442^465^updateSimpleDeclaration ( appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;updateSimpleDeclaration ( appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^460^461^^^^442^465^updateSimpleDeclaration ( appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^appendPropForAlias (  p.name ) , p, p.declaration ) ;^461^^^^^442^465^appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^appendPropForAlias ( alias, p.name ) ,  p.declaration ) ;^461^^^^^442^465^appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^appendPropForAlias ( alias ) , p, p.declaration ) ;^461^^^^^442^465^appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^flattenReferencesTo ( alias, p.name ) , p, p.declaration ) ;^461^^^^^442^465^appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P14_Delete_Statement]^^461^^^^^442^465^appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^p, appendPropForAlias ( alias, p.name )  ) ;appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^461^^^^^442^465^appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^updateSimpleDeclaration ( appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^461^^^^^442^465^appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^collapseDeclarationOfNameAndDescendants (  appendPropForAlias ( alias, p.name )  ) ;^453^454^^^^442^465^collapseDeclarationOfNameAndDescendants ( p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^collapseDeclarationOfNameAndDescendants ( p, appendPropForAlias (  p.name )  ) ;^453^454^^^^442^465^collapseDeclarationOfNameAndDescendants ( p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^collapseDeclarationOfNameAndDescendants ( p, appendPropForAlias ( alias )  ) ;^453^454^^^^442^465^collapseDeclarationOfNameAndDescendants ( p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^flattenPrefixes ( p, appendPropForAlias ( alias, p.name )  ) ;^453^454^^^^442^465^collapseDeclarationOfNameAndDescendants ( p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^collapseDeclarationOfNameAndDescendants ( p, flattenReferencesTo ( alias, p.name )  ) ;^453^454^^^^442^465^collapseDeclarationOfNameAndDescendants ( p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P14_Delete_Statement]^^453^454^^^^442^465^collapseDeclarationOfNameAndDescendants ( p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^String propAlias = appendPropForAlias ( alias, p.name ) ;collapseDeclarationOfNameAndDescendants ( p, appendPropForAlias ( alias, p.name )  ) ;^453^454^^^^442^465^collapseDeclarationOfNameAndDescendants ( p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^p, appendPropForAlias ( alias, p.name )  ) ;collapseDeclarationOfNameAndDescendants ( p, appendPropForAlias ( alias, p.name )  ) ;^453^454^^^^442^465^collapseDeclarationOfNameAndDescendants ( p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^collapseDeclarationOfNameAndDescendants ( n, n.name ) ;collapseDeclarationOfNameAndDescendants ( p, appendPropForAlias ( alias, p.name )  ) ;^453^454^^^^442^465^collapseDeclarationOfNameAndDescendants ( p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^String propAlias = appendPropForAlias ( alias, propName ) ;collapseDeclarationOfNameAndDescendants ( p, appendPropForAlias ( alias, p.name )  ) ;^453^454^^^^442^465^collapseDeclarationOfNameAndDescendants ( p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^p, appendPropForAlias (  p.name )  ) ;^454^^^^^442^465^p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^appendPropForAlias ( alias, p.name )  ) ;^454^^^^^442^465^p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P5_Replace_Variable]^p, appendPropForAlias ( alias )  ) ;^454^^^^^442^465^p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^p, flattenReferencesTo ( alias, p.name )  ) ;^454^^^^^442^465^p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P14_Delete_Statement]^^454^^^^^442^465^p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^String propAlias = appendPropForAlias ( alias, p.name ) ;p, appendPropForAlias ( alias, p.name )  ) ;^454^^^^^442^465^p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^collapseDeclarationOfNameAndDescendants ( p, appendPropForAlias ( alias, p.name )  ) ;p, appendPropForAlias ( alias, p.name )  ) ;^454^^^^^442^465^p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;p, appendPropForAlias ( alias, p.name )  ) ;^454^^^^^442^465^p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^String propAlias = appendPropForAlias ( alias, propName ) ;p, appendPropForAlias ( alias, p.name )  ) ;^454^^^^^442^465^p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^updateSimpleDeclaration ( appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;p, appendPropForAlias ( alias, p.name )  ) ;^454^^^^^442^465^p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P11_Insert_Donor_Statement]^flattenPrefixes ( alias, p, 1 ) ;p, appendPropForAlias ( alias, p.name )  ) ;^454^^^^^442^465^p, appendPropForAlias ( alias, p.name )  ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^p.declaration.node .cloneTree (  )   != null && p.declaration.node^458^459^^^^442^465^p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^p.declaration.node.getParent (  ) .removeChild (  )  == Token.ASSIGN )  {^459^^^^^442^465^p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^p.declaration.node .cloneTree (  )  .getType (  )  == Token.ASSIGN )  {^459^^^^^442^465^p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P14_Delete_Statement]^^459^460^461^^^442^465^p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  { updateSimpleDeclaration ( appendPropForAlias ( alias, p.name ) , p, p.declaration ) ;^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P8_Replace_Mix]^if  ( !p.inExterns && canCollapseChildNames && p.declaration != this && p.declaration.node != this && p.declaration.node.getParent (  )  != this && p.declaration.node.getParent (  ) .removeChild (  )  == Token.ASSIGN )  {^456^457^458^459^^442^465^if  ( !p.inExterns && canCollapseChildNames && p.declaration != null && p.declaration.node != null && p.declaration.node.getParent (  )  != null && p.declaration.node.getParent (  ) .getType (  )  == Token.ASSIGN )  {^[CLASS] CollapseProperties 1  [METHOD] collapseDeclarationOfNameAndDescendants [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  p  
[P7_Replace_Invocation]^Node rvalue = ref.node.getAncestor (  ) ;^479^^^^^464^494^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getFirstChild (  ) ;Node rvalue = ref.node.getNext (  ) ;^479^^^^^464^494^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR ) ;Node rvalue = ref.node.getNext (  ) ;^479^^^^^464^494^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node gramps = varNode.getParent (  ) ;Node rvalue = ref.node.getNext (  ) ;^479^^^^^464^494^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;Node rvalue = ref.node.getNext (  ) ;^479^^^^^464^494^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node varNode = ref.node.getParent (  ) ;Node rvalue = ref.node.getNext (  ) ;^479^^^^^464^494^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node newNode = alias.node.cloneTree (  ) ;Node rvalue = ref.node.getNext (  ) ;^479^^^^^464^494^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node varParent = ref.node.getAncestor ( 3 ) ;Node rvalue = ref.node.getNext (  ) ;^479^^^^^464^494^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node rParent = r.node.getParent (  ) ;Node rvalue = ref.node.getNext (  ) ;^479^^^^^464^494^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node gramps = parent.getParent (  ) ;Node rvalue = ref.node.getNext (  ) ;^479^^^^^464^494^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^String fnName = ref.node.getString (  ) ;Node rvalue = ref.node.getNext (  ) ;^479^^^^^464^494^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node aliasParent = alias.node.getParent (  ) ;Node rvalue = ref.node.getNext (  ) ;^479^^^^^464^494^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node value = key.getNext (  ) ;Node rvalue = ref.node.getNext (  ) ;^479^^^^^464^494^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^String name = ref.node.getString (  ) ;Node rvalue = ref.node.getNext (  ) ;^479^^^^^464^494^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node gramps = ref.node.getAncestor ( 2 ) ;Node rvalue = ref.node.getNext (  ) ;^479^^^^^464^494^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^479^^^^^464^494^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^nextKey = value.getNext (  ) ;Node rvalue = ref.node.getNext (  ) ;^479^^^^^464^494^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^Node parent = ref.node.getAncestor (  ) ;^480^^^^^465^495^Node parent = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^Node parent = ref.node .cloneTree (  )  ;^480^^^^^465^495^Node parent = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^480^481^^^^465^495^Node parent = ref.node.getParent (  ) ; Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node gramps = stubVar.getParent (  ) ;^481^^^^^466^496^Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^Node gramps = parent.putBooleanProp (  ) ;^481^^^^^466^496^Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^Node gramps = varNode.getParent (  ) ;^481^^^^^466^496^Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getFirstChild (  ) ;Node gramps = parent.getParent (  ) ;^481^^^^^466^496^Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getNext (  ) ;Node gramps = parent.getParent (  ) ;^481^^^^^466^496^Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node gramps = varNode.getParent (  ) ;Node gramps = parent.getParent (  ) ;^481^^^^^466^496^Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;Node gramps = parent.getParent (  ) ;^481^^^^^466^496^Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node greatGramps = gramps.getParent (  ) ;Node gramps = parent.getParent (  ) ;^481^^^^^466^496^Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node varNode = ref.node.getParent (  ) ;Node gramps = parent.getParent (  ) ;^481^^^^^466^496^Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node currentParent = gramps.getParent (  ) ;Node gramps = parent.getParent (  ) ;^481^^^^^466^496^Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node varParent = ref.node.getAncestor ( 3 ) ;Node gramps = parent.getParent (  ) ;^481^^^^^466^496^Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node rParent = r.node.getParent (  ) ;Node gramps = parent.getParent (  ) ;^481^^^^^466^496^Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node greatGreatGramps = greatGramps.getParent (  ) ;Node gramps = parent.getParent (  ) ;^481^^^^^466^496^Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node aliasParent = alias.node.getParent (  ) ;Node gramps = parent.getParent (  ) ;^481^^^^^466^496^Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node value = key.getNext (  ) ;Node gramps = parent.getParent (  ) ;^481^^^^^466^496^Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node gramps = ref.node.getAncestor ( 2 ) ;Node gramps = parent.getParent (  ) ;^481^^^^^466^496^Node gramps = parent.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^481^482^^^^466^496^Node gramps = parent.getParent (  ) ; Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node greatGramps = varNode.getParent (  ) ;^482^^^^^467^497^Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^Node greatGramps = gramps.putBooleanProp (  ) ;^482^^^^^467^497^Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^Node greatGramps = gramps .cloneTree (  )  ;^482^^^^^467^497^Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node currentParent = gramps.getParent (  ) ;Node greatGramps = gramps.getParent (  ) ;^482^^^^^467^497^Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node rParent = r.node.getParent (  ) ;Node greatGramps = gramps.getParent (  ) ;^482^^^^^467^497^Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node gramps = parent.getParent (  ) ;Node greatGramps = gramps.getParent (  ) ;^482^^^^^467^497^Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node greatGreatGramps = greatGramps.getParent (  ) ;Node greatGramps = gramps.getParent (  ) ;^482^^^^^467^497^Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node gramps = varNode.getParent (  ) ;Node greatGramps = gramps.getParent (  ) ;^482^^^^^467^497^Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node aliasParent = alias.node.getParent (  ) ;Node greatGramps = gramps.getParent (  ) ;^482^^^^^467^497^Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node value = key.getNext (  ) ;Node greatGramps = gramps.getParent (  ) ;^482^^^^^467^497^Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;Node greatGramps = gramps.getParent (  ) ;^482^^^^^467^497^Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node varNode = ref.node.getParent (  ) ;Node greatGramps = gramps.getParent (  ) ;^482^^^^^467^497^Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node gramps = ref.node.getAncestor ( 2 ) ;Node greatGramps = gramps.getParent (  ) ;^482^^^^^467^497^Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node greatGramps = parent.getParent (  ) ;^482^^^^^467^497^Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^Node greatGramps = stubVar.getParent (  ) ;^482^^^^^467^497^Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^482^^^^^467^497^Node greatGramps = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node greatGreatGramps = varNode.getParent (  ) ;^483^^^^^468^498^Node greatGreatGramps = greatGramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^Node greatGreatGramps = greatGramps.putBooleanProp (  ) ;^483^^^^^468^498^Node greatGreatGramps = greatGramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^Node greatGreatGramps = rvalue.putBooleanProp (  ) ;^483^^^^^468^498^Node greatGreatGramps = greatGramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node currentParent = gramps.getParent (  ) ;Node greatGreatGramps = greatGramps.getParent (  ) ;^483^^^^^468^498^Node greatGreatGramps = greatGramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node rParent = r.node.getParent (  ) ;Node greatGreatGramps = greatGramps.getParent (  ) ;^483^^^^^468^498^Node greatGreatGramps = greatGramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node gramps = parent.getParent (  ) ;Node greatGreatGramps = greatGramps.getParent (  ) ;^483^^^^^468^498^Node greatGreatGramps = greatGramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node gramps = varNode.getParent (  ) ;Node greatGreatGramps = greatGramps.getParent (  ) ;^483^^^^^468^498^Node greatGreatGramps = greatGramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node aliasParent = alias.node.getParent (  ) ;Node greatGreatGramps = greatGramps.getParent (  ) ;^483^^^^^468^498^Node greatGreatGramps = greatGramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;Node greatGreatGramps = greatGramps.getParent (  ) ;^483^^^^^468^498^Node greatGreatGramps = greatGramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node greatGramps = gramps.getParent (  ) ;Node greatGreatGramps = greatGramps.getParent (  ) ;^483^^^^^468^498^Node greatGreatGramps = greatGramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node varNode = ref.node.getParent (  ) ;Node greatGreatGramps = greatGramps.getParent (  ) ;^483^^^^^468^498^Node greatGreatGramps = greatGramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node greatGreatGramps = rvalue.getParent (  ) ;^483^^^^^468^498^Node greatGreatGramps = greatGramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^Node greatGreatGramps = greatGramps .cloneTree (  )  ;^483^^^^^468^498^Node greatGreatGramps = greatGramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^483^^^^^468^498^Node greatGreatGramps = greatGramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node nameNode = NodeUtil.newName ( alias, varNode.getFirstChild (  ) , refName.fullName (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node nameNode = NodeUtil.newName (  gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node nameNode = NodeUtil.newName ( alias.getFirstChild (  ) , refName.fullName (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) .fullName (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node nameNode = NodeUtil.newName ( gramps, alias.getFirstChild (  ) , refName.fullName (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node nameNode = NodeUtil.newName ( alias, refName.getFirstChild (  ) , gramps.fullName (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node nameNode = NodeUtil.newName ( refName, gramps.getFirstChild (  ) , alias.fullName (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^Node nameNode = NodeUtil .newName ( alias )   ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^Node nameNode = NodeUtil.newName ( alias, gramps.putBooleanProp (  ) , refName.fullName (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.addRef (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName .canEliminate (  )   ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^Node nameNode = NodeUtil.newName ( alias, gramps .getLastChild (  )  , refName.fullName (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^Node nameNode = NodeUtil.newName ( alias, parent.putBooleanProp (  ) , refName.fullName (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^Node nameNode = NodeUtil.newName ( alias, parent.getFirstChild (  ) , refName.fullName (  )  ) ;^486^487^^^^471^501^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^refName.addRef (  )  ) ;^487^^^^^472^502^refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^refName .canEliminate (  )   ) ;^487^^^^^472^502^refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^487^^^^^472^502^refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^UNSAFE_THIS, name.fullName (  )  )  ) ;refName.fullName (  )  ) ;^487^^^^^472^502^refName.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^NodeUtil.copyNameAnnotations ( ref.node.getLastChild (  )  ) ;^488^^^^^473^503^NodeUtil.copyNameAnnotations ( ref.node.getLastChild (  ) , nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^NodeUtil.copyNameAnnotations ( ref.node.getAncestor (  ) , nameNode ) ;^488^^^^^473^503^NodeUtil.copyNameAnnotations ( ref.node.getLastChild (  ) , nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^488^^^^^473^503^NodeUtil.copyNameAnnotations ( ref.node.getLastChild (  ) , nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^NodeUtil.copyNameAnnotations ( n.getLastChild (  ) , ref ) ;NodeUtil.copyNameAnnotations ( ref.node.getLastChild (  ) , nameNode ) ;^488^^^^^473^503^NodeUtil.copyNameAnnotations ( ref.node.getLastChild (  ) , nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P2_Replace_Operator]^if  ( gramps.getType (  )  != Token.EXPR_RESULT )  {^490^^^^^475^505^if  ( gramps.getType (  )  == Token.EXPR_RESULT )  {^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P6_Replace_Expression]^if  ( currentParent.getType() != SCRIPT && currentParent.getType() != BLOCK )  {^490^^^^^475^505^if  ( gramps.getType (  )  == Token.EXPR_RESULT )  {^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P6_Replace_Expression]^if  ( currentParent.getType (  )  != SCRIPT )  {^490^^^^^475^505^if  ( gramps.getType (  )  == Token.EXPR_RESULT )  {^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P6_Replace_Expression]^if  ( currentParent.getType (  )  != BLOCK )  {^490^^^^^475^505^if  ( gramps.getType (  )  == Token.EXPR_RESULT )  {^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^if  ( gramps.putBooleanProp (  )  == Token.EXPR_RESULT )  {^490^^^^^475^505^if  ( gramps.getType (  )  == Token.EXPR_RESULT )  {^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^if  ( gramps .getString (  )   == Token.EXPR_RESULT )  {^490^^^^^475^505^if  ( gramps.getType (  )  == Token.EXPR_RESULT )  {^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P9_Replace_Statement]^if  ( n.getType (  )  == Token.THIS )  {^490^^^^^475^505^if  ( gramps.getType (  )  == Token.EXPR_RESULT )  {^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P9_Replace_Statement]^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^490^^^^^475^505^if  ( gramps.getType (  )  == Token.EXPR_RESULT )  {^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P9_Replace_Statement]^if  ( value.getType (  )  == Token.FUNCTION )  {^490^^^^^475^505^if  ( gramps.getType (  )  == Token.EXPR_RESULT )  {^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P2_Replace_Operator]^for  ( ; currentParent.getType (  )  != Token.SCRIPT || currentParent.getType (  )  != Token.BLOCK;^524^525^^^^509^539^for  ( ; currentParent.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P2_Replace_Operator]^for  ( ; currentParent.getType (  )  == Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^524^525^^^^509^539^for  ( ; currentParent.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P2_Replace_Operator]^for  ( ; currentParent.getType (  )  >= Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^524^525^^^^509^539^for  ( ; currentParent.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^for  ( ; varNode.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^524^525^^^^509^539^for  ( ; currentParent.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^for  ( ; currentParent.putBooleanProp (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^524^525^^^^509^539^for  ( ; currentParent.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^for  ( ; stubVar.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^524^525^^^^509^539^for  ( ; currentParent.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^current = rvalue, currentParent = currentParent.getParent (  )  )  {}^526^527^^^^511^541^current = currentParent, currentParent = currentParent.getParent (  )  )  {}^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^current =  stubVar, stubVar^526^527^^^^511^541^current = currentParent, currentParent = currentParent.getParent (  )  )  {}^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^currentParent = rvalue.getParent (  )  )  {}^527^^^^^512^542^currentParent = currentParent.getParent (  )  )  {}^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^currentParent = currentParent.putBooleanProp (  )  )  {}^527^^^^^512^542^currentParent = currentParent.getParent (  )  )  {}^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^currentParent =  varNode.getParent (  )  )  {}^527^^^^^512^542^currentParent = currentParent.getParent (  )  )  {}^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node stubVar = new Node ( Token.VAR, stubVar.cloneTree (  )  ) ;^531^^^^^516^546^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node stubVar = new Node ( Token.VAR.cloneTree (  )  ) ;^531^^^^^516^546^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node stubVar = new Node ( Token. nameNode.cloneTree (  )  ) ;^531^^^^^516^546^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^Node stubVar = new Node ( Token.VAR, nameNode.putBooleanProp (  )  ) ;^531^^^^^516^546^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^Node stubVar = new Node ( Token.VAR, varNode.cloneTree (  )  ) ;^531^^^^^516^546^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node current = varNode;^522^^^^^507^537^Node current = gramps;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node currentParent = rvalue.getParent (  ) ;^523^^^^^508^538^Node currentParent = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^Node currentParent = gramps.putBooleanProp (  ) ;^523^^^^^508^538^Node currentParent = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^Node currentParent = rvalue.putBooleanProp (  ) ;^523^^^^^508^538^Node currentParent = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node varParent = ref.node.getAncestor ( 3 ) ;Node currentParent = gramps.getParent (  ) ;^523^^^^^508^538^Node currentParent = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node rParent = r.node.getParent (  ) ;Node currentParent = gramps.getParent (  ) ;^523^^^^^508^538^Node currentParent = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node gramps = parent.getParent (  ) ;Node currentParent = gramps.getParent (  ) ;^523^^^^^508^538^Node currentParent = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node greatGreatGramps = greatGramps.getParent (  ) ;Node currentParent = gramps.getParent (  ) ;^523^^^^^508^538^Node currentParent = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node gramps = varNode.getParent (  ) ;Node currentParent = gramps.getParent (  ) ;^523^^^^^508^538^Node currentParent = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node aliasParent = alias.node.getParent (  ) ;Node currentParent = gramps.getParent (  ) ;^523^^^^^508^538^Node currentParent = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;Node currentParent = gramps.getParent (  ) ;^523^^^^^508^538^Node currentParent = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node greatGramps = gramps.getParent (  ) ;Node currentParent = gramps.getParent (  ) ;^523^^^^^508^538^Node currentParent = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node varNode = ref.node.getParent (  ) ;Node currentParent = gramps.getParent (  ) ;^523^^^^^508^538^Node currentParent = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^Node stubVar = new Node ( Token.VAR, nameNode .getParent (  )   ) ;^531^^^^^516^546^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node newNode = alias.node.cloneTree (  ) ;Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;^531^^^^^516^546^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node newVar = new Node ( Token.VAR, nameNode ) ;Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;^531^^^^^516^546^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR, nameNode ) ;Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;^531^^^^^516^546^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^Preconditions .checkArgument (  )  ;^513^^^^^498^528^Preconditions.checkNotNull ( ref.getTwin (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^513^^^^^498^528^Preconditions.checkNotNull ( ref.getTwin (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( NodeUtil.isStatementBlock ( parent )  ) ;Preconditions.checkNotNull ( ref.getTwin (  )  ) ;^513^^^^^498^528^Preconditions.checkNotNull ( ref.getTwin (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^523^^^^^508^538^Node currentParent = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^524^525^526^527^^509^539^for  ( ; currentParent.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK; current = currentParent, currentParent = currentParent.getParent (  )  )  {}^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^currentParent.putBooleanProp (  )  != Token.BLOCK;^525^^^^^510^540^currentParent.getType (  )  != Token.BLOCK;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^currentParent .getString (  )   != Token.BLOCK;^525^^^^^510^540^currentParent.getType (  )  != Token.BLOCK;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^525^^^^^510^540^currentParent.getType (  )  != Token.BLOCK;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P12_Insert_Condition]^if  ( aliasParent.getType (  )  == Token.NAME )  { currentParent.getType (  )  != Token.BLOCK; }^525^^^^^510^540^currentParent.getType (  )  != Token.BLOCK;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^currentParent = stubVar.getParent (  )  )  {}^527^^^^^512^542^currentParent = currentParent.getParent (  )  )  {}^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^Node stubVar = new Node ( Token.VAR, rvalue.cloneTree (  )  ) ;^531^^^^^516^546^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^531^^^^^516^546^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^currentParent.addChildBefore ( varNode, current ) ;^532^^^^^517^547^currentParent.addChildBefore ( stubVar, current ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^currentParent.addChildBefore ( stubVar, varNode ) ;^532^^^^^517^547^currentParent.addChildBefore ( stubVar, current ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^currentParent.addChildBefore (  current ) ;^532^^^^^517^547^currentParent.addChildBefore ( stubVar, current ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^currentParent.addChildBefore ( stubVar ) ;^532^^^^^517^547^currentParent.addChildBefore ( stubVar, current ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^currentParent.addChildBefore ( current, stubVar ) ;^532^^^^^517^547^currentParent.addChildBefore ( stubVar, current ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^currentParent.addChildBefore ( stubVar, rvalue ) ;^532^^^^^517^547^currentParent.addChildBefore ( stubVar, current ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^532^533^534^535^^517^547^currentParent.addChildBefore ( stubVar, current ) ;  parent.replaceChild ( ref.node, nameNode ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^varParent.addChildBefore ( newVar, varNode ) ;currentParent.addChildBefore ( stubVar, current ) ;^532^^^^^517^547^currentParent.addChildBefore ( stubVar, current ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^parent.addChildToFront ( newVar ) ;currentParent.addChildBefore ( stubVar, current ) ;^532^^^^^517^547^currentParent.addChildBefore ( stubVar, current ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^parent.addChildAfter ( newVar, addAfter ) ;currentParent.addChildBefore ( stubVar, current ) ;^532^^^^^517^547^currentParent.addChildBefore ( stubVar, current ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^parent.replaceChild ( ref.node ) ;^534^^^^^519^549^parent.replaceChild ( ref.node, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^parent.replaceChild (  nameNode ) ;^534^^^^^519^549^parent.replaceChild ( ref.node, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^parent .replaceChild ( greatGramps )  ;^534^^^^^519^549^parent.replaceChild ( ref.node, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^parent .replaceChild ( currentParent )  ;^534^^^^^519^549^parent.replaceChild ( ref.node, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^534^^^^^519^549^parent.replaceChild ( ref.node, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^varNode.removeChild ( ref.node ) ;parent.replaceChild ( ref.node, nameNode ) ;^534^^^^^519^549^parent.replaceChild ( ref.node, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^aliasRef.getParent (  ) .replaceChild ( aliasRef.getNameNode (  ) , newNode ) ;parent.replaceChild ( ref.node, nameNode ) ;^534^^^^^519^549^parent.replaceChild ( ref.node, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^objlit.replaceChildAfter ( key, refNode ) ;parent.replaceChild ( ref.node, nameNode ) ;^534^^^^^519^549^parent.replaceChild ( ref.node, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^varParent.replaceChild ( gramps, varNode ) ;parent.replaceChild ( ref.node, nameNode ) ;^534^^^^^519^549^parent.replaceChild ( ref.node, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^parent.replaceChild ( n, ref ) ;parent.replaceChild ( ref.node, nameNode ) ;^534^^^^^519^549^parent.replaceChild ( ref.node, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^parent.removeChild ( rvalue ) ;parent.replaceChild ( ref.node, nameNode ) ;^534^^^^^519^549^parent.replaceChild ( ref.node, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^varParent.removeChild ( varNode ) ;parent.replaceChild ( ref.node, nameNode ) ;^534^^^^^519^549^parent.replaceChild ( ref.node, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^greatGramps.replaceChild ( gramps, varNode ) ;parent.replaceChild ( ref.node, nameNode ) ;^534^^^^^519^549^parent.replaceChild ( ref.node, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^varNode.addChildToBack ( nameNode ) ;parent.replaceChild ( ref.node, nameNode ) ;^534^^^^^519^549^parent.replaceChild ( ref.node, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node varNode = new Node ( Token.VAR, rvalue ) ;^509^^^^^494^524^Node varNode = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node varNode = new Node ( Token.VAR ) ;^509^^^^^494^524^Node varNode = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node varNode = new Node ( Token. nameNode ) ;^509^^^^^494^524^Node varNode = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^Node varNode = new Node ( Token.VAR, parent ) ;^509^^^^^494^524^Node varNode = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^Node varNode = new Node ( Token.VAR, stubVar ) ;^509^^^^^494^524^Node varNode = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;Node varNode = new Node ( Token.VAR, nameNode ) ;^509^^^^^494^524^Node varNode = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node newVar = new Node ( Token.VAR, nameNode ) ;Node varNode = new Node ( Token.VAR, nameNode ) ;^509^^^^^494^524^Node varNode = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR ) ;Node varNode = new Node ( Token.VAR, nameNode ) ;^509^^^^^494^524^Node varNode = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;Node varNode = new Node ( Token.VAR, nameNode ) ;^509^^^^^494^524^Node varNode = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^Node varNode = ref.node.getParent (  ) ;Node varNode = new Node ( Token.VAR, nameNode ) ;^509^^^^^494^524^Node varNode = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^parent.removeChild ( nameNode ) ;^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^parent.replaceChild ( rvalue ) ;^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^parent .removeChild ( stubVar )  ;^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^506^507^^^^491^521^parent.removeChild ( rvalue ) ; nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^nameNode.addChildToFront ( rvalue ) ;parent.removeChild ( rvalue ) ;^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^objlit.removeChild ( value ) ;parent.removeChild ( rvalue ) ;^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^gramps.removeChild ( varNode ) ;parent.removeChild ( rvalue ) ;^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^varNode.removeChild ( ref.node ) ;parent.removeChild ( rvalue ) ;^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^objlit.removeChild ( key ) ;parent.removeChild ( rvalue ) ;^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^nameNode.addChildToFront ( value ) ;parent.removeChild ( rvalue ) ;^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^varParent.replaceChild ( gramps, varNode ) ;parent.removeChild ( rvalue ) ;^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^parent.replaceChild ( n, ref ) ;parent.removeChild ( rvalue ) ;^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^varParent.removeChild ( varNode ) ;parent.removeChild ( rvalue ) ;^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^ref.node.getParent (  ) .removeChild ( rvalue ) ;parent.removeChild ( rvalue ) ;^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^name.removeRef ( ref ) ;parent.removeChild ( rvalue ) ;^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^parent.replaceChild ( ref.node, nameNode ) ;parent.removeChild ( rvalue ) ;^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^nameNode.addChildToFront ( stubVar ) ;^507^^^^^492^522^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^nameNode.addChildAfter ( rvalue ) ;^507^^^^^492^522^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^nameNode .addChildBefore ( varNode , rvalue )  ;^507^^^^^492^522^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^nameNode.addChildAfter ( varNode ) ;^507^^^^^492^522^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^507^^^^^492^522^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^nameNode.addChildToFront ( value ) ;nameNode.addChildToFront ( rvalue ) ;^507^^^^^492^522^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^parent.addChildToFront ( newVar ) ;nameNode.addChildToFront ( rvalue ) ;^507^^^^^492^522^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^parent.removeChild ( rvalue ) ;nameNode.addChildToFront ( rvalue ) ;^507^^^^^492^522^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^varNode.addChildToBack ( nameNode ) ;nameNode.addChildToFront ( rvalue ) ;^507^^^^^492^522^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^greatGramps.replaceChild ( stubVar, varNode ) ;^510^^^^^495^525^greatGramps.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^greatGramps.replaceChild ( gramps, rvalue ) ;^510^^^^^495^525^greatGramps.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^greatGramps.replaceChild (  varNode ) ;^510^^^^^495^525^greatGramps.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^greatGramps.replaceChild ( gramps ) ;^510^^^^^495^525^greatGramps.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^greatGramps.replaceChild ( varNode, varNode ) ;^510^^^^^495^525^greatGramps.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^510^^^^^495^525^greatGramps.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^gramps.removeChild ( varNode ) ;greatGramps.replaceChild ( gramps, varNode ) ;^510^^^^^495^525^greatGramps.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^varParent.replaceChild ( gramps, varNode ) ;greatGramps.replaceChild ( gramps, varNode ) ;^510^^^^^495^525^greatGramps.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^parent.replaceChild ( n, ref ) ;greatGramps.replaceChild ( gramps, varNode ) ;^510^^^^^495^525^greatGramps.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^varParent.removeChild ( varNode ) ;greatGramps.replaceChild ( gramps, varNode ) ;^510^^^^^495^525^greatGramps.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P11_Insert_Donor_Statement]^parent.replaceChild ( ref.node, nameNode ) ;greatGramps.replaceChild ( gramps, varNode ) ;^510^^^^^495^525^greatGramps.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P2_Replace_Operator]^for  ( ; currentParent.getType (  )  < Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^524^525^^^^509^539^for  ( ; currentParent.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^for  ( ; currentParent .getString (  )   != Token.SCRIPT && currentParent^524^525^^^^509^539^for  ( ; currentParent.getType (  )  != Token.SCRIPT && currentParent.getType (  )  != Token.BLOCK;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^current = parent, currentParent = currentParent.getParent (  )  )  {}^526^527^^^^511^541^current = currentParent, currentParent = currentParent.getParent (  )  )  {}^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node varNode = new Node ( Token.VAR, varNode ) ;^509^^^^^494^524^Node varNode = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^Node current = stubVar;^522^^^^^507^537^Node current = gramps;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node currentParent = varNode.getParent (  ) ;^523^^^^^508^538^Node currentParent = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^Node currentParent = gramps .cloneTree (  )  ;^523^^^^^508^538^Node currentParent = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node stubVar = new Node ( Token.VAR, parent.cloneTree (  )  ) ;^531^^^^^516^546^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^if  ( varNode.getType (  )  == Token.EXPR_RESULT )  {^490^^^^^475^505^if  ( gramps.getType (  )  == Token.EXPR_RESULT )  {^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^if  ( parent.getType (  )  == Token.EXPR_RESULT )  {^490^^^^^475^505^if  ( gramps.getType (  )  == Token.EXPR_RESULT )  {^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^parent .removeChild ( rvalue )  ;^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^parent.removeChild ( varNode ) ;^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^506^^^^^491^521^parent.removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^nameNode.addChildToFront ( varNode ) ;^507^^^^^492^522^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^nameNode .addChildBefore ( stubVar , greatGreatGramps )  ;^507^^^^^492^522^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^nameNode.addChildToFront ( parent ) ;^507^^^^^492^522^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^greatGramps.replaceChild ( gramps, stubVar ) ;^510^^^^^495^525^greatGramps.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^greatGramps.replaceChild ( varNode, gramps ) ;^510^^^^^495^525^greatGramps.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P5_Replace_Variable]^Node currentParent = stubVar.getParent (  ) ;^523^^^^^508^538^Node currentParent = gramps.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P8_Replace_Mix]^currentParent.addChildBefore ( parent, current ) ;^532^^^^^517^547^currentParent.addChildBefore ( stubVar, current ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^compiler.report (  ) ;^537^^^^^522^552^compiler.reportCodeChange (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P14_Delete_Statement]^^537^^^^^522^552^compiler.reportCodeChange (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateSimpleDeclaration [RETURN_TYPE] void   String alias Name refName Ref ref [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  current  currentParent  gramps  greatGramps  greatGreatGramps  nameNode  parent  rvalue  stubVar  varNode  List  globalNames  refs  String  alias  Map  nameMap  Name  refName  
[P7_Replace_Invocation]^switch  ( n.declaration.node.getParent (  ) .removeChild (  )  )  {^551^^^^^550^562^switch  ( n.declaration.node.getParent (  ) .getType (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^switch  ( n.declaration.node .cloneTree (  )  .getType (  )  )  {^551^^^^^550^562^switch  ( n.declaration.node.getParent (  ) .getType (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^551^552^553^^^550^562^switch  ( n.declaration.node.getParent (  ) .getType (  )  )  { case Token.ASSIGN: updateObjLitOrFunctionDeclarationAtAssignNode ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^updateObjLitOrFunctionDeclarationAtAssignNode (  alias ) ;^553^^^^^550^562^updateObjLitOrFunctionDeclarationAtAssignNode ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^updateObjLitOrFunctionDeclarationAtAssignNode ( n ) ;^553^^^^^550^562^updateObjLitOrFunctionDeclarationAtAssignNode ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^updateObjLitOrFunctionDeclarationAtAssignNode ( alias, n ) ;^553^^^^^550^562^updateObjLitOrFunctionDeclarationAtAssignNode ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^updateObjLitOrFunctionDeclaration ( n, alias ) ;^553^^^^^550^562^updateObjLitOrFunctionDeclarationAtAssignNode ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^553^^^^^550^562^updateObjLitOrFunctionDeclarationAtAssignNode ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^updateObjLitOrFunctionDeclaration ( n, alias ) ;updateObjLitOrFunctionDeclarationAtAssignNode ( n, alias ) ;^553^^^^^550^562^updateObjLitOrFunctionDeclarationAtAssignNode ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^updateObjLitOrFunctionDeclarationAtVarNode ( n ) ;updateObjLitOrFunctionDeclarationAtAssignNode ( n, alias ) ;^553^^^^^550^562^updateObjLitOrFunctionDeclarationAtAssignNode ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^updateFunctionDeclarationAtFunctionNode ( n ) ;updateObjLitOrFunctionDeclarationAtAssignNode ( n, alias ) ;^553^^^^^550^562^updateObjLitOrFunctionDeclarationAtAssignNode ( n, alias ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^updateFunctionDeclarationAtFunctionNode ( n ) ;^556^^^^^550^562^updateObjLitOrFunctionDeclarationAtVarNode ( n ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^556^^^^^550^562^updateObjLitOrFunctionDeclarationAtVarNode ( n ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^updateObjLitOrFunctionDeclaration ( n, alias ) ;updateObjLitOrFunctionDeclarationAtVarNode ( n ) ;^556^^^^^550^562^updateObjLitOrFunctionDeclarationAtVarNode ( n ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^updateObjLitOrFunctionDeclarationAtAssignNode ( n, alias ) ;updateObjLitOrFunctionDeclarationAtVarNode ( n ) ;^556^^^^^550^562^updateObjLitOrFunctionDeclarationAtVarNode ( n ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^updateFunctionDeclarationAtFunctionNode ( n ) ;updateObjLitOrFunctionDeclarationAtVarNode ( n ) ;^556^^^^^550^562^updateObjLitOrFunctionDeclarationAtVarNode ( n ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^updateObjLitOrFunctionDeclarationAtVarNode ( n ) ;^559^^^^^550^562^updateFunctionDeclarationAtFunctionNode ( n ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^559^560^^^^550^562^updateFunctionDeclarationAtFunctionNode ( n ) ; break;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^updateObjLitOrFunctionDeclarationAtAssignNode ( n, alias ) ;updateFunctionDeclarationAtFunctionNode ( n ) ;^559^^^^^550^562^updateFunctionDeclarationAtFunctionNode ( n ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^updateObjLitOrFunctionDeclarationAtVarNode ( n ) ;updateFunctionDeclarationAtFunctionNode ( n ) ;^559^^^^^550^562^updateFunctionDeclarationAtFunctionNode ( n ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclaration [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^Node rvalue = ref.node.getAncestor (  ) ;^579^^^^^564^594^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getFirstChild (  ) ;Node rvalue = ref.node.getNext (  ) ;^579^^^^^564^594^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR ) ;Node rvalue = ref.node.getNext (  ) ;^579^^^^^564^594^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = varNode.getParent (  ) ;Node rvalue = ref.node.getNext (  ) ;^579^^^^^564^594^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;Node rvalue = ref.node.getNext (  ) ;^579^^^^^564^594^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node varNode = ref.node.getParent (  ) ;Node rvalue = ref.node.getNext (  ) ;^579^^^^^564^594^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node newNode = alias.node.cloneTree (  ) ;Node rvalue = ref.node.getNext (  ) ;^579^^^^^564^594^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node varParent = ref.node.getAncestor ( 3 ) ;Node rvalue = ref.node.getNext (  ) ;^579^^^^^564^594^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node rParent = r.node.getParent (  ) ;Node rvalue = ref.node.getNext (  ) ;^579^^^^^564^594^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = parent.getParent (  ) ;Node rvalue = ref.node.getNext (  ) ;^579^^^^^564^594^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^String fnName = ref.node.getString (  ) ;Node rvalue = ref.node.getNext (  ) ;^579^^^^^564^594^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node aliasParent = alias.node.getParent (  ) ;Node rvalue = ref.node.getNext (  ) ;^579^^^^^564^594^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node value = key.getNext (  ) ;Node rvalue = ref.node.getNext (  ) ;^579^^^^^564^594^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^String name = ref.node.getString (  ) ;Node rvalue = ref.node.getNext (  ) ;^579^^^^^564^594^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = ref.node.getAncestor ( 2 ) ;Node rvalue = ref.node.getNext (  ) ;^579^^^^^564^594^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P8_Replace_Mix]^Node rvalue = ref.node .getParent (  )  ;^579^^^^^564^594^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^579^580^^^^564^594^Node rvalue = ref.node.getNext (  ) ; Node varNode = new Node ( Token.VAR ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^nextKey = value.getNext (  ) ;Node rvalue = ref.node.getNext (  ) ;^579^^^^^564^594^Node rvalue = ref.node.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getNext (  ) ;Node varNode = new Node ( Token.VAR ) ;^580^^^^^565^595^Node varNode = new Node ( Token.VAR ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node newVar = new Node ( Token.VAR, nameNode ) ;Node varNode = new Node ( Token.VAR ) ;^580^^^^^565^595^Node varNode = new Node ( Token.VAR ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node varParent = ref.node.getAncestor ( 3 ) ;Node varNode = new Node ( Token.VAR ) ;^580^^^^^565^595^Node varNode = new Node ( Token.VAR ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR, nameNode ) ;Node varNode = new Node ( Token.VAR ) ;^580^^^^^565^595^Node varNode = new Node ( Token.VAR ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;Node varNode = new Node ( Token.VAR ) ;^580^^^^^565^595^Node varNode = new Node ( Token.VAR ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;Node varNode = new Node ( Token.VAR ) ;^580^^^^^565^595^Node varNode = new Node ( Token.VAR ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node varNode = ref.node.getParent (  ) ;Node varNode = new Node ( Token.VAR ) ;^580^^^^^565^595^Node varNode = new Node ( Token.VAR ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P3_Replace_Literal]^Node varParent = ref.node.getAncestor ( -4 ) ;^581^^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^Node varParent = ref.node .getNext (  )  ;^581^^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getFirstChild (  ) ;Node varParent = ref.node.getAncestor ( 3 ) ;^581^^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getNext (  ) ;Node varParent = ref.node.getAncestor ( 3 ) ;^581^^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR ) ;Node varParent = ref.node.getAncestor ( 3 ) ;^581^^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = varNode.getParent (  ) ;Node varParent = ref.node.getAncestor ( 3 ) ;^581^^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;Node varParent = ref.node.getAncestor ( 3 ) ;^581^^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node varNode = ref.node.getParent (  ) ;Node varParent = ref.node.getAncestor ( 3 ) ;^581^^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node currentParent = gramps.getParent (  ) ;Node varParent = ref.node.getAncestor ( 3 ) ;^581^^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node rParent = r.node.getParent (  ) ;Node varParent = ref.node.getAncestor ( 3 ) ;^581^^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = parent.getParent (  ) ;Node varParent = ref.node.getAncestor ( 3 ) ;^581^^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^String fnName = ref.node.getString (  ) ;Node varParent = ref.node.getAncestor ( 3 ) ;^581^^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node aliasParent = alias.node.getParent (  ) ;Node varParent = ref.node.getAncestor ( 3 ) ;^581^^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node value = key.getNext (  ) ;Node varParent = ref.node.getAncestor ( 3 ) ;^581^^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^String name = ref.node.getString (  ) ;Node varParent = ref.node.getAncestor ( 3 ) ;^581^^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = ref.node.getAncestor ( 2 ) ;Node varParent = ref.node.getAncestor ( 3 ) ;^581^^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P3_Replace_Literal]^Node varParent = ref.node.getAncestor ( -5 ) ;^581^^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^581^582^^^^566^596^Node varParent = ref.node.getAncestor ( 3 ) ; Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P3_Replace_Literal]^Node gramps = ref.node.getAncestor ( 6 ) ;^582^^^^^567^597^Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getFirstChild (  ) ;Node gramps = ref.node.getAncestor ( 2 ) ;^582^^^^^567^597^Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getNext (  ) ;Node gramps = ref.node.getAncestor ( 2 ) ;^582^^^^^567^597^Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = varNode.getParent (  ) ;Node gramps = ref.node.getAncestor ( 2 ) ;^582^^^^^567^597^Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;Node gramps = ref.node.getAncestor ( 2 ) ;^582^^^^^567^597^Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node greatGramps = gramps.getParent (  ) ;Node gramps = ref.node.getAncestor ( 2 ) ;^582^^^^^567^597^Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node varNode = ref.node.getParent (  ) ;Node gramps = ref.node.getAncestor ( 2 ) ;^582^^^^^567^597^Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node varParent = ref.node.getAncestor ( 3 ) ;Node gramps = ref.node.getAncestor ( 2 ) ;^582^^^^^567^597^Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node rParent = r.node.getParent (  ) ;Node gramps = ref.node.getAncestor ( 2 ) ;^582^^^^^567^597^Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = parent.getParent (  ) ;Node gramps = ref.node.getAncestor ( 2 ) ;^582^^^^^567^597^Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^String fnName = ref.node.getString (  ) ;Node gramps = ref.node.getAncestor ( 2 ) ;^582^^^^^567^597^Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node aliasParent = alias.node.getParent (  ) ;Node gramps = ref.node.getAncestor ( 2 ) ;^582^^^^^567^597^Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node value = key.getNext (  ) ;Node gramps = ref.node.getAncestor ( 2 ) ;^582^^^^^567^597^Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^String name = ref.node.getString (  ) ;Node gramps = ref.node.getAncestor ( 2 ) ;^582^^^^^567^597^Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P3_Replace_Literal]^Node gramps = ref.node.getAncestor ( -4 ) ;^582^^^^^567^597^Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P8_Replace_Mix]^Node gramps = ref.node .getNext (  )  ;^582^^^^^567^597^Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^582^^^^^567^597^Node gramps = ref.node.getAncestor ( 2 ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P2_Replace_Operator]^boolean isObjLit = rvalue.getType (  )  <= Token.OBJECTLIT;^583^^^^^568^598^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^boolean isObjLit = varParent.getType (  )  == Token.OBJECTLIT;^583^^^^^568^598^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^boolean isObjLit = rvalue.putBooleanProp (  )  == Token.OBJECTLIT;^583^^^^^568^598^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^boolean isObjLit = rvalue .getString (  )   == Token.OBJECTLIT;^583^^^^^568^598^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P12_Insert_Condition]^if  ( rvalue.getType (  )  == Token.FUNCTION )  { boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT; }^583^^^^^568^598^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P12_Insert_Condition]^if  ( value.getType (  )  == Token.FUNCTION )  { boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT; }^583^^^^^568^598^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P8_Replace_Mix]^boolean isObjLit = varNode.getType (  )  == Token.OBJECTLIT;^583^^^^^568^598^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^583^^^^^568^598^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^currentParent.getType (  )  != Token.BLOCK;boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^583^^^^^568^598^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P2_Replace_Operator]^if  ( isObjLit || n.canEliminate (  )  )  {^585^^^^^570^600^if  ( isObjLit && n.canEliminate (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P6_Replace_Expression]^if  ( isObjLit ) {^585^^^^^570^600^if  ( isObjLit && n.canEliminate (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P6_Replace_Expression]^if  (  n.canEliminate (  )  )  {^585^^^^^570^600^if  ( isObjLit && n.canEliminate (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P6_Replace_Expression]^if  ( rvalue.getType() == FUNCTION )  {^585^^^^^570^600^if  ( isObjLit && n.canEliminate (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^if  ( isObjLit && n.addRef (  )  )  {^585^^^^^570^600^if  ( isObjLit && n.canEliminate (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^if  ( isObjLit && n .fullName (  )   )  {^585^^^^^570^600^if  ( isObjLit && n.canEliminate (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P2_Replace_Operator]^if  ( rvalue.getType (  )  >= Token.FUNCTION )  {^591^^^^^585^610^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^if  ( rvalue.putBooleanProp (  )  == Token.FUNCTION )  {^591^^^^^585^610^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P9_Replace_Statement]^if  ( aliasParent.getType (  )  == Token.NAME )  {^591^^^^^585^610^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P9_Replace_Statement]^if  ( n.getType (  )  == Token.THIS )  {^591^^^^^585^610^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P9_Replace_Statement]^if  ( gramps.getType (  )  == Token.EXPR_RESULT )  {^591^^^^^585^610^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P9_Replace_Statement]^if  ( value.getType (  )  == Token.FUNCTION )  {^591^^^^^585^610^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P15_Unwrap_Block]^checkForHosedThisReferences(rvalue, n.docInfo, n);^591^592^593^^^585^610^if  ( rvalue.getType (  )  == Token.FUNCTION )  { checkForHosedThisReferences ( rvalue, n.docInfo, n ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P16_Remove_Block]^^591^592^593^^^585^610^if  ( rvalue.getType (  )  == Token.FUNCTION )  { checkForHosedThisReferences ( rvalue, n.docInfo, n ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P13_Insert_Block]^if  (  ( value.getType (  )  )  ==  ( FUNCTION )  )  {     checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ; }^591^^^^^585^610^[Delete]^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^checkForHosedThisReferences (  n.docInfo, n ) ;^592^^^^^585^610^checkForHosedThisReferences ( rvalue, n.docInfo, n ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^checkForHosedThisReferences ( rvalue.docInfo, n ) ;^592^^^^^585^610^checkForHosedThisReferences ( rvalue, n.docInfo, n ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^checkForHosedThisReferences ( rvalue,  n ) ;^592^^^^^585^610^checkForHosedThisReferences ( rvalue, n.docInfo, n ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^updateSimpleDeclaration ( rvalue, n.docInfo, n ) ;^592^^^^^585^610^checkForHosedThisReferences ( rvalue, n.docInfo, n ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^592^^^^^585^610^checkForHosedThisReferences ( rvalue, n.docInfo, n ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^if  ( ref.node.getLastChild (  ) .removeChild ( Node.IS_CONSTANT_NAME )  )  {^600^^^^^585^610^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^if  ( ref.node.getAncestor (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^600^^^^^585^610^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P8_Replace_Mix]^if  ( ref.node.getLastChild (  )  .getType (  )   )  {^600^^^^^585^610^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P9_Replace_Statement]^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^600^^^^^585^610^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P9_Replace_Statement]^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^600^^^^^585^610^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P15_Unwrap_Block]^nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true);^600^601^602^^^585^610^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P16_Remove_Block]^^600^601^602^^^585^610^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P13_Insert_Block]^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^600^^^^^585^610^[Delete]^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P13_Insert_Block]^if  ( get ( 0 ) getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^600^^^^^585^610^[Delete]^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P13_Insert_Block]^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^600^^^^^585^610^[Delete]^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P3_Replace_Literal]^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, false ) ;^601^^^^^585^610^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^nameNode.replaceChild ( Node.IS_CONSTANT_NAME, true ) ;^601^^^^^585^610^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^601^^^^^585^610^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P12_Insert_Condition]^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^601^^^^^585^610^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P12_Insert_Condition]^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^601^^^^^585^610^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^ref.node = varNode;^609^^^^^585^610^ref.node = nameNode;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P8_Replace_Mix]^ref.node =  varParent;^609^^^^^585^610^ref.node = nameNode;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^ref.node = null;ref.node = nameNode;^609^^^^^585^610^ref.node = nameNode;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^p.declaration.node = nameNode;ref.node = nameNode;^609^^^^^585^610^ref.node = nameNode;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^newAlias.node = refNode;ref.node = nameNode;^609^^^^^585^610^ref.node = nameNode;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P3_Replace_Literal]^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 8 ) , n.fullName (  )  ) ;^597^598^^^^585^610^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^Node nameNode = NodeUtil.newName (  ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^597^598^^^^585^610^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^Node nameNode = NodeUtil.newName ( alias.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^597^598^^^^585^610^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) .fullName (  )  ) ;^597^598^^^^585^610^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^Node nameNode = NodeUtil.newName ( alias.getAncestor ( 2 ) , n.fullName (  )  ) ;^597^598^^^^585^610^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.addRef (  )  ) ;^597^598^^^^585^610^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^597^598^^^^585^610^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node ref = NodeUtil.newName ( alias, n, originalName ) ;Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^597^598^^^^585^610^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^if  ( varParent.getType (  )  == Token.FUNCTION )  {^591^^^^^585^610^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^if  ( rvalue .getString (  )   == Token.FUNCTION )  {^591^^^^^585^610^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^ref.node.getParent (  )  .removeChild ( rvalue )  ;^595^^^^^585^610^ref.node.getParent (  ) .removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^ref.node.getAncestor (  ) .removeChild ( rvalue ) ;^595^^^^^585^610^ref.node.getParent (  ) .removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^595^^^^^585^610^ref.node.getParent (  ) .removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^objlit.removeChild ( value ) ;ref.node.getParent (  ) .removeChild ( rvalue ) ;^595^^^^^585^610^ref.node.getParent (  ) .removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.removeChild ( rvalue ) ;ref.node.getParent (  ) .removeChild ( rvalue ) ;^595^^^^^585^610^ref.node.getParent (  ) .removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varParent.removeChild ( varNode ) ;ref.node.getParent (  ) .removeChild ( rvalue ) ;^595^^^^^585^610^ref.node.getParent (  ) .removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^ref.node .cloneTree (  )  .removeChild ( rvalue ) ;^595^^^^^585^610^ref.node.getParent (  ) .removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P3_Replace_Literal]^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor (  ) , n.fullName (  )  ) ;^597^598^^^^585^610^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^Node nameNode = NodeUtil .newName ( alias , nameNode , alias )   ) ;^597^598^^^^585^610^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^597^598^^^^585^610^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^597^598^^^^585^610^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P3_Replace_Literal]^alias, ref.node.getAncestor ( -2 ) , n.fullName (  )  ) ;^598^^^^^585^610^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^alias.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^598^^^^^585^610^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^alias.getAncestor ( 2 ) , n.fullName (  )  ) ;^598^^^^^585^610^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^alias, ref.node .getNext (  )  , n.fullName (  )  ) ;^598^^^^^585^610^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^598^^^^^585^610^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^598^^^^^585^610^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^598^^^^^585^610^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^alias, ref.node.getAncestor ( 2 ) , n.addRef (  )  ) ;^598^^^^^585^610^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^alias, ref.node.getAncestor ( 2 ) , n .canEliminate (  )   ) ;^598^^^^^585^610^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varNode.addChildToBack ( varParent ) ;^604^^^^^585^610^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^varNode.addChildAfter ( nameNode ) ;^604^^^^^585^610^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P8_Replace_Mix]^varNode.addChildAfter ( varParent ) ;^604^^^^^585^610^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^604^605^^^^585^610^varNode.addChildToBack ( nameNode ) ; nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^nameNode.addChildToFront ( rvalue ) ;varNode.addChildToBack ( nameNode ) ;^604^^^^^585^610^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^newNodes.add ( newNode ) ;varNode.addChildToBack ( nameNode ) ;^604^^^^^585^610^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varNode.removeChild ( ref.node ) ;varNode.addChildToBack ( nameNode ) ;^604^^^^^585^610^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varParent.addChildBefore ( newVar, varNode ) ;varNode.addChildToBack ( nameNode ) ;^604^^^^^585^610^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^nameNode.addChildToFront ( value ) ;varNode.addChildToBack ( nameNode ) ;^604^^^^^585^610^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.addChildToFront ( newVar ) ;varNode.addChildToBack ( nameNode ) ;^604^^^^^585^610^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.replaceChild ( ref.node, nameNode ) ;varNode.addChildToBack ( nameNode ) ;^604^^^^^585^610^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^nameNode.addChildToFront ( varParent ) ;^605^^^^^585^610^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^nameNode.addChildAfter ( rvalue ) ;^605^^^^^585^610^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^605^606^^^^585^610^nameNode.addChildToFront ( rvalue ) ; varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^nameNode.addChildToFront ( value ) ;nameNode.addChildToFront ( rvalue ) ;^605^^^^^585^610^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.addChildToFront ( newVar ) ;nameNode.addChildToFront ( rvalue ) ;^605^^^^^585^610^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.removeChild ( rvalue ) ;nameNode.addChildToFront ( rvalue ) ;^605^^^^^585^610^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varNode.addChildToBack ( nameNode ) ;nameNode.addChildToFront ( rvalue ) ;^605^^^^^585^610^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varParent.replaceChild ( gramps, varParent ) ;^606^^^^^585^610^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varParent.replaceChild (  varNode ) ;^606^^^^^585^610^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varParent.replaceChild ( gramps ) ;^606^^^^^585^610^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varParent.replaceChild ( varNode, gramps ) ;^606^^^^^585^610^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P8_Replace_Mix]^varParent.replaceChild ( gramps, rvalue ) ;^606^^^^^585^610^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^606^^^^^585^610^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^gramps.removeChild ( varNode ) ;varParent.replaceChild ( gramps, varNode ) ;^606^^^^^585^610^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varNode.removeChild ( ref.node ) ;varParent.replaceChild ( gramps, varNode ) ;^606^^^^^585^610^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varParent.addChildBefore ( newVar, varNode ) ;varParent.replaceChild ( gramps, varNode ) ;^606^^^^^585^610^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^objlit.replaceChildAfter ( key, refNode ) ;varParent.replaceChild ( gramps, varNode ) ;^606^^^^^585^610^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.replaceChild ( n, ref ) ;varParent.replaceChild ( gramps, varNode ) ;^606^^^^^585^610^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.removeChild ( rvalue ) ;varParent.replaceChild ( gramps, varNode ) ;^606^^^^^585^610^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varParent.removeChild ( varNode ) ;varParent.replaceChild ( gramps, varNode ) ;^606^^^^^585^610^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^greatGramps.replaceChild ( gramps, varNode ) ;varParent.replaceChild ( gramps, varNode ) ;^606^^^^^585^610^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.replaceChild ( ref.node, nameNode ) ;varParent.replaceChild ( gramps, varNode ) ;^606^^^^^585^610^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P8_Replace_Mix]^ref.node = false;^588^^^^^573^603^ref.node = null;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^ref.node = nameNode;ref.node = null;^588^^^^^573^603^ref.node = null;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varParent.replaceChild ( varParent, varNode ) ;^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varParent.replaceChild (  varNode ) ;^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varParent.replaceChild ( gramps ) ;^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P8_Replace_Mix]^varParent.replaceChild ( gramps, varParent ) ;^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^gramps.removeChild ( varNode ) ;varParent.replaceChild ( gramps, varNode ) ;^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varNode.removeChild ( ref.node ) ;varParent.replaceChild ( gramps, varNode ) ;^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varParent.addChildBefore ( newVar, varNode ) ;varParent.replaceChild ( gramps, varNode ) ;^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^objlit.replaceChildAfter ( key, refNode ) ;varParent.replaceChild ( gramps, varNode ) ;^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.replaceChild ( n, ref ) ;varParent.replaceChild ( gramps, varNode ) ;^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.removeChild ( rvalue ) ;varParent.replaceChild ( gramps, varNode ) ;^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varParent.removeChild ( varNode ) ;varParent.replaceChild ( gramps, varNode ) ;^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^greatGramps.replaceChild ( gramps, varNode ) ;varParent.replaceChild ( gramps, varNode ) ;^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.replaceChild ( ref.node, nameNode ) ;varParent.replaceChild ( gramps, varNode ) ;^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P2_Replace_Operator]^if  ( rvalue.getType (  )  < Token.FUNCTION )  {^591^^^^^576^606^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^if  ( rvalue.putBooleanProp (  )  == Token.FUNCTION )  {^591^^^^^576^606^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P9_Replace_Statement]^if  ( aliasParent.getType (  )  == Token.NAME )  {^591^^^^^576^606^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P9_Replace_Statement]^if  ( n.getType (  )  == Token.THIS )  {^591^^^^^576^606^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P9_Replace_Statement]^if  ( gramps.getType (  )  == Token.EXPR_RESULT )  {^591^^^^^576^606^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P9_Replace_Statement]^if  ( value.getType (  )  == Token.FUNCTION )  {^591^^^^^576^606^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P15_Unwrap_Block]^checkForHosedThisReferences(rvalue, n.docInfo, n);^591^592^593^^^576^606^if  ( rvalue.getType (  )  == Token.FUNCTION )  { checkForHosedThisReferences ( rvalue, n.docInfo, n ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P16_Remove_Block]^^591^592^593^^^576^606^if  ( rvalue.getType (  )  == Token.FUNCTION )  { checkForHosedThisReferences ( rvalue, n.docInfo, n ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P13_Insert_Block]^if  (  ( value.getType (  )  )  ==  ( FUNCTION )  )  {     checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ; }^591^^^^^576^606^[Delete]^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^checkForHosedThisReferences (  n.docInfo, n ) ;^592^^^^^577^607^checkForHosedThisReferences ( rvalue, n.docInfo, n ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^checkForHosedThisReferences ( rvalue.docInfo, n ) ;^592^^^^^577^607^checkForHosedThisReferences ( rvalue, n.docInfo, n ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^checkForHosedThisReferences ( rvalue,  n ) ;^592^^^^^577^607^checkForHosedThisReferences ( rvalue, n.docInfo, n ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^updateSimpleDeclaration ( rvalue, n.docInfo, n ) ;^592^^^^^577^607^checkForHosedThisReferences ( rvalue, n.docInfo, n ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^592^^^^^577^607^checkForHosedThisReferences ( rvalue, n.docInfo, n ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^if  ( ref.node.getLastChild (  ) .removeChild ( Node.IS_CONSTANT_NAME )  )  {^600^^^^^585^615^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^if  ( ref.node.getLastChild (  )  .getType (  )   )  {^600^^^^^585^615^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^if  ( ref.node.getAncestor (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^600^^^^^585^615^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P8_Replace_Mix]^if  ( ref.node .getFirstChild (  )  .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^600^^^^^585^615^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P9_Replace_Statement]^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^600^^^^^585^615^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P9_Replace_Statement]^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^600^^^^^585^615^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P15_Unwrap_Block]^nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true);^600^601^602^^^585^615^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P16_Remove_Block]^^600^601^602^^^585^615^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P13_Insert_Block]^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^600^^^^^585^615^[Delete]^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P13_Insert_Block]^if  ( get ( 0 ) getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^600^^^^^585^615^[Delete]^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P13_Insert_Block]^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^600^^^^^585^615^[Delete]^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P3_Replace_Literal]^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, false ) ;^601^^^^^586^616^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^nameNode.replaceChild ( Node.IS_CONSTANT_NAME, true ) ;^601^^^^^586^616^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^nameNode .getBooleanProp (  )  ;^601^^^^^586^616^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^601^^^^^586^616^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P12_Insert_Condition]^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^601^^^^^586^616^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P12_Insert_Condition]^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^601^^^^^586^616^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P8_Replace_Mix]^ref.node = true;^588^^^^^573^603^ref.node = null;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^ref.node = varParent;^609^^^^^594^624^ref.node = nameNode;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^ref.node = null;ref.node = nameNode;^609^^^^^594^624^ref.node = nameNode;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^p.declaration.node = nameNode;ref.node = nameNode;^609^^^^^594^624^ref.node = nameNode;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^newAlias.node = refNode;ref.node = nameNode;^609^^^^^594^624^ref.node = nameNode;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P3_Replace_Literal]^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( -6 ) , n.fullName (  )  ) ;^597^598^^^^582^612^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^Node nameNode = NodeUtil.newName (  ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^597^598^^^^582^612^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^Node nameNode = NodeUtil.newName ( alias.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^597^598^^^^582^612^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) .fullName (  )  ) ;^597^598^^^^582^612^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^Node nameNode = NodeUtil.newName ( alias.getAncestor ( 2 ) , n.fullName (  )  ) ;^597^598^^^^582^612^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.addRef (  )  ) ;^597^598^^^^582^612^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node nameNode = NodeUtil.newName ( alias, gramps.getFirstChild (  ) , refName.fullName (  )  ) ;Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^597^598^^^^582^612^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node ref = NodeUtil.newName ( alias, n, originalName ) ;Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^597^598^^^^582^612^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varParent.replaceChild ( gramps, rvalue ) ;^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varParent.replaceChild ( varNode, gramps ) ;^587^^^^^572^602^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^587^588^^^^572^602^varParent.replaceChild ( gramps, varNode ) ; ref.node = null;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^if  ( varNode.getType (  )  == Token.FUNCTION )  {^591^^^^^576^606^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P8_Replace_Mix]^if  ( varParent.putBooleanProp (  )  == Token.FUNCTION )  {^591^^^^^576^606^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^ref.node.getAncestor (  ) .removeChild ( rvalue ) ;^595^^^^^580^610^ref.node.getParent (  ) .removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P8_Replace_Mix]^ref.node .cloneTree (  )  .removeChild ( rvalue ) ;^595^^^^^580^610^ref.node.getParent (  ) .removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^595^^^^^580^610^ref.node.getParent (  ) .removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^objlit.removeChild ( value ) ;ref.node.getParent (  ) .removeChild ( rvalue ) ;^595^^^^^580^610^ref.node.getParent (  ) .removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.removeChild ( rvalue ) ;ref.node.getParent (  ) .removeChild ( rvalue ) ;^595^^^^^580^610^ref.node.getParent (  ) .removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varParent.removeChild ( varNode ) ;ref.node.getParent (  ) .removeChild ( rvalue ) ;^595^^^^^580^610^ref.node.getParent (  ) .removeChild ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P3_Replace_Literal]^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 8 ) , n.fullName (  )  ) ;^597^598^^^^582^612^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^Node nameNode = NodeUtil.newName ( alias, ref.node .getNext (  )  , n.fullName (  )  ) ;^597^598^^^^582^612^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n .canEliminate (  )   ) ;^597^598^^^^582^612^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^597^598^^^^582^612^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^597^598^^^^582^612^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^alias.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^598^^^^^583^613^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^alias.getAncestor ( 2 ) , n.fullName (  )  ) ;^598^^^^^583^613^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^598^^^^^583^613^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^598^^^^^583^613^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node nameNode = NodeUtil.newName ( alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^598^^^^^583^613^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^alias, ref.node.getAncestor ( 2 ) , n.addRef (  )  ) ;^598^^^^^583^613^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^alias, ref.node.getAncestor ( 2 ) , n .canEliminate (  )   ) ;^598^^^^^583^613^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varNode.addChildToBack ( varParent ) ;^604^^^^^589^619^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^varNode.addChildAfter ( nameNode ) ;^604^^^^^589^619^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^varNode .addChildToFront ( varNode )  ;^604^^^^^589^619^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^604^^^^^589^619^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^nameNode.addChildToFront ( rvalue ) ;varNode.addChildToBack ( nameNode ) ;^604^^^^^589^619^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^newNodes.add ( newNode ) ;varNode.addChildToBack ( nameNode ) ;^604^^^^^589^619^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varNode.removeChild ( ref.node ) ;varNode.addChildToBack ( nameNode ) ;^604^^^^^589^619^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varParent.addChildBefore ( newVar, varNode ) ;varNode.addChildToBack ( nameNode ) ;^604^^^^^589^619^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^nameNode.addChildToFront ( value ) ;varNode.addChildToBack ( nameNode ) ;^604^^^^^589^619^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.addChildToFront ( newVar ) ;varNode.addChildToBack ( nameNode ) ;^604^^^^^589^619^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.replaceChild ( ref.node, nameNode ) ;varNode.addChildToBack ( nameNode ) ;^604^^^^^589^619^varNode.addChildToBack ( nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^nameNode.addChildToFront ( varParent ) ;^605^^^^^590^620^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^nameNode.addChildAfter ( rvalue ) ;^605^^^^^590^620^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^nameNode .addChildBefore ( gramps , rvalue )  ;^605^^^^^590^620^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^605^606^^^^590^620^nameNode.addChildToFront ( rvalue ) ; varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^nameNode.addChildToFront ( value ) ;nameNode.addChildToFront ( rvalue ) ;^605^^^^^590^620^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.addChildToFront ( newVar ) ;nameNode.addChildToFront ( rvalue ) ;^605^^^^^590^620^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.removeChild ( rvalue ) ;nameNode.addChildToFront ( rvalue ) ;^605^^^^^590^620^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varNode.addChildToBack ( nameNode ) ;nameNode.addChildToFront ( rvalue ) ;^605^^^^^590^620^nameNode.addChildToFront ( rvalue ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varParent.replaceChild ( varParent, varNode ) ;^606^^^^^591^621^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varParent.replaceChild ( gramps, rvalue ) ;^606^^^^^591^621^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varParent.replaceChild (  varNode ) ;^606^^^^^591^621^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varParent.replaceChild ( gramps ) ;^606^^^^^591^621^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varParent.replaceChild ( varNode, gramps ) ;^606^^^^^591^621^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^606^^^^^591^621^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^gramps.removeChild ( varNode ) ;varParent.replaceChild ( gramps, varNode ) ;^606^^^^^591^621^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varNode.removeChild ( ref.node ) ;varParent.replaceChild ( gramps, varNode ) ;^606^^^^^591^621^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varParent.addChildBefore ( newVar, varNode ) ;varParent.replaceChild ( gramps, varNode ) ;^606^^^^^591^621^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^objlit.replaceChildAfter ( key, refNode ) ;varParent.replaceChild ( gramps, varNode ) ;^606^^^^^591^621^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.replaceChild ( n, ref ) ;varParent.replaceChild ( gramps, varNode ) ;^606^^^^^591^621^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.removeChild ( rvalue ) ;varParent.replaceChild ( gramps, varNode ) ;^606^^^^^591^621^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varParent.removeChild ( varNode ) ;varParent.replaceChild ( gramps, varNode ) ;^606^^^^^591^621^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^greatGramps.replaceChild ( gramps, varNode ) ;varParent.replaceChild ( gramps, varNode ) ;^606^^^^^591^621^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.replaceChild ( ref.node, nameNode ) ;varParent.replaceChild ( gramps, varNode ) ;^606^^^^^591^621^varParent.replaceChild ( gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P2_Replace_Operator]^boolean discardKeys = n.aliasingGets != 0;^613^^^^^598^628^boolean discardKeys = n.aliasingGets == 0;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P3_Replace_Literal]^boolean discardKeys = n.aliasingGets == 6;^613^^^^^598^628^boolean discardKeys = n.aliasingGets == 0;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^declareVarsForObjLitValues ( n, alias, varParent, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^declareVarsForObjLitValues ( n, alias, rvalue, rvalue, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^declareVarsForObjLitValues ( n, alias, rvalue, varNode, rvalue.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, inlineAliases ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^declareVarsForObjLitValues (  alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^declareVarsForObjLitValues ( n,  rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^declareVarsForObjLitValues ( n, alias,  varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^declareVarsForObjLitValues ( n, alias, rvalue,  varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) ,  discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^declareVarsForObjLitValues ( alias, n, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^declareVarsForObjLitValues ( n, alias, varParent, varNode, rvalue.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^declareVarsForObjLitValues ( n, alias, rvalue, varParent, varNode.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^declareVarsForObjLitValues ( n, alias, rvalue, varNode, discardKeys.getChildBefore ( varNode ) , varParent, varParent ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.addChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P8_Replace_Mix]^declareVarsForObjLitValues ( n, alias, rvalue, varParent, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varNode, rvalue.getChildBefore ( varNode ) , varParent, discardKeys ) ;^616^617^^^^601^631^varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varNode, varParent.getChildBefore ( rvalue ) , varParent, discardKeys ) ;^616^617^^^^601^631^varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varNode, varParent.getChildBefore ( varNode ) ,  discardKeys ) ;^616^617^^^^601^631^varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^616^617^^^^601^631^varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varNode, varNode.getChildBefore ( varParent ) , varParent, discardKeys ) ;^616^617^^^^601^631^varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^varNode, varParent.addChildBefore ( varNode ) , varParent, discardKeys ) ;^616^617^^^^601^631^varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^616^617^618^^^601^631^varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^616^617^^^^601^631^varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varNode.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, isObjLit ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^declareVarsForObjLitValues ( discardKeys, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, n ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^declareVarsForObjLitValues ( n, rvalue, alias, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^614^615^616^617^^599^629^declareVarsForObjLitValues ( n, alias, rvalue, varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^addStubsForUndeclaredProperties ( n, alias, rvalue, varNode ) ;^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^addStubsForUndeclaredProperties ( n, alias, varParent, rvalue ) ;^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^addStubsForUndeclaredProperties (  alias, varParent, varNode ) ;^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^addStubsForUndeclaredProperties ( n,  varParent, varNode ) ;^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^addStubsForUndeclaredProperties ( n, alias,  varNode ) ;^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^addStubsForUndeclaredProperties ( n, alias, varParent ) ;^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^addStubsForUndeclaredProperties ( varParent, alias, n, varNode ) ;^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^addStubsForUndeclaredProperties ( n, varNode, varParent, alias ) ;^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^addStubsForUndeclaredProperties ( n, varParent, alias, varNode ) ;^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^addStubsForUndeclaredProperties ( n, alias, varNode, varParent ) ;^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^flattenNameRef ( n, alias, varParent, varNode ) ;^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^addStubsForUndeclaredProperties ( n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^620^^^^^605^635^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^if  ( !varNode.putBooleanProp (  )  )  {^622^^^^^607^637^if  ( !varNode.hasChildren (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^if  ( !varNode .addChildToFront ( rvalue )   )  {^622^^^^^607^637^if  ( !varNode.hasChildren (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P9_Replace_Statement]^if  ( n.hasChildren (  )  )  {^622^^^^^607^637^if  ( !varNode.hasChildren (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P15_Unwrap_Block]^varParent.removeChild(varNode);^622^623^624^^^607^637^if  ( !varNode.hasChildren (  )  )  { varParent.removeChild ( varNode ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P16_Remove_Block]^^622^623^624^^^607^637^if  ( !varNode.hasChildren (  )  )  { varParent.removeChild ( varNode ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P13_Insert_Block]^if  ( ! ( varNode.hasChildren (  )  )  )  {     gramps.removeChild ( varNode ) ; }^622^^^^^607^637^[Delete]^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P5_Replace_Variable]^varParent.removeChild ( rvalue ) ;^623^^^^^608^638^varParent.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^varParent.replaceChild ( varNode ) ;^623^^^^^608^638^varParent.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^varParent .removeChild ( varNode )  ;^623^^^^^608^638^varParent.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^623^^^^^608^638^varParent.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^objlit.removeChild ( value ) ;varParent.removeChild ( varNode ) ;^623^^^^^608^638^varParent.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^gramps.removeChild ( varNode ) ;varParent.removeChild ( varNode ) ;^623^^^^^608^638^varParent.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varNode.removeChild ( ref.node ) ;varParent.removeChild ( varNode ) ;^623^^^^^608^638^varParent.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^objlit.removeChild ( key ) ;varParent.removeChild ( varNode ) ;^623^^^^^608^638^varParent.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varParent.addChildBefore ( newVar, varNode ) ;varParent.removeChild ( varNode ) ;^623^^^^^608^638^varParent.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^varParent.replaceChild ( gramps, varNode ) ;varParent.removeChild ( varNode ) ;^623^^^^^608^638^varParent.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.replaceChild ( n, ref ) ;varParent.removeChild ( varNode ) ;^623^^^^^608^638^varParent.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.removeChild ( rvalue ) ;varParent.removeChild ( varNode ) ;^623^^^^^608^638^varParent.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^greatGramps.replaceChild ( gramps, varNode ) ;varParent.removeChild ( varNode ) ;^623^^^^^608^638^varParent.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^ref.node.getParent (  ) .removeChild ( rvalue ) ;varParent.removeChild ( varNode ) ;^623^^^^^608^638^varParent.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^parent.replaceChild ( ref.node, nameNode ) ;varParent.removeChild ( varNode ) ;^623^^^^^608^638^varParent.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^if  ( !varNode .addChildToFront ( varNode )   )  {^622^^^^^607^637^if  ( !varNode.hasChildren (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P7_Replace_Invocation]^compiler.report (  ) ;^626^^^^^611^641^compiler.reportCodeChange (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P14_Delete_Statement]^^626^^^^^611^641^compiler.reportCodeChange (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtAssignNode [RETURN_TYPE] void   Name n String alias [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  nameNode  rvalue  varNode  varParent  List  globalNames  refs  String  alias  Map  nameMap  Name  n  
[P2_Replace_Operator]^if  ( docInfo == null && ( !docInfo.isConstructor (  )  && !docInfo.hasThisType (  )  )  )  {^637^638^^^^633^650^if  ( docInfo == null || ( !docInfo.isConstructor (  )  && !docInfo.hasThisType (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P2_Replace_Operator]^if  ( docInfo != null || ( !docInfo.isConstructor (  )  && !docInfo.hasThisType (  )  )  )  {^637^638^^^^633^650^if  ( docInfo == null || ( !docInfo.isConstructor (  )  && !docInfo.hasThisType (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P2_Replace_Operator]^if  ( docInfo == null || ( !docInfo.isConstructor (  )  || !docInfo.hasThisType (  )  )  )  {^637^638^^^^633^650^if  ( docInfo == null || ( !docInfo.isConstructor (  )  && !docInfo.hasThisType (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  ( docInfo == null ) {^637^638^^^^633^650^if  ( docInfo == null || ( !docInfo.isConstructor (  )  && !docInfo.hasThisType (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  (  ( !docInfo.isConstructor (  )  && !docInfo.hasThisType (  )  )  )  {^637^638^^^^633^650^if  ( docInfo == null || ( !docInfo.isConstructor (  )  && !docInfo.hasThisType (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  ( !(docInfo.isConstructor() && !(docInfo.hasThisType())) )  {^637^638^^^^633^650^if  ( docInfo == null || ( !docInfo.isConstructor (  )  && !docInfo.hasThisType (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P6_Replace_Expression]^if  ( n.getType() == THIS )  {^637^638^^^^633^650^if  ( docInfo == null || ( !docInfo.isConstructor (  )  && !docInfo.hasThisType (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P8_Replace_Mix]^if  ( docInfo == false ) {^637^638^^^^633^650^if  ( docInfo == null || ( !docInfo.isConstructor (  )  && !docInfo.hasThisType (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P2_Replace_Operator]^if  ( n.getType (  )  != Token.THIS )  {^642^^^^^633^650^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P7_Replace_Invocation]^if  ( n.putBooleanProp (  )  == Token.THIS )  {^642^^^^^633^650^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P9_Replace_Statement]^if  ( aliasParent.getType (  )  == Token.NAME )  {^642^^^^^633^650^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P9_Replace_Statement]^if  ( gramps.getType (  )  == Token.EXPR_RESULT )  {^642^^^^^633^650^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P9_Replace_Statement]^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^642^^^^^633^650^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P9_Replace_Statement]^if  ( value.getType (  )  == Token.FUNCTION )  {^642^^^^^633^650^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P15_Unwrap_Block]^compiler.report(com.google.javascript.jscomp.JSError.make(name.declaration.sourceName, n, com.google.javascript.jscomp.CollapseProperties.UNSAFE_THIS, name.fullName()));^642^643^644^645^646^633^650^if  ( n.getType (  )  == Token.THIS )  { compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ; }^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P16_Remove_Block]^^642^643^644^645^646^633^650^if  ( n.getType (  )  == Token.THIS )  { compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ; }^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P5_Replace_Variable]^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS.fullName (  )  )  ) ;^643^644^645^^^633^650^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P5_Replace_Variable]^compiler.report ( JSError.make ( name.declaration.sourceName,  UNSAFE_THIS, name.fullName (  )  )  ) ;^643^644^645^^^633^650^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P5_Replace_Variable]^compiler.report ( JSError.make ( name.declaration. n, UNSAFE_THIS, name.fullName (  )  )  ) ;^643^644^645^^^633^650^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P5_Replace_Variable]^compiler.report ( JSError.make ( name.declaration.sourceName, n,  name.fullName (  )  )  ) ;^643^644^645^^^633^650^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P7_Replace_Invocation]^compiler .reportCodeChange (  )   ) ;^643^644^645^^^633^650^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P7_Replace_Invocation]^compiler.report ( JSError .make ( UNSAFE_THIS )   ) ;^643^644^645^^^633^650^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.addRef (  )  )  ) ;^643^644^645^^^633^650^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P14_Delete_Statement]^^643^644^645^^^633^650^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P13_Insert_Block]^if  (  ( n.getType (  )  )  ==  ( THIS )  )  {     compiler.report ( make ( sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ; }^643^^^^^633^650^[Delete]^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P5_Replace_Variable]^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS.fullName (  )  )  ) ;^644^645^^^^633^650^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P5_Replace_Variable]^JSError.make ( name.declaration.sourceName,  UNSAFE_THIS, name.fullName (  )  )  ) ;^644^645^^^^633^650^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P5_Replace_Variable]^JSError.make ( name.declaration. n, UNSAFE_THIS, name.fullName (  )  )  ) ;^644^645^^^^633^650^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P5_Replace_Variable]^JSError.make ( name.declaration.sourceName, n,  name.fullName (  )  )  ) ;^644^645^^^^633^650^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P7_Replace_Invocation]^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.addRef (  )  )  ) ;^644^645^^^^633^650^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P7_Replace_Invocation]^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name .canEliminate (  )   )  ) ;^644^645^^^^633^650^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P14_Delete_Statement]^^644^645^^^^633^650^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P11_Insert_Donor_Statement]^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^644^645^^^^633^650^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P11_Insert_Donor_Statement]^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^644^645^^^^633^650^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P7_Replace_Invocation]^UNSAFE_THIS, name.addRef (  )  )  ) ;^645^^^^^633^650^UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P8_Replace_Mix]^UNSAFE_THIS, name .canEliminate (  )   )  ) ;^645^^^^^633^650^UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P14_Delete_Statement]^^645^^^^^633^650^UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P11_Insert_Donor_Statement]^refName.fullName (  )  ) ;UNSAFE_THIS, name.fullName (  )  )  ) ;^645^^^^^633^650^UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P11_Insert_Donor_Statement]^NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;UNSAFE_THIS, name.fullName (  )  )  ) ;^645^^^^^633^650^UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P11_Insert_Donor_Statement]^UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;UNSAFE_THIS, name.fullName (  )  )  ) ;^645^^^^^633^650^UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P4_Replace_Constructor]^NodeTraversal.traverse ( compiler.getLastChild (  ) , new NodeTraversal.AbstractShallowCallback (  )  {^639^640^^^^633^650^NodeTraversal.traverse ( compiler, function.getLastChild (  ) , new NodeTraversal.AbstractShallowCallback (  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P4_Replace_Constructor]^NodeTraversal.traverse ( compiler, function.getLastChild (  ) ew NodeTraversal.AbstractShallowCallback (  )  {^639^640^^^^633^650^NodeTraversal.traverse ( compiler, function.getLastChild (  ) , new NodeTraversal.AbstractShallowCallback (  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P5_Replace_Variable]^NodeTraversal.traverse (  function.getLastChild (  ) , new NodeTraversal.AbstractShallowCallback (  )  {^639^640^^^^633^650^NodeTraversal.traverse ( compiler, function.getLastChild (  ) , new NodeTraversal.AbstractShallowCallback (  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P7_Replace_Invocation]^NodeTraversal.traverse ( compiler, function.putBooleanProp (  ) , new NodeTraversal.AbstractShallowCallback (  )  {^639^640^^^^633^650^NodeTraversal.traverse ( compiler, function.getLastChild (  ) , new NodeTraversal.AbstractShallowCallback (  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler, parent.getLastChild (  ) , new NodeTraversal.AbstractShallowCallback (  )  {^639^640^^^^633^650^NodeTraversal.traverse ( compiler, function.getLastChild (  ) , new NodeTraversal.AbstractShallowCallback (  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P8_Replace_Mix]^NodeTraversal.traverse ( compiler, parent.putBooleanProp (  ) , new NodeTraversal.AbstractShallowCallback (  )  {^639^640^^^^633^650^NodeTraversal.traverse ( compiler, function.getLastChild (  ) , new NodeTraversal.AbstractShallowCallback (  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.THIS )  {^642^^^^^633^650^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P7_Replace_Invocation]^if  ( n .getString (  )   == Token.THIS )  {^642^^^^^633^650^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P8_Replace_Mix]^if  ( parent.putBooleanProp (  )  == Token.THIS )  {^642^^^^^633^650^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P7_Replace_Invocation]^( !docInfo .hasThisType (  )   && !docInfo.hasThisType (  )  )  )  {^638^^^^^633^650^( !docInfo.isConstructor (  )  && !docInfo.hasThisType (  )  )  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P7_Replace_Invocation]^NodeTraversal.traverse ( compiler, function .getFirstChild (  )  , new NodeTraversal.AbstractShallowCallback (  )  {^639^640^^^^633^650^NodeTraversal.traverse ( compiler, function.getLastChild (  ) , new NodeTraversal.AbstractShallowCallback (  )  {^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P7_Replace_Invocation]^JSError .make ( UNSAFE_THIS )   ) ;^644^645^^^^633^650^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] checkForHosedThisReferences [RETURN_TYPE] void   Node function JSDocInfo docInfo Name name [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  function  n  parent  List  globalNames  refs  JSDocInfo  docInfo  Map  nameMap  Name  name  
[P2_Replace_Operator]^if  ( n.getType (  )  != Token.THIS )  {^642^^^^^641^647^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P7_Replace_Invocation]^if  ( n.putBooleanProp (  )  == Token.THIS )  {^642^^^^^641^647^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P7_Replace_Invocation]^if  ( n .getString (  )   == Token.THIS )  {^642^^^^^641^647^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P9_Replace_Statement]^if  ( aliasParent.getType (  )  == Token.NAME )  {^642^^^^^641^647^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P9_Replace_Statement]^if  ( gramps.getType (  )  == Token.EXPR_RESULT )  {^642^^^^^641^647^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P9_Replace_Statement]^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^642^^^^^641^647^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P9_Replace_Statement]^if  ( value.getType (  )  == Token.FUNCTION )  {^642^^^^^641^647^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P15_Unwrap_Block]^compiler.report(com.google.javascript.jscomp.JSError.make(name.declaration.sourceName, n, com.google.javascript.jscomp.CollapseProperties.UNSAFE_THIS, name.fullName()));^642^643^644^645^646^641^647^if  ( n.getType (  )  == Token.THIS )  { compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ; }^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P16_Remove_Block]^^642^643^644^645^646^641^647^if  ( n.getType (  )  == Token.THIS )  { compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ; }^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P5_Replace_Variable]^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS.fullName (  )  )  ) ;^643^644^645^^^641^647^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P5_Replace_Variable]^compiler.report ( JSError.make ( name.declaration.sourceName,  UNSAFE_THIS, name.fullName (  )  )  ) ;^643^644^645^^^641^647^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P5_Replace_Variable]^compiler.report ( JSError.make ( name.declaration. n, UNSAFE_THIS, name.fullName (  )  )  ) ;^643^644^645^^^641^647^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P5_Replace_Variable]^compiler.report ( JSError.make ( name.declaration.sourceName, n,  name.fullName (  )  )  ) ;^643^644^645^^^641^647^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P7_Replace_Invocation]^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.addRef (  )  )  ) ;^643^644^645^^^641^647^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P8_Replace_Mix]^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name .canEliminate (  )   )  ) ;^643^644^645^^^641^647^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P14_Delete_Statement]^^643^644^645^^^641^647^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P13_Insert_Block]^if  (  ( n.getType (  )  )  ==  ( THIS )  )  {     compiler.report ( make ( sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ; }^643^^^^^641^647^[Delete]^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P5_Replace_Variable]^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS.fullName (  )  )  ) ;^644^645^^^^641^647^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P5_Replace_Variable]^JSError.make ( name.declaration.sourceName,  UNSAFE_THIS, name.fullName (  )  )  ) ;^644^645^^^^641^647^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P5_Replace_Variable]^JSError.make ( name.declaration. n, UNSAFE_THIS, name.fullName (  )  )  ) ;^644^645^^^^641^647^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P5_Replace_Variable]^JSError.make ( name.declaration.sourceName, n,  name.fullName (  )  )  ) ;^644^645^^^^641^647^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P7_Replace_Invocation]^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.addRef (  )  )  ) ;^644^645^^^^641^647^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P14_Delete_Statement]^^644^645^^^^641^647^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P11_Insert_Donor_Statement]^JSError.make ( ref.sourceName, ref.node, UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^644^645^^^^641^647^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P11_Insert_Donor_Statement]^JSError.make ( ref.sourceName, ref.node, NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^644^645^^^^641^647^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P7_Replace_Invocation]^UNSAFE_THIS, name.addRef (  )  )  ) ;^645^^^^^641^647^UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P7_Replace_Invocation]^UNSAFE_THIS, name .canEliminate (  )   )  ) ;^645^^^^^641^647^UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P14_Delete_Statement]^^645^^^^^641^647^UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P11_Insert_Donor_Statement]^refName.fullName (  )  ) ;UNSAFE_THIS, name.fullName (  )  )  ) ;^645^^^^^641^647^UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P11_Insert_Donor_Statement]^NAMESPACE_REDEFINED_WARNING, nameObj.fullName (  )  )  ) ;UNSAFE_THIS, name.fullName (  )  )  ) ;^645^^^^^641^647^UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P11_Insert_Donor_Statement]^UNSAFE_NAMESPACE_WARNING, nameObj.fullName (  )  )  ) ;UNSAFE_THIS, name.fullName (  )  )  ) ;^645^^^^^641^647^UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.THIS )  {^642^^^^^641^647^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P8_Replace_Mix]^if  ( parent .getString (  )   == Token.THIS )  {^642^^^^^641^647^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P7_Replace_Invocation]^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name .canEliminate (  )   )  ) ;^644^645^^^^641^647^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P8_Replace_Mix]^JSError .make ( NAMESPACE_REDEFINED_WARNING )   ) ;^644^645^^^^641^647^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P5_Replace_Variable]^UNSAFE_THIS, 2.fullName (  )  )  ) ;^645^^^^^641^647^UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  NodeTraversal  t  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  n  parent  List  globalNames  refs  Map  nameMap  
[P1_Replace_Type]^char name = ref.node.getchar (  ) ;^661^^^^^646^676^String name = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P7_Replace_Invocation]^String name = ref.node.getAncestor (  ) ;^661^^^^^646^676^String name = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getFirstChild (  ) ;String name = ref.node.getString (  ) ;^661^^^^^646^676^String name = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getNext (  ) ;String name = ref.node.getString (  ) ;^661^^^^^646^676^String name = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node varParent = ref.node.getAncestor ( 3 ) ;String name = ref.node.getString (  ) ;^661^^^^^646^676^String name = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node rParent = r.node.getParent (  ) ;String name = ref.node.getString (  ) ;^661^^^^^646^676^String name = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^String fnName = ref.node.getString (  ) ;String name = ref.node.getString (  ) ;^661^^^^^646^676^String name = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = varNode.getParent (  ) ;String name = ref.node.getString (  ) ;^661^^^^^646^676^String name = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;String name = ref.node.getString (  ) ;^661^^^^^646^676^String name = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node varNode = ref.node.getParent (  ) ;String name = ref.node.getString (  ) ;^661^^^^^646^676^String name = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = ref.node.getAncestor ( 2 ) ;String name = ref.node.getString (  ) ;^661^^^^^646^676^String name = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P14_Delete_Statement]^^661^^^^^646^676^String name = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P7_Replace_Invocation]^Node rvalue = ref.node.getAncestor (  ) ;^662^^^^^647^677^Node rvalue = ref.node.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getNext (  ) ;Node rvalue = ref.node.getFirstChild (  ) ;^662^^^^^647^677^Node rvalue = ref.node.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node varParent = ref.node.getAncestor ( 3 ) ;Node rvalue = ref.node.getFirstChild (  ) ;^662^^^^^647^677^Node rvalue = ref.node.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node rParent = r.node.getParent (  ) ;Node rvalue = ref.node.getFirstChild (  ) ;^662^^^^^647^677^Node rvalue = ref.node.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = parent.getParent (  ) ;Node rvalue = ref.node.getFirstChild (  ) ;^662^^^^^647^677^Node rvalue = ref.node.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^String fnName = ref.node.getString (  ) ;Node rvalue = ref.node.getFirstChild (  ) ;^662^^^^^647^677^Node rvalue = ref.node.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = varNode.getParent (  ) ;Node rvalue = ref.node.getFirstChild (  ) ;^662^^^^^647^677^Node rvalue = ref.node.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node value = key.getNext (  ) ;Node rvalue = ref.node.getFirstChild (  ) ;^662^^^^^647^677^Node rvalue = ref.node.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;Node rvalue = ref.node.getFirstChild (  ) ;^662^^^^^647^677^Node rvalue = ref.node.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node varNode = ref.node.getParent (  ) ;Node rvalue = ref.node.getFirstChild (  ) ;^662^^^^^647^677^Node rvalue = ref.node.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^String name = ref.node.getString (  ) ;Node rvalue = ref.node.getFirstChild (  ) ;^662^^^^^647^677^Node rvalue = ref.node.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = ref.node.getAncestor ( 2 ) ;Node rvalue = ref.node.getFirstChild (  ) ;^662^^^^^647^677^Node rvalue = ref.node.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P7_Replace_Invocation]^Node rvalue = ref.node .getLastChild (  )  ;^662^^^^^647^677^Node rvalue = ref.node.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P14_Delete_Statement]^^662^663^^^^647^677^Node rvalue = ref.node.getFirstChild (  ) ; Node varNode = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^n = n.getFirstChild (  ) ;Node rvalue = ref.node.getFirstChild (  ) ;^662^^^^^647^677^Node rvalue = ref.node.getFirstChild (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P7_Replace_Invocation]^Node varNode = ref.node.getAncestor (  ) ;^663^^^^^648^678^Node varNode = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P14_Delete_Statement]^^663^664^^^^648^678^Node varNode = ref.node.getParent (  ) ; Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getFirstChild (  ) ;Node varNode = ref.node.getParent (  ) ;^663^^^^^648^678^Node varNode = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getNext (  ) ;Node varNode = ref.node.getParent (  ) ;^663^^^^^648^678^Node varNode = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = varNode.getParent (  ) ;Node varNode = ref.node.getParent (  ) ;^663^^^^^648^678^Node varNode = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;Node varNode = ref.node.getParent (  ) ;^663^^^^^648^678^Node varNode = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node greatGramps = gramps.getParent (  ) ;Node varNode = ref.node.getParent (  ) ;^663^^^^^648^678^Node varNode = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node currentParent = gramps.getParent (  ) ;Node varNode = ref.node.getParent (  ) ;^663^^^^^648^678^Node varNode = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node newNode = alias.node.cloneTree (  ) ;Node varNode = ref.node.getParent (  ) ;^663^^^^^648^678^Node varNode = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node varParent = ref.node.getAncestor ( 3 ) ;Node varNode = ref.node.getParent (  ) ;^663^^^^^648^678^Node varNode = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node rParent = r.node.getParent (  ) ;Node varNode = ref.node.getParent (  ) ;^663^^^^^648^678^Node varNode = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = parent.getParent (  ) ;Node varNode = ref.node.getParent (  ) ;^663^^^^^648^678^Node varNode = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node greatGreatGramps = greatGramps.getParent (  ) ;Node varNode = ref.node.getParent (  ) ;^663^^^^^648^678^Node varNode = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^String fnName = ref.node.getString (  ) ;Node varNode = ref.node.getParent (  ) ;^663^^^^^648^678^Node varNode = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node aliasParent = alias.node.getParent (  ) ;Node varNode = ref.node.getParent (  ) ;^663^^^^^648^678^Node varNode = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node value = key.getNext (  ) ;Node varNode = ref.node.getParent (  ) ;^663^^^^^648^678^Node varNode = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^String name = ref.node.getString (  ) ;Node varNode = ref.node.getParent (  ) ;^663^^^^^648^678^Node varNode = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = ref.node.getAncestor ( 2 ) ;Node varNode = ref.node.getParent (  ) ;^663^^^^^648^678^Node varNode = ref.node.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^Node gramps = rvalue.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P7_Replace_Invocation]^Node gramps = varNode.putBooleanProp (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P7_Replace_Invocation]^Node gramps = varNode .cloneTree (  )  ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getFirstChild (  ) ;Node gramps = varNode.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getNext (  ) ;Node gramps = varNode.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;Node gramps = varNode.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node greatGramps = gramps.getParent (  ) ;Node gramps = varNode.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node varNode = ref.node.getParent (  ) ;Node gramps = varNode.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node currentParent = gramps.getParent (  ) ;Node gramps = varNode.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node newNode = alias.node.cloneTree (  ) ;Node gramps = varNode.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node varParent = ref.node.getAncestor ( 3 ) ;Node gramps = varNode.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node rParent = r.node.getParent (  ) ;Node gramps = varNode.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = parent.getParent (  ) ;Node gramps = varNode.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node greatGreatGramps = greatGramps.getParent (  ) ;Node gramps = varNode.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^String fnName = ref.node.getString (  ) ;Node gramps = varNode.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node aliasParent = alias.node.getParent (  ) ;Node gramps = varNode.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node value = key.getNext (  ) ;Node gramps = varNode.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^String name = ref.node.getString (  ) ;Node gramps = varNode.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = ref.node.getAncestor ( 2 ) ;Node gramps = varNode.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P8_Replace_Mix]^Node gramps = rvalue.putBooleanProp (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P14_Delete_Statement]^^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^nextKey = value.getNext (  ) ;Node gramps = varNode.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^globalNames = namespace.getNameForest (  ) ;Node gramps = varNode.getParent (  ) ;^664^^^^^649^679^Node gramps = varNode.getParent (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P2_Replace_Operator]^boolean isObjLit = rvalue.getType (  )  <= Token.OBJECTLIT;^666^^^^^651^681^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^boolean isObjLit = varNode.getType (  )  == Token.OBJECTLIT;^666^^^^^651^681^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P7_Replace_Invocation]^boolean isObjLit = rvalue.putBooleanProp (  )  == Token.OBJECTLIT;^666^^^^^651^681^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P12_Insert_Condition]^if  ( rvalue.getType (  )  == Token.FUNCTION )  { boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT; int numChanges = 0; }^666^667^^^^651^681^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT; int numChanges = 0;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P14_Delete_Statement]^^666^^^^^651^681^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^currentParent.getType (  )  != Token.BLOCK;boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^666^^^^^651^681^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P12_Insert_Condition]^if  ( rvalue.getType (  )  == Token.FUNCTION )  { boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT; }^666^^^^^651^681^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P12_Insert_Condition]^if  ( value.getType (  )  == Token.FUNCTION )  { boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT; }^666^^^^^651^681^boolean isObjLit = rvalue.getType (  )  == Token.OBJECTLIT;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P1_Replace_Type]^short  numChanges = 0;^667^^^^^652^682^int numChanges = 0;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P3_Replace_Literal]^int numChanges = -6;^667^^^^^652^682^int numChanges = 0;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^int numVars = 0;int numChanges = 0;^667^^^^^652^682^int numChanges = 0;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^int numStubs = 0;int numChanges = 0;^667^^^^^652^682^int numChanges = 0;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P12_Insert_Condition]^if  ( numChanges > 0 )  { int numChanges = 0; }^667^^^^^652^682^int numChanges = 0;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P15_Unwrap_Block]^boolean discardKeys = (n.aliasingGets) == 0; numChanges += declareVarsForObjLitValues(n, name, rvalue, varNode, gramps.getChildBefore(varNode), gramps, discardKeys);^669^670^671^672^673^654^684^if  ( isObjLit )  { boolean discardKeys = n.aliasingGets == 0; numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P16_Remove_Block]^^669^670^671^672^673^654^684^if  ( isObjLit )  { boolean discardKeys = n.aliasingGets == 0; numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, name, gramps, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, rvalue, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, rvalue.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, inlineAliases ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues (  name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n,  rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, name,  varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, name, rvalue,  gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) ,  discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( name, n, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, discardKeys, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, name ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, name, discardKeys, varNode, gramps.getChildBefore ( varNode ) , gramps, rvalue ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, gramps, varNode.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, name, gramps, varNode, rvalue.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P7_Replace_Invocation]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.addChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P8_Replace_Mix]^numChanges +=  declareVarsForObjLitValues ( null, nullame, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P2_Replace_Operator]^boolean discardKeys = n.aliasingGets != 0;^670^^^^^655^685^boolean discardKeys = n.aliasingGets == 0;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P3_Replace_Literal]^boolean discardKeys = n.aliasingGets == 4;^670^^^^^655^685^boolean discardKeys = n.aliasingGets == 0;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, name, varNode, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, varNode.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, isObjLit ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, gramps, rvalue, varNode, name.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, name, varNode, rvalue, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, varNode, rvalue, name, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( discardKeys, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, n ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P8_Replace_Mix]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.addChildBefore ( varNode ) , gramps, isObjLit ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P14_Delete_Statement]^^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^n, name, rvalue, varNode, rvalue.getChildBefore ( varNode ) , gramps, discardKeys ) ;^672^673^^^^657^687^n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^n, name, rvalue, rvalue, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^672^673^^^^657^687^n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) ,  discardKeys ) ;^672^673^^^^657^687^n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^n, name, rvalue,  gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^672^673^^^^657^687^n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^n, name, rvalue, gramps, varNode.getChildBefore ( varNode ) , gramps, discardKeys ) ;^672^673^^^^657^687^n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P7_Replace_Invocation]^n, name, rvalue, varNode, gramps.addChildBefore ( varNode ) , gramps, discardKeys ) ;^672^673^^^^657^687^n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P8_Replace_Mix]^n, name, rvalue, varNode, rvalue.addChildBefore ( varNode ) , gramps, discardKeys ) ;^672^673^^^^657^687^n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P14_Delete_Statement]^^672^673^674^^^657^687^n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^varNode, varParent.getChildBefore ( varNode ) , varParent, discardKeys ) ;n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^672^673^^^^657^687^n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( varNode, name, rvalue, n, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P7_Replace_Invocation]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps .addChildBefore ( rvalue , rvalue )  , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P2_Replace_Operator]^boolean discardKeys = n.aliasingGets >= 0;^670^^^^^655^685^boolean discardKeys = n.aliasingGets == 0;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( gramps, name, rvalue, varNode, n.getChildBefore ( varNode ) , gramps, discardKeys ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += declareVarsForObjLitValues ( n, name, rvalue, discardKeys, gramps.getChildBefore ( varNode ) , gramps, varNode ) ;^671^672^673^^^656^686^numChanges += declareVarsForObjLitValues ( n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P7_Replace_Invocation]^n, name, rvalue, varNode, gramps .addChildBefore ( varNode , varNode )  , gramps, discardKeys ) ;^672^673^^^^657^687^n, name, rvalue, varNode, gramps.getChildBefore ( varNode ) , gramps, discardKeys ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += addStubsForUndeclaredProperties ( n, name, rvalue, varNode ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, rvalue ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += addStubsForUndeclaredProperties (  name, gramps, varNode ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += addStubsForUndeclaredProperties ( n,  gramps, varNode ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += addStubsForUndeclaredProperties ( n, name,  varNode ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += addStubsForUndeclaredProperties ( n, name, gramps ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += addStubsForUndeclaredProperties ( name, n, gramps, varNode ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += addStubsForUndeclaredProperties ( n, name, varNode, gramps ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += addStubsForUndeclaredProperties ( n, varNode, gramps, name ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P7_Replace_Invocation]^numChanges += flattenNameRef ( n, name, gramps, varNode ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P8_Replace_Mix]^numChanges +=  addStubsForUnulldeclaredProperties ( null, nullame, gramps, varNode ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^numChanges += addStubsForUndeclaredProperties ( n, gramps, name, varNode ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P14_Delete_Statement]^^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^676^^^^^661^691^numChanges += addStubsForUndeclaredProperties ( n, name, gramps, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P2_Replace_Operator]^if  ( isObjLit || n.canEliminate (  )  )  {^678^^^^^663^693^if  ( isObjLit && n.canEliminate (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P6_Replace_Expression]^if  ( isObjLit ) {^678^^^^^663^693^if  ( isObjLit && n.canEliminate (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P6_Replace_Expression]^if  (  n.canEliminate (  )  )  {^678^^^^^663^693^if  ( isObjLit && n.canEliminate (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P7_Replace_Invocation]^if  ( isObjLit && n.addRef (  )  )  {^678^^^^^663^693^if  ( isObjLit && n.canEliminate (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P15_Unwrap_Block]^varNode.removeChild(ref.node); if (!(varNode.hasChildren())) {    gramps.removeChild(varNode);}; numChanges++; ref.node = null;^678^679^680^681^682^663^693^if  ( isObjLit && n.canEliminate (  )  )  { varNode.removeChild ( ref.node ) ; if  ( !varNode.hasChildren (  )  )  { gramps.removeChild ( varNode ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P16_Remove_Block]^^678^679^680^681^682^663^693^if  ( isObjLit && n.canEliminate (  )  )  { varNode.removeChild ( ref.node ) ; if  ( !varNode.hasChildren (  )  )  { gramps.removeChild ( varNode ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P7_Replace_Invocation]^if  ( !varNode.putBooleanProp (  )  )  {^680^^^^^665^695^if  ( !varNode.hasChildren (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P7_Replace_Invocation]^if  ( !varNode .addChildToFront ( varNode )   )  {^680^^^^^665^695^if  ( !varNode.hasChildren (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P9_Replace_Statement]^if  ( n.hasChildren (  )  )  {^680^^^^^665^695^if  ( !varNode.hasChildren (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P15_Unwrap_Block]^gramps.removeChild(varNode);^680^681^682^^^665^695^if  ( !varNode.hasChildren (  )  )  { gramps.removeChild ( varNode ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P16_Remove_Block]^^680^681^682^^^665^695^if  ( !varNode.hasChildren (  )  )  { gramps.removeChild ( varNode ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P13_Insert_Block]^if  ( ! ( varNode.hasChildren (  )  )  )  {     varParent.removeChild ( varNode ) ; }^680^^^^^665^695^[Delete]^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P5_Replace_Variable]^gramps.removeChild ( rvalue ) ;^681^^^^^666^696^gramps.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P7_Replace_Invocation]^gramps.replaceChild ( varNode ) ;^681^^^^^666^696^gramps.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P14_Delete_Statement]^^681^^^^^666^696^gramps.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^objlit.removeChild ( value ) ;gramps.removeChild ( varNode ) ;^681^^^^^666^696^gramps.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^varNode.removeChild ( ref.node ) ;gramps.removeChild ( varNode ) ;^681^^^^^666^696^gramps.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^objlit.removeChild ( key ) ;gramps.removeChild ( varNode ) ;^681^^^^^666^696^gramps.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^varParent.replaceChild ( gramps, varNode ) ;gramps.removeChild ( varNode ) ;^681^^^^^666^696^gramps.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^parent.removeChild ( rvalue ) ;gramps.removeChild ( varNode ) ;^681^^^^^666^696^gramps.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^varParent.removeChild ( varNode ) ;gramps.removeChild ( varNode ) ;^681^^^^^666^696^gramps.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^greatGramps.replaceChild ( gramps, varNode ) ;gramps.removeChild ( varNode ) ;^681^^^^^666^696^gramps.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^name.removeRef ( ref ) ;gramps.removeChild ( varNode ) ;^681^^^^^666^696^gramps.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P8_Replace_Mix]^ref.node = false;^687^^^^^672^702^ref.node = null;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^ref.node = nameNode;ref.node = null;^687^^^^^672^702^ref.node = null;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P7_Replace_Invocation]^varNode.replaceChild ( ref.node ) ;^679^^^^^664^694^varNode.removeChild ( ref.node ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P8_Replace_Mix]^varNode .removeChild ( gramps )  ;^679^^^^^664^694^varNode.removeChild ( ref.node ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P14_Delete_Statement]^^679^^^^^664^694^varNode.removeChild ( ref.node ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^objlit.removeChild ( value ) ;varNode.removeChild ( ref.node ) ;^679^^^^^664^694^varNode.removeChild ( ref.node ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^gramps.removeChild ( varNode ) ;varNode.removeChild ( ref.node ) ;^679^^^^^664^694^varNode.removeChild ( ref.node ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^objlit.removeChild ( key ) ;varNode.removeChild ( ref.node ) ;^679^^^^^664^694^varNode.removeChild ( ref.node ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^varParent.replaceChild ( gramps, varNode ) ;varNode.removeChild ( ref.node ) ;^679^^^^^664^694^varNode.removeChild ( ref.node ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^parent.removeChild ( rvalue ) ;varNode.removeChild ( ref.node ) ;^679^^^^^664^694^varNode.removeChild ( ref.node ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^varParent.removeChild ( varNode ) ;varNode.removeChild ( ref.node ) ;^679^^^^^664^694^varNode.removeChild ( ref.node ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^varNode.addChildToBack ( nameNode ) ;varNode.removeChild ( ref.node ) ;^679^^^^^664^694^varNode.removeChild ( ref.node ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^name.removeRef ( ref ) ;varNode.removeChild ( ref.node ) ;^679^^^^^664^694^varNode.removeChild ( ref.node ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P11_Insert_Donor_Statement]^parent.replaceChild ( ref.node, nameNode ) ;varNode.removeChild ( ref.node ) ;^679^^^^^664^694^varNode.removeChild ( ref.node ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P8_Replace_Mix]^gramps.replaceChild ( rvalue ) ;^681^^^^^666^696^gramps.removeChild ( varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P8_Replace_Mix]^ref.node = true;^687^^^^^672^702^ref.node = null;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P8_Replace_Mix]^if  ( isObjLit && n .fullName (  )   )  {^678^^^^^663^693^if  ( isObjLit && n.canEliminate (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P2_Replace_Operator]^if  ( numChanges >= 0 )  {^690^^^^^675^705^if  ( numChanges > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P3_Replace_Literal]^if  ( numChanges > numChanges )  {^690^^^^^675^705^if  ( numChanges > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P8_Replace_Mix]^if  ( numChanges > 0 >>> 3 )  {^690^^^^^675^705^if  ( numChanges > 0 )  {^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P15_Unwrap_Block]^compiler.reportCodeChange();^690^691^692^^^675^705^if  ( numChanges > 0 )  { compiler.reportCodeChange (  ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P16_Remove_Block]^^690^691^692^^^675^705^if  ( numChanges > 0 )  { compiler.reportCodeChange (  ) ; }^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P7_Replace_Invocation]^compiler.report (  ) ;^691^^^^^676^706^compiler.reportCodeChange (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P14_Delete_Statement]^^691^^^^^676^706^compiler.reportCodeChange (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateObjLitOrFunctionDeclarationAtVarNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  gramps  rvalue  varNode  List  globalNames  refs  String  name  Map  nameMap  int  numChanges  Name  n  
[P1_Replace_Type]^char fnName = ref.node.getchar (  ) ;^704^^^^^702^707^String fnName = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P7_Replace_Invocation]^String fnName = ref.node.getAncestor (  ) ;^704^^^^^702^707^String fnName = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P7_Replace_Invocation]^String fnName = ref.node .newString ( fnName )  ;^704^^^^^702^707^String fnName = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getFirstChild (  ) ;String fnName = ref.node.getString (  ) ;^704^^^^^702^707^String fnName = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getNext (  ) ;String fnName = ref.node.getString (  ) ;^704^^^^^702^707^String fnName = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node varParent = ref.node.getAncestor ( 3 ) ;String fnName = ref.node.getString (  ) ;^704^^^^^702^707^String fnName = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node rParent = r.node.getParent (  ) ;String fnName = ref.node.getString (  ) ;^704^^^^^702^707^String fnName = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = varNode.getParent (  ) ;String fnName = ref.node.getString (  ) ;^704^^^^^702^707^String fnName = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;String fnName = ref.node.getString (  ) ;^704^^^^^702^707^String fnName = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node varNode = ref.node.getParent (  ) ;String fnName = ref.node.getString (  ) ;^704^^^^^702^707^String fnName = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^String name = ref.node.getString (  ) ;String fnName = ref.node.getString (  ) ;^704^^^^^702^707^String fnName = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^Node gramps = ref.node.getAncestor ( 2 ) ;String fnName = ref.node.getString (  ) ;^704^^^^^702^707^String fnName = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P14_Delete_Statement]^^704^^^^^702^707^String fnName = ref.node.getString (  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P3_Replace_Literal]^addStubsForUndeclaredProperties ( n, fnName, ref.node.getAncestor ( 10 ) , ref.node.getParent (  )  ) ;^705^706^^^^702^707^addStubsForUndeclaredProperties ( n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P5_Replace_Variable]^addStubsForUndeclaredProperties (  fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^705^706^^^^702^707^addStubsForUndeclaredProperties ( n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P5_Replace_Variable]^addStubsForUndeclaredProperties ( n,  ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^705^706^^^^702^707^addStubsForUndeclaredProperties ( n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P5_Replace_Variable]^addStubsForUndeclaredProperties ( n, fnName.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^705^706^^^^702^707^addStubsForUndeclaredProperties ( n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P5_Replace_Variable]^addStubsForUndeclaredProperties ( n, fnName.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^705^706^^^^702^707^addStubsForUndeclaredProperties ( n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P7_Replace_Invocation]^addStubsForUndeclaredProperties ( n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getAncestor (  )  ) ;^705^706^^^^702^707^addStubsForUndeclaredProperties ( n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P7_Replace_Invocation]^addStubsForUndeclaredProperties ( n, fnName, ref.node.getAncestor ( 2 ) , ref.node .cloneTree (  )   ) ;^705^706^^^^702^707^addStubsForUndeclaredProperties ( n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P14_Delete_Statement]^^705^706^^^^702^707^addStubsForUndeclaredProperties ( n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;addStubsForUndeclaredProperties ( n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^705^706^^^^702^707^addStubsForUndeclaredProperties ( n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^addStubsForUndeclaredProperties ( n, alias, varParent, varNode ) ;addStubsForUndeclaredProperties ( n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^705^706^^^^702^707^addStubsForUndeclaredProperties ( n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P3_Replace_Literal]^n, fnName, ref.node.getAncestor ( null ) , ref.node.getParent (  )  ) ;^706^^^^^702^707^n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P5_Replace_Variable]^n, fnName.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^706^^^^^702^707^n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P5_Replace_Variable]^n, fnName.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^706^^^^^702^707^n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P14_Delete_Statement]^^706^^^^^702^707^n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^addStubsForUndeclaredProperties ( n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^706^^^^^702^707^n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P11_Insert_Donor_Statement]^alias, ref.node.getAncestor ( 2 ) , n.fullName (  )  ) ;n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^706^^^^^702^707^n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P7_Replace_Invocation]^n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getAncestor (  )  ) ;^706^^^^^702^707^n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P7_Replace_Invocation]^n, fnName, ref.node.getAncestor ( 2 ) , ref.node .cloneTree (  )   ) ;^706^^^^^702^707^n, fnName, ref.node.getAncestor ( 2 ) , ref.node.getParent (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] updateFunctionDeclarationAtFunctionNode [RETURN_TYPE] void   Name n [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  fnName  Map  nameMap  Name  n  
[P1_Replace_Type]^short  numVars = 0;^727^^^^^712^742^int numVars = 0;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P3_Replace_Literal]^int numVars = numVars;^727^^^^^712^742^int numVars = 0;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^int numChanges = 0;int numVars = 0;^727^^^^^712^742^int numVars = 0;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^int numStubs = 0;int numVars = 0;^727^^^^^712^742^int numVars = 0;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P1_Replace_Type]^short  arbitraryNameCounter = 0;^728^^^^^713^743^int arbitraryNameCounter = 0;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P3_Replace_Literal]^int arbitraryNameCounter = arbitraryNameCounter;^728^^^^^713^743^int arbitraryNameCounter = 0;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^if  ( isObjLit )  {^748^^^^^733^763^if  ( discardKeys )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P9_Replace_Statement]^if  ( !discardKeys )  {^748^^^^^733^763^if  ( discardKeys )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^if  ( varParent.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^754^^^^^748^758^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^if  ( key.putBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^754^^^^^748^758^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P9_Replace_Statement]^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^754^^^^^748^758^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P15_Unwrap_Block]^refNode.putBooleanProp(Node.IS_CONSTANT_NAME, true);^754^755^756^^^748^758^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P16_Remove_Block]^^754^755^756^^^748^758^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P13_Insert_Block]^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^754^^^^^748^758^[Delete]^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P13_Insert_Block]^if  ( getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^754^^^^^748^758^[Delete]^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P13_Insert_Block]^if  ( get ( 0 ) getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^754^^^^^748^758^[Delete]^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P3_Replace_Literal]^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, false ) ;^755^^^^^748^758^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^refNode.replaceChild ( Node.IS_CONSTANT_NAME, true ) ;^755^^^^^748^758^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^refNode .getBooleanProp (  )  ;^755^^^^^748^758^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^755^^^^^748^758^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^755^^^^^748^758^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P12_Insert_Condition]^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^755^^^^^748^758^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P12_Insert_Condition]^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^755^^^^^748^758^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^refNode = Node.newString ( Token.NAME, qName ) ;^753^^^^^748^758^refNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^refNode = Node.putBooleanProp ( Token.NAME, propAlias ) ;^753^^^^^748^758^refNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^refNode = Node .getString (  )  ;^753^^^^^748^758^refNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^753^^^^^748^758^refNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;refNode = Node.newString ( Token.NAME, propAlias ) ;^753^^^^^748^758^refNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^objlit.replaceChildAfter ( varParent, refNode ) ;^757^^^^^748^758^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^objlit.replaceChildAfter ( key, varNode ) ;^757^^^^^748^758^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^objlit.replaceChildAfter (  refNode ) ;^757^^^^^748^758^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^objlit.replaceChildAfter ( key ) ;^757^^^^^748^758^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^objlit.replaceChildAfter ( refNode, key ) ;^757^^^^^748^758^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^757^^^^^748^758^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^objlit.removeChild ( value ) ;objlit.replaceChildAfter ( key, refNode ) ;^757^^^^^748^758^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^objlit.removeChild ( key ) ;objlit.replaceChildAfter ( key, refNode ) ;^757^^^^^748^758^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^varParent.replaceChild ( gramps, varNode ) ;objlit.replaceChildAfter ( key, refNode ) ;^757^^^^^748^758^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^parent.replaceChild ( n, ref ) ;objlit.replaceChildAfter ( key, refNode ) ;^757^^^^^748^758^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^parent.replaceChild ( ref.node, nameNode ) ;objlit.replaceChildAfter ( key, refNode ) ;^757^^^^^748^758^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^objlit.removeChild ( varParent ) ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^objlit.replaceChild ( key ) ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^objlit .removeChild ( nameToAddAfter )  ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^objlit.removeChild ( varNode ) ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^749^750^^^^734^764^objlit.removeChild ( key ) ; objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^objlit.removeChild ( value ) ;objlit.removeChild ( key ) ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^gramps.removeChild ( varNode ) ;objlit.removeChild ( key ) ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^varNode.removeChild ( ref.node ) ;objlit.removeChild ( key ) ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^objlit.replaceChildAfter ( key, refNode ) ;objlit.removeChild ( key ) ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^parent.replaceChild ( n, ref ) ;objlit.removeChild ( key ) ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^parent.removeChild ( rvalue ) ;objlit.removeChild ( key ) ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^varParent.removeChild ( varNode ) ;objlit.removeChild ( key ) ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^name.removeRef ( ref ) ;objlit.removeChild ( key ) ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^objlit.removeChild ( varNode ) ;^750^^^^^735^765^objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^objlit.replaceChild ( value ) ;^750^^^^^735^765^objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^objlit .removeChild ( nextKey )  ;^750^^^^^735^765^objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^objlit.replaceChild ( varParent ) ;^750^^^^^735^765^objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^750^^^^^735^765^objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^gramps.removeChild ( varNode ) ;objlit.removeChild ( value ) ;^750^^^^^735^765^objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^varNode.removeChild ( ref.node ) ;objlit.removeChild ( value ) ;^750^^^^^735^765^objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^objlit.removeChild ( key ) ;objlit.removeChild ( value ) ;^750^^^^^735^765^objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^objlit.replaceChildAfter ( key, refNode ) ;objlit.removeChild ( value ) ;^750^^^^^735^765^objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^parent.replaceChild ( n, ref ) ;objlit.removeChild ( value ) ;^750^^^^^735^765^objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^parent.removeChild ( rvalue ) ;objlit.removeChild ( value ) ;^750^^^^^735^765^objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^varParent.removeChild ( varNode ) ;objlit.removeChild ( value ) ;^750^^^^^735^765^objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^ref.node.getParent (  ) .removeChild ( rvalue ) ;objlit.removeChild ( value ) ;^750^^^^^735^765^objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^if  ( varParent.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^754^^^^^739^769^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^if  ( key.putBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^754^^^^^739^769^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P9_Replace_Statement]^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^754^^^^^739^769^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P15_Unwrap_Block]^refNode.putBooleanProp(Node.IS_CONSTANT_NAME, true);^754^755^756^^^739^769^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P16_Remove_Block]^^754^755^756^^^739^769^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P13_Insert_Block]^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^754^^^^^739^769^[Delete]^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P13_Insert_Block]^if  ( getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^754^^^^^739^769^[Delete]^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P13_Insert_Block]^if  ( get ( 0 ) getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^754^^^^^739^769^[Delete]^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P3_Replace_Literal]^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, false ) ;^755^^^^^740^770^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^refNode.replaceChild ( Node.IS_CONSTANT_NAME, true ) ;^755^^^^^740^770^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^refNode .getBooleanProp (  )  ;^755^^^^^740^770^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^755^^^^^740^770^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^755^^^^^740^770^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P12_Insert_Condition]^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^755^^^^^740^770^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P12_Insert_Condition]^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^755^^^^^740^770^refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^if  ( varParent.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^763^^^^^748^778^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^if  ( key.putBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^763^^^^^748^778^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P9_Replace_Statement]^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^763^^^^^748^778^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P15_Unwrap_Block]^nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true);^763^764^765^^^748^778^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P16_Remove_Block]^^763^764^765^^^748^778^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P13_Insert_Block]^if  ( getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^763^^^^^748^778^[Delete]^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P13_Insert_Block]^if  ( get ( 0 ) getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^763^^^^^748^778^[Delete]^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P13_Insert_Block]^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^763^^^^^748^778^[Delete]^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P3_Replace_Literal]^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, false ) ;^764^^^^^749^779^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^nameNode.replaceChild ( Node.IS_CONSTANT_NAME, true ) ;^764^^^^^749^779^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^nameNode .getBooleanProp (  )  ;^764^^^^^749^779^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^764^^^^^749^779^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P12_Insert_Condition]^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^764^^^^^749^779^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P12_Insert_Condition]^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^764^^^^^749^779^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P2_Replace_Operator]^if  ( nameToAddAfter == null )  {^767^^^^^752^782^if  ( nameToAddAfter != null )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^if  ( varParent != null )  {^767^^^^^752^782^if  ( nameToAddAfter != null )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^if  ( nameToAddAfter != false )  {^767^^^^^752^782^if  ( nameToAddAfter != null )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P9_Replace_Statement]^if  ( addAfter == null )  {^767^^^^^752^782^if  ( nameToAddAfter != null )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P9_Replace_Statement]^if  ( n.refs != null )  {^767^^^^^752^782^if  ( nameToAddAfter != null )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P15_Unwrap_Block]^varParent.addChildAfter(newVar, nameToAddAfter);^767^768^769^770^771^752^782^if  ( nameToAddAfter != null )  { varParent.addChildAfter ( newVar, nameToAddAfter ) ; } else { varParent.addChildBefore ( newVar, varNode ) ; }^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P16_Remove_Block]^^767^768^769^770^771^752^782^if  ( nameToAddAfter != null )  { varParent.addChildAfter ( newVar, nameToAddAfter ) ; } else { varParent.addChildBefore ( newVar, varNode ) ; }^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P13_Insert_Block]^if  ( addAfter == null )  {     parent.addChildToFront ( newVar ) ; }else {     parent.addChildAfter ( newVar, addAfter ) ;     addAfter = newVar; }^767^^^^^752^782^[Delete]^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildBefore ( refNode, varNode ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildBefore ( newVar, refNode ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildBefore (  varNode ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildBefore ( newVar ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildBefore ( varNode, newVar ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^varParent.addChildBefore ( varParent, varNode ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^770^771^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ; }^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^varParent.addChildAfter ( newVar, nameToAddAfter ) ;varParent.addChildBefore ( newVar, varNode ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^currentParent.addChildBefore ( stubVar, current ) ;varParent.addChildBefore ( newVar, varNode ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^parent.addChildToFront ( newVar ) ;varParent.addChildBefore ( newVar, varNode ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^varParent.replaceChild ( gramps, varNode ) ;varParent.addChildBefore ( newVar, varNode ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^varParent.removeChild ( varNode ) ;varParent.addChildBefore ( newVar, varNode ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^varNode.addChildToBack ( nameNode ) ;varParent.addChildBefore ( newVar, varNode ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^parent.addChildAfter ( newVar, addAfter ) ;varParent.addChildBefore ( newVar, varNode ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildAfter ( value, nameToAddAfter ) ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildAfter ( newVar, value ) ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildAfter (  nameToAddAfter ) ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildAfter ( newVar ) ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildAfter ( nameToAddAfter, newVar ) ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^varParent.addChildAfter ( newVar, refNode ) ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^varParent.addChildBefore ( newVar, varNode ) ;varParent.addChildAfter ( newVar, nameToAddAfter ) ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^parent.addChildToFront ( newVar ) ;varParent.addChildAfter ( newVar, nameToAddAfter ) ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^parent.addChildAfter ( newVar, addAfter ) ;varParent.addChildAfter ( newVar, nameToAddAfter ) ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P6_Replace_Expression]^if  ( value.getType() == FUNCTION )  {^775^^^^^760^790^if  ( isJsIdentifier )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P2_Replace_Operator]^if  ( p == null )  {^780^^^^^765^795^if  ( p != null )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P6_Replace_Expression]^if  ( value.getType() == FUNCTION )  {^780^^^^^765^795^if  ( p != null )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^if  ( p != false )  {^780^^^^^765^795^if  ( p != null )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P9_Replace_Statement]^if  ( addAfter == null )  {^780^^^^^765^795^if  ( p != null )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P9_Replace_Statement]^if  ( n.props != null )  {^780^^^^^765^795^if  ( p != null )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P9_Replace_Statement]^if  ( n.refs != null )  {^780^^^^^765^795^if  ( p != null )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^if  ( discardKeys )  {^781^^^^^766^796^if  ( !discardKeys )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P15_Unwrap_Block]^com.google.javascript.jscomp.GlobalNamespace.Ref newAlias = p.declaration.cloneAndReclassify(Ref.Type.ALIASING_GET); newAlias.node = refNode; p.addRef(newAlias);^781^782^783^784^785^766^796^if  ( !discardKeys )  { Ref newAlias = p.declaration.cloneAndReclassify ( Ref.Type.ALIASING_GET ) ; newAlias.node = refNode; p.addRef ( newAlias ) ; }^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P16_Remove_Block]^^781^782^783^784^785^766^796^if  ( !discardKeys )  { Ref newAlias = p.declaration.cloneAndReclassify ( Ref.Type.ALIASING_GET ) ; newAlias.node = refNode; p.addRef ( newAlias ) ; }^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^newAlias.node = varParent;^784^^^^^769^799^newAlias.node = refNode;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^newAlias.node =  value;^784^^^^^769^799^newAlias.node = refNode;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^ref.node = nameNode;newAlias.node = refNode;^784^^^^^769^799^newAlias.node = refNode;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^p.declaration.node = nameNode;newAlias.node = refNode;^784^^^^^769^799^newAlias.node = refNode;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P13_Insert_Block]^if  ( !discardKeys )  {     Ref newAlias = cloneAndReclassify ( ALIASING_GET ) ;     newAlias.node = refNode;     p.addRef ( newAlias ) ; }^782^^^^^767^797^[Delete]^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^783^784^785^786^^768^798^p.declaration.cloneAndReclassify ( Ref.Type.ALIASING_GET ) ; newAlias.node = refNode; p.addRef ( newAlias ) ; }^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^785^^^^^770^800^p.addRef ( newAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P2_Replace_Operator]^if  ( value.getType (  )  != Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^if  ( objlit.getType (  )  == Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^if  ( value.putBooleanProp (  )  == Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P9_Replace_Statement]^if  ( aliasParent.getType (  )  == Token.NAME )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P9_Replace_Statement]^if  ( n.getType (  )  == Token.THIS )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P9_Replace_Statement]^if  ( gramps.getType (  )  == Token.EXPR_RESULT )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P9_Replace_Statement]^if  ( rvalue.getType (  )  == Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P15_Unwrap_Block]^checkForHosedThisReferences(value, value.getJSDocInfo(), p);^790^791^792^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  { checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ; }^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P16_Remove_Block]^^790^791^792^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  { checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ; }^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P13_Insert_Block]^if  (  ( rvalue.getType (  )  )  ==  ( FUNCTION )  )  {     checkForHosedThisReferences ( rvalue, n.docInfo, n ) ; }^790^^^^^775^805^[Delete]^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^checkForHosedThisReferences ( varParent, value.getJSDocInfo (  ) , p ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , objlitName ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^checkForHosedThisReferences (  value.getJSDocInfo (  ) , p ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^checkForHosedThisReferences ( value, value.getJSDocInfo (  )  ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^checkForHosedThisReferences ( p, value.getJSDocInfo (  ) , value ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^updateSimpleDeclaration ( value, value.getJSDocInfo (  ) , p ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^checkForHosedThisReferences ( value, value.putBooleanProp (  ) , p ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^checkForHosedThisReferences ( refNode, value.getJSDocInfo (  ) , p ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^checkForHosedThisReferences ( objlit, value.getJSDocInfo (  ) , p ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^checkForHosedThisReferences ( value, value .getString (  )  , p ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^newAlias.node = objlit;^784^^^^^769^799^newAlias.node = refNode;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^p.declaration.node =  null;^788^^^^^773^803^p.declaration.node = nameNode;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^ref.node = nameNode;p.declaration.node = nameNode;^788^^^^^773^803^p.declaration.node = nameNode;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^newAlias.node = refNode;p.declaration.node = nameNode;^788^^^^^773^803^p.declaration.node = nameNode;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^p .removeRef ( newAlias )  ;^785^^^^^770^800^p.addRef ( newAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^if  ( varParent.getType (  )  == Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^checkForHosedThisReferences ( varNode, value.getJSDocInfo (  ) , p ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^if  ( refNode.getType (  )  == Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^if  ( value .getString (  )   == Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^updateSimpleDeclaration ( value, value.getJSDocInfo (  ) , objlitName ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^p.declaration.node =  refNode;^788^^^^^773^803^p.declaration.node = nameNode;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^Name p = nameMap.get ( propName ) ;^779^^^^^764^794^Name p = nameMap.get ( qName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^Name p = qName.get ( nameMap ) ;^779^^^^^764^794^Name p = nameMap.get ( qName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^779^^^^^764^794^Name p = nameMap.get ( qName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^nameMap = namespace.getNameIndex (  ) ;Name p = nameMap.get ( qName ) ;^779^^^^^764^794^Name p = nameMap.get ( qName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^if  ( p != true )  {^780^^^^^765^795^if  ( p != null )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P2_Replace_Operator]^if  ( value.getType (  )  <= Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^newAlias.node =  varNode;^784^^^^^769^799^newAlias.node = refNode;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^if  ( varNode.getType (  )  == Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^newAlias.node =  null;^784^^^^^769^799^newAlias.node = refNode;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P2_Replace_Operator]^for  ( Node key = objlit.getFirstChild (  ) , nextKey; key == null;^730^^^^^715^745^for  ( Node key = objlit.getFirstChild (  ) , nextKey; key != null;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P4_Replace_Constructor]^for  ( Node key = objlit.getFirstChild (  ) ; key != null;^730^^^^^715^745^for  ( Node key = objlit.getFirstChild (  ) , nextKey; key != null;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^for  ( Node key = objlit.putBooleanProp (  ) , nextKey; key != null;^730^^^^^715^745^for  ( Node key = objlit.getFirstChild (  ) , nextKey; key != null;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^for  ( Node key = objlit .getLastChild (  )  , nextKey; key != null;^730^^^^^715^745^for  ( Node key = objlit.getFirstChild (  ) , nextKey; key != null;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^if  ( inlineAliases )  {^748^^^^^733^763^if  ( discardKeys )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^if  ( varParent.putBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^754^^^^^748^758^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^if  ( value.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^754^^^^^748^758^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^if  ( refNode.putBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^754^^^^^748^758^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^objlit .replaceChild ( varParent )  ;^757^^^^^748^758^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^objlit.replaceChild ( varParent ) ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^objlit.removeChild ( varParent ) ;^750^^^^^735^765^objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^if  ( varNode.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^754^^^^^739^769^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^if  ( key .getType (  )   )  {^763^^^^^748^778^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^if  ( varNode != null )  {^767^^^^^752^782^if  ( nameToAddAfter != null )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^if  ( nameToAddAfter != true )  {^767^^^^^752^782^if  ( nameToAddAfter != null )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildBefore ( newVar, varParent ) ;^770^^^^^767^771^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildAfter ( refNode, nameToAddAfter ) ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildAfter ( newVar, varNode ) ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^varParent .replaceChildAfter ( objlit , objlit )  ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^varParent.addChildAfter ( varNode, nameToAddAfter ) ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^checkForHosedThisReferences ( varNode, value.putBooleanProp (  ) , p ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^p.declaration.node =  varParent;^788^^^^^773^803^p.declaration.node = nameNode;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^if  ( varParent.putBooleanProp (  )  == Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^checkForHosedThisReferences ( refNode, value.putBooleanProp (  ) , p ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^checkForHosedThisReferences ( objlit, value.putBooleanProp (  ) , p ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^if  ( refNode.putBooleanProp (  )  == Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P2_Replace_Operator]^if  ( value.getType (  )  < Token.FUNCTION )  {^790^^^^^775^805^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^nextKey = objlit.getNext (  ) ;^733^^^^^718^748^nextKey = value.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^nextKey = value.putBooleanProp (  ) ;^733^^^^^718^748^nextKey = value.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^nextKey =  null.getNext (  ) ;^733^^^^^718^748^nextKey = value.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^key = nextKey )  { Node value = key.getNext (  ) ;nextKey = value.getNext (  ) ;^733^^^^^718^748^nextKey = value.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^refNode = Node.newString ( Token.NAME, qName ) ;^753^^^^^738^768^refNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^refNode = Node.putBooleanProp ( Token.NAME, propAlias ) ;^753^^^^^738^768^refNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^refNode = Node .getString (  )  ;^753^^^^^738^768^refNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^nameToAddAfter = value;^773^^^^^758^788^nameToAddAfter = newVar;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^nameToAddAfter =  null;^773^^^^^758^788^nameToAddAfter = newVar;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^addAfter = newVar;nameToAddAfter = newVar;^773^^^^^758^788^nameToAddAfter = newVar;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P12_Insert_Condition]^if  ( nameToAddAfter != null )  { nameToAddAfter = newVar; }^773^^^^^758^788^nameToAddAfter = newVar;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^Node newVar = new Node ( Token.VAR, varParent ) ;^766^^^^^751^781^Node newVar = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^Node newVar = new Node ( Token.VAR ) ;^766^^^^^751^781^Node newVar = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^Node newVar = new Node ( Token. nameNode ) ;^766^^^^^751^781^Node newVar = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^Node newVar = new Node ( Token.VAR, refNode ) ;^766^^^^^751^781^Node newVar = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^Node value = refNode.getNext (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^Node value = key.putBooleanProp (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^Node value = varParent .getParent (  )  ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getFirstChild (  ) ;Node value = key.getNext (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getNext (  ) ;Node value = key.getNext (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node varParent = ref.node.getAncestor ( 3 ) ;Node value = key.getNext (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node rParent = r.node.getParent (  ) ;Node value = key.getNext (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node gramps = parent.getParent (  ) ;Node value = key.getNext (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node gramps = varNode.getParent (  ) ;Node value = key.getNext (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;Node value = key.getNext (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node greatGramps = gramps.getParent (  ) ;Node value = key.getNext (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node varNode = ref.node.getParent (  ) ;Node value = key.getNext (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node gramps = ref.node.getAncestor ( 2 ) ;Node value = key.getNext (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P2_Replace_Operator]^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER || TokenStream.isJSIdentifier ( key.getString (  )  ) ;^740^741^^^^725^755^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P2_Replace_Operator]^boolean isJsIdentifier = key.getType (  )  == Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^740^741^^^^725^755^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^boolean isJsIdentifier = refNode.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^740^741^^^^725^755^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^boolean isJsIdentifier = key.putBooleanProp (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^740^741^^^^725^755^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.newString (  )  ) ;^740^741^^^^725^755^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key .newString ( alias )   ) ;^740^741^^^^725^755^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^boolean isJsIdentifier = value.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^740^741^^^^725^755^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P1_Replace_Type]^char propName = isJsIdentifier ? key.getchar (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^742^743^^^^727^757^String propName = isJsIdentifier ? key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^String propName = isObjLit ? key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^742^743^^^^727^757^String propName = isJsIdentifier ? key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^String propName = isJsIdentifier ? refNode.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^742^743^^^^727^757^String propName = isJsIdentifier ? key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^String propName = key ? isJsIdentifier.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^742^743^^^^727^757^String propName = isJsIdentifier ? key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P6_Replace_Expression]^String propName  =  String.valueOf ( ++arbitraryNameCounter ) ;^742^743^^^^727^757^String propName = isJsIdentifier ? key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P6_Replace_Expression]^String propName  =  key.getString (  )  ;^742^743^^^^727^757^String propName = isJsIdentifier ? key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^String propName = isJsIdentifier ? key.newString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^742^743^^^^727^757^String propName = isJsIdentifier ? key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^String propName = isObjLit ? key .newString ( qName )   : String.valueOf ( ++arbitraryNameCounter ) ;^742^743^^^^727^757^String propName = isJsIdentifier ? key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P1_Replace_Type]^char propAlias = appendPropForAlias ( alias, propName ) ;^744^^^^^729^759^String propAlias = appendPropForAlias ( alias, propName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^String propAlias = appendPropForAlias ( qName, propName ) ;^744^^^^^729^759^String propAlias = appendPropForAlias ( alias, propName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^String propAlias = appendPropForAlias ( alias, qName ) ;^744^^^^^729^759^String propAlias = appendPropForAlias ( alias, propName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^String propAlias = appendPropForAlias (  propName ) ;^744^^^^^729^759^String propAlias = appendPropForAlias ( alias, propName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^String propAlias = appendPropForAlias ( alias ) ;^744^^^^^729^759^String propAlias = appendPropForAlias ( alias, propName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^String propAlias = appendPropForAlias ( propName, alias ) ;^744^^^^^729^759^String propAlias = appendPropForAlias ( alias, propName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^String propAlias = flattenReferencesTo ( alias, propName ) ;^744^^^^^729^759^String propAlias = appendPropForAlias ( alias, propName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P1_Replace_Type]^char qName = objlitName.fullName (  )  + '.' + propName;^745^^^^^730^760^String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P2_Replace_Operator]^String qName = objlitName.fullName (  <<  )  + '.' + propName;^745^^^^^730^760^String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P2_Replace_Operator]^String qName = objlitName.fullName (  )   ^  '.' + propName;^745^^^^^730^760^String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^String qName = p.fullName (  )  + '.' + propName;^745^^^^^730^760^String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^String qName = objlitName.fullName (  )  + '.' + propAlias;^745^^^^^730^760^String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^String qName = propName.fullName (  )  + '.' + objlitName;^745^^^^^730^760^String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^String qName = objlitName.addRef (  )  + '.' + propName;^745^^^^^730^760^String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^String qName = objlitName .canEliminate (  )   + '.' + propName;^745^^^^^730^760^String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^Node nameNode = Node.newString ( Token.NAME, qName ) ;^761^^^^^746^776^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^Node nameNode = Node.putBooleanProp ( Token.NAME, propAlias ) ;^761^^^^^746^776^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR ) ;Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^761^^^^^746^776^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR, nameNode ) ;Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^761^^^^^746^776^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;Node newVar = new Node ( Token.VAR, nameNode ) ;^766^^^^^751^781^Node newVar = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR ) ;Node newVar = new Node ( Token.VAR, nameNode ) ;^766^^^^^751^781^Node newVar = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR, nameNode ) ;Node newVar = new Node ( Token.VAR, nameNode ) ;^766^^^^^751^781^Node newVar = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^Node value = varParent.getNext (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^Node value = varParent.putBooleanProp (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^nextKey = value.getNext (  ) ;Node value = key.getNext (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^nextKey = varParent.getNext (  ) ;^733^^^^^718^748^nextKey = value.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^733^^^^^718^748^nextKey = value.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node rvalue = ref.node.getNext (  ) ;nextKey = value.getNext (  ) ;^733^^^^^718^748^nextKey = value.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node rParent = r.node.getParent (  ) ;nextKey = value.getNext (  ) ;^733^^^^^718^748^nextKey = value.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node gramps = parent.getParent (  ) ;nextKey = value.getNext (  ) ;^733^^^^^718^748^nextKey = value.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node gramps = varNode.getParent (  ) ;nextKey = value.getNext (  ) ;^733^^^^^718^748^nextKey = value.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node value = key.getNext (  ) ;nextKey = value.getNext (  ) ;^733^^^^^718^748^nextKey = value.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node parent = ref.node.getParent (  ) ;nextKey = value.getNext (  ) ;^733^^^^^718^748^nextKey = value.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^boolean isJsIdentifier = varParent.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^740^741^^^^725^755^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^boolean isJsIdentifier = key .getString (  )   != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^740^741^^^^725^755^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^TokenStream.isJSIdentifier ( value.getString (  )  ) ;^741^^^^^726^756^TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^TokenStream.isJSIdentifier ( key.newString (  )  ) ;^741^^^^^726^756^TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^TokenStream.isJSIdentifier ( varParent .newString ( alias )   ) ;^741^^^^^726^756^TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^TokenStream.isJSIdentifier ( varParent.getString (  )  ) ;^741^^^^^726^756^TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^TokenStream.isJSIdentifier ( key .newString ( qName )   ) ;^741^^^^^726^756^TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^TokenStream.isJSIdentifier ( refNode.getString (  )  ) ;^741^^^^^726^756^TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^key.newString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^743^^^^^728^758^key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^key .newString ( propAlias )   : String.valueOf ( ++arbitraryNameCounter ) ;^743^^^^^728^758^key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^743^744^^^^728^758^key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ; String propAlias = appendPropForAlias ( alias, propName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P1_Replace_Type]^key.getchar (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^743^^^^^728^758^key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^key.getString (  )  : String .indexOf ( numVars )  ;^743^^^^^728^758^key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^743^^^^^728^758^key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^744^^^^^729^759^String propAlias = appendPropForAlias ( alias, propName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^745^^^^^730^760^String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^objlit .removeChild ( newVar )  ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^753^^^^^738^768^refNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;refNode = Node.newString ( Token.NAME, propAlias ) ;^753^^^^^738^768^refNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^if  ( refNode.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^754^^^^^739^769^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^objlit.replaceChildAfter ( value, refNode ) ;^757^^^^^742^772^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^objlit.replaceChildAfter ( key, value ) ;^757^^^^^742^772^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^objlit.replaceChildAfter (  refNode ) ;^757^^^^^742^772^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^objlit.replaceChildAfter ( key ) ;^757^^^^^742^772^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^objlit.replaceChildAfter ( refNode, key ) ;^757^^^^^742^772^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^objlit .replaceChild ( refNode )  ;^757^^^^^742^772^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^objlit.replaceChildAfter ( key, varNode ) ;^757^^^^^742^772^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^757^^^^^742^772^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^objlit.removeChild ( value ) ;objlit.replaceChildAfter ( key, refNode ) ;^757^^^^^742^772^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^objlit.removeChild ( key ) ;objlit.replaceChildAfter ( key, refNode ) ;^757^^^^^742^772^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^varParent.replaceChild ( gramps, varNode ) ;objlit.replaceChildAfter ( key, refNode ) ;^757^^^^^742^772^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^parent.replaceChild ( n, ref ) ;objlit.replaceChildAfter ( key, refNode ) ;^757^^^^^742^772^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^parent.replaceChild ( ref.node, nameNode ) ;objlit.replaceChildAfter ( key, refNode ) ;^757^^^^^742^772^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^Node nameNode = Node .getString (  )  ;^761^^^^^746^776^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^Node nameNode = Node.putBooleanProp ( Token.NAME, qName ) ;^761^^^^^746^776^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^761^^^^^746^776^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^refNode = Node.newString ( Token.NAME, propAlias ) ;Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^761^^^^^746^776^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^nameNode.addChildAfter ( value ) ;^762^^^^^747^777^nameNode.addChildToFront ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^nameNode .addChildBefore ( nameNode , objlit )  ;^762^^^^^747^777^nameNode.addChildToFront ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^nameNode.addChildAfter ( refNode ) ;^762^^^^^747^777^nameNode.addChildToFront ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^762^^^^^747^777^nameNode.addChildToFront ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^nameNode.addChildToFront ( rvalue ) ;nameNode.addChildToFront ( value ) ;^762^^^^^747^777^nameNode.addChildToFront ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^parent.addChildToFront ( newVar ) ;nameNode.addChildToFront ( value ) ;^762^^^^^747^777^nameNode.addChildToFront ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^parent.removeChild ( rvalue ) ;nameNode.addChildToFront ( value ) ;^762^^^^^747^777^nameNode.addChildToFront ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^varNode.addChildToBack ( nameNode ) ;nameNode.addChildToFront ( value ) ;^762^^^^^747^777^nameNode.addChildToFront ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^if  ( refNode .getType (  )   )  {^763^^^^^748^778^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^varParent .replaceChildAfter ( refNode , varParent )  ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildBefore ( value, varNode ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildBefore ( newVar, refNode ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildBefore (  varNode ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildBefore ( newVar ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildBefore ( varNode, newVar ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^varParent.addChildBefore ( refNode, varNode ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^770^771^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ; }^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^varParent.addChildAfter ( newVar, nameToAddAfter ) ;varParent.addChildBefore ( newVar, varNode ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^currentParent.addChildBefore ( stubVar, current ) ;varParent.addChildBefore ( newVar, varNode ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^parent.addChildToFront ( newVar ) ;varParent.addChildBefore ( newVar, varNode ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^varParent.replaceChild ( gramps, varNode ) ;varParent.addChildBefore ( newVar, varNode ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^varParent.removeChild ( varNode ) ;varParent.addChildBefore ( newVar, varNode ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^varNode.addChildToBack ( nameNode ) ;varParent.addChildBefore ( newVar, varNode ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P11_Insert_Donor_Statement]^parent.addChildAfter ( newVar, addAfter ) ;varParent.addChildBefore ( newVar, varNode ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^compiler.report (  ) ;^772^^^^^757^787^compiler.reportCodeChange (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^772^773^^^^757^787^compiler.reportCodeChange (  ) ; nameToAddAfter = newVar;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^checkForHosedThisReferences ( value, value .getString (  )  , objlitName ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^key =  varParent )  {^731^^^^^716^746^key = nextKey )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^nextKey = varNode.getNext (  ) ;^733^^^^^718^748^nextKey = value.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^nextKey = value .getParent (  )  ;^733^^^^^718^748^nextKey = value.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^nameToAddAfter = refNode;^773^^^^^758^788^nameToAddAfter = newVar;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^for  ( Node key = varNode.getFirstChild (  ) , nextKey; key != null;^730^^^^^715^745^for  ( Node key = objlit.getFirstChild (  ) , nextKey; key != null;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^for  ( Node key = varParent.putBooleanProp (  ) , nextKey; key != null;^730^^^^^715^745^for  ( Node key = objlit.getFirstChild (  ) , nextKey; key != null;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^Node value = varNode.getNext (  ) ;^732^^^^^717^747^Node value = key.getNext (  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^boolean isJsIdentifier = varParent.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.newString (  )  ) ;^740^741^^^^725^755^boolean isJsIdentifier = key.getType (  )  != Token.NUMBER && TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^String propName = isJsIdentifier ? varParent.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^742^743^^^^727^757^String propName = isJsIdentifier ? key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^String propAlias = flattenReferencesTo ( qName, propName ) ;^744^^^^^729^759^String propAlias = appendPropForAlias ( alias, propName ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P2_Replace_Operator]^String qName = objlitName.fullName (  <=  )  + '.' + propName;^745^^^^^730^760^String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P2_Replace_Operator]^String qName = objlitName.fullName (  )   <<  '.' + propName;^745^^^^^730^760^String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^Node newVar = new Node ( Token.VAR, value ) ;^766^^^^^751^781^Node newVar = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^for  ( Node key = refNode.getFirstChild (  ) , nextKey; key != null;^730^^^^^715^745^for  ( Node key = objlit.getFirstChild (  ) , nextKey; key != null;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^TokenStream.isJSIdentifier ( varNode.getString (  )  ) ;^741^^^^^726^756^TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^TokenStream.isJSIdentifier ( key .newString ( propAlias )   ) ;^741^^^^^726^756^TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^TokenStream.isJSIdentifier ( varParent.newString (  )  ) ;^741^^^^^726^756^TokenStream.isJSIdentifier ( key.getString (  )  ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^key.getString (  )  : String .indexOf ( arbitraryNameCounter )  ;^743^^^^^728^758^key.getString (  )  : String.valueOf ( ++arbitraryNameCounter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P14_Delete_Statement]^^744^745^^^^729^759^String propAlias = appendPropForAlias ( alias, propName ) ; String qName = objlitName.fullName (  )  + '.' + propName;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^objlit .removeChild ( value )  ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^objlit.replaceChild ( varNode ) ;^749^^^^^734^764^objlit.removeChild ( key ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^objlit.removeChild ( refNode ) ;^750^^^^^735^765^objlit.removeChild ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^if  ( value.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^754^^^^^739^769^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^if  ( key .getType (  )   )  {^754^^^^^739^769^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^objlit.replaceChildAfter ( key, varParent ) ;^757^^^^^742^772^objlit.replaceChildAfter ( key, refNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^nameNode.addChildToFront ( refNode ) ;^762^^^^^747^777^nameNode.addChildToFront ( value ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^if  ( refNode.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^763^^^^^748^778^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^if  ( refNode.putBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^763^^^^^748^778^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^varParent .replaceChildAfter ( newVar , nameNode )  ;^768^^^^^753^783^varParent.addChildAfter ( newVar, nameToAddAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^varParent.addChildBefore ( varNode, varNode ) ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P7_Replace_Invocation]^varParent .getChildBefore ( objlit )  ;^770^^^^^755^785^varParent.addChildBefore ( newVar, varNode ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P8_Replace_Mix]^checkForHosedThisReferences ( varParent, value.putBooleanProp (  ) , p ) ;^791^^^^^776^806^checkForHosedThisReferences ( value, value.getJSDocInfo (  ) , p ) ;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^return arbitraryNameCounter;^798^^^^^783^813^return numVars;^[CLASS] CollapseProperties 1  [METHOD] declareVarsForObjLitValues [RETURN_TYPE] int   Name objlitName String alias Node objlit Node varNode Node nameToAddAfter Node varParent boolean discardKeys [VARIABLES] AbstractCompiler  compiler  Ref  newAlias  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  key  nameNode  nameToAddAfter  newVar  nextKey  objlit  refNode  value  varNode  varParent  List  globalNames  refs  String  alias  propAlias  propName  qName  Map  nameMap  int  arbitraryNameCounter  numVars  Name  objlitName  p  
[P5_Replace_Variable]^Preconditions.checkArgument ( NodeUtil.isStatementBlock ( newVar )  ) ;^816^^^^^815^843^Preconditions.checkArgument ( NodeUtil.isStatementBlock ( parent )  ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^Preconditions.checkArgument ( NodeUtil.isObjectLitKey ( parent )  ) ;^816^^^^^815^843^Preconditions.checkArgument ( NodeUtil.isStatementBlock ( parent )  ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^Preconditions.checkArgument ( NodeUtil .copyNameAnnotations ( parent )   ) ;^816^^^^^815^843^Preconditions.checkArgument ( NodeUtil.isStatementBlock ( parent )  ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P14_Delete_Statement]^^816^^^^^815^843^Preconditions.checkArgument ( NodeUtil.isStatementBlock ( parent )  ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^Preconditions.checkNotNull ( ref.getTwin (  )  ) ;Preconditions.checkArgument ( NodeUtil.isStatementBlock ( parent )  ) ;^816^^^^^815^843^Preconditions.checkArgument ( NodeUtil.isStatementBlock ( parent )  ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P14_Delete_Statement]^^816^817^^^^815^843^Preconditions.checkArgument ( NodeUtil.isStatementBlock ( parent )  ) ; int numStubs = 0;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P1_Replace_Type]^short  numStubs = 0;^817^^^^^815^843^int numStubs = 0;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P3_Replace_Literal]^int numStubs = numStubs;^817^^^^^815^843^int numStubs = 0;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^int numVars = 0;int numStubs = 0;^817^^^^^815^843^int numStubs = 0;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^int numChanges = 0;int numStubs = 0;^817^^^^^815^843^int numStubs = 0;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P2_Replace_Operator]^if  ( n.props == null )  {^818^^^^^815^843^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P6_Replace_Expression]^if  ( addAfter == null )  {^818^^^^^815^843^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P8_Replace_Mix]^if  ( n.props != false )  {^818^^^^^815^843^if  ( n.props != null )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^if  ( p.addRef (  )  )  {^820^^^^^815^843^if  ( p.needsToBeStubbed (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^if  ( p .removeRef ( this )   )  {^820^^^^^815^843^if  ( p.needsToBeStubbed (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P2_Replace_Operator]^if  ( addAfter != null )  {^824^^^^^815^843^if  ( addAfter == null )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^if  ( newVar == null )  {^824^^^^^815^843^if  ( addAfter == null )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P8_Replace_Mix]^if  ( addAfter == this )  {^824^^^^^815^843^if  ( addAfter == null )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P9_Replace_Statement]^if  ( nameToAddAfter != null )  {^824^^^^^815^843^if  ( addAfter == null )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P9_Replace_Statement]^if  ( n.props != null )  {^824^^^^^815^843^if  ( addAfter == null )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P9_Replace_Statement]^if  ( p != null )  {^824^^^^^815^843^if  ( addAfter == null )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P9_Replace_Statement]^if  ( n.refs != null )  {^824^^^^^815^843^if  ( addAfter == null )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P15_Unwrap_Block]^parent.addChildToFront(newVar);^824^825^826^827^828^815^843^if  ( addAfter == null )  { parent.addChildToFront ( newVar ) ; } else { parent.addChildAfter ( newVar, addAfter ) ; addAfter = newVar; }^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P16_Remove_Block]^^824^825^826^827^828^815^843^if  ( addAfter == null )  { parent.addChildToFront ( newVar ) ; } else { parent.addChildAfter ( newVar, addAfter ) ; addAfter = newVar; }^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P13_Insert_Block]^if  ( nameToAddAfter != null )  {     varParent.addChildAfter ( newVar, nameToAddAfter ) ; }else {     varParent.addChildBefore ( newVar, varNode ) ; }^824^^^^^815^843^[Delete]^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^addAfter = parent;^828^^^^^824^829^addAfter = newVar;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^nameToAddAfter = newVar;addAfter = newVar;^828^^^^^824^829^addAfter = newVar;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^parent.addChildAfter ( nameNode, addAfter ) ;^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^parent.addChildAfter ( newVar, parent ) ;^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^parent.addChildAfter (  addAfter ) ;^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^parent.addChildAfter ( newVar ) ;^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^parent.addChildAfter ( addAfter, newVar ) ;^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^parent .replaceChildAfter ( nameNode , parent )  ;^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P14_Delete_Statement]^^827^828^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ; addAfter = newVar;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^varParent.addChildAfter ( newVar, nameToAddAfter ) ;parent.addChildAfter ( newVar, addAfter ) ;^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^varParent.addChildBefore ( newVar, varNode ) ;parent.addChildAfter ( newVar, addAfter ) ;^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^currentParent.addChildBefore ( stubVar, current ) ;parent.addChildAfter ( newVar, addAfter ) ;^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^parent.addChildToFront ( newVar ) ;parent.addChildAfter ( newVar, addAfter ) ;^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^parent.addChildToFront ( nameNode ) ;^825^^^^^815^843^parent.addChildToFront ( newVar ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^parent.addChildAfter ( newVar ) ;^825^^^^^815^843^parent.addChildToFront ( newVar ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^parent .addChildBefore ( newVar , addAfter )  ;^825^^^^^815^843^parent.addChildToFront ( newVar ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P14_Delete_Statement]^^825^^^^^815^843^parent.addChildToFront ( newVar ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^nameNode.addChildToFront ( rvalue ) ;parent.addChildToFront ( newVar ) ;^825^^^^^815^843^parent.addChildToFront ( newVar ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^varParent.addChildAfter ( newVar, nameToAddAfter ) ;parent.addChildToFront ( newVar ) ;^825^^^^^815^843^parent.addChildToFront ( newVar ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^varParent.addChildBefore ( newVar, varNode ) ;parent.addChildToFront ( newVar ) ;^825^^^^^815^843^parent.addChildToFront ( newVar ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^nameNode.addChildToFront ( value ) ;parent.addChildToFront ( newVar ) ;^825^^^^^815^843^parent.addChildToFront ( newVar ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^currentParent.addChildBefore ( stubVar, current ) ;parent.addChildToFront ( newVar ) ;^825^^^^^815^843^parent.addChildToFront ( newVar ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^varNode.addChildToBack ( nameNode ) ;parent.addChildToFront ( newVar ) ;^825^^^^^815^843^parent.addChildToFront ( newVar ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^parent.addChildAfter ( newVar, addAfter ) ;parent.addChildToFront ( newVar ) ;^825^^^^^815^843^parent.addChildToFront ( newVar ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P3_Replace_Literal]^if  ( p.refs.get ( numStubs ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^835^836^^^^815^843^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P8_Replace_Mix]^if  ( p.refs.get ( 2 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^835^836^^^^815^843^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P9_Replace_Statement]^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^835^836^^^^815^843^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P15_Unwrap_Block]^nameNode.putBooleanProp(Node.IS_CONSTANT_NAME, true);^835^836^837^838^^815^843^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P16_Remove_Block]^^835^836^837^838^^815^843^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P13_Insert_Block]^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^835^^^^^815^843^[Delete]^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P13_Insert_Block]^if  ( getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^835^^^^^815^843^[Delete]^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P13_Insert_Block]^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     refNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^835^^^^^815^843^[Delete]^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P3_Replace_Literal]^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, false ) ;^837^^^^^835^838^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^nameNode.replaceChild ( Node.IS_CONSTANT_NAME, true ) ;^837^^^^^835^838^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^nameNode .getBooleanProp (  )  ;^837^^^^^835^838^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P14_Delete_Statement]^^837^^^^^835^838^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P12_Insert_Condition]^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^837^^^^^835^838^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P12_Insert_Condition]^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^837^^^^^835^838^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^addAfter = parent;^828^^^^^815^843^addAfter = newVar;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^nameToAddAfter = newVar;addAfter = newVar;^828^^^^^815^843^addAfter = newVar;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^Node newVar = new Node ( Token.VAR, parent ) ;^823^^^^^815^843^Node newVar = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^Node newVar = new Node ( Token.VAR ) ;^823^^^^^815^843^Node newVar = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^Node newVar = new Node ( Token. nameNode ) ;^823^^^^^815^843^Node newVar = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P1_Replace_Type]^char propAlias = appendPropForAlias ( alias, p.name ) ;^821^^^^^815^843^String propAlias = appendPropForAlias ( alias, p.name ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^String propAlias = appendPropForAlias (  p.name ) ;^821^^^^^815^843^String propAlias = appendPropForAlias ( alias, p.name ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^String propAlias = appendPropForAlias ( alias.name ) ;^821^^^^^815^843^String propAlias = appendPropForAlias ( alias, p.name ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^String propAlias = appendPropForAlias ( alias ) ;^821^^^^^815^843^String propAlias = appendPropForAlias ( alias, p.name ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^String propAlias = flattenReferencesTo ( alias, p.name ) ;^821^^^^^815^843^String propAlias = appendPropForAlias ( alias, p.name ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^Node nameNode = Node.newString ( Token.NAME, alias ) ;^822^^^^^815^843^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^Node nameNode = Node.putBooleanProp ( Token.NAME, propAlias ) ;^822^^^^^815^843^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^Node nameNode = Node .getString (  )  ;^822^^^^^815^843^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR ) ;Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^822^^^^^815^843^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR, nameNode ) ;Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^822^^^^^815^843^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^Node stubVar = new Node ( Token.VAR, nameNode.cloneTree (  )  ) ;Node newVar = new Node ( Token.VAR, nameNode ) ;^823^^^^^815^843^Node newVar = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR ) ;Node newVar = new Node ( Token.VAR, nameNode ) ;^823^^^^^815^843^Node newVar = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR, nameNode ) ;Node newVar = new Node ( Token.VAR, nameNode ) ;^823^^^^^815^843^Node newVar = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P14_Delete_Statement]^^821^822^^^^815^843^String propAlias = appendPropForAlias ( alias, p.name ) ; Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P14_Delete_Statement]^^822^823^^^^815^843^Node nameNode = Node.newString ( Token.NAME, propAlias ) ; Node newVar = new Node ( Token.VAR, nameNode ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^refNode = Node.newString ( Token.NAME, propAlias ) ;Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^822^^^^^815^843^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P8_Replace_Mix]^parent.addChildAfter ( nameNode ) ;^825^^^^^815^843^parent.addChildToFront ( newVar ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^parent.addChildAfter ( parent, addAfter ) ;^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^parent.addChildAfter ( newVar, parent ) ;^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^parent.addChildAfter (  addAfter ) ;^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^parent.addChildAfter ( newVar ) ;^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P8_Replace_Mix]^parent.addChildAfter ( newVar, newVar ) ;^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P14_Delete_Statement]^^827^828^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ; addAfter = newVar;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^varParent.addChildAfter ( newVar, nameToAddAfter ) ;parent.addChildAfter ( newVar, addAfter ) ;^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^varParent.addChildBefore ( newVar, varNode ) ;parent.addChildAfter ( newVar, addAfter ) ;^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^currentParent.addChildBefore ( stubVar, current ) ;parent.addChildAfter ( newVar, addAfter ) ;^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P11_Insert_Donor_Statement]^parent.addChildToFront ( newVar ) ;parent.addChildAfter ( newVar, addAfter ) ;^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^compiler.report (  ) ;^831^^^^^815^843^compiler.reportCodeChange (  ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P14_Delete_Statement]^^831^^^^^815^843^compiler.reportCodeChange (  ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P8_Replace_Mix]^if  ( p.refs.get ( 0 ) .node.getLastChild (  )  .getType (  )   )  {^835^836^^^^815^843^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P13_Insert_Block]^if  ( get ( 0 ) getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {     nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^835^^^^^815^843^[Delete]^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^if  ( p.refs.get ( 0 ) .node .getFirstChild (  )  .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^835^836^^^^815^843^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^if  ( p.refs .get ( numStubs )  .node^835^836^^^^815^843^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P3_Replace_Literal]^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, false ) ;^837^^^^^815^843^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^nameNode.replaceChild ( Node.IS_CONSTANT_NAME, true ) ;^837^^^^^815^843^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^nameNode .getBooleanProp (  )  ;^837^^^^^815^843^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P14_Delete_Statement]^^837^^^^^815^843^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P12_Insert_Condition]^if  ( key.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^837^^^^^815^843^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P12_Insert_Condition]^if  ( ref.node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^837^^^^^815^843^nameNode.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^if  ( parent == null )  {^824^^^^^815^843^if  ( addAfter == null )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P8_Replace_Mix]^if  ( parent == false )  {^824^^^^^815^843^if  ( addAfter == null )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^parent.addChildAfter ( newVar, newVar ) ;^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P8_Replace_Mix]^parent.addChildAfter ( parent, addAfter ) ;^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P8_Replace_Mix]^if  ( p.refs.get ( 3 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^835^836^^^^815^843^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P8_Replace_Mix]^addAfter =  null;^828^^^^^815^843^addAfter = newVar;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P8_Replace_Mix]^Node nameNode = Node.putBooleanProp ( Token.NAME, alias ) ;^822^^^^^815^843^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P8_Replace_Mix]^if  ( n.needsToBeStubbed (  )  )  {^820^^^^^815^843^if  ( p.needsToBeStubbed (  )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^parent .addChildBefore ( nameNode , parent )  ;^825^^^^^815^843^parent.addChildToFront ( newVar ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^parent.addChildAfter ( nameNode, addAfter ) ;^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P5_Replace_Variable]^parent.addChildAfter ( addAfter, newVar ) ;^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^parent .replaceChildAfter ( nameNode , parent )  ;^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P3_Replace_Literal]^if  ( p.refs.get (  ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^835^836^^^^815^843^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P8_Replace_Mix]^if  ( p.refs.get ( 0 - 4 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^835^836^^^^815^843^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P14_Delete_Statement]^^821^^^^^815^843^String propAlias = appendPropForAlias ( alias, p.name ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P14_Delete_Statement]^^822^^^^^815^843^Node nameNode = Node.newString ( Token.NAME, propAlias ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^parent .replaceChildAfter ( newVar , newVar )  ;^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P3_Replace_Literal]^if  ( p.refs.get ( -1 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^835^836^^^^815^843^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P8_Replace_Mix]^if  ( addAfter == true )  {^824^^^^^815^843^if  ( addAfter == null )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^parent .replaceChildAfter ( addAfter , addAfter )  ;^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P14_Delete_Statement]^^827^^^^^824^829^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P7_Replace_Invocation]^parent .addChildBefore ( parent , addAfter )  ;^825^^^^^815^843^parent.addChildToFront ( newVar ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P8_Replace_Mix]^if  ( p.refs.get ( 0 >> 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^835^836^^^^815^843^if  ( p.refs.get ( 0 ) .node.getLastChild (  ) .getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P14_Delete_Statement]^^827^^^^^815^843^parent.addChildAfter ( newVar, addAfter ) ;^[CLASS] CollapseProperties 1  [METHOD] addStubsForUndeclaredProperties [RETURN_TYPE] int   Name n String alias Node parent Node addAfter [VARIABLES] AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  
[P2_Replace_Operator]^if  ( prop.indexOf ( '$' )  == -1 )  {^846^^^^^845^853^if  ( prop.indexOf ( '$' )  != -1 )  {^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P3_Replace_Literal]^if  ( prop.indexOf ( '$' )  != -8 )  {^846^^^^^845^853^if  ( prop.indexOf ( '$' )  != -1 )  {^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P5_Replace_Variable]^if  ( root.indexOf ( '$' )  != -1 )  {^846^^^^^845^853^if  ( prop.indexOf ( '$' )  != -1 )  {^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P7_Replace_Invocation]^if  ( prop.replaceAll ( '$' )  != -1 )  {^846^^^^^845^853^if  ( prop.indexOf ( '$' )  != -1 )  {^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P7_Replace_Invocation]^if  ( prop .valueOf ( 2 )   != -1 )  {^846^^^^^845^853^if  ( prop.indexOf ( '$' )  != -1 )  {^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P15_Unwrap_Block]^prop = prop.replaceAll("\\$", "\\$0");^846^847^^^850^845^853^if  ( prop.indexOf ( '$' )  != -1 )  {  prop = prop.replaceAll ( "\\$", "\\$0" ) ; }^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P16_Remove_Block]^^846^847^^^850^845^853^if  ( prop.indexOf ( '$' )  != -1 )  {  prop = prop.replaceAll ( "\\$", "\\$0" ) ; }^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P3_Replace_Literal]^prop = prop.replaceAll ( "\", "\\$0" ) ;^850^^^^^845^853^prop = prop.replaceAll ( "\\$", "\\$0" ) ;^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P3_Replace_Literal]^prop = prop.replaceAll ( "\\$", "\\$0\" ) ;^850^^^^^845^853^prop = prop.replaceAll ( "\\$", "\\$0" ) ;^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P8_Replace_Mix]^prop =  null.replaceAll ( "\\$", "\\$0" ) ;^850^^^^^845^853^prop = prop.replaceAll ( "\\$", "\\$0" ) ;^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P3_Replace_Literal]^prop = prop.replaceAll ( "\$", "\\$0" ) ;^850^^^^^845^853^prop = prop.replaceAll ( "\\$", "\\$0" ) ;^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P3_Replace_Literal]^prop = prop.replaceAll ( "\\$", "\$\$0" ) ;^850^^^^^845^853^prop = prop.replaceAll ( "\\$", "\\$0" ) ;^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P5_Replace_Variable]^prop = root.replaceAll ( "\\$", "\\$0" ) ;^850^^^^^845^853^prop = prop.replaceAll ( "\\$", "\\$0" ) ;^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P14_Delete_Statement]^^850^^^^^845^853^prop = prop.replaceAll ( "\\$", "\\$0" ) ;^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P7_Replace_Invocation]^prop = prop .valueOf ( 3 )  ;^850^^^^^845^853^prop = prop.replaceAll ( "\\$", "\\$0" ) ;^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P2_Replace_Operator]^return root  >  '$' + prop;^852^^^^^845^853^return root + '$' + prop;^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P5_Replace_Variable]^return prop + '$' + root;^852^^^^^845^853^return root + '$' + prop;^[CLASS] CollapseProperties 1  [METHOD] appendPropForAlias [RETURN_TYPE] String   String root String prop [VARIABLES] AbstractCompiler  compiler  List  globalNames  refs  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjLit  String  prop  root  Map  nameMap  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  
[P2_Replace_Operator]^if  ( n.getType (  )  < Token.THIS )  {^642^^^^^641^647^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[P15_Unwrap_Block]^compiler.report(com.google.javascript.jscomp.JSError.make(name.declaration.sourceName, n, com.google.javascript.jscomp.CollapseProperties.UNSAFE_THIS, name.fullName()));^642^643^644^645^646^641^647^if  ( n.getType (  )  == Token.THIS )  { compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ; }^[CLASS] 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[P16_Remove_Block]^^642^643^644^645^646^641^647^if  ( n.getType (  )  == Token.THIS )  { compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ; }^[CLASS] 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[P5_Replace_Variable]^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS.fullName (  )  )  ) ;^643^644^645^^^641^647^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[P5_Replace_Variable]^compiler.report ( JSError.make ( name.declaration.sourceName,  UNSAFE_THIS, name.fullName (  )  )  ) ;^643^644^645^^^641^647^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[P5_Replace_Variable]^compiler.report ( JSError.make ( name.declaration. n, UNSAFE_THIS, name.fullName (  )  )  ) ;^643^644^645^^^641^647^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[P5_Replace_Variable]^compiler.report ( JSError.make ( name.declaration.sourceName, n,  name.fullName (  )  )  ) ;^643^644^645^^^641^647^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[P14_Delete_Statement]^^643^644^645^^^641^647^compiler.report ( JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[P13_Insert_Block]^if  (  ( n.getType (  )  )  ==  ( THIS )  )  {     compiler.report ( make ( sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ; }^643^^^^^641^647^[Delete]^[CLASS] 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[P5_Replace_Variable]^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS.fullName (  )  )  ) ;^644^645^^^^641^647^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[P5_Replace_Variable]^JSError.make ( name.declaration.sourceName,  UNSAFE_THIS, name.fullName (  )  )  ) ;^644^645^^^^641^647^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[P5_Replace_Variable]^JSError.make ( name.declaration. n, UNSAFE_THIS, name.fullName (  )  )  ) ;^644^645^^^^641^647^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[P5_Replace_Variable]^JSError.make ( name.declaration.sourceName, n,  name.fullName (  )  )  ) ;^644^645^^^^641^647^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[P14_Delete_Statement]^^644^645^^^^641^647^JSError.make ( name.declaration.sourceName, n, UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[P14_Delete_Statement]^^645^^^^^641^647^UNSAFE_THIS, name.fullName (  )  )  ) ;^[CLASS] 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.THIS )  {^642^^^^^641^647^if  ( n.getType (  )  == Token.THIS )  {^[CLASS] 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
