[P8_Replace_Mix]^private  AbstractCompiler compiler;^68^^^^^63^73^private final AbstractCompiler compiler;^[CLASS] DevirtualizePrototypeMethods   [VARIABLES] 
[P8_Replace_Mix]^this.compiler =  null;^71^^^^^70^72^this.compiler = compiler;^[CLASS] DevirtualizePrototypeMethods  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  
[P5_Replace_Variable]^defFinder.process (  root ) ;^77^^^^^75^82^defFinder.process ( externs, root ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  boolean  DefinitionSite  defSite  Node  externs  root  
[P5_Replace_Variable]^defFinder.process ( externs ) ;^77^^^^^75^82^defFinder.process ( externs, root ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  boolean  DefinitionSite  defSite  Node  externs  root  
[P5_Replace_Variable]^defFinder.process ( root, externs ) ;^77^^^^^75^82^defFinder.process ( externs, root ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  boolean  DefinitionSite  defSite  Node  externs  root  
[P8_Replace_Mix]^defFinder.process ( externs, externs ) ;^77^^^^^75^82^defFinder.process ( externs, root ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  boolean  DefinitionSite  defSite  Node  externs  root  
[P14_Delete_Statement]^^77^^^^^75^82^defFinder.process ( externs, root ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  boolean  DefinitionSite  defSite  Node  externs  root  
[P7_Replace_Invocation]^for  ( DefinitionSite defSite : defFinder.getDefinitionsReferencedAt (  )  )  {^79^^^^^75^82^for  ( DefinitionSite defSite : defFinder.getDefinitionSites (  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  boolean  DefinitionSite  defSite  Node  externs  root  
[P7_Replace_Invocation]^for  ( DefinitionSite defSite : defFinder .getDefinitionsReferencedAt ( root )   )  {^79^^^^^75^82^for  ( DefinitionSite defSite : defFinder.getDefinitionSites (  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  boolean  DefinitionSite  defSite  Node  externs  root  
[P14_Delete_Statement]^^79^80^81^^^75^82^for  ( DefinitionSite defSite : defFinder.getDefinitionSites (  )  )  { rewriteDefinitionIfEligible ( defSite, defFinder ) ; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  boolean  DefinitionSite  defSite  Node  externs  root  
[P5_Replace_Variable]^rewriteDefinitionIfEligible (  defFinder ) ;^80^^^^^75^82^rewriteDefinitionIfEligible ( defSite, defFinder ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  boolean  DefinitionSite  defSite  Node  externs  root  
[P5_Replace_Variable]^rewriteDefinitionIfEligible ( defSite ) ;^80^^^^^75^82^rewriteDefinitionIfEligible ( defSite, defFinder ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  boolean  DefinitionSite  defSite  Node  externs  root  
[P5_Replace_Variable]^rewriteDefinitionIfEligible ( defFinder, defSite ) ;^80^^^^^75^82^rewriteDefinitionIfEligible ( defSite, defFinder ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  boolean  DefinitionSite  defSite  Node  externs  root  
[P7_Replace_Invocation]^isEligibleDefinition ( defSite, defFinder ) ;^80^^^^^75^82^rewriteDefinitionIfEligible ( defSite, defFinder ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  boolean  DefinitionSite  defSite  Node  externs  root  
[P14_Delete_Statement]^^80^^^^^75^82^rewriteDefinitionIfEligible ( defSite, defFinder ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  boolean  DefinitionSite  defSite  Node  externs  root  
[P11_Insert_Donor_Statement]^rewriteDefinition ( node, newMethodName ) ;rewriteDefinitionIfEligible ( defSite, defFinder ) ;^80^^^^^75^82^rewriteDefinitionIfEligible ( defSite, defFinder ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  boolean  DefinitionSite  defSite  Node  externs  root  
[P11_Insert_Donor_Statement]^Node node = defSite.node;Node node = site.node;^88^^^^^87^91^Node node = site.node;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isCall [RETURN_TYPE] boolean   UseSite site [VARIABLES] AbstractCompiler  compiler  UseSite  site  boolean  Node  node  parent  
[P11_Insert_Donor_Statement]^JSModule callModule = site.module;Node node = site.node;^88^^^^^87^91^Node node = site.node;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isCall [RETURN_TYPE] boolean   UseSite site [VARIABLES] AbstractCompiler  compiler  UseSite  site  boolean  Node  node  parent  
[P11_Insert_Donor_Statement]^Node nameNode = site.node;Node node = site.node;^88^^^^^87^91^Node node = site.node;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isCall [RETURN_TYPE] boolean   UseSite site [VARIABLES] AbstractCompiler  compiler  UseSite  site  boolean  Node  node  parent  
[P7_Replace_Invocation]^Node parent = node.newString (  ) ;^89^^^^^87^91^Node parent = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isCall [RETURN_TYPE] boolean   UseSite site [VARIABLES] AbstractCompiler  compiler  UseSite  site  boolean  Node  node  parent  
[P5_Replace_Variable]^Node parent = parent.getParent (  ) ;^89^^^^^87^91^Node parent = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isCall [RETURN_TYPE] boolean   UseSite site [VARIABLES] AbstractCompiler  compiler  UseSite  site  boolean  Node  node  parent  
[P7_Replace_Invocation]^Node parent = node .getLastChild (  )  ;^89^^^^^87^91^Node parent = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isCall [RETURN_TYPE] boolean   UseSite site [VARIABLES] AbstractCompiler  compiler  UseSite  site  boolean  Node  node  parent  
[P14_Delete_Statement]^^89^^^^^87^91^Node parent = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isCall [RETURN_TYPE] boolean   UseSite site [VARIABLES] AbstractCompiler  compiler  UseSite  site  boolean  Node  node  parent  
[P2_Replace_Operator]^return  ( parent.getFirstChild (  )  == node )  || NodeUtil.isCall ( parent ) ;^90^^^^^87^91^return  ( parent.getFirstChild (  )  == node )  && NodeUtil.isCall ( parent ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isCall [RETURN_TYPE] boolean   UseSite site [VARIABLES] AbstractCompiler  compiler  UseSite  site  boolean  Node  node  parent  
[P2_Replace_Operator]^return  ( parent.getFirstChild (  )  >= node )  && NodeUtil.isCall ( parent ) ;^90^^^^^87^91^return  ( parent.getFirstChild (  )  == node )  && NodeUtil.isCall ( parent ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isCall [RETURN_TYPE] boolean   UseSite site [VARIABLES] AbstractCompiler  compiler  UseSite  site  boolean  Node  node  parent  
[P5_Replace_Variable]^return  ( node.getFirstChild (  )  == parent )  && NodeUtil.isCall ( parent ) ;^90^^^^^87^91^return  ( parent.getFirstChild (  )  == node )  && NodeUtil.isCall ( parent ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isCall [RETURN_TYPE] boolean   UseSite site [VARIABLES] AbstractCompiler  compiler  UseSite  site  boolean  Node  node  parent  
[P7_Replace_Invocation]^return  ( parent.newString (  )  == node )  && NodeUtil.isCall ( parent ) ;^90^^^^^87^91^return  ( parent.getFirstChild (  )  == node )  && NodeUtil.isCall ( parent ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isCall [RETURN_TYPE] boolean   UseSite site [VARIABLES] AbstractCompiler  compiler  UseSite  site  boolean  Node  node  parent  
[P7_Replace_Invocation]^return  ( parent .getLastChild (  )   == node )  && NodeUtil.isCall ( parent ) ;^90^^^^^87^91^return  ( parent.getFirstChild (  )  == node )  && NodeUtil.isCall ( parent ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isCall [RETURN_TYPE] boolean   UseSite site [VARIABLES] AbstractCompiler  compiler  UseSite  site  boolean  Node  node  parent  
[P7_Replace_Invocation]^return  ( parent.getFirstChild (  )  == node )  && NodeUtil.isThis ( parent ) ;^90^^^^^87^91^return  ( parent.getFirstChild (  )  == node )  && NodeUtil.isCall ( parent ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isCall [RETURN_TYPE] boolean   UseSite site [VARIABLES] AbstractCompiler  compiler  UseSite  site  boolean  Node  node  parent  
[P8_Replace_Mix]^return false ;^90^^^^^87^91^return  ( parent.getFirstChild (  )  == node )  && NodeUtil.isCall ( parent ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isCall [RETURN_TYPE] boolean   UseSite site [VARIABLES] AbstractCompiler  compiler  UseSite  site  boolean  Node  node  parent  
[P5_Replace_Variable]^return  ( node.getFirstChild (  )  == node )  && NodeUtil.isCall ( parent ) ;^90^^^^^87^91^return  ( parent.getFirstChild (  )  == node )  && NodeUtil.isCall ( parent ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isCall [RETURN_TYPE] boolean   UseSite site [VARIABLES] AbstractCompiler  compiler  UseSite  site  boolean  Node  node  parent  
[P14_Delete_Statement]^^90^^^^^87^91^return  ( parent.getFirstChild (  )  == node )  && NodeUtil.isCall ( parent ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isCall [RETURN_TYPE] boolean   UseSite site [VARIABLES] AbstractCompiler  compiler  UseSite  site  boolean  Node  node  parent  
[P5_Replace_Variable]^Node parent = nameNode.getParent (  ) ;^97^^^^^96^122^Node parent = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^Node parent = node.newString (  ) ;^97^^^^^96^122^Node parent = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P8_Replace_Mix]^Node parent = nameNode.newString (  ) ;^97^^^^^96^122^Node parent = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^Node parent = node .getLastChild (  )  ;^97^^^^^96^122^Node parent = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P8_Replace_Mix]^Node parent = parent.newString (  ) ;^97^^^^^96^122^Node parent = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P14_Delete_Statement]^^97^^^^^96^122^Node parent = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P2_Replace_Operator]^if  ( parent != null )  {^98^^^^^96^122^if  ( parent == null )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P5_Replace_Variable]^if  ( nameNode == null )  {^98^^^^^96^122^if  ( parent == null )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P8_Replace_Mix]^if  ( parent == this )  {^98^^^^^96^122^if  ( parent == null )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P9_Replace_Statement]^if  ( type != null )  {^98^^^^^96^122^if  ( parent == null )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P15_Unwrap_Block]^return false;^98^99^100^^^96^122^if  ( parent == null )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P16_Remove_Block]^^98^99^100^^^96^122^if  ( parent == null )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P13_Insert_Block]^if  ( useSites.isEmpty (  )  )  {     return false; }^98^^^^^96^122^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P3_Replace_Literal]^return true;^99^^^^^96^122^return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P5_Replace_Variable]^Node gramp = node.getParent (  ) ;^102^^^^^96^122^Node gramp = parent.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^Node gramp = parent.newString (  ) ;^102^^^^^96^122^Node gramp = parent.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P8_Replace_Mix]^Node gramp = node.newString (  ) ;^102^^^^^96^122^Node gramp = parent.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^Node gramp = parent .getLastChild (  )  ;^102^^^^^96^122^Node gramp = parent.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P8_Replace_Mix]^Node gramp = nameNode.getParent (  ) ;^102^^^^^96^122^Node gramp = parent.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P14_Delete_Statement]^^102^^^^^96^122^Node gramp = parent.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P2_Replace_Operator]^if  (  ( gramp == null )  && ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^103^104^105^^^96^122^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P2_Replace_Operator]^if  (  ( gramp != null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^103^104^105^^^96^122^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P2_Replace_Operator]^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  == node )  || !NodeUtil.isExprAssign ( gramp )  )  {^103^104^105^^^96^122^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P5_Replace_Variable]^if  (  ( parent == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^103^104^105^^^96^122^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P5_Replace_Variable]^if  (  ( gramp == null )  || ( node.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^103^104^105^^^96^122^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P5_Replace_Variable]^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != parent )  || !NodeUtil.isExprAssign ( gramp )  )  {^103^104^105^^^96^122^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P5_Replace_Variable]^if  (  ( node == null )  || ( parent.getFirstChild (  )  != gramp )  || !NodeUtil.isExprAssign ( gramp )  )  {^103^104^105^^^96^122^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P5_Replace_Variable]^if  (  ( gramp == null )  || ( node.getFirstChild (  )  != parent )  || !NodeUtil.isExprAssign ( gramp )  )  {^103^104^105^^^96^122^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P6_Replace_Expression]^if  (  ( gramp == null )  ) {^103^104^105^^^96^122^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P6_Replace_Expression]^if  (  ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^103^104^105^^^96^122^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P6_Replace_Expression]^if  ( (gramp == null || parent.getFirstChild() != node) )  {^103^104^105^^^96^122^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P6_Replace_Expression]^if  ( gramp == null )  {^103^104^105^^^96^122^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P6_Replace_Expression]^if  ( parent.getFirstChild (  )  != node )  {^103^104^105^^^96^122^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^if  (  ( gramp == null )  || ( parent.newString (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^103^104^105^^^96^122^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isFunction ( gramp )  )  {^103^104^105^^^96^122^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P15_Unwrap_Block]^return false;^103^104^105^106^107^96^122^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P16_Remove_Block]^^103^104^105^106^107^96^122^if  (  ( gramp == null )  || ( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P13_Insert_Block]^if  (  ( functionNode == null )  ||  ( ! ( isFunction ( functionNode )  )  )  )  {     return false; }^103^^^^^96^122^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P13_Insert_Block]^if  (  ( lValue == null )  ||  ( ! ( isGetProp ( lValue )  )  )  )  {     return false; }^103^^^^^96^122^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P13_Insert_Block]^if  (  (  ( rValue == null )  ||  ( ! ( isFunction ( rValue )  )  )  )  ||  ( isVarArgsFunction ( rValue )  )  )  {     return false; }^103^^^^^96^122^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P3_Replace_Literal]^return true;^106^^^^^103^107^return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P3_Replace_Literal]^return true;^106^^^^^96^122^return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^( parent.newString (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^104^105^^^^96^122^( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P8_Replace_Mix]^( node.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^104^105^^^^96^122^( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P14_Delete_Statement]^^104^105^106^^^96^122^( parent.getFirstChild (  )  != node )  || !NodeUtil.isExprAssign ( gramp )  )  { return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P5_Replace_Variable]^!NodeUtil.isExprAssign ( node )  )  {^105^^^^^96^122^!NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^!NodeUtil.isFunction ( gramp )  )  {^105^^^^^96^122^!NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^!NodeUtil .isVarArgsFunction ( functionNode )   )  {^105^^^^^96^122^!NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P8_Replace_Mix]^!NodeUtil.isExprAssign ( parent )  )  {^105^^^^^96^122^!NodeUtil.isExprAssign ( gramp )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P14_Delete_Statement]^^105^106^^^^96^122^!NodeUtil.isExprAssign ( gramp )  )  { return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P5_Replace_Variable]^Node functionNode = node.getLastChild (  ) ;^109^^^^^96^122^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^Node functionNode = parent.newString (  ) ;^109^^^^^96^122^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^Node functionNode = parent .getFirstChild (  )  ;^109^^^^^96^122^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P11_Insert_Donor_Statement]^Node objectNode = node.getFirstChild (  ) ;Node functionNode = parent.getLastChild (  ) ;^109^^^^^96^122^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P11_Insert_Donor_Statement]^Node expr = parent.getParent (  ) ;Node functionNode = parent.getLastChild (  ) ;^109^^^^^96^122^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P11_Insert_Donor_Statement]^Node body = functionNode.getLastChild (  ) ;Node functionNode = parent.getLastChild (  ) ;^109^^^^^96^122^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P11_Insert_Donor_Statement]^Node gramp = parent.getParent (  ) ;Node functionNode = parent.getLastChild (  ) ;^109^^^^^96^122^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P11_Insert_Donor_Statement]^Node nameNode = node.getFirstChild (  ) ;Node functionNode = parent.getLastChild (  ) ;^109^^^^^96^122^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P8_Replace_Mix]^Node functionNode = node.newString (  ) ;^109^^^^^96^122^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P14_Delete_Statement]^^109^^^^^96^122^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P2_Replace_Operator]^if  (  ( functionNode == null )  && !NodeUtil.isFunction ( functionNode )  )  {^110^^^^^96^122^if  (  ( functionNode == null )  || !NodeUtil.isFunction ( functionNode )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P2_Replace_Operator]^if  (  ( functionNode != null )  || !NodeUtil.isFunction ( functionNode )  )  {^110^^^^^96^122^if  (  ( functionNode == null )  || !NodeUtil.isFunction ( functionNode )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P5_Replace_Variable]^if  (  ( parent == null )  || !NodeUtil.isFunction ( functionNode )  )  {^110^^^^^96^122^if  (  ( functionNode == null )  || !NodeUtil.isFunction ( functionNode )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P6_Replace_Expression]^if  (  ( functionNode == null )  ) {^110^^^^^96^122^if  (  ( functionNode == null )  || !NodeUtil.isFunction ( functionNode )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P6_Replace_Expression]^if  (  !NodeUtil.isFunction ( functionNode )  )  {^110^^^^^96^122^if  (  ( functionNode == null )  || !NodeUtil.isFunction ( functionNode )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P6_Replace_Expression]^if  ( functionNode == null )  {^110^^^^^96^122^if  (  ( functionNode == null )  || !NodeUtil.isFunction ( functionNode )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^if  (  ( functionNode == null )  || !NodeUtil.isVarArgsFunction ( functionNode )  )  {^110^^^^^96^122^if  (  ( functionNode == null )  || !NodeUtil.isFunction ( functionNode )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P8_Replace_Mix]^if  (  ( functionNode == false )  ) {^110^^^^^96^122^if  (  ( functionNode == null )  || !NodeUtil.isFunction ( functionNode )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P15_Unwrap_Block]^return false;^110^111^112^^^96^122^if  (  ( functionNode == null )  || !NodeUtil.isFunction ( functionNode )  )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P16_Remove_Block]^^110^111^112^^^96^122^if  (  ( functionNode == null )  || !NodeUtil.isFunction ( functionNode )  )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P13_Insert_Block]^if  ( ! ( isGetProp ( node )  )  )  {     return false; }^110^^^^^96^122^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P13_Insert_Block]^if  ( isFunction ( node )  )  {     return ; }^110^^^^^96^122^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P13_Insert_Block]^if  (  (  ( gramp == null )  ||  (  ( parent.getFirstChild (  )  )  != node )  )  ||  ( ! ( isExprAssign ( gramp )  )  )  )  {     return false; }^110^^^^^96^122^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P13_Insert_Block]^if  (  ( lValue == null )  ||  ( ! ( isGetProp ( lValue )  )  )  )  {     return false; }^110^^^^^96^122^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P13_Insert_Block]^if  (  (  ( rValue == null )  ||  ( ! ( isFunction ( rValue )  )  )  )  ||  ( isVarArgsFunction ( rValue )  )  )  {     return false; }^110^^^^^96^122^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P13_Insert_Block]^if  ( isControlStructure ( ancestor )  )  {     return ; }^110^^^^^96^122^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P3_Replace_Literal]^return true;^111^^^^^96^122^return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^if  (  ( functionNode == null )  || !NodeUtil .isVarArgsFunction ( node )   )  {^110^^^^^96^122^if  (  ( functionNode == null )  || !NodeUtil.isFunction ( functionNode )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P13_Insert_Block]^if  (  ( functionNode == null )  ||  ( ! ( isFunction ( functionNode )  )  )  )  {     return false; }^110^^^^^96^122^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P5_Replace_Variable]^if  ( !NodeUtil.isGetProp ( nameNode )  )  {^114^^^^^96^122^if  ( !NodeUtil.isGetProp ( node )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^if  ( !NodeUtil.isThis ( node )  )  {^114^^^^^96^122^if  ( !NodeUtil.isGetProp ( node )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^if  ( !NodeUtil .isExprAssign ( gramp )   )  {^114^^^^^96^122^if  ( !NodeUtil.isGetProp ( node )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P8_Replace_Mix]^if  ( !NodeUtil.isGetProp ( parent )  )  {^114^^^^^96^122^if  ( !NodeUtil.isGetProp ( node )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P9_Replace_Statement]^if  ( NodeUtil.isFunction ( node )  )  {^114^^^^^96^122^if  ( !NodeUtil.isGetProp ( node )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P9_Replace_Statement]^if  ( NodeUtil.isThis ( child )  )  {^114^^^^^96^122^if  ( !NodeUtil.isGetProp ( node )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P15_Unwrap_Block]^return false;^114^115^116^^^96^122^if  ( !NodeUtil.isGetProp ( node )  )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P16_Remove_Block]^^114^115^116^^^96^122^if  ( !NodeUtil.isGetProp ( node )  )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P13_Insert_Block]^if  ( isFunction ( node )  )  {     return ; }^114^^^^^96^122^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P13_Insert_Block]^if  (  ( functionNode == null )  ||  ( ! ( isFunction ( functionNode )  )  )  )  {     return false; }^114^^^^^96^122^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P13_Insert_Block]^if  ( ! ( isCall ( site )  )  )  {     return false; }^114^^^^^96^122^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P13_Insert_Block]^if  (  ( lValue == null )  ||  ( ! ( isGetProp ( lValue )  )  )  )  {     return false; }^114^^^^^96^122^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P13_Insert_Block]^if  ( isControlStructure ( ancestor )  )  {     return ; }^114^^^^^96^122^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P13_Insert_Block]^if  ( ! ( isPrototypeMethodDefinition ( node )  )  )  {     return ; }^114^^^^^96^122^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P3_Replace_Literal]^return true;^115^^^^^96^122^return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P13_Insert_Block]^if  ( ! ( isGetProp ( node )  )  )  {     return false; }^114^^^^^96^122^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P5_Replace_Variable]^Node nameNode = parent.getFirstChild (  ) ;^118^^^^^96^122^Node nameNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^Node nameNode = node.newString (  ) ;^118^^^^^96^122^Node nameNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^Node nameNode = node .getLastChild (  )  ;^118^^^^^96^122^Node nameNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P8_Replace_Mix]^Node nameNode = parent.newString (  ) ;^118^^^^^96^122^Node nameNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P11_Insert_Donor_Statement]^Node objectNode = node.getFirstChild (  ) ;Node nameNode = node.getFirstChild (  ) ;^118^^^^^96^122^Node nameNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P11_Insert_Donor_Statement]^Node parent = node.getParent (  ) ;Node nameNode = node.getFirstChild (  ) ;^118^^^^^96^122^Node nameNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P11_Insert_Donor_Statement]^Node body = functionNode.getLastChild (  ) ;Node nameNode = node.getFirstChild (  ) ;^118^^^^^96^122^Node nameNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P11_Insert_Donor_Statement]^Node functionNode = parent.getLastChild (  ) ;Node nameNode = node.getFirstChild (  ) ;^118^^^^^96^122^Node nameNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P11_Insert_Donor_Statement]^Node block = expr.getParent (  ) ;Node nameNode = node.getFirstChild (  ) ;^118^^^^^96^122^Node nameNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P11_Insert_Donor_Statement]^Node argList = functionNode.getFirstChild (  ) .getNext (  ) ;Node nameNode = node.getFirstChild (  ) ;^118^^^^^96^122^Node nameNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P5_Replace_Variable]^Node nameNode = nameNode.getFirstChild (  ) ;^118^^^^^96^122^Node nameNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P14_Delete_Statement]^^118^^^^^96^122^Node nameNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P2_Replace_Operator]^return NodeUtil.isGetProp ( nameNode )  || nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^119^120^^^^96^122^return NodeUtil.isGetProp ( nameNode )  && nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P3_Replace_Literal]^return NodeUtil.isGetProp ( nameNode )  && nameNode.getLastChild (  ) .getString (  ) .equals ( "ototy" ) ;^119^120^^^^96^122^return NodeUtil.isGetProp ( nameNode )  && nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^return NodeUtil.isThis ( nameNode )  && nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^119^120^^^^96^122^return NodeUtil.isGetProp ( nameNode )  && nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^return NodeUtil .isExprAssign ( functionNode )   && nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^119^120^^^^96^122^return NodeUtil.isGetProp ( nameNode )  && nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^return NodeUtil.isGetProp ( nameNode )  && nameNode.getLastChild (  ) .getString (  )  .getNext (  )  ;^119^120^^^^96^122^return NodeUtil.isGetProp ( nameNode )  && nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^return NodeUtil.isGetProp ( nameNode )  && nameNode.getLastChild (  ) .equals (  ) .equals ( "prototype" ) ;^119^120^^^^96^122^return NodeUtil.isGetProp ( nameNode )  && nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^return NodeUtil.isGetProp ( nameNode )  && nameNode.newString (  ) .getString (  ) .equals ( "prototype" ) ;^119^120^^^^96^122^return NodeUtil.isGetProp ( nameNode )  && nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P8_Replace_Mix]^return NodeUtil.isGetProp ( nameNode )  && nameNode .getFirstChild (  )  .getString (  ) .equals ( "prototype" ) ;^119^120^^^^96^122^return NodeUtil.isGetProp ( nameNode )  && nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P5_Replace_Variable]^return NodeUtil.isGetProp ( parent )  && nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^119^120^^^^96^122^return NodeUtil.isGetProp ( nameNode )  && nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^return NodeUtil .isExprAssign ( node )   && nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^119^120^^^^96^122^return NodeUtil.isGetProp ( nameNode )  && nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P14_Delete_Statement]^^119^120^^^^96^122^return NodeUtil.isGetProp ( nameNode )  && nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P3_Replace_Literal]^nameNode.getLastChild (  ) .getString (  ) .equals ( "orototype" ) ;^120^^^^^96^122^nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^nameNode.getLastChild (  ) .getString (  )  .getNext (  )  ;^120^^^^^96^122^nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^nameNode.getLastChild (  ) .equals (  ) .equals ( "prototype" ) ;^120^^^^^96^122^nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^nameNode.getLastChild (  )  .getNext (  )  .equals ( "prototype" ) ;^120^^^^^96^122^nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^nameNode.newString (  ) .getString (  ) .equals ( "prototype" ) ;^120^^^^^96^122^nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P14_Delete_Statement]^^120^^^^^96^122^nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P11_Insert_Donor_Statement]^node.getLastChild (  ) .getString (  )  ) ;nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^120^^^^^96^122^nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P11_Insert_Donor_Statement]^return NodeUtil.isGetProp ( nameNode )  && nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^120^^^^^96^122^nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P7_Replace_Invocation]^nameNode .getFirstChild (  )  .getString (  ) .equals ( "prototype" ) ;^120^^^^^96^122^nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isPrototypeMethodDefinition [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Node  functionNode  gramp  nameNode  node  parent  boolean  
[P3_Replace_Literal]^return "i" + orginalMethodName;^128^^^^^127^129^return "JSCompiler_StaticMethods_" + orginalMethodName;^[CLASS] DevirtualizePrototypeMethods  [METHOD] getRewrittenMethodName [RETURN_TYPE] String   String orginalMethodName [VARIABLES] AbstractCompiler  compiler  String  orginalMethodName  boolean  
[P8_Replace_Mix]^return "JSCompiler_StaticMethods_"  ;^128^^^^^127^129^return "JSCompiler_StaticMethods_" + orginalMethodName;^[CLASS] DevirtualizePrototypeMethods  [METHOD] getRewrittenMethodName [RETURN_TYPE] String   String orginalMethodName [VARIABLES] AbstractCompiler  compiler  String  orginalMethodName  boolean  
[P2_Replace_Operator]^if  ( defSite.inExterns && !defSite.inGlobalScope || !isEligibleDefinition ( defFinder, defSite )  )  {^145^146^147^^^130^160^if  ( defSite.inExterns || !defSite.inGlobalScope || !isEligibleDefinition ( defFinder, defSite )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^if  ( defSite.inExterns || !defSite.inGlobalScope || !isEligibleDefinition ( defFinder )  )  {^145^146^147^^^130^160^if  ( defSite.inExterns || !defSite.inGlobalScope || !isEligibleDefinition ( defFinder, defSite )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^if  ( defSite.inExterns || !defSite.inGlobalScope || !isEligibleDefinition (  defSite )  )  {^145^146^147^^^130^160^if  ( defSite.inExterns || !defSite.inGlobalScope || !isEligibleDefinition ( defFinder, defSite )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P6_Replace_Expression]^if  ( defSite.inExterns ) {^145^146^147^^^130^160^if  ( defSite.inExterns || !defSite.inGlobalScope || !isEligibleDefinition ( defFinder, defSite )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P6_Replace_Expression]^if  (  !defSite.inGlobalScope || !isEligibleDefinition ( defFinder, defSite )  )  {^145^146^147^^^130^160^if  ( defSite.inExterns || !defSite.inGlobalScope || !isEligibleDefinition ( defFinder, defSite )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P6_Replace_Expression]^if  ( (defSite.inExterns || !(defSite.inGlobalScope)) )  {^145^146^147^^^130^160^if  ( defSite.inExterns || !defSite.inGlobalScope || !isEligibleDefinition ( defFinder, defSite )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^if  ( defSite.inExterns || !defSite.inGlobalScope || !rewriteDefinitionIfEligible ( defFinder, defSite )  )  {^145^146^147^^^130^160^if  ( defSite.inExterns || !defSite.inGlobalScope || !isEligibleDefinition ( defFinder, defSite )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P15_Unwrap_Block]^return ;^145^146^147^148^149^130^160^if  ( defSite.inExterns || !defSite.inGlobalScope || !isEligibleDefinition ( defFinder, defSite )  )  { return; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P16_Remove_Block]^^145^146^147^148^149^130^160^if  ( defSite.inExterns || !defSite.inGlobalScope || !isEligibleDefinition ( defFinder, defSite )  )  { return; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^!isEligibleDefinition (  defSite )  )  {^147^^^^^132^162^!isEligibleDefinition ( defFinder, defSite )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^!isEligibleDefinition ( defFinder )  )  {^147^^^^^132^162^!isEligibleDefinition ( defFinder, defSite )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^!isEligibleDefinition ( defSite, defFinder )  )  {^147^^^^^132^162^!isEligibleDefinition ( defFinder, defSite )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^!rewriteDefinitionIfEligible ( defFinder, defSite )  )  {^147^^^^^132^162^!isEligibleDefinition ( defFinder, defSite )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P14_Delete_Statement]^^147^148^^^^132^162^!isEligibleDefinition ( defFinder, defSite )  )  { return;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P11_Insert_Donor_Statement]^Node nameNode = site.node;Node node = defSite.node;^151^^^^^136^166^Node node = defSite.node;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P11_Insert_Donor_Statement]^Node node = site.node;Node node = defSite.node;^151^^^^^136^166^Node node = defSite.node;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^if  ( !isPrototypeMethodDefinition ( ancestor )  )  {^155^^^^^140^170^if  ( !isPrototypeMethodDefinition ( node )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^if  ( !fixFunctionType ( node )  )  {^155^^^^^140^170^if  ( !isPrototypeMethodDefinition ( node )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P15_Unwrap_Block]^return ;^155^156^157^^^140^170^if  ( !isPrototypeMethodDefinition ( node )  )  { return; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P16_Remove_Block]^^155^156^157^^^140^170^if  ( !isPrototypeMethodDefinition ( node )  )  { return; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  ( ! ( isGetProp ( node )  )  )  {     return false; }^155^^^^^140^170^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  ( isFunction ( node )  )  {     return ; }^155^^^^^140^170^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  ( ! ( isCall ( site )  )  )  {     return false; }^155^^^^^140^170^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  ( isControlStructure ( ancestor )  )  {     return ; }^155^^^^^140^170^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P8_Replace_Mix]^if  ( !fixFunctionType ( ancestor )  )  {^155^^^^^140^170^if  ( !isPrototypeMethodDefinition ( node )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  ( ! ( isPrototypeMethodDefinition ( node )  )  )  {     return ; }^155^^^^^140^170^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^if  ( NodeUtil.isControlStructure ( node )  )  {^162^^^^^147^177^if  ( NodeUtil.isControlStructure ( ancestor )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^if  ( NodeUtil.isVarArgsFunction ( ancestor )  )  {^162^^^^^147^177^if  ( NodeUtil.isControlStructure ( ancestor )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P15_Unwrap_Block]^return ;^162^163^164^^^147^177^if  ( NodeUtil.isControlStructure ( ancestor )  )  { return; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P16_Remove_Block]^^162^163^164^^^147^177^if  ( NodeUtil.isControlStructure ( ancestor )  )  { return; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  ( ! ( isGetProp ( node )  )  )  {     return false; }^162^^^^^147^177^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  ( isFunction ( node )  )  {     return ; }^162^^^^^147^177^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  (  ( functionNode == null )  ||  ( ! ( isFunction ( functionNode )  )  )  )  {     return false; }^162^^^^^147^177^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  ( ! ( isCall ( site )  )  )  {     return false; }^162^^^^^147^177^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  (  ( lValue == null )  ||  ( ! ( isGetProp ( lValue )  )  )  )  {     return false; }^162^^^^^147^177^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  ( ! ( isPrototypeMethodDefinition ( node )  )  )  {     return ; }^162^^^^^147^177^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^for  ( Node node = node.getParent (  ) ;^159^^^^^144^174^for  ( Node ancestor = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^for  ( Node node = ancestor.getParent (  ) ;^159^^^^^144^174^for  ( Node ancestor = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^for  ( Node ancestor = node.newString (  ) ;^159^^^^^144^174^for  ( Node ancestor = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^for  ( Node ancestor = node .getLastChild (  )  ;^159^^^^^144^174^for  ( Node ancestor = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^if  ( NodeUtil.isControlStructure ( node )  )  {^162^^^^^159^165^if  ( NodeUtil.isControlStructure ( ancestor )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^if  ( NodeUtil.isVarArgsFunction ( ancestor )  )  {^162^^^^^159^165^if  ( NodeUtil.isControlStructure ( ancestor )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^if  ( NodeUtil .isVarArgsFunction ( node )   )  {^162^^^^^159^165^if  ( NodeUtil.isControlStructure ( ancestor )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P15_Unwrap_Block]^return ;^162^163^164^^^159^165^if  ( NodeUtil.isControlStructure ( ancestor )  )  { return; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P16_Remove_Block]^^162^163^164^^^159^165^if  ( NodeUtil.isControlStructure ( ancestor )  )  { return; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  ( ! ( isGetProp ( node )  )  )  {     return false; }^162^^^^^159^165^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  ( isFunction ( node )  )  {     return ; }^162^^^^^159^165^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  (  ( functionNode == null )  ||  ( ! ( isFunction ( functionNode )  )  )  )  {     return false; }^162^^^^^159^165^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  ( ! ( isCall ( site )  )  )  {     return false; }^162^^^^^159^165^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  (  ( lValue == null )  ||  ( ! ( isGetProp ( lValue )  )  )  )  {     return false; }^162^^^^^159^165^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  ( ! ( isPrototypeMethodDefinition ( node )  )  )  {     return ; }^162^^^^^159^165^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  ( isControlStructure ( ancestor )  )  {     return ; }^162^^^^^159^165^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^ancestor = node.getParent (  )  )  {^161^^^^^146^176^ancestor = ancestor.getParent (  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^ancestor = ancestor.newString (  )  )  {^161^^^^^146^176^ancestor = ancestor.getParent (  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P11_Insert_Donor_Statement]^Node expr = parent.getParent (  ) ;for  ( Node ancestor = node.getParent (  ) ;^159^^^^^144^174^for  ( Node ancestor = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P11_Insert_Donor_Statement]^Node parent = node.getParent (  ) ;for  ( Node ancestor = node.getParent (  ) ;^159^^^^^144^174^for  ( Node ancestor = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P11_Insert_Donor_Statement]^Node gramp = parent.getParent (  ) ;for  ( Node ancestor = node.getParent (  ) ;^159^^^^^144^174^for  ( Node ancestor = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P11_Insert_Donor_Statement]^Node block = expr.getParent (  ) ;for  ( Node ancestor = node.getParent (  ) ;^159^^^^^144^174^for  ( Node ancestor = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^for  ( Node ancestor = ancestor.getParent (  ) ;^159^^^^^144^174^for  ( Node ancestor = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P14_Delete_Statement]^^159^160^161^162^163^144^174^for  ( Node ancestor = node.getParent (  ) ; ancestor != null; ancestor = ancestor.getParent (  )  )  { if  ( NodeUtil.isControlStructure ( ancestor )  )  { return; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^ancestor = ancestor .getLastChild (  )   )  {^161^^^^^146^176^ancestor = ancestor.getParent (  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P8_Replace_Mix]^ancestor = node .getLastChild (  )   )  {^161^^^^^146^176^ancestor = ancestor.getParent (  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P14_Delete_Statement]^^161^162^163^^^146^176^ancestor = ancestor.getParent (  )  )  { if  ( NodeUtil.isControlStructure ( ancestor )  )  { return;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P13_Insert_Block]^if  ( isControlStructure ( ancestor )  )  {     return ; }^162^^^^^147^177^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P1_Replace_Type]^char newMethodName = getRewrittenMethodName ( node.getLastChild (  ) .getchar (  )  ) ;^174^175^^^^159^189^String newMethodName = getRewrittenMethodName ( node.getLastChild (  ) .getString (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^String newMethodName = getRewrittenMethodName ( ancestor.getLastChild (  ) .getString (  )  ) ;^174^175^^^^159^189^String newMethodName = getRewrittenMethodName ( node.getLastChild (  ) .getString (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^String newMethodName = fixFunctionType ( node.getLastChild (  ) .getString (  )  ) ;^174^175^^^^159^189^String newMethodName = getRewrittenMethodName ( node.getLastChild (  ) .getString (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^String newMethodName = getRewrittenMethodName ( node.getLastChild (  ) .equals (  )  ) ;^174^175^^^^159^189^String newMethodName = getRewrittenMethodName ( node.getLastChild (  ) .getString (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^String newMethodName = getRewrittenMethodName ( node.newString (  ) .getString (  )  ) ;^174^175^^^^159^189^String newMethodName = getRewrittenMethodName ( node.getLastChild (  ) .getString (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^String newMethodName = getRewrittenMethodName ( node.getLastChild (  )  .getNext (  )   ) ;^174^175^^^^159^189^String newMethodName = getRewrittenMethodName ( node.getLastChild (  ) .getString (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^String newMethodName = getRewrittenMethodName ( node .getFirstChild (  )  .getString (  )  ) ;^174^175^^^^159^189^String newMethodName = getRewrittenMethodName ( node.getLastChild (  ) .getString (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P14_Delete_Statement]^^174^175^^^^159^189^String newMethodName = getRewrittenMethodName ( node.getLastChild (  ) .getString (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^node.getLastChild (  ) .equals (  )  ) ;^175^^^^^160^190^node.getLastChild (  ) .getString (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^node.newString (  ) .getString (  )  ) ;^175^^^^^160^190^node.getLastChild (  ) .getString (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P14_Delete_Statement]^^175^176^^^^160^190^node.getLastChild (  ) .getString (  )  ) ; rewriteDefinition ( node, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P11_Insert_Donor_Statement]^nameNode.getLastChild (  ) .getString (  ) .equals ( "prototype" ) ;node.getLastChild (  ) .getString (  )  ) ;^175^^^^^160^190^node.getLastChild (  ) .getString (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P11_Insert_Donor_Statement]^node.replaceChild ( child, Node.newString ( Token.NAME, name )  ) ;node.getLastChild (  ) .getString (  )  ) ;^175^^^^^160^190^node.getLastChild (  ) .getString (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^node .getFirstChild (  )  .getString (  )  ) ;^175^^^^^160^190^node.getLastChild (  ) .getString (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P14_Delete_Statement]^^175^^^^^160^190^node.getLastChild (  ) .getString (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^rewriteDefinition ( ancestor, newMethodName ) ;^176^^^^^161^191^rewriteDefinition ( node, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^rewriteDefinition (  newMethodName ) ;^176^^^^^161^191^rewriteDefinition ( node, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^rewriteDefinition ( node ) ;^176^^^^^161^191^rewriteDefinition ( node, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^rewriteDefinition ( newMethodName, node ) ;^176^^^^^161^191^rewriteDefinition ( node, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P7_Replace_Invocation]^replaceReferencesToThis ( node, newMethodName ) ;^176^^^^^161^191^rewriteDefinition ( node, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P8_Replace_Mix]^replaceReferencesToThis ( ancestor, newMethodName ) ;^176^^^^^161^191^rewriteDefinition ( node, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P14_Delete_Statement]^^176^177^^^^161^191^rewriteDefinition ( node, newMethodName ) ; rewriteCallSites ( defFinder, defSite.definition, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P11_Insert_Donor_Statement]^rewriteDefinitionIfEligible ( defSite, defFinder ) ;rewriteDefinition ( node, newMethodName ) ;^176^^^^^161^191^rewriteDefinition ( node, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P11_Insert_Donor_Statement]^rewriteCallSites ( defFinder, defSite.definition, newMethodName ) ;rewriteDefinition ( node, newMethodName ) ;^176^^^^^161^191^rewriteDefinition ( node, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^rewriteCallSites (  defSite.definition, newMethodName ) ;^177^^^^^162^192^rewriteCallSites ( defFinder, defSite.definition, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^rewriteCallSites ( defFinder.definition, newMethodName ) ;^177^^^^^162^192^rewriteCallSites ( defFinder, defSite.definition, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^rewriteCallSites ( defFinder, defSite.definition ) ;^177^^^^^162^192^rewriteCallSites ( defFinder, defSite.definition, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P5_Replace_Variable]^rewriteCallSites ( defFinder,  newMethodName ) ;^177^^^^^162^192^rewriteCallSites ( defFinder, defSite.definition, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P14_Delete_Statement]^^177^^^^^162^192^rewriteCallSites ( defFinder, defSite.definition, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P11_Insert_Donor_Statement]^rewriteDefinition ( node, newMethodName ) ;rewriteCallSites ( defFinder, defSite.definition, newMethodName ) ;^177^^^^^162^192^rewriteCallSites ( defFinder, defSite.definition, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinitionIfEligible [RETURN_TYPE] void   DefinitionSite defSite SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  SimpleDefinitionFinder  defFinder  String  newMethodName  boolean  DefinitionSite  defSite  Node  ancestor  node  
[P11_Insert_Donor_Statement]^JSModule callModule = site.module;JSModule definitionModule = definitionSite.module;^197^^^^^182^212^JSModule definitionModule = definitionSite.module;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^Node rValue = definition .getLValue (  )  ;^202^^^^^187^217^Node rValue = definition.getRValue (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^Node expr = parent.getParent (  ) ;Node rValue = definition.getRValue (  ) ;^202^^^^^187^217^Node rValue = definition.getRValue (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^Node gramp = parent.getParent (  ) ;Node rValue = definition.getRValue (  ) ;^202^^^^^187^217^Node rValue = definition.getRValue (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^Node lValue = definition.getLValue (  ) ;Node rValue = definition.getRValue (  ) ;^202^^^^^187^217^Node rValue = definition.getRValue (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^202^^^^^187^217^Node rValue = definition.getRValue (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P2_Replace_Operator]^if  ( rValue == null && !NodeUtil.isFunction ( rValue )  || NodeUtil.isVarArgsFunction ( rValue )  )  {^203^204^205^^^188^218^if  ( rValue == null || !NodeUtil.isFunction ( rValue )  || NodeUtil.isVarArgsFunction ( rValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P2_Replace_Operator]^if  ( rValue != null || !NodeUtil.isFunction ( rValue )  || NodeUtil.isVarArgsFunction ( rValue )  )  {^203^204^205^^^188^218^if  ( rValue == null || !NodeUtil.isFunction ( rValue )  || NodeUtil.isVarArgsFunction ( rValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P6_Replace_Expression]^if  ( rValue == null ) {^203^204^205^^^188^218^if  ( rValue == null || !NodeUtil.isFunction ( rValue )  || NodeUtil.isVarArgsFunction ( rValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P6_Replace_Expression]^if  (  !NodeUtil.isFunction ( rValue )  || NodeUtil.isVarArgsFunction ( rValue )  )  {^203^204^205^^^188^218^if  ( rValue == null || !NodeUtil.isFunction ( rValue )  || NodeUtil.isVarArgsFunction ( rValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P6_Replace_Expression]^if  ( (rValue == null || isFunction(rValue))) )  {^203^204^205^^^188^218^if  ( rValue == null || !NodeUtil.isFunction ( rValue )  || NodeUtil.isVarArgsFunction ( rValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^if  ( rValue == null || !NodeUtil.isVarArgsFunction ( rValue )  || NodeUtil.isVarArgsFunction ( rValue )  )  {^203^204^205^^^188^218^if  ( rValue == null || !NodeUtil.isFunction ( rValue )  || NodeUtil.isVarArgsFunction ( rValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^if  ( rValue == null || !NodeUtil .isVarArgsFunction ( lValue )   || NodeUtil.isVarArgsFunction ( rValue )  )  {^203^204^205^^^188^218^if  ( rValue == null || !NodeUtil.isFunction ( rValue )  || NodeUtil.isVarArgsFunction ( rValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^if  ( rValue == null || !NodeUtil.isFunction ( rValue )  || NodeUtil.isFunction ( rValue )  )  {^203^204^205^^^188^218^if  ( rValue == null || !NodeUtil.isFunction ( rValue )  || NodeUtil.isVarArgsFunction ( rValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P15_Unwrap_Block]^return false;^203^204^205^206^207^188^218^if  ( rValue == null || !NodeUtil.isFunction ( rValue )  || NodeUtil.isVarArgsFunction ( rValue )  )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P16_Remove_Block]^^203^204^205^206^207^188^218^if  ( rValue == null || !NodeUtil.isFunction ( rValue )  || NodeUtil.isVarArgsFunction ( rValue )  )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  (  ( functionNode == null )  ||  ( ! ( isFunction ( functionNode )  )  )  )  {     return false; }^203^^^^^188^218^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  (  (  ( gramp == null )  ||  (  ( parent.getFirstChild (  )  )  != node )  )  ||  ( ! ( isExprAssign ( gramp )  )  )  )  {     return false; }^203^^^^^188^218^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  (  ( lValue == null )  ||  ( ! ( isGetProp ( lValue )  )  )  )  {     return false; }^203^^^^^188^218^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P3_Replace_Literal]^return true;^206^^^^^203^207^return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P3_Replace_Literal]^return true;^206^^^^^191^221^return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^!NodeUtil.isFunction ( nameNode )  || NodeUtil.isVarArgsFunction ( rValue )  )  {^204^205^^^^189^219^!NodeUtil.isFunction ( rValue )  || NodeUtil.isVarArgsFunction ( rValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^!NodeUtil.isVarArgsFunction ( rValue )  || NodeUtil.isVarArgsFunction ( rValue )  )  {^204^205^^^^189^219^!NodeUtil.isFunction ( rValue )  || NodeUtil.isVarArgsFunction ( rValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^204^205^206^^^189^219^!NodeUtil.isFunction ( rValue )  || NodeUtil.isVarArgsFunction ( rValue )  )  { return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  ( ! ( isGetProp ( node )  )  )  {     return false; }^204^^^^^189^219^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  ( isFunction ( node )  )  {     return ; }^204^^^^^189^219^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  ( isControlStructure ( ancestor )  )  {     return ; }^204^^^^^189^219^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^NodeUtil.isVarArgsFunction ( nameNode )  )  {^205^^^^^190^220^NodeUtil.isVarArgsFunction ( rValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^NodeUtil.isFunction ( rValue )  )  {^205^^^^^190^220^NodeUtil.isVarArgsFunction ( rValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^205^206^^^^190^220^NodeUtil.isVarArgsFunction ( rValue )  )  { return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^Node expr = parent.getParent (  ) ;Node lValue = definition.getLValue (  ) ;^210^^^^^195^225^Node lValue = definition.getLValue (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^Node rValue = definition.getRValue (  ) ;Node lValue = definition.getLValue (  ) ;^210^^^^^195^225^Node lValue = definition.getLValue (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^Node gramp = parent.getParent (  ) ;Node lValue = definition.getLValue (  ) ;^210^^^^^195^225^Node lValue = definition.getLValue (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^Node lValue = definition .getRValue (  )  ;^210^^^^^195^225^Node lValue = definition.getLValue (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^210^^^^^195^225^Node lValue = definition.getLValue (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P2_Replace_Operator]^if  (  ( lValue == null )  && !NodeUtil.isGetProp ( lValue )  )  {^211^212^^^^196^226^if  (  ( lValue == null )  || !NodeUtil.isGetProp ( lValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P2_Replace_Operator]^if  (  ( lValue != null )  || !NodeUtil.isGetProp ( lValue )  )  {^211^212^^^^196^226^if  (  ( lValue == null )  || !NodeUtil.isGetProp ( lValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^if  (  ( rValue == null )  || !NodeUtil.isGetProp ( lValue )  )  {^211^212^^^^196^226^if  (  ( lValue == null )  || !NodeUtil.isGetProp ( lValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P6_Replace_Expression]^if  (  ( lValue == null )  ) {^211^212^^^^196^226^if  (  ( lValue == null )  || !NodeUtil.isGetProp ( lValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P6_Replace_Expression]^if  (  !NodeUtil.isGetProp ( lValue )  )  {^211^212^^^^196^226^if  (  ( lValue == null )  || !NodeUtil.isGetProp ( lValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P6_Replace_Expression]^if  ( lValue == null )  {^211^212^^^^196^226^if  (  ( lValue == null )  || !NodeUtil.isGetProp ( lValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^if  (  ( lValue == null )  || !NodeUtil.isThis ( lValue )  )  {^211^212^^^^196^226^if  (  ( lValue == null )  || !NodeUtil.isGetProp ( lValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^if  (  ( lValue == null )  || !NodeUtil .isExprAssign ( nameNode )   )  {^211^212^^^^196^226^if  (  ( lValue == null )  || !NodeUtil.isGetProp ( lValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P8_Replace_Mix]^if  (  ( lValue == true )  ) {^211^212^^^^196^226^if  (  ( lValue == null )  || !NodeUtil.isGetProp ( lValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P15_Unwrap_Block]^return false;^211^212^213^214^^196^226^if  (  ( lValue == null )  || !NodeUtil.isGetProp ( lValue )  )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P16_Remove_Block]^^211^212^213^214^^196^226^if  (  ( lValue == null )  || !NodeUtil.isGetProp ( lValue )  )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  ( ! ( isGetProp ( node )  )  )  {     return false; }^211^^^^^196^226^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  ( isFunction ( node )  )  {     return ; }^211^^^^^196^226^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  (  ( functionNode == null )  ||  ( ! ( isFunction ( functionNode )  )  )  )  {     return false; }^211^^^^^196^226^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  (  (  ( gramp == null )  ||  (  ( parent.getFirstChild (  )  )  != node )  )  ||  ( ! ( isExprAssign ( gramp )  )  )  )  {     return false; }^211^^^^^196^226^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  (  (  ( rValue == null )  ||  ( ! ( isFunction ( rValue )  )  )  )  ||  ( isVarArgsFunction ( rValue )  )  )  {     return false; }^211^^^^^196^226^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  ( isControlStructure ( ancestor )  )  {     return ; }^211^^^^^196^226^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P3_Replace_Literal]^return true;^213^^^^^211^214^return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P3_Replace_Literal]^return true;^213^^^^^198^228^return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^!NodeUtil.isGetProp ( rValue )  )  {^212^^^^^197^227^!NodeUtil.isGetProp ( lValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^!NodeUtil.isThis ( lValue )  )  {^212^^^^^197^227^!NodeUtil.isGetProp ( lValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P8_Replace_Mix]^!NodeUtil .isExprAssign ( lValue )   )  {^212^^^^^197^227^!NodeUtil.isGetProp ( lValue )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^212^213^^^^197^227^!NodeUtil.isGetProp ( lValue )  )  { return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  ( ! ( isGetProp ( node )  )  )  {     return false; }^212^^^^^197^227^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  ( isFunction ( node )  )  {     return ; }^212^^^^^197^227^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  (  ( lValue == null )  ||  ( ! ( isGetProp ( lValue )  )  )  )  {     return false; }^212^^^^^197^227^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  ( isControlStructure ( ancestor )  )  {     return ; }^212^^^^^197^227^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^CodingConvention codingConvention = compiler.getModuleGraph (  ) ;^215^^^^^200^230^CodingConvention codingConvention = compiler.getCodingConvention (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^215^^^^^200^230^CodingConvention codingConvention = compiler.getCodingConvention (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^if  ( codingConvention.isExported ( rValue.getLastChild (  ) .getString (  )  )  )  {^216^^^^^201^231^if  ( codingConvention.isExported ( lValue.getLastChild (  ) .getString (  )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^if  ( lValue.isExported ( codingConvention.getLastChild (  ) .getString (  )  )  )  {^216^^^^^201^231^if  ( codingConvention.isExported ( lValue.getLastChild (  ) .getString (  )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^if  ( codingConvention.isExported ( lValue.getLastChild (  ) .equals (  )  )  )  {^216^^^^^201^231^if  ( codingConvention.isExported ( lValue.getLastChild (  ) .getString (  )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^if  ( codingConvention.isExported ( lValue.newString (  ) .getString (  )  )  )  {^216^^^^^201^231^if  ( codingConvention.isExported ( lValue.getLastChild (  ) .getString (  )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P8_Replace_Mix]^if  ( codingConvention.isExported ( rValue.getLastChild (  )  .getNext (  )   )  )  {^216^^^^^201^231^if  ( codingConvention.isExported ( lValue.getLastChild (  ) .getString (  )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P15_Unwrap_Block]^return false;^216^217^218^^^201^231^if  ( codingConvention.isExported ( lValue.getLastChild (  ) .getString (  )  )  )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P16_Remove_Block]^^216^217^218^^^201^231^if  ( codingConvention.isExported ( lValue.getLastChild (  ) .getString (  )  )  )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P3_Replace_Literal]^return true;^217^^^^^202^232^return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P8_Replace_Mix]^if  ( codingConvention.isExported ( rValue.newString (  ) .getString (  )  )  )  {^216^^^^^201^231^if  ( codingConvention.isExported ( lValue.getLastChild (  ) .getString (  )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  ( codingConvention.isExported ( lValue.getLastChild (  ) .getString (  )  )  )  {     return false; }^216^^^^^201^231^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P8_Replace_Mix]^if  ( codingConvention.isExported ( rValue.getLastChild (  ) .equals (  )  )  )  {^216^^^^^201^231^if  ( codingConvention.isExported ( lValue.getLastChild (  ) .getString (  )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^Collection<UseSite> useSites = definition.getUseSites ( defFinder ) ;^220^^^^^205^235^Collection<UseSite> useSites = defFinder.getUseSites ( definition ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^Collection<UseSite> useSites = defFinder .getDefinitionSites (  )  ;^220^^^^^205^235^Collection<UseSite> useSites = defFinder.getUseSites ( definition ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^220^^^^^205^235^Collection<UseSite> useSites = defFinder.getUseSites ( definition ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^if  ( useSites.contains (  )  )  {^223^^^^^208^238^if  ( useSites.isEmpty (  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P15_Unwrap_Block]^return false;^223^224^225^^^208^238^if  ( useSites.isEmpty (  )  )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P16_Remove_Block]^^223^224^225^^^208^238^if  ( useSites.isEmpty (  )  )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  ( parent == null )  {     return false; }^223^^^^^208^238^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  (  ( singleSiteDefinitions.size (  )  )  > 1 )  {     return false; }^223^^^^^208^238^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P3_Replace_Literal]^return true;^224^^^^^209^239^return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^JSModuleGraph moduleGraph = compiler.getTypeRegistry (  ) ;^227^^^^^212^242^JSModuleGraph moduleGraph = compiler.getModuleGraph (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^JSTypeRegistry typeRegistry = compiler.getTypeRegistry (  ) ;JSModuleGraph moduleGraph = compiler.getModuleGraph (  ) ;^227^^^^^212^242^JSModuleGraph moduleGraph = compiler.getModuleGraph (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^227^^^^^212^242^JSModuleGraph moduleGraph = compiler.getModuleGraph (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^if  ( !fixFunctionType ( site )  )  {^232^^^^^217^247^if  ( !isCall ( site )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P15_Unwrap_Block]^return false;^232^233^234^^^217^247^if  ( !isCall ( site )  )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P16_Remove_Block]^^232^233^234^^^217^247^if  ( !isCall ( site )  )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  ( ! ( isGetProp ( node )  )  )  {     return false; }^232^^^^^217^247^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  ( isFunction ( node )  )  {     return ; }^232^^^^^217^247^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  ( isControlStructure ( ancestor )  )  {     return ; }^232^^^^^217^247^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  ( ! ( isPrototypeMethodDefinition ( node )  )  )  {     return ; }^232^^^^^217^247^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P3_Replace_Literal]^return true;^233^^^^^218^248^return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P2_Replace_Operator]^if  ( singleSiteDefinitions.size (  )  < 1 )  {^240^^^^^225^255^if  ( singleSiteDefinitions.size (  )  > 1 )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P3_Replace_Literal]^if  ( singleSiteDefinitions.size (  )  > 7 )  {^240^^^^^225^255^if  ( singleSiteDefinitions.size (  )  > 1 )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P3_Replace_Literal]^if  ( singleSiteDefinitions.size() + 4  > 1 )  {^240^^^^^225^255^if  ( singleSiteDefinitions.size (  )  > 1 )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^if  ( singleSiteDefinitions.contains (  )  > 1 )  {^240^^^^^225^255^if  ( singleSiteDefinitions.size (  )  > 1 )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^if  ( singleSiteDefinitions .isEmpty (  )   > 1 )  {^240^^^^^225^255^if  ( singleSiteDefinitions.size (  )  > 1 )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P8_Replace_Mix]^if  ( singleSiteDefinitions.contains (  )  > 0  )  {^240^^^^^225^255^if  ( singleSiteDefinitions.size (  )  > 1 )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P15_Unwrap_Block]^return false;^240^241^242^^^225^255^if  ( singleSiteDefinitions.size (  )  > 1 )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P16_Remove_Block]^^240^241^242^^^225^255^if  ( singleSiteDefinitions.size (  )  > 1 )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  ( useSites.isEmpty (  )  )  {     return false; }^240^^^^^225^255^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P3_Replace_Literal]^return true;^241^^^^^226^256^return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P2_Replace_Operator]^if  (  ( definitionModule != callModule )  || (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^250^251^252^^^235^265^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P2_Replace_Operator]^if  (  ( definitionModule == callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^250^251^252^^^235^265^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P2_Replace_Operator]^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  && !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^250^251^252^^^235^265^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P2_Replace_Operator]^if  (  ( definitionModule != callModule )  && (  ( callModule != null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^250^251^252^^^235^265^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^if  (  ( callModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^250^251^252^^^235^265^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule )  )  )  {^250^251^252^^^235^265^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn (  definitionModule )  )  )  {^250^251^252^^^235^265^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^if  (  ( callModule != definitionModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^250^251^252^^^235^265^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P6_Replace_Expression]^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  ) {^250^251^252^^^235^265^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P6_Replace_Expression]^if  (  !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^250^251^252^^^235^265^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P6_Replace_Expression]^if  ( definitionModule != callModule )  {^250^251^252^^^235^265^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P6_Replace_Expression]^if  ( (callModule == null || !(moduleGraph.dependsOn(callModule, definitionModule))) )  {^250^251^252^^^235^265^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P6_Replace_Expression]^if  ( callModule == null )  {^250^251^252^^^235^265^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P8_Replace_Mix]^if  (  ( definitionModule != callModule )  && (  ( callModule == this )  ) {^250^251^252^^^235^265^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P15_Unwrap_Block]^return false;^250^251^252^253^254^235^265^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P16_Remove_Block]^^250^251^252^253^254^235^265^if  (  ( definitionModule != callModule )  && (  ( callModule == null )  || !moduleGraph.dependsOn ( callModule, definitionModule )  )  )  { return false; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P3_Replace_Literal]^return true;^253^^^^^250^254^return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P3_Replace_Literal]^return true;^253^^^^^238^268^return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^Node node = defSite.node;Node nameNode = site.node;^237^^^^^222^252^Node nameNode = site.node;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^JSModule callModule = site.module;Node nameNode = site.node;^237^^^^^222^252^Node nameNode = site.node;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^Node node = site.node;Node nameNode = site.node;^237^^^^^222^252^Node nameNode = site.node;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^Collection<Definition> singleSiteDefinitions = defFinder.getDefinitionsReferencedAt ( rValue ) ;^238^239^^^^223^253^Collection<Definition> singleSiteDefinitions = defFinder.getDefinitionsReferencedAt ( nameNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^Collection<Definition> singleSiteDefinitions = nameNode.getDefinitionsReferencedAt ( defFinder ) ;^238^239^^^^223^253^Collection<Definition> singleSiteDefinitions = defFinder.getDefinitionsReferencedAt ( nameNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^Node nameNode = site.node;JSModule callModule = site.module;^249^^^^^234^264^JSModule callModule = site.module;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^JSModule definitionModule = definitionSite.module;JSModule callModule = site.module;^249^^^^^234^264^JSModule callModule = site.module;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^Node node = site.node;JSModule callModule = site.module;^249^^^^^234^264^JSModule callModule = site.module;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P13_Insert_Block]^if  ( ! ( isCall ( site )  )  )  {     return false; }^232^^^^^217^247^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^defFinder .getDefinitionSites (  )  ;^239^^^^^224^254^defFinder.getDefinitionsReferencedAt ( nameNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P8_Replace_Mix]^defFinder.getDefinitionsReferencedAt ( rValue ) ;^239^^^^^224^254^defFinder.getDefinitionsReferencedAt ( nameNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^239^^^^^224^254^defFinder.getDefinitionsReferencedAt ( nameNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P3_Replace_Literal]^if  ( singleSiteDefinitions.size() - 4  > 1 )  {^240^^^^^225^255^if  ( singleSiteDefinitions.size (  )  > 1 )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^Preconditions.checkState ( !singleSiteDefinitions.contains (  )  ) ;^243^^^^^228^258^Preconditions.checkState ( !singleSiteDefinitions.isEmpty (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^Preconditions.checkState ( !singleSiteDefinitions .size (  )   ) ;^243^^^^^228^258^Preconditions.checkState ( !singleSiteDefinitions.isEmpty (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^243^244^^^^228^258^Preconditions.checkState ( !singleSiteDefinitions.isEmpty (  )  ) ; Preconditions.checkState ( singleSiteDefinitions.contains ( definition )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( singleSiteDefinitions.contains ( definition )  ) ;Preconditions.checkState ( !singleSiteDefinitions.isEmpty (  )  ) ;^243^^^^^228^258^Preconditions.checkState ( !singleSiteDefinitions.isEmpty (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^243^^^^^228^258^Preconditions.checkState ( !singleSiteDefinitions.isEmpty (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^Preconditions.checkState ( definition.contains ( singleSiteDefinitions )  ) ;^244^^^^^229^259^Preconditions.checkState ( singleSiteDefinitions.contains ( definition )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P7_Replace_Invocation]^Preconditions.checkState ( singleSiteDefinitions .size (  )   ) ;^244^^^^^229^259^Preconditions.checkState ( singleSiteDefinitions.contains ( definition )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^244^^^^^229^259^Preconditions.checkState ( singleSiteDefinitions.contains ( definition )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( !singleSiteDefinitions.isEmpty (  )  ) ;Preconditions.checkState ( singleSiteDefinitions.contains ( definition )  ) ;^244^^^^^229^259^Preconditions.checkState ( singleSiteDefinitions.contains ( definition )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^!moduleGraph.dependsOn (  definitionModule )  )  )  {^252^^^^^237^267^!moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^!moduleGraph.dependsOn ( callModule )  )  )  {^252^^^^^237^267^!moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^!moduleGraph.dependsOn ( definitionModule, callModule )  )  )  {^252^^^^^237^267^!moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P8_Replace_Mix]^!moduleGraph.dependsOn ( callModule, callModule )  )  )  {^252^^^^^237^267^!moduleGraph.dependsOn ( callModule, definitionModule )  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P14_Delete_Statement]^^252^253^^^^237^267^!moduleGraph.dependsOn ( callModule, definitionModule )  )  )  { return false;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P3_Replace_Literal]^return false;^257^^^^^242^272^return true;^[CLASS] DevirtualizePrototypeMethods  [METHOD] isEligibleDefinition [RETURN_TYPE] boolean   SimpleDefinitionFinder defFinder DefinitionSite definitionSite [VARIABLES] AbstractCompiler  compiler  boolean  Node  lValue  nameNode  rValue  CodingConvention  codingConvention  Definition  definition  JSModule  callModule  definitionModule  Collection  singleSiteDefinitions  useSites  SimpleDefinitionFinder  defFinder  UseSite  site  DefinitionSite  definitionSite  JSModuleGraph  moduleGraph  
[P5_Replace_Variable]^Collection<UseSite> useSites = definition.getUseSites ( defFinder ) ;^273^^^^^270^284^Collection<UseSite> useSites = defFinder.getUseSites ( definition ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P8_Replace_Mix]^Collection<UseSite> useSites = defFinder .getDefinitionSites (  )  ;^273^^^^^270^284^Collection<UseSite> useSites = defFinder.getUseSites ( definition ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P14_Delete_Statement]^^273^^^^^270^284^Collection<UseSite> useSites = defFinder.getUseSites ( definition ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P11_Insert_Donor_Statement]^Node node = defSite.node;Node node = site.node;^275^^^^^270^284^Node node = site.node;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P11_Insert_Donor_Statement]^JSModule callModule = site.module;Node node = site.node;^275^^^^^270^284^Node node = site.node;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P11_Insert_Donor_Statement]^Node nameNode = site.node;Node node = site.node;^275^^^^^270^284^Node node = site.node;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P5_Replace_Variable]^Node parent = objectNode.getParent (  ) ;^276^^^^^270^284^Node parent = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P7_Replace_Invocation]^Node parent = node.newString (  ) ;^276^^^^^270^284^Node parent = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P5_Replace_Variable]^Node objectNode = parent.getFirstChild (  ) ;^278^^^^^270^284^Node objectNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P7_Replace_Invocation]^Node objectNode = node.newString (  ) ;^278^^^^^270^284^Node objectNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P8_Replace_Mix]^Node objectNode = parent.newString (  ) ;^278^^^^^270^284^Node objectNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P11_Insert_Donor_Statement]^Node parent = node.getParent (  ) ;Node objectNode = node.getFirstChild (  ) ;^278^^^^^270^284^Node objectNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P11_Insert_Donor_Statement]^Node body = functionNode.getLastChild (  ) ;Node objectNode = node.getFirstChild (  ) ;^278^^^^^270^284^Node objectNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P11_Insert_Donor_Statement]^Node functionNode = parent.getLastChild (  ) ;Node objectNode = node.getFirstChild (  ) ;^278^^^^^270^284^Node objectNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P11_Insert_Donor_Statement]^Node block = expr.getParent (  ) ;Node objectNode = node.getFirstChild (  ) ;^278^^^^^270^284^Node objectNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P11_Insert_Donor_Statement]^Node nameNode = node.getFirstChild (  ) ;Node objectNode = node.getFirstChild (  ) ;^278^^^^^270^284^Node objectNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P5_Replace_Variable]^Node parent = parent.getParent (  ) ;^276^^^^^270^284^Node parent = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P14_Delete_Statement]^^276^^^^^270^284^Node parent = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P14_Delete_Statement]^^278^^^^^270^284^Node objectNode = node.getFirstChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P5_Replace_Variable]^node.removeChild ( parent ) ;^279^^^^^270^284^node.removeChild ( objectNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P7_Replace_Invocation]^node.replaceChild ( objectNode ) ;^279^^^^^270^284^node.removeChild ( objectNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P7_Replace_Invocation]^node .replaceChild ( parent , objectNode )  ;^279^^^^^270^284^node.removeChild ( objectNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P14_Delete_Statement]^^279^280^^^^270^284^node.removeChild ( objectNode ) ; parent.replaceChild ( node, objectNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P11_Insert_Donor_Statement]^parent.removeChild ( functionNode ) ;node.removeChild ( objectNode ) ;^279^^^^^270^284^node.removeChild ( objectNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P11_Insert_Donor_Statement]^parent.replaceChild ( node, objectNode ) ;node.removeChild ( objectNode ) ;^279^^^^^270^284^node.removeChild ( objectNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P5_Replace_Variable]^parent.replaceChild ( node, parent ) ;^280^^^^^270^284^parent.replaceChild ( node, objectNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P5_Replace_Variable]^parent.replaceChild (  objectNode ) ;^280^^^^^270^284^parent.replaceChild ( node, objectNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P5_Replace_Variable]^parent.replaceChild ( node ) ;^280^^^^^270^284^parent.replaceChild ( node, objectNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P14_Delete_Statement]^^280^^^^^270^284^parent.replaceChild ( node, objectNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P11_Insert_Donor_Statement]^parent.removeChild ( functionNode ) ;parent.replaceChild ( node, objectNode ) ;^280^^^^^270^284^parent.replaceChild ( node, objectNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P11_Insert_Donor_Statement]^node.removeChild ( objectNode ) ;parent.replaceChild ( node, objectNode ) ;^280^^^^^270^284^parent.replaceChild ( node, objectNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P5_Replace_Variable]^parent.addChildToFront ( Node.newString ( Token.NAME )  ) ;^281^^^^^270^284^parent.addChildToFront ( Node.newString ( Token.NAME, newMethodName )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P7_Replace_Invocation]^parent.replaceChild ( Node.newString ( Token.NAME, newMethodName )  ) ;^281^^^^^270^284^parent.addChildToFront ( Node.newString ( Token.NAME, newMethodName )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P7_Replace_Invocation]^parent.addChildToFront ( Node.removeChild ( Token.NAME, newMethodName )  ) ;^281^^^^^270^284^parent.addChildToFront ( Node.newString ( Token.NAME, newMethodName )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P7_Replace_Invocation]^parent.addChildToFront ( Node .getParent (  )   ) ;^281^^^^^270^284^parent.addChildToFront ( Node.newString ( Token.NAME, newMethodName )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P14_Delete_Statement]^^281^282^^^^270^284^parent.addChildToFront ( Node.newString ( Token.NAME, newMethodName )  ) ; compiler.reportCodeChange (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P11_Insert_Donor_Statement]^Node newNameNode = Node.newString ( Token.NAME, newMethodName ) ;parent.addChildToFront ( Node.newString ( Token.NAME, newMethodName )  ) ;^281^^^^^270^284^parent.addChildToFront ( Node.newString ( Token.NAME, newMethodName )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P11_Insert_Donor_Statement]^node.replaceChild ( child, Node.newString ( Token.NAME, name )  ) ;parent.addChildToFront ( Node.newString ( Token.NAME, newMethodName )  ) ;^281^^^^^270^284^parent.addChildToFront ( Node.newString ( Token.NAME, newMethodName )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P11_Insert_Donor_Statement]^argList.addChildToFront ( Node.newString ( Token.NAME, self )  ) ;parent.addChildToFront ( Node.newString ( Token.NAME, newMethodName )  ) ;^281^^^^^270^284^parent.addChildToFront ( Node.newString ( Token.NAME, newMethodName )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P14_Delete_Statement]^^281^^^^^270^284^parent.addChildToFront ( Node.newString ( Token.NAME, newMethodName )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P7_Replace_Invocation]^compiler.getModuleGraph (  ) ;^282^^^^^270^284^compiler.reportCodeChange (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P14_Delete_Statement]^^282^^^^^270^284^compiler.reportCodeChange (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteCallSites [RETURN_TYPE] void   SimpleDefinitionFinder defFinder Definition definition String newMethodName [VARIABLES] AbstractCompiler  compiler  boolean  Node  node  objectNode  parent  Definition  definition  Collection  useSites  SimpleDefinitionFinder  defFinder  String  newMethodName  UseSite  site  
[P5_Replace_Variable]^Node parent = newNameNode.getParent (  ) ;^297^^^^^296^320^Node parent = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^Node parent = node.newString (  ) ;^297^^^^^296^320^Node parent = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^Node parent = functionNode.getParent (  ) ;^297^^^^^296^320^Node parent = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P14_Delete_Statement]^^297^^^^^296^320^Node parent = node.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^Node functionNode = newNameNode.getLastChild (  ) ;^298^^^^^296^320^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^Node functionNode = parent.newString (  ) ;^298^^^^^296^320^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P8_Replace_Mix]^Node functionNode = parent .getFirstChild (  )  ;^298^^^^^296^320^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^Node objectNode = node.getFirstChild (  ) ;Node functionNode = parent.getLastChild (  ) ;^298^^^^^296^320^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^Node expr = parent.getParent (  ) ;Node functionNode = parent.getLastChild (  ) ;^298^^^^^296^320^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^Node body = functionNode.getLastChild (  ) ;Node functionNode = parent.getLastChild (  ) ;^298^^^^^296^320^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^Node gramp = parent.getParent (  ) ;Node functionNode = parent.getLastChild (  ) ;^298^^^^^296^320^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^Node nameNode = node.getFirstChild (  ) ;Node functionNode = parent.getLastChild (  ) ;^298^^^^^296^320^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P8_Replace_Mix]^Node functionNode = functionNode.getLastChild (  ) ;^298^^^^^296^320^Node functionNode = parent.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P14_Delete_Statement]^^298^299^^^^296^320^Node functionNode = parent.getLastChild (  ) ; Node expr = parent.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^Node expr = newNameNode.getParent (  ) ;^299^^^^^296^320^Node expr = parent.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^Node expr = parent.newString (  ) ;^299^^^^^296^320^Node expr = parent.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P8_Replace_Mix]^Node expr = node.getParent (  ) ;^299^^^^^296^320^Node expr = parent.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^Node expr = functionNode.getParent (  ) ;^299^^^^^296^320^Node expr = parent.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P14_Delete_Statement]^^299^300^^^^296^320^Node expr = parent.getParent (  ) ; Node block = expr.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^Node block = parent.getParent (  ) ;^300^^^^^296^320^Node block = expr.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^Node block = expr.newString (  ) ;^300^^^^^296^320^Node block = expr.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^Node block = expr .getLastChild (  )  ;^300^^^^^296^320^Node block = expr.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^Node block = newNameNode.getParent (  ) ;^300^^^^^296^320^Node block = expr.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P8_Replace_Mix]^Node block = node.getParent (  ) ;^300^^^^^296^320^Node block = expr.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P14_Delete_Statement]^^300^^^^^296^320^Node block = expr.getParent (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^Node newNameNode = Node.newString ( Token.NAME, self ) ;^302^^^^^296^320^Node newNameNode = Node.newString ( Token.NAME, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^Node newNameNode = Node.removeChild ( Token.NAME, newMethodName ) ;^302^^^^^296^320^Node newNameNode = Node.newString ( Token.NAME, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P8_Replace_Mix]^Node newNameNode = Node.removeChild ( Token.NAME, self ) ;^302^^^^^296^320^Node newNameNode = Node.newString ( Token.NAME, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^Node newNameNode = Node .getParent (  )  ;^302^^^^^296^320^Node newNameNode = Node.newString ( Token.NAME, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P14_Delete_Statement]^^302^303^^^^296^320^Node newNameNode = Node.newString ( Token.NAME, newMethodName ) ; parent.removeChild ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^node.replaceChild ( child, Node.newString ( Token.NAME, name )  ) ;Node newNameNode = Node.newString ( Token.NAME, newMethodName ) ;^302^^^^^296^320^Node newNameNode = Node.newString ( Token.NAME, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^parent.addChildToFront ( Node.newString ( Token.NAME, newMethodName )  ) ;Node newNameNode = Node.newString ( Token.NAME, newMethodName ) ;^302^^^^^296^320^Node newNameNode = Node.newString ( Token.NAME, newMethodName ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^parent.removeChild ( newNameNode ) ;^303^^^^^296^320^parent.removeChild ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^parent.replaceChild ( functionNode ) ;^303^^^^^296^320^parent.removeChild ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P8_Replace_Mix]^parent.replaceChild ( node ) ;^303^^^^^296^320^parent.removeChild ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P14_Delete_Statement]^^303^304^^^^296^320^parent.removeChild ( functionNode ) ; newNameNode.addChildToFront ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^newNameNode.addChildToFront ( functionNode ) ;parent.removeChild ( functionNode ) ;^303^^^^^296^320^parent.removeChild ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^fixFunctionType ( functionNode ) ;parent.removeChild ( functionNode ) ;^303^^^^^296^320^parent.removeChild ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^node.removeChild ( objectNode ) ;parent.removeChild ( functionNode ) ;^303^^^^^296^320^parent.removeChild ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^parent.replaceChild ( node, objectNode ) ;parent.removeChild ( functionNode ) ;^303^^^^^296^320^parent.removeChild ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^newNameNode.addChildToFront ( node ) ;^304^^^^^296^320^newNameNode.addChildToFront ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^newNameNode.replaceChild ( functionNode ) ;^304^^^^^296^320^newNameNode.addChildToFront ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^newNameNode .addChildToFront (  )  ;^304^^^^^296^320^newNameNode.addChildToFront ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P14_Delete_Statement]^^304^^^^^296^320^newNameNode.addChildToFront ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^parent.removeChild ( functionNode ) ;newNameNode.addChildToFront ( functionNode ) ;^304^^^^^296^320^newNameNode.addChildToFront ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^block.replaceChild ( expr, new Node ( Token.VAR, parent )  ) ;^305^^^^^296^320^block.replaceChild ( expr, new Node ( Token.VAR, newNameNode )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^block.replaceChild ( expr, new Node ( Token.VAR )  ) ;^305^^^^^296^320^block.replaceChild ( expr, new Node ( Token.VAR, newNameNode )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^block.replaceChild ( expr, new Node ( Token. newNameNode )  ) ;^305^^^^^296^320^block.replaceChild ( expr, new Node ( Token.VAR, newNameNode )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P8_Replace_Mix]^block.replaceChild ( expr, new Node ( Token.VAR, functionNode )  ) ;^305^^^^^296^320^block.replaceChild ( expr, new Node ( Token.VAR, newNameNode )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P4_Replace_Constructor]^block.replaceChild (  new Node ( Token.VAR, newNameNode )  ) ;^305^^^^^296^320^block.replaceChild ( expr, new Node ( Token.VAR, newNameNode )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^block.replaceChild ( parent, new Node ( Token.VAR, newNameNode )  ) ;^305^^^^^296^320^block.replaceChild ( expr, new Node ( Token.VAR, newNameNode )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^block.replaceChild ( newNameNode, new Node ( Token.VAR, expr )  ) ;^305^^^^^296^320^block.replaceChild ( expr, new Node ( Token.VAR, newNameNode )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^block .replaceChild ( functionNode , body )  ;^305^^^^^296^320^block.replaceChild ( expr, new Node ( Token.VAR, newNameNode )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P14_Delete_Statement]^^305^^^^^296^320^block.replaceChild ( expr, new Node ( Token.VAR, newNameNode )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^node.replaceChild ( child, Node.newString ( Token.NAME, name )  ) ;block.replaceChild ( expr, new Node ( Token.VAR, newNameNode )  ) ;^305^^^^^296^320^block.replaceChild ( expr, new Node ( Token.VAR, newNameNode )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P1_Replace_Type]^char self = newMethodName + "$self";^308^^^^^296^320^String self = newMethodName + "$self";^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P3_Replace_Literal]^String self = newMethodName + "";^308^^^^^296^320^String self = newMethodName + "$self";^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^Node argList = node.getFirstChild (  ) .getNext (  ) ;^309^^^^^296^320^Node argList = functionNode.getFirstChild (  ) .getNext (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^Node argList = functionNode.getFirstChild (  ) .equals (  ) ;^309^^^^^296^320^Node argList = functionNode.getFirstChild (  ) .getNext (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^Node argList = functionNode.newString (  ) .getNext (  ) ;^309^^^^^296^320^Node argList = functionNode.getFirstChild (  ) .getNext (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^Node argList = functionNode .getLastChild (  )  .getNext (  ) ;^309^^^^^296^320^Node argList = functionNode.getFirstChild (  ) .getNext (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P8_Replace_Mix]^Node argList = node.getFirstChild (  ) .equals (  ) ;^309^^^^^296^320^Node argList = functionNode.getFirstChild (  ) .getNext (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^Node body = functionNode.getLastChild (  ) ;Node argList = functionNode.getFirstChild (  ) .getNext (  ) ;^309^^^^^296^320^Node argList = functionNode.getFirstChild (  ) .getNext (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^Node nameNode = node.getFirstChild (  ) ;Node argList = functionNode.getFirstChild (  ) .getNext (  ) ;^309^^^^^296^320^Node argList = functionNode.getFirstChild (  ) .getNext (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^Node argList = parent.getFirstChild (  ) .getNext (  ) ;^309^^^^^296^320^Node argList = functionNode.getFirstChild (  ) .getNext (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^Node argList = functionNode.getFirstChild (  )  .getString (  )  ;^309^^^^^296^320^Node argList = functionNode.getFirstChild (  ) .getNext (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P14_Delete_Statement]^^309^310^^^^296^320^Node argList = functionNode.getFirstChild (  ) .getNext (  ) ; argList.addChildToFront ( Node.newString ( Token.NAME, self )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^Node argList = newNameNode.getFirstChild (  ) .getNext (  ) ;^309^^^^^296^320^Node argList = functionNode.getFirstChild (  ) .getNext (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P14_Delete_Statement]^^309^^^^^296^320^Node argList = functionNode.getFirstChild (  ) .getNext (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^argList.addChildToFront ( Node.newString ( Token.NAME, newMethodName )  ) ;^310^^^^^296^320^argList.addChildToFront ( Node.newString ( Token.NAME, self )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^argList.addChildToFront ( Node.newString ( Token.NAME )  ) ;^310^^^^^296^320^argList.addChildToFront ( Node.newString ( Token.NAME, self )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^argList.replaceChild ( Node.newString ( Token.NAME, self )  ) ;^310^^^^^296^320^argList.addChildToFront ( Node.newString ( Token.NAME, self )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^argList.addChildToFront ( Node.removeChild ( Token.NAME, self )  ) ;^310^^^^^296^320^argList.addChildToFront ( Node.newString ( Token.NAME, self )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P14_Delete_Statement]^^310^^^^^296^320^argList.addChildToFront ( Node.newString ( Token.NAME, self )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^node.replaceChild ( child, Node.newString ( Token.NAME, name )  ) ;argList.addChildToFront ( Node.newString ( Token.NAME, self )  ) ;^310^^^^^296^320^argList.addChildToFront ( Node.newString ( Token.NAME, self )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^parent.addChildToFront ( Node.newString ( Token.NAME, newMethodName )  ) ;argList.addChildToFront ( Node.newString ( Token.NAME, self )  ) ;^310^^^^^296^320^argList.addChildToFront ( Node.newString ( Token.NAME, self )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P8_Replace_Mix]^argList.addChildToFront ( Node .getParent (  )   ) ;^310^^^^^296^320^argList.addChildToFront ( Node.newString ( Token.NAME, self )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^Node body = parent.getLastChild (  ) ;^313^^^^^296^320^Node body = functionNode.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^Node body = functionNode.newString (  ) ;^313^^^^^296^320^Node body = functionNode.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^Node objectNode = node.getFirstChild (  ) ;Node body = functionNode.getLastChild (  ) ;^313^^^^^296^320^Node body = functionNode.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^Node parent = node.getParent (  ) ;Node body = functionNode.getLastChild (  ) ;^313^^^^^296^320^Node body = functionNode.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^Node functionNode = parent.getLastChild (  ) ;Node body = functionNode.getLastChild (  ) ;^313^^^^^296^320^Node body = functionNode.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^Node argList = functionNode.getFirstChild (  ) .getNext (  ) ;Node body = functionNode.getLastChild (  ) ;^313^^^^^296^320^Node body = functionNode.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^Node nameNode = node.getFirstChild (  ) ;Node body = functionNode.getLastChild (  ) ;^313^^^^^296^320^Node body = functionNode.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^Node body = node.getLastChild (  ) ;^313^^^^^296^320^Node body = functionNode.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P8_Replace_Mix]^Node body = newNameNode.getLastChild (  ) ;^313^^^^^296^320^Node body = functionNode.getLastChild (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P14_Delete_Statement]^^313^314^^^^296^320^Node body = functionNode.getLastChild (  ) ; replaceReferencesToThis ( body, self ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^replaceReferencesToThis ( parent, self ) ;^314^^^^^296^320^replaceReferencesToThis ( body, self ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^replaceReferencesToThis ( body, newMethodName ) ;^314^^^^^296^320^replaceReferencesToThis ( body, self ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^replaceReferencesToThis (  self ) ;^314^^^^^296^320^replaceReferencesToThis ( body, self ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^replaceReferencesToThis ( body ) ;^314^^^^^296^320^replaceReferencesToThis ( body, self ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^replaceReferencesToThis ( self, body ) ;^314^^^^^296^320^replaceReferencesToThis ( body, self ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^rewriteDefinition ( body, self ) ;^314^^^^^296^320^replaceReferencesToThis ( body, self ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P14_Delete_Statement]^^314^^^^^296^320^replaceReferencesToThis ( body, self ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^replaceReferencesToThis ( child, name ) ;replaceReferencesToThis ( body, self ) ;^314^^^^^296^320^replaceReferencesToThis ( body, self ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^fixFunctionType ( parent ) ;^317^^^^^296^320^fixFunctionType ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^isPrototypeMethodDefinition ( functionNode ) ;^317^^^^^296^320^fixFunctionType ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P8_Replace_Mix]^isPrototypeMethodDefinition ( parent ) ;^317^^^^^296^320^fixFunctionType ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P14_Delete_Statement]^^317^^^^^296^320^fixFunctionType ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P11_Insert_Donor_Statement]^parent.removeChild ( functionNode ) ;fixFunctionType ( functionNode ) ;^317^^^^^296^320^fixFunctionType ( functionNode ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P7_Replace_Invocation]^compiler.getModuleGraph (  ) ;^319^^^^^296^320^compiler.reportCodeChange (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P14_Delete_Statement]^^319^^^^^296^320^compiler.reportCodeChange (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] rewriteDefinition [RETURN_TYPE] void   Node node String newMethodName [VARIABLES] AbstractCompiler  compiler  String  newMethodName  self  boolean  Node  argList  block  body  expr  functionNode  newNameNode  node  parent  
[P5_Replace_Variable]^FunctionType type =  ( FunctionType )  param.getJSType (  ) ;^329^^^^^328^348^FunctionType type =  ( FunctionType )  functionNode.getJSType (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P7_Replace_Invocation]^FunctionType type =  ( FunctionType )  functionNode.newString (  ) ;^329^^^^^328^348^FunctionType type =  ( FunctionType )  functionNode.getJSType (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P7_Replace_Invocation]^FunctionType type =  ( FunctionType )  functionNode .setJSType ( newType )  ;^329^^^^^328^348^FunctionType type =  ( FunctionType )  functionNode.getJSType (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P14_Delete_Statement]^^329^^^^^328^348^FunctionType type =  ( FunctionType )  functionNode.getJSType (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P2_Replace_Operator]^if  ( type == null )  {^330^^^^^328^348^if  ( type != null )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P8_Replace_Mix]^if  ( type != true )  {^330^^^^^328^348^if  ( type != null )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P9_Replace_Statement]^if  ( parent == null )  {^330^^^^^328^348^if  ( type != null )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P7_Replace_Invocation]^JSTypeRegistry typeRegistry = compiler.getModuleGraph (  ) ;^331^^^^^328^348^JSTypeRegistry typeRegistry = compiler.getTypeRegistry (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P11_Insert_Donor_Statement]^JSModuleGraph moduleGraph = compiler.getModuleGraph (  ) ;JSTypeRegistry typeRegistry = compiler.getTypeRegistry (  ) ;^331^^^^^328^348^JSTypeRegistry typeRegistry = compiler.getTypeRegistry (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P5_Replace_Variable]^JSType newType = typeRegistry.createFunctionType (  returnType, parameterTypes ) ;^344^345^^^^328^348^JSType newType = typeRegistry.createFunctionType ( thisType, returnType, parameterTypes ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P5_Replace_Variable]^JSType newType = typeRegistry.createFunctionType ( thisType,  parameterTypes ) ;^344^345^^^^328^348^JSType newType = typeRegistry.createFunctionType ( thisType, returnType, parameterTypes ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P5_Replace_Variable]^JSType newType = typeRegistry.createFunctionType ( thisType, returnType ) ;^344^345^^^^328^348^JSType newType = typeRegistry.createFunctionType ( thisType, returnType, parameterTypes ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P5_Replace_Variable]^JSType newType = thisType.createFunctionType ( typeRegistry, returnType, parameterTypes ) ;^344^345^^^^328^348^JSType newType = typeRegistry.createFunctionType ( thisType, returnType, parameterTypes ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P5_Replace_Variable]^JSType newType = typeRegistry.createFunctionType ( returnType, thisType, parameterTypes ) ;^344^345^^^^328^348^JSType newType = typeRegistry.createFunctionType ( thisType, returnType, parameterTypes ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P5_Replace_Variable]^JSType newType = typeRegistry.createFunctionType ( thisType, parameterTypes, returnType ) ;^344^345^^^^328^348^JSType newType = typeRegistry.createFunctionType ( thisType, returnType, parameterTypes ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P7_Replace_Invocation]^JSType newType = typeRegistry .getNativeObjectType (  )  ;^344^345^^^^328^348^JSType newType = typeRegistry.createFunctionType ( thisType, returnType, parameterTypes ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P8_Replace_Mix]^JSType newType = typeRegistry.createFunctionType ( thisType, returnType, null ) ;^344^345^^^^328^348^JSType newType = typeRegistry.createFunctionType ( thisType, returnType, parameterTypes ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P14_Delete_Statement]^^331^^^^^328^348^JSTypeRegistry typeRegistry = compiler.getTypeRegistry (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P14_Delete_Statement]^^333^^^^^328^348^List<JSType> parameterTypes = Lists.newArrayList (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P7_Replace_Invocation]^parameterTypes.add ( type .getParameters (  )   ) ;^334^^^^^328^348^parameterTypes.add ( type.getTypeOfThis (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P14_Delete_Statement]^^334^^^^^328^348^parameterTypes.add ( type.getTypeOfThis (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P11_Insert_Donor_Statement]^parameterTypes.add ( param.getJSType (  )  ) ;parameterTypes.add ( type.getTypeOfThis (  )  ) ;^334^^^^^328^348^parameterTypes.add ( type.getTypeOfThis (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P14_Delete_Statement]^^336^337^338^^^328^348^for  ( Node param : type.getParameters (  )  )  { parameterTypes.add ( param.getJSType (  )  ) ; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P5_Replace_Variable]^parameterTypes.add ( functionNode.getJSType (  )  ) ;^337^^^^^328^348^parameterTypes.add ( param.getJSType (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P7_Replace_Invocation]^parameterTypes.add ( param.newString (  )  ) ;^337^^^^^328^348^parameterTypes.add ( param.getJSType (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P14_Delete_Statement]^^337^^^^^328^348^parameterTypes.add ( param.getJSType (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P11_Insert_Donor_Statement]^parameterTypes.add ( type.getTypeOfThis (  )  ) ;parameterTypes.add ( param.getJSType (  )  ) ;^337^^^^^328^348^parameterTypes.add ( param.getJSType (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P7_Replace_Invocation]^parameterTypes.add ( param .setJSType ( newType )   ) ;^337^^^^^328^348^parameterTypes.add ( param.getJSType (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P8_Replace_Mix]^parameterTypes.add ( functionNode.newString (  )  ) ;^337^^^^^328^348^parameterTypes.add ( param.getJSType (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P14_Delete_Statement]^^341^342^^^^328^348^typeRegistry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE ) ; JSType returnType = type.getReturnType (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P7_Replace_Invocation]^JSType returnType = type .getTypeOfThis (  )  ;^342^^^^^328^348^JSType returnType = type.getReturnType (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P14_Delete_Statement]^^342^^^^^328^348^JSType returnType = type.getReturnType (  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P5_Replace_Variable]^JSType newType = typeRegistry.createFunctionType ( thisType, newType, parameterTypes ) ;^344^345^^^^328^348^JSType newType = typeRegistry.createFunctionType ( thisType, returnType, parameterTypes ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P5_Replace_Variable]^JSType newType = parameterTypes.createFunctionType ( thisType, returnType, typeRegistry ) ;^344^345^^^^328^348^JSType newType = typeRegistry.createFunctionType ( thisType, returnType, parameterTypes ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P14_Delete_Statement]^^344^345^^^^328^348^JSType newType = typeRegistry.createFunctionType ( thisType, returnType, parameterTypes ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P5_Replace_Variable]^functionNode.setJSType ( returnType ) ;^346^^^^^328^348^functionNode.setJSType ( newType ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P7_Replace_Invocation]^functionNode.replaceChild ( newType ) ;^346^^^^^328^348^functionNode.setJSType ( newType ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P14_Delete_Statement]^^346^^^^^328^348^functionNode.setJSType ( newType ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P5_Replace_Variable]^JSType newType = typeRegistry.createFunctionType ( thisType, returnType, 0 ) ;^344^345^^^^328^348^JSType newType = typeRegistry.createFunctionType ( thisType, returnType, parameterTypes ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P5_Replace_Variable]^JSType newType = returnType.createFunctionType ( thisType, typeRegistry, parameterTypes ) ;^344^345^^^^328^348^JSType newType = typeRegistry.createFunctionType ( thisType, returnType, parameterTypes ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P8_Replace_Mix]^for  ( Node param : type .getTypeOfThis (  )   )  {^336^^^^^328^348^for  ( Node param : type.getParameters (  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P7_Replace_Invocation]^parameterTypes.add ( param .setJSType ( returnType )   ) ;^337^^^^^328^348^parameterTypes.add ( param.getJSType (  )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P5_Replace_Variable]^JSType newType = typeRegistry.createFunctionType ( parameterTypes, returnType, thisType ) ;^344^345^^^^328^348^JSType newType = typeRegistry.createFunctionType ( thisType, returnType, parameterTypes ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P7_Replace_Invocation]^functionNode .getJSType (  )  ;^346^^^^^328^348^functionNode.setJSType ( newType ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P8_Replace_Mix]^functionNode.replaceChild ( returnType ) ;^346^^^^^328^348^functionNode.setJSType ( newType ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] fixFunctionType [RETURN_TYPE] void   Node functionNode [VARIABLES] ObjectType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  newType  returnType  boolean  Node  functionNode  param  FunctionType  type  List  parameterTypes  
[P5_Replace_Variable]^if  ( NodeUtil.isFunction ( child )  )  {^355^^^^^354^366^if  ( NodeUtil.isFunction ( node )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P7_Replace_Invocation]^if  ( NodeUtil.isVarArgsFunction ( node )  )  {^355^^^^^354^366^if  ( NodeUtil.isFunction ( node )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P9_Replace_Statement]^if  ( !NodeUtil.isGetProp ( node )  )  {^355^^^^^354^366^if  ( NodeUtil.isFunction ( node )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P9_Replace_Statement]^if  ( NodeUtil.isThis ( child )  )  {^355^^^^^354^366^if  ( NodeUtil.isFunction ( node )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P15_Unwrap_Block]^return ;^355^356^357^^^354^366^if  ( NodeUtil.isFunction ( node )  )  { return; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P16_Remove_Block]^^355^356^357^^^354^366^if  ( NodeUtil.isFunction ( node )  )  { return; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P13_Insert_Block]^if  ( ! ( isGetProp ( node )  )  )  {     return false; }^355^^^^^354^366^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P13_Insert_Block]^if  (  ( functionNode == null )  ||  ( ! ( isFunction ( functionNode )  )  )  )  {     return false; }^355^^^^^354^366^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P13_Insert_Block]^if  ( ! ( isCall ( site )  )  )  {     return false; }^355^^^^^354^366^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P13_Insert_Block]^if  (  ( lValue == null )  ||  ( ! ( isGetProp ( lValue )  )  )  )  {     return false; }^355^^^^^354^366^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P13_Insert_Block]^if  ( isControlStructure ( ancestor )  )  {     return ; }^355^^^^^354^366^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P13_Insert_Block]^if  ( ! ( isPrototypeMethodDefinition ( node )  )  )  {     return ; }^355^^^^^354^366^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P7_Replace_Invocation]^if  ( NodeUtil .isVarArgsFunction ( child )   )  {^355^^^^^354^366^if  ( NodeUtil.isFunction ( node )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P13_Insert_Block]^if  ( isFunction ( node )  )  {     return ; }^355^^^^^354^366^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P7_Replace_Invocation]^if  ( NodeUtil.isCall ( child )  )  {^360^^^^^354^366^if  ( NodeUtil.isThis ( child )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P8_Replace_Mix]^if  ( NodeUtil .isCall ( 1 )   )  {^360^^^^^354^366^if  ( NodeUtil.isThis ( child )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P9_Replace_Statement]^if  ( !NodeUtil.isGetProp ( node )  )  {^360^^^^^354^366^if  ( NodeUtil.isThis ( child )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P9_Replace_Statement]^if  ( NodeUtil.isFunction ( node )  )  {^360^^^^^354^366^if  ( NodeUtil.isThis ( child )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P15_Unwrap_Block]^node.replaceChild(child, com.google.javascript.rhino.Node.newString(Token.NAME, name));^360^361^362^363^364^354^366^if  ( NodeUtil.isThis ( child )  )  { node.replaceChild ( child, Node.newString ( Token.NAME, name )  ) ; } else { replaceReferencesToThis ( child, name ) ; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P16_Remove_Block]^^360^361^362^363^364^354^366^if  ( NodeUtil.isThis ( child )  )  { node.replaceChild ( child, Node.newString ( Token.NAME, name )  ) ; } else { replaceReferencesToThis ( child, name ) ; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P5_Replace_Variable]^replaceReferencesToThis ( node, name ) ;^363^^^^^354^366^replaceReferencesToThis ( child, name ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P5_Replace_Variable]^replaceReferencesToThis (  name ) ;^363^^^^^354^366^replaceReferencesToThis ( child, name ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P5_Replace_Variable]^replaceReferencesToThis ( child ) ;^363^^^^^354^366^replaceReferencesToThis ( child, name ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P5_Replace_Variable]^replaceReferencesToThis ( name, child ) ;^363^^^^^354^366^replaceReferencesToThis ( child, name ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P7_Replace_Invocation]^rewriteDefinition ( child, name ) ;^363^^^^^354^366^replaceReferencesToThis ( child, name ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P14_Delete_Statement]^^363^^^^^354^366^replaceReferencesToThis ( child, name ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P11_Insert_Donor_Statement]^replaceReferencesToThis ( body, self ) ;replaceReferencesToThis ( child, name ) ;^363^^^^^354^366^replaceReferencesToThis ( child, name ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P5_Replace_Variable]^node.replaceChild (  Node.newString ( Token.NAME, name )  ) ;^361^^^^^354^366^node.replaceChild ( child, Node.newString ( Token.NAME, name )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P5_Replace_Variable]^node.replaceChild ( child, Node.newString ( Token.NAME )  ) ;^361^^^^^354^366^node.replaceChild ( child, Node.newString ( Token.NAME, name )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P7_Replace_Invocation]^node.replaceChild ( child, Node.removeChild ( Token.NAME, name )  ) ;^361^^^^^354^366^node.replaceChild ( child, Node.newString ( Token.NAME, name )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P8_Replace_Mix]^node.replaceChild ( node, Node.newString ( Token.NAME, name )  ) ;^361^^^^^354^366^node.replaceChild ( child, Node.newString ( Token.NAME, name )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P14_Delete_Statement]^^361^^^^^354^366^node.replaceChild ( child, Node.newString ( Token.NAME, name )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P5_Replace_Variable]^for  ( Node child : child.children (  )  )  {^359^^^^^354^366^for  ( Node child : node.children (  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P7_Replace_Invocation]^for  ( Node child : node.newString (  )  )  {^359^^^^^354^366^for  ( Node child : node.children (  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P7_Replace_Invocation]^for  ( Node child : node .addChildToFront (  )   )  {^359^^^^^354^366^for  ( Node child : node.children (  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P8_Replace_Mix]^for  ( Node child : child.newString (  )  )  {^359^^^^^354^366^for  ( Node child : node.children (  )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P14_Delete_Statement]^^359^360^361^362^363^354^366^for  ( Node child : node.children (  )  )  { if  ( NodeUtil.isThis ( child )  )  { node.replaceChild ( child, Node.newString ( Token.NAME, name )  ) ; } else { replaceReferencesToThis ( child, name ) ; }^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P5_Replace_Variable]^if  ( NodeUtil.isThis ( node )  )  {^360^^^^^354^366^if  ( NodeUtil.isThis ( child )  )  {^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P13_Insert_Block]^if  ( ! ( isGetProp ( node )  )  )  {     return false; }^360^^^^^354^366^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P13_Insert_Block]^if  ( isFunction ( node )  )  {     return ; }^360^^^^^354^366^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P13_Insert_Block]^if  ( isControlStructure ( ancestor )  )  {     return ; }^360^^^^^354^366^[Delete]^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P7_Replace_Invocation]^node.replaceChild ( child, Node .getParent (  )   ) ;^361^^^^^354^366^node.replaceChild ( child, Node.newString ( Token.NAME, name )  ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
[P8_Replace_Mix]^rewriteDefinition ( node, name ) ;^363^^^^^354^366^replaceReferencesToThis ( child, name ) ;^[CLASS] DevirtualizePrototypeMethods  [METHOD] replaceReferencesToThis [RETURN_TYPE] void   Node node String name [VARIABLES] AbstractCompiler  compiler  String  name  boolean  Node  child  node  
