[P8_Replace_Mix]^private  DiagnosticType type;^31^^^^^26^36^private final DiagnosticType type;^[CLASS] JSError   [VARIABLES] 
[P1_Replace_Type]^public final char description;^34^^^^^29^39^public final String description;^[CLASS] JSError   [VARIABLES] 
[P1_Replace_Type]^public final char sourceName;^37^^^^^32^42^public final String sourceName;^[CLASS] JSError   [VARIABLES] 
[P1_Replace_Type]^public final  short  lineNumber;^40^^^^^35^45^public final int lineNumber;^[CLASS] JSError   [VARIABLES] 
[P8_Replace_Mix]^private final CheckLevel level;^43^^^^^38^48^public final CheckLevel level;^[CLASS] JSError   [VARIABLES] 
[P1_Replace_Type]^private final  long  charno;^46^^^^^41^51^private final int charno;^[CLASS] JSError   [VARIABLES] 
[P8_Replace_Mix]^this.type =  null;^168^^^^^166^174^this.type = type;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P7_Replace_Invocation]^this.description = type .format ( arguments )^169^^^^^166^174^this.description = type.format.format ( arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P8_Replace_Mix]^this.description =  null.format.format ( arguments ) ;^169^^^^^166^174^this.description = type.format.format ( arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P14_Delete_Statement]^^169^170^171^172^173^166^174^this.description = type.format.format ( arguments ) ; this.lineNumber = lineno; this.charno = charno; this.sourceName = sourceName; this.level = level == null ? type.level : level; }^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^this.lineNumber = lineNumber;^170^^^^^166^174^this.lineNumber = lineno;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P8_Replace_Mix]^this.charno =  lineno;^171^^^^^166^174^this.charno = charno;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^this.sourceName = description;^172^^^^^166^174^this.sourceName = sourceName;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P2_Replace_Operator]^this.level = level != null ? type.level : level;^173^^^^^166^174^this.level = level == null ? type.level : level;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P6_Replace_Expression]^this.level = level ( level;^173^^^^^166^174^this.level = level == null ? type.level : level;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P8_Replace_Mix]^this.level = level == this ? type.level : level;^173^^^^^166^174^this.level = level == null ? type.level : level;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName int lineno int charno DiagnosticType type CheckLevel level  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P2_Replace_Operator]^this ( sourceName, ( node == null )  ? node.getLineno (  )  : -1, ( node == null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P3_Replace_Literal]^this ( sourceName, ( node != null )  ? node.getLineno (  )  : --7, ( node != null )  ? node.getCharno (  )  : --7, type, null, arguments ) ;^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P3_Replace_Literal]^this ( sourceName, ( node != null )  ? node.getLineno (  )  : --4, ( node != null )  ? node.getCharno (  )  : --4, type, null, arguments ) ;^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^this (  ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1,  null, arguments ) ;^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null ) ;^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^this ( type, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, sourceName, null, arguments ) ;^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^this ( sourceName, ( arguments != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, node ) ;^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^this ( sourceName, ( type != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, node, null, arguments ) ;^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P6_Replace_Expression]^this ( sourceName, ( node ! =  -1, ( node != null )  ? node.getCharno (  )^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P6_Replace_Expression]^this ( sourceName, ( node ! =  node.getLineno (  )  ;^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P8_Replace_Mix]^this ( description, ( node != null )  ? node .getCharno (  )   : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^184^185^186^187^^182^188^this ( sourceName, ( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P6_Replace_Expression]^( node ! =  -1, ( node != null )  ? node.getCharno (  )^185^186^187^^^182^188^( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P6_Replace_Expression]^( node ! =  node.getLineno (  )  ;^185^186^187^^^182^188^( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P7_Replace_Invocation]^( node != null )  ? node .getCharno (  )   : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^185^186^187^^^182^188^( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P14_Delete_Statement]^^185^186^187^^^182^188^( node != null )  ? node.getLineno (  )  : -1, ( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P6_Replace_Expression]^( node ! =  -1, type, null, arguments ) ;^186^187^^^^182^188^( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P6_Replace_Expression]^( node ! =  node.getCharno (  )  ;^186^187^^^^182^188^( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P8_Replace_Mix]^( node != null )  ? node .getLineno (  )   : -1, type, null, arguments ) ;^186^187^^^^182^188^( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P14_Delete_Statement]^^186^187^^^^182^188^( node != null )  ? node.getCharno (  )  : -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] <init> [RETURN_TYPE] String[])   String sourceName Node node DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  node  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P3_Replace_Literal]^return new JSError ( null, --7, --7, type, null, arguments ) ;^70^^^^^69^71^return new JSError ( null, -1, -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P3_Replace_Literal]^return new JSError ( null, -charno, -charno, type, null, arguments ) ;^70^^^^^69^71^return new JSError ( null, -1, -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return return  new JSError ( sourceName, n, type, arguments )  ;^70^^^^^69^71^return new JSError ( null, -1, -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( null, -1, -1,  null, arguments ) ;^70^^^^^69^71^return new JSError ( null, -1, -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( null, -1, -1, type, null ) ;^70^^^^^69^71^return new JSError ( null, -1, -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( null, -1, -1, arguments, null, type ) ;^70^^^^^69^71^return new JSError ( null, -1, -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P8_Replace_Mix]^return new JSError ( true, -1, -1, type, true, arguments ) ;^70^^^^^69^71^return new JSError ( null, -1, -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P3_Replace_Literal]^return new JSError ( null, --3, --3, type, null, arguments ) ;^70^^^^^69^71^return new JSError ( null, -1, -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P3_Replace_Literal]^return new JSError ( null, -5, -5, type, null, arguments ) ;^70^^^^^69^71^return new JSError ( null, -1, -1, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return return  new JSError ( sourceName, n, type, arguments )  ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError (  lineno, charno, type, null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( sourceName,  charno, type, null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( sourceName, lineno,  type, null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( sourceName, lineno, charno,  null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( sourceName, lineno, charno, type, null ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( description, lineno, charno, type, null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( sourceName, lineNumber, charno, type, null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( sourceName, lineno, lineNumber, type, null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( type, lineno, charno, sourceName, null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( sourceName, charno, lineno, type, null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( sourceName, type, charno, lineno, null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( arguments, lineno, charno, type, null, sourceName ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P8_Replace_Mix]^return new JSError ( sourceName, lineno, charno, type, true, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( sourceName, lineno, lineno, type, null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( charno, lineno, sourceName, type, null, arguments ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( sourceName, arguments, charno, type, null, lineno ) ;^84^^^^^82^85^return new JSError ( sourceName, lineno, charno, type, null, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return return  new JSError ( sourceName, n, type, arguments )  ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError (  lineno, charno, type, level, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( sourceName,  charno, type, level, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( sourceName, lineno,  type, level, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( sourceName, lineno, charno,  level, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( sourceName, lineno, charno, type,  arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( sourceName, lineno, charno, type, level ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( description, lineno, charno, type, level, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( sourceName, lineNumber, charno, type, level, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( sourceName, lineno, lineno, type, level, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( type, lineno, charno, sourceName, level, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( sourceName, charno, lineno, type, level, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( sourceName, lineno, charno, arguments, level, type ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( sourceName, lineno, level, type, charno, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( arguments, lineno, charno, type, level, sourceName ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P8_Replace_Mix]^return  new JSError ( description, n, type, arguments )  ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( sourceName, level, charno, type, lineno, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( level, lineno, charno, type, sourceName, arguments ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( sourceName, lineno, arguments, type, level, charno ) ;^98^^^^^96^99^return new JSError ( sourceName, lineno, charno, type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName int lineno int charno CheckLevel level DiagnosticType type  arguments [VARIABLES] String  description  sourceName  String[]  arguments  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return return  new JSError ( null,  ( -1 ) ,  ( -1 ) , type, null, arguments )  ;^111^^^^^109^112^return new JSError ( sourceName, n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError (  n, type, arguments ) ;^111^^^^^109^112^return new JSError ( sourceName, n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( sourceName,  type, arguments ) ;^111^^^^^109^112^return new JSError ( sourceName, n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( sourceName, n,  arguments ) ;^111^^^^^109^112^return new JSError ( sourceName, n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( sourceName, n, type ) ;^111^^^^^109^112^return new JSError ( sourceName, n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( description, n, type, arguments ) ;^111^^^^^109^112^return new JSError ( sourceName, n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return sourceNameew JSError ( n, n, type, arguments ) ;^111^^^^^109^112^return new JSError ( sourceName, n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return typeew JSError ( sourceName, n, n, arguments ) ;^111^^^^^109^112^return new JSError ( sourceName, n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( type, n, sourceName, arguments ) ;^111^^^^^109^112^return new JSError ( sourceName, n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return argumentsew JSError ( sourceName, n, type, n ) ;^111^^^^^109^112^return new JSError ( sourceName, n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P8_Replace_Mix]^return  new JSError ( null,  ( -1 ) ,  ( -1 ) , type, null, arguments )  ;^111^^^^^109^112^return new JSError ( sourceName, n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( arguments, n, type, sourceName ) ;^111^^^^^109^112^return new JSError ( sourceName, n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return return  new JSError ( sourceName, lineno, charno, type, level, arguments )  , n.getCharno (  ) , type, level, arguments ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError (  n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( sourceName.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) ,  level, arguments ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type,  arguments ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( description, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return sourceNameew JSError ( n, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return typeew JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , n, level, arguments ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , arguments, level, type ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , level, type, arguments ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, arguments, level ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P7_Replace_Invocation]^return new JSError ( sourceName, n.getLineno (  ) , n .getLineno (  )  , type, level, arguments ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( arguments, n.getLineno (  ) , n.getCharno (  ) , type, level, sourceName ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P7_Replace_Invocation]^return new JSError ( sourceName, n .getCharno (  )  , n.getCharno (  ) , type, level, arguments ) ;^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P14_Delete_Statement]^^125^126^^^^122^127^return new JSError ( sourceName, n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   String sourceName Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return return  new JSError ( sourceName, lineno, charno, type, level, arguments )  , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) ype, level, arguments ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( t.getSourceName (  ) .getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) ,  level, arguments ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type,  arguments ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return tew JSError ( n.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return argumentsew JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, n ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return typeew JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , n, level, arguments ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, arguments, level ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , arguments, level, type ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P8_Replace_Mix]^return  new JSError ( sourceName, lineno, charno, type, level, arguments )  , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( type.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , t, level, arguments ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return levelew JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, n, arguments ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , level, type, arguments ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P7_Replace_Invocation]^return new JSError ( t.getSourceName (  ) , n .getCharno (  )  , n.getCharno (  ) , type, level, arguments ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P8_Replace_Mix]^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n .getLineno (  )  , type, level, arguments ) ;^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P14_Delete_Statement]^^139^140^^^^137^141^return new JSError ( t.getSourceName (  ) , n.getLineno (  ) , n.getCharno (  ) , type, level, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n CheckLevel level DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return return  new JSError ( sourceName, n, type, arguments )  , n, type, arguments ) ;^153^^^^^151^154^return new JSError ( t.getSourceName (  ) , n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( t.getSourceName (  ) , nype, arguments ) ;^153^^^^^151^154^return new JSError ( t.getSourceName (  ) , n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( t.getSourceName (  ) ,  type, arguments ) ;^153^^^^^151^154^return new JSError ( t.getSourceName (  ) , n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( t.getSourceName (  ) , n,  arguments ) ;^153^^^^^151^154^return new JSError ( t.getSourceName (  ) , n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P4_Replace_Constructor]^return new JSError ( t.getSourceName (  ) , n, type ) ;^153^^^^^151^154^return new JSError ( t.getSourceName (  ) , n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return tew JSError ( n.getSourceName (  ) , n, type, arguments ) ;^153^^^^^151^154^return new JSError ( t.getSourceName (  ) , n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return typeew JSError ( t.getSourceName (  ) , n, n, arguments ) ;^153^^^^^151^154^return new JSError ( t.getSourceName (  ) , n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( arguments.getSourceName (  ) , n, type, t ) ;^153^^^^^151^154^return new JSError ( t.getSourceName (  ) , n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P8_Replace_Mix]^return  new JSError ( sourceName, n, type, arguments )  , n, type, arguments ) ;^153^^^^^151^154^return new JSError ( t.getSourceName (  ) , n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( type.getSourceName (  ) , n, t, arguments ) ;^153^^^^^151^154^return new JSError ( t.getSourceName (  ) , n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return new JSError ( t.getSourceName (  ) , n, arguments, type ) ;^153^^^^^151^154^return new JSError ( t.getSourceName (  ) , n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P14_Delete_Statement]^^153^^^^^151^154^return new JSError ( t.getSourceName (  ) , n, type, arguments ) ;^[CLASS] JSError  [METHOD] make [RETURN_TYPE] JSError   NodeTraversal t Node n DiagnosticType type  arguments [VARIABLES] boolean  NodeTraversal  t  DiagnosticType  type  CheckLevel  level  Node  n  String  description  sourceName  String[]  arguments  int  charno  lineNumber  lineno  
[P7_Replace_Invocation]^return formatter.formatWarning ( this ) ;^202^^^^^199^210^return formatter.formatError ( this ) ;^[CLASS] JSError  [METHOD] format [RETURN_TYPE] String   CheckLevel level MessageFormatter formatter [VARIABLES] String  description  sourceName  MessageFormatter  formatter  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P7_Replace_Invocation]^return formatter.formatError ( this ) ;^205^^^^^199^210^return formatter.formatWarning ( this ) ;^[CLASS] JSError  [METHOD] format [RETURN_TYPE] String   CheckLevel level MessageFormatter formatter [VARIABLES] String  description  sourceName  MessageFormatter  formatter  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P8_Replace_Mix]^return false;^208^^^^^199^210^return null;^[CLASS] JSError  [METHOD] format [RETURN_TYPE] String   CheckLevel level MessageFormatter formatter [VARIABLES] String  description  sourceName  MessageFormatter  formatter  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P8_Replace_Mix]^return formatter .formatWarning ( null )  ;^202^^^^^199^210^return formatter.formatError ( this ) ;^[CLASS] JSError  [METHOD] format [RETURN_TYPE] String   CheckLevel level MessageFormatter formatter [VARIABLES] String  description  sourceName  MessageFormatter  formatter  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P14_Delete_Statement]^^205^206^207^208^209^199^210^return formatter.formatWarning ( this ) ;  default: return null; }^[CLASS] JSError  [METHOD] format [RETURN_TYPE] String   CheckLevel level MessageFormatter formatter [VARIABLES] String  description  sourceName  MessageFormatter  formatter  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P2_Replace_Operator]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  >=  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P2_Replace_Operator]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  &&  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P2_Replace_Operator]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  <  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P2_Replace_Operator]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  >>  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P2_Replace_Operator]^return type.key  ^  ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P2_Replace_Operator]^return type.key + ". " + description + " at " + ( sourceName != null || sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P2_Replace_Operator]^return type.key + ". " + description + " at " + ( sourceName == null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P2_Replace_Operator]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  >= 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P2_Replace_Operator]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber == -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P3_Replace_Literal]^return type.key + "" + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P3_Replace_Literal]^return type.key + ". " + description + "at" + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P3_Replace_Literal]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 1 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P3_Replace_Literal]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P3_Replace_Literal]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != - ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P3_Replace_Literal]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length() - 7  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P6_Replace_Expression]^return type.key + ". " + description + " at " + ( sourceName ! =  " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P6_Replace_Expression]^return type.key + ". " + description + " at " + ( sourceName ! =  sourceName ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P7_Replace_Invocation]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.hashCode (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P7_Replace_Invocation]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.length ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P8_Replace_Mix]^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  %  0.5  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.length ( lineNumber )  : " ( unknown line ) " ) ;^215^216^217^218^^213^219^return type.key + ". " + description + " at " + ( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P3_Replace_Literal]^( sourceName != null && sourceName.length() + 0  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^216^217^218^^^213^219^( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^( description != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^216^217^218^^^213^219^( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P6_Replace_Expression]^( sourceName ! =  " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )^216^217^218^^^213^219^( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P6_Replace_Expression]^( sourceName ! =  sourceName ;^216^217^218^^^213^219^( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P7_Replace_Invocation]^( sourceName != null && sourceName.hashCode (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^216^217^218^^^213^219^( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P14_Delete_Statement]^^216^217^218^^^213^219^( sourceName != null && sourceName.length (  )  > 0 ? sourceName : " ( unknown source ) " )  + " line " + ( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P6_Replace_Expression]^( lineNumber ! =  " ( unknown line ) " ) ;^218^^^^^213^219^( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P6_Replace_Expression]^( lineNumber ! =  String.valueOf ( lineNumber )  ;^218^^^^^213^219^( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P7_Replace_Invocation]^( lineNumber != -1 ? String.length ( lineNumber )  : " ( unknown line ) " ) ;^218^^^^^213^219^( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P8_Replace_Mix]^( lineno != -1 ? String.length ( lineNumber )  : " ( unknown line ) " ) ;^218^^^^^213^219^( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P14_Delete_Statement]^^218^^^^^213^219^( lineNumber != -1 ? String.valueOf ( lineNumber )  : " ( unknown line ) " ) ;^[CLASS] JSError  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P5_Replace_Variable]^return lineno;^225^^^^^224^226^return charno;^[CLASS] JSError  [METHOD] getCharno [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  
[P2_Replace_Operator]^if  ( this != o )  {^231^^^^^216^246^if  ( this == o )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P15_Unwrap_Block]^return true;^231^232^233^^^216^246^if  ( this == o )  { return true; }^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P16_Remove_Block]^^231^232^233^^^216^246^if  ( this == o )  { return true; }^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( charno )  !=  ( jsError.charno )  )  {     return false; }^231^^^^^216^246^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( level )  !=  ( jsError.level )  )  {     return false; }^231^^^^^216^246^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P3_Replace_Literal]^return false;^232^^^^^217^247^return true;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P2_Replace_Operator]^if  ( o == null && getClass (  )  != o.getClass (  )  )  {^234^^^^^219^249^if  ( o == null || getClass (  )  != o.getClass (  )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P2_Replace_Operator]^if  ( o != null || getClass (  )  != o.getClass (  )  )  {^234^^^^^219^249^if  ( o == null || getClass (  )  != o.getClass (  )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P2_Replace_Operator]^if  ( o == null || getClass (  )  == o.getClass (  )  )  {^234^^^^^219^249^if  ( o == null || getClass (  )  != o.getClass (  )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P6_Replace_Expression]^if  ( o == null ) {^234^^^^^219^249^if  ( o == null || getClass (  )  != o.getClass (  )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P6_Replace_Expression]^if  (  getClass (  )  != o.getClass (  )  )  {^234^^^^^219^249^if  ( o == null || getClass (  )  != o.getClass (  )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P7_Replace_Invocation]^if  ( o == null || getClass (  )  != o.Object (  )  )  {^234^^^^^219^249^if  ( o == null || getClass (  )  != o.getClass (  )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P15_Unwrap_Block]^return false;^234^235^236^^^219^249^if  ( o == null || getClass (  )  != o.getClass (  )  )  { return false; }^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P16_Remove_Block]^^234^235^236^^^219^249^if  ( o == null || getClass (  )  != o.getClass (  )  )  { return false; }^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( charno )  !=  ( jsError.charno )  )  {     return false; }^234^^^^^219^249^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( level )  !=  ( jsError.level )  )  {     return false; }^234^^^^^219^249^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P3_Replace_Literal]^return true;^235^^^^^220^250^return false;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P2_Replace_Operator]^if  ( charno <= jsError.charno )  {^240^^^^^225^255^if  ( charno != jsError.charno )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( lineno != jsError.charno )  {^240^^^^^225^255^if  ( charno != jsError.charno )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( charno != lineno )  {^240^^^^^225^255^if  ( charno != jsError.charno )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( charno != jsError.charno.charno )  {^240^^^^^225^255^if  ( charno != jsError.charno )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( jsError.charno != charno )  {^240^^^^^225^255^if  ( charno != jsError.charno )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( charno != jsError )  {^240^^^^^225^255^if  ( charno != jsError.charno )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P9_Replace_Statement]^if  ( level != jsError.level )  {^240^^^^^225^255^if  ( charno != jsError.charno )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P15_Unwrap_Block]^return false;^240^241^242^^^225^255^if  ( charno != jsError.charno )  { return false; }^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P16_Remove_Block]^^240^241^242^^^225^255^if  ( charno != jsError.charno )  { return false; }^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  ( ! ( description.equals ( jsError.description )  )  )  {     return false; }^240^^^^^225^255^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( level )  !=  ( jsError.level )  )  {     return false; }^240^^^^^225^255^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( this )  == o )  {     return true; }^240^^^^^225^255^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( o == null )  ||  (  ( getClass (  )  )  !=  ( o.getClass (  )  )  )  )  {     return false; }^240^^^^^225^255^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( lineNumber )  !=  ( jsError.lineNumber )  )  {     return false; }^240^^^^^225^255^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  ( ! ( type.equals ( jsError.type )  )  )  {     return false; }^240^^^^^225^255^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P3_Replace_Literal]^return true;^241^^^^^226^256^return false;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P2_Replace_Operator]^if  ( lineNumber == jsError.lineNumber )  {^243^^^^^228^258^if  ( lineNumber != jsError.lineNumber )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( lineno != jsError.lineNumber )  {^243^^^^^228^258^if  ( lineNumber != jsError.lineNumber )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( lineNumber != lineno )  {^243^^^^^228^258^if  ( lineNumber != jsError.lineNumber )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( jsError != lineNumber.lineNumber )  {^243^^^^^228^258^if  ( lineNumber != jsError.lineNumber )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( jsError.lineNumber != lineNumber )  {^243^^^^^228^258^if  ( lineNumber != jsError.lineNumber )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P9_Replace_Statement]^if  ( level != jsError.level )  {^243^^^^^228^258^if  ( lineNumber != jsError.lineNumber )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P15_Unwrap_Block]^return false;^243^244^245^^^228^258^if  ( lineNumber != jsError.lineNumber )  { return false; }^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P16_Remove_Block]^^243^244^245^^^228^258^if  ( lineNumber != jsError.lineNumber )  { return false; }^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( charno )  !=  ( jsError.charno )  )  {     return false; }^243^^^^^228^258^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  ( ! ( description.equals ( jsError.description )  )  )  {     return false; }^243^^^^^228^258^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( level )  !=  ( jsError.level )  )  {     return false; }^243^^^^^228^258^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  ( ! ( type.equals ( jsError.type )  )  )  {     return false; }^243^^^^^228^258^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P3_Replace_Literal]^return true;^244^^^^^229^259^return false;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( !description.equals ( jsError.sourceName )  )  {^246^^^^^231^261^if  ( !description.equals ( jsError.description )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( !description.equals ( sourceName )  )  {^246^^^^^231^261^if  ( !description.equals ( jsError.description )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( !description.equals ( jsError.description.description )  )  {^246^^^^^231^261^if  ( !description.equals ( jsError.description )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( !description.equals ( jsError )  )  {^246^^^^^231^261^if  ( !description.equals ( jsError.description )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P7_Replace_Invocation]^if  ( !description.valueOf ( jsError.description )  )  {^246^^^^^231^261^if  ( !description.equals ( jsError.description )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P15_Unwrap_Block]^return false;^246^247^248^^^231^261^if  ( !description.equals ( jsError.description )  )  { return false; }^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P16_Remove_Block]^^246^247^248^^^231^261^if  ( !description.equals ( jsError.description )  )  { return false; }^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( charno )  !=  ( jsError.charno )  )  {     return false; }^246^^^^^231^261^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( level )  !=  ( jsError.level )  )  {     return false; }^246^^^^^231^261^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( lineNumber )  !=  ( jsError.lineNumber )  )  {     return false; }^246^^^^^231^261^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  ( ! ( type.equals ( jsError.type )  )  )  {     return false; }^246^^^^^231^261^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P3_Replace_Literal]^return true;^247^^^^^232^262^return false;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  ( ! ( description.equals ( jsError.description )  )  )  {     return false; }^246^^^^^231^261^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P2_Replace_Operator]^if  ( level <= jsError.level )  {^249^^^^^234^264^if  ( level != jsError.level )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( level != level )  {^249^^^^^234^264^if  ( level != jsError.level )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( level != jsError.level.level )  {^249^^^^^234^264^if  ( level != jsError.level )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( jsError != level.level )  {^249^^^^^234^264^if  ( level != jsError.level )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( jsError.level != level )  {^249^^^^^234^264^if  ( level != jsError.level )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P9_Replace_Statement]^if  ( charno != jsError.charno )  {^249^^^^^234^264^if  ( level != jsError.level )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P9_Replace_Statement]^if  ( lineNumber != jsError.lineNumber )  {^249^^^^^234^264^if  ( level != jsError.level )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P15_Unwrap_Block]^return false;^249^250^251^^^234^264^if  ( level != jsError.level )  { return false; }^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P16_Remove_Block]^^249^250^251^^^234^264^if  ( level != jsError.level )  { return false; }^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( charno )  !=  ( jsError.charno )  )  {     return false; }^249^^^^^234^264^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  ( ! ( description.equals ( jsError.description )  )  )  {     return false; }^249^^^^^234^264^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( this )  == o )  {     return true; }^249^^^^^234^264^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( o == null )  ||  (  ( getClass (  )  )  !=  ( o.getClass (  )  )  )  )  {     return false; }^249^^^^^234^264^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( lineNumber )  !=  ( jsError.lineNumber )  )  {     return false; }^249^^^^^234^264^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  ( ! ( type.equals ( jsError.type )  )  )  {     return false; }^249^^^^^234^264^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P3_Replace_Literal]^return true;^250^^^^^235^265^return false;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P2_Replace_Operator]^if  ( sourceName == null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName == null )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P2_Replace_Operator]^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName == null )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( description != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( sourceName != null ? !sourceName.equals ( description ) : jsError.sourceName != null )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName.sourceName ) : jsError != null )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( jsError.sourceName != null ? !sourceName.equals ( sourceName ) : jsError.sourceName != null )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P6_Replace_Expression]^if  ( jsError.sourceName != null )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P7_Replace_Invocation]^if  ( sourceName != null ? !sourceName.valueOf ( jsError.sourceName ) : jsError.sourceName != null )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P8_Replace_Mix]^if  ( sourceName != true ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != true )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P15_Unwrap_Block]^return false;^252^253^254^255^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  { return false; }^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P16_Remove_Block]^^252^253^254^255^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  { return false; }^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P3_Replace_Literal]^return true;^254^^^^^252^255^return false;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P3_Replace_Literal]^return true;^254^^^^^239^269^return false;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( jsError != null ? !sourceName.equals ( sourceName.sourceName ) : jsError.sourceName != null )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P6_Replace_Expression]^if  ( sourceName ! =  jsError.sourceName != null )  {^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P6_Replace_Expression]^if  ( sourceName ! =  !sourceName.equals ( jsError.sourceName ) ;^252^253^^^^237^267^if  ( sourceName != null ? !sourceName.equals ( jsError.sourceName ) : jsError.sourceName != null )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P8_Replace_Mix]^if  ( type.equals ( jsError.type )  )  {^256^^^^^241^271^if  ( !type.equals ( jsError.type )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P15_Unwrap_Block]^return false;^256^257^258^^^241^271^if  ( !type.equals ( jsError.type )  )  { return false; }^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P16_Remove_Block]^^256^257^258^^^241^271^if  ( !type.equals ( jsError.type )  )  { return false; }^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( charno )  !=  ( jsError.charno )  )  {     return false; }^256^^^^^241^271^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  ( ! ( description.equals ( jsError.description )  )  )  {     return false; }^256^^^^^241^271^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( level )  !=  ( jsError.level )  )  {     return false; }^256^^^^^241^271^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P13_Insert_Block]^if  (  ( lineNumber )  !=  ( jsError.lineNumber )  )  {     return false; }^256^^^^^241^271^[Delete]^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P3_Replace_Literal]^return true;^257^^^^^242^272^return false;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P5_Replace_Variable]^if  ( !type.equals ( type )  )  {^256^^^^^241^271^if  ( !type.equals ( jsError.type )  )  {^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P3_Replace_Literal]^return false;^260^^^^^245^275^return true;^[CLASS] JSError  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  DiagnosticType  type  CheckLevel  level  Object  o  String  description  sourceName  int  charno  lineNumber  lineno  JSError  jsError  
[P1_Replace_Type]^short  result = type.hashCode (  ) ;^266^^^^^264^273^int result = type.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P7_Replace_Invocation]^int result = type .hashCode (  )  ;^266^^^^^264^273^int result = type.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P14_Delete_Statement]^^266^^^^^264^273^int result = type.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^result = 31 * result + level.hashCode (  ) ;int result = type.hashCode (  ) ;^266^^^^^264^273^int result = type.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^result = 31 * result + description.hashCode (  ) ;int result = type.hashCode (  ) ;^266^^^^^264^273^int result = type.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P2_Replace_Operator]^result = 31 * result + description.hashCode (  ==  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P2_Replace_Operator]^result = 31 / result + description.hashCode (  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P3_Replace_Literal]^result = result * result + description.hashCode (  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P5_Replace_Variable]^result = 31 * lineno + description.hashCode (  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P5_Replace_Variable]^result = 31 * result + sourceName.hashCode (  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P5_Replace_Variable]^result = 31 * description + result.hashCode (  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P7_Replace_Invocation]^result = 31 * result + description.length (  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P7_Replace_Invocation]^result = 31 * result + description .hashCode (  )  ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P8_Replace_Mix]^result = 12 * result + description.hashCode (  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^result = 31 * result + lineNumber;result = 31 * result + description.hashCode (  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^result = 31 * result + level.hashCode (  ) ;result = 31 * result + description.hashCode (  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^result = 31 * result + charno;result = 31 * result + description.hashCode (  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;result = 31 * result + description.hashCode (  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P14_Delete_Statement]^^267^268^^^^264^273^result = 31 * result + description.hashCode (  ) ; result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^int result = type.hashCode (  ) ;result = 31 * result + description.hashCode (  ) ;^267^^^^^264^273^result = 31 * result + description.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P2_Replace_Operator]^result = 31 * result +   instanceof   ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P2_Replace_Operator]^result = 31 - result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P2_Replace_Operator]^result = 31 * result +  ( sourceName == null ? sourceName.hashCode (  )  : 0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P3_Replace_Literal]^result = charno * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P3_Replace_Literal]^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : lineno ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P5_Replace_Variable]^result = 31 * lineno +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P5_Replace_Variable]^result = 31 * result +  ( description != null ? sourceName.hashCode (  )  : 0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P5_Replace_Variable]^result = 31 * sourceName +  ( result != null ? sourceName.hashCode (  )  : 0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P6_Replace_Expression]^result  =  0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P6_Replace_Expression]^result  =  sourceName.hashCode (  )  ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P7_Replace_Invocation]^result = 31 * result +  ( sourceName != null ? sourceName.length (  )  : 0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P8_Replace_Mix]^result = 1 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^result = 31 * result + level.hashCode (  ) ;result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^result = 31 * result + description.hashCode (  ) ;result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P8_Replace_Mix]^result = 31 * result +  ( description != null ? sourceName.length (  )  : 0 ) ;^268^^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P14_Delete_Statement]^^268^269^^^^264^273^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ; result = 31 * result + lineNumber;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P2_Replace_Operator]^result = 31 + result + lineNumber;^269^^^^^264^273^result = 31 * result + lineNumber;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P3_Replace_Literal]^result = 33 * result + lineNumber;^269^^^^^264^273^result = 31 * result + lineNumber;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P5_Replace_Variable]^result = 31 * lineno + lineNumber;^269^^^^^264^273^result = 31 * result + lineNumber;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P5_Replace_Variable]^result = 31 * result + lineno;^269^^^^^264^273^result = 31 * result + lineNumber;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P5_Replace_Variable]^result = 31 * lineNumber + result;^269^^^^^264^273^result = 31 * result + lineNumber;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P8_Replace_Mix]^result = 9 * result + lineNumber;^269^^^^^264^273^result = 31 * result + lineNumber;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^result = 31 * result + level.hashCode (  ) ;result = 31 * result + lineNumber;^269^^^^^264^273^result = 31 * result + lineNumber;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^result = 31 * result + charno;result = 31 * result + lineNumber;^269^^^^^264^273^result = 31 * result + lineNumber;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^result = 31 * result + description.hashCode (  ) ;result = 31 * result + lineNumber;^269^^^^^264^273^result = 31 * result + lineNumber;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P2_Replace_Operator]^result = 31 * result + level.hashCode (  |  ) ;^270^^^^^264^273^result = 31 * result + level.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P2_Replace_Operator]^result = 31 - result + level.hashCode (  ) ;^270^^^^^264^273^result = 31 * result + level.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P3_Replace_Literal]^result = 27 * result + level.hashCode (  ) ;^270^^^^^264^273^result = 31 * result + level.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P5_Replace_Variable]^result = 31 * lineno + level.hashCode (  ) ;^270^^^^^264^273^result = 31 * result + level.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P5_Replace_Variable]^result = 31 * level + result.hashCode (  ) ;^270^^^^^264^273^result = 31 * result + level.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P7_Replace_Invocation]^result = 31 * result + level .hashCode (  )  ;^270^^^^^264^273^result = 31 * result + level.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P8_Replace_Mix]^result = 31 * 4 * result + level.hashCode (  ) ;^270^^^^^264^273^result = 31 * result + level.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^result = 31 * result + lineNumber;result = 31 * result + level.hashCode (  ) ;^270^^^^^264^273^result = 31 * result + level.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^result = 31 * result + charno;result = 31 * result + level.hashCode (  ) ;^270^^^^^264^273^result = 31 * result + level.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^result = 31 * result + description.hashCode (  ) ;result = 31 * result + level.hashCode (  ) ;^270^^^^^264^273^result = 31 * result + level.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^result = 31 * result +  ( sourceName != null ? sourceName.hashCode (  )  : 0 ) ;result = 31 * result + level.hashCode (  ) ;^270^^^^^264^273^result = 31 * result + level.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P14_Delete_Statement]^^270^271^^^^264^273^result = 31 * result + level.hashCode (  ) ; result = 31 * result + charno;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^int result = type.hashCode (  ) ;result = 31 * result + level.hashCode (  ) ;^270^^^^^264^273^result = 31 * result + level.hashCode (  ) ;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P2_Replace_Operator]^result = 31 / result + charno;^271^^^^^264^273^result = 31 * result + charno;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P3_Replace_Literal]^result = charno * result + charno;^271^^^^^264^273^result = 31 * result + charno;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P5_Replace_Variable]^result = 31 * lineno + charno;^271^^^^^264^273^result = 31 * result + charno;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P5_Replace_Variable]^result = 31 * result + lineno;^271^^^^^264^273^result = 31 * result + charno;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P5_Replace_Variable]^result = 31 * charno + result;^271^^^^^264^273^result = 31 * result + charno;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P8_Replace_Mix]^result = 0 * result + charno;^271^^^^^264^273^result = 31 * result + charno;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^result = 31 * result + lineNumber;result = 31 * result + charno;^271^^^^^264^273^result = 31 * result + charno;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^result = 31 * result + level.hashCode (  ) ;result = 31 * result + charno;^271^^^^^264^273^result = 31 * result + charno;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P11_Insert_Donor_Statement]^result = 31 * result + description.hashCode (  ) ;result = 31 * result + charno;^271^^^^^264^273^result = 31 * result + charno;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
[P5_Replace_Variable]^return lineno;^272^^^^^264^273^return result;^[CLASS] JSError  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  description  sourceName  boolean  DiagnosticType  type  CheckLevel  level  int  charno  lineNumber  lineno  result  
