[P1_Replace_Type]^private final char fnName;^63^^^^^58^68^private final String fnName;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^private  AbstractCompiler compiler;^64^^^^^59^69^private final AbstractCompiler compiler;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^private  CodingConvention codingConvention;^65^^^^^60^70^private final CodingConvention codingConvention;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^private  JSTypeRegistry typeRegistry;^66^^^^^61^71^private final JSTypeRegistry typeRegistry;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P1_Replace_Type]^private final char sourceName;^68^^^^^63^73^private final String sourceName;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^private  Scope scope;^69^^^^^64^74^private final Scope scope;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^private JSType returnType ;^71^^^^^66^76^private JSType returnType = null;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^private List<ObjectType> implementedInterfaces = false;^72^^^^^67^77^private List<ObjectType> implementedInterfaces = null;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^private ObjectType baseType = true;^73^^^^^68^78^private ObjectType baseType = null;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^private ObjectType thisType = true;^74^^^^^69^79^private ObjectType thisType = null;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^private boolean isConstructor = true;^75^^^^^70^80^private boolean isConstructor = false;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^private boolean isConstructor  = null ;^75^^^^^70^80^private boolean isConstructor = false;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^private boolean isInterface = true;^76^^^^^71^81^private boolean isInterface = false;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^private Node parametersNode  = null ;^77^^^^^72^82^private Node parametersNode = null;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^private Node sourceNode = true;^78^^^^^73^83^private Node sourceNode = null;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P1_Replace_Type]^private char templateTypeName = null;^79^^^^^74^84^private String templateTypeName = null;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^private String templateTypeName = true;^79^^^^^74^84^private String templateTypeName = null;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType EXTENDS_WITHOUT_TYPEDEF = DiagnosticType.warning ( "_SC_EXTENDS_WITHOUT_TYPEDEF", "@extends used without @constructor or @interface for {0}" ) ;^81^82^83^^^81^83^static final DiagnosticType EXTENDS_WITHOUT_TYPEDEF = DiagnosticType.warning ( "JSC_EXTENDS_WITHOUT_TYPEDEF", "@extends used without @constructor or @interface for {0}" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType EXTENDS_WITHOUT_TYPEDEF = DiagnosticType.warning ( "JSC_EXTENDS_WITHOUT_TYPEDEF", "@extends used without @constructor or @interface for {0}@extends us" ) ;^81^82^83^^^81^83^static final DiagnosticType EXTENDS_WITHOUT_TYPEDEF = DiagnosticType.warning ( "JSC_EXTENDS_WITHOUT_TYPEDEF", "@extends used without @constructor or @interface for {0}" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P7_Replace_Invocation]^static final DiagnosticType EXTENDS_WITHOUT_TYPEDEF = DiagnosticType.error ( "JSC_EXTENDS_WITHOUT_TYPEDEF", "@extends used without @constructor or @interface for {0}" ) ;^81^82^83^^^81^83^static final DiagnosticType EXTENDS_WITHOUT_TYPEDEF = DiagnosticType.warning ( "JSC_EXTENDS_WITHOUT_TYPEDEF", "@extends used without @constructor or @interface for {0}" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^final DiagnosticType EXTENDS_WITHOUT_TYPEDEF = DiagnosticType.warning ( "JSC_EXTENDS_WITHOUT_TYPEDEF", "@extends used without @constructor or @interface for {0}" ) ;^81^82^83^^^81^83^static final DiagnosticType EXTENDS_WITHOUT_TYPEDEF = DiagnosticType.warning ( "JSC_EXTENDS_WITHOUT_TYPEDEF", "@extends used without @constructor or @interface for {0}" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType EXTENDS_NON_OBJECT = DiagnosticType.warning ( "JSC_EXTENDS_NON_OBJECTN_", "{0} @extends non-object type {1}" ) ;^85^86^87^^^85^87^static final DiagnosticType EXTENDS_NON_OBJECT = DiagnosticType.warning ( "JSC_EXTENDS_NON_OBJECT", "{0} @extends non-object type {1}" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType EXTENDS_NON_OBJECT = DiagnosticType.warning ( "JSC_EXTENDS_NON_OBJECT", " {10} @extends non-object type {1}" ) ;^85^86^87^^^85^87^static final DiagnosticType EXTENDS_NON_OBJECT = DiagnosticType.warning ( "JSC_EXTENDS_NON_OBJECT", "{0} @extends non-object type {1}" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P7_Replace_Invocation]^static final DiagnosticType EXTENDS_NON_OBJECT = DiagnosticType.error ( "JSC_EXTENDS_NON_OBJECT", "{0} @extends non-object type {1}" ) ;^85^86^87^^^85^87^static final DiagnosticType EXTENDS_NON_OBJECT = DiagnosticType.warning ( "JSC_EXTENDS_NON_OBJECT", "{0} @extends non-object type {1}" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^static  DiagnosticType EXTENDS_NON_OBJECT = DiagnosticType.warning ( "JSC_EXTENDS_NON_OBJECT", "{0} @extends non-object type {1}" ) ;^85^86^87^^^85^87^static final DiagnosticType EXTENDS_NON_OBJECT = DiagnosticType.warning ( "JSC_EXTENDS_NON_OBJECT", "{0} @extends non-object type {1}" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType IMPLEMENTS_WITHOUT_CONSTRUCTOR = DiagnosticType.warning ( "JSC_IMPLEMENTS_WITHOUT_CONSTRUCTOREMENTS_WITHOUT_C", "@implements used without @constructor or @interface for {0}" ) ;^89^90^91^92^^89^92^static final DiagnosticType IMPLEMENTS_WITHOUT_CONSTRUCTOR = DiagnosticType.warning ( "JSC_IMPLEMENTS_WITHOUT_CONSTRUCTOR", "@implements used without @constructor or @interface for {0}" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType IMPLEMENTS_WITHOUT_CONSTRUCTOR = DiagnosticType.warning ( "JSC_IMPLEMENTS_WITHOUT_CONSTRUCTOR", "ut @constructor o" ) ;^89^90^91^92^^89^92^static final DiagnosticType IMPLEMENTS_WITHOUT_CONSTRUCTOR = DiagnosticType.warning ( "JSC_IMPLEMENTS_WITHOUT_CONSTRUCTOR", "@implements used without @constructor or @interface for {0}" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P7_Replace_Invocation]^static final DiagnosticType IMPLEMENTS_WITHOUT_CONSTRUCTOR = DiagnosticType.error ( "JSC_IMPLEMENTS_WITHOUT_CONSTRUCTOR", "@implements used without @constructor or @interface for {0}" ) ;^89^90^91^92^^89^92^static final DiagnosticType IMPLEMENTS_WITHOUT_CONSTRUCTOR = DiagnosticType.warning ( "JSC_IMPLEMENTS_WITHOUT_CONSTRUCTOR", "@implements used without @constructor or @interface for {0}" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^static final DiagnosticType IMPLEMENTS_WITHOUT_CONSTRUCTOR  = null ;^89^90^91^92^^89^92^static final DiagnosticType IMPLEMENTS_WITHOUT_CONSTRUCTOR = DiagnosticType.warning ( "JSC_IMPLEMENTS_WITHOUT_CONSTRUCTOR", "@implements used without @constructor or @interface for {0}" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType VAR_ARGS_MUST_BE_LAST = DiagnosticType.warning ( "JSC_VAR_ARGS_MUST_BE_LASTVAR_ARGS_M", "variable length argument must be last" ) ;^94^95^96^^^94^96^static final DiagnosticType VAR_ARGS_MUST_BE_LAST = DiagnosticType.warning ( "JSC_VAR_ARGS_MUST_BE_LAST", "variable length argument must be last" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType VAR_ARGS_MUST_BE_LAST = DiagnosticType.warning ( "JSC_VAR_ARGS_MUST_BE_LAST", "arariable length argument must be last" ) ;^94^95^96^^^94^96^static final DiagnosticType VAR_ARGS_MUST_BE_LAST = DiagnosticType.warning ( "JSC_VAR_ARGS_MUST_BE_LAST", "variable length argument must be last" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P7_Replace_Invocation]^static final DiagnosticType VAR_ARGS_MUST_BE_LAST = DiagnosticType.error ( "JSC_VAR_ARGS_MUST_BE_LAST", "variable length argument must be last" ) ;^94^95^96^^^94^96^static final DiagnosticType VAR_ARGS_MUST_BE_LAST = DiagnosticType.warning ( "JSC_VAR_ARGS_MUST_BE_LAST", "variable length argument must be last" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^static  DiagnosticType VAR_ARGS_MUST_BE_LAST = DiagnosticType.warning ( "JSC_VAR_ARGS_MUST_BE_LAST", "variable length argument must be last" ) ;^94^95^96^^^94^96^static final DiagnosticType VAR_ARGS_MUST_BE_LAST = DiagnosticType.warning ( "JSC_VAR_ARGS_MUST_BE_LAST", "variable length argument must be last" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType OPTIONAL_ARG_AT_END = DiagnosticType.warning ( "PTIONSC_OPTIONAL_ARG_AT_END", "optional arguments must be at the end" ) ;^98^99^100^^^98^100^static final DiagnosticType OPTIONAL_ARG_AT_END = DiagnosticType.warning ( "JSC_OPTIONAL_ARG_AT_END", "optional arguments must be at the end" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType OPTIONAL_ARG_AT_END = DiagnosticType.warning ( "JSC_OPTIONAL_ARG_AT_END", "optional arg" ) ;^98^99^100^^^98^100^static final DiagnosticType OPTIONAL_ARG_AT_END = DiagnosticType.warning ( "JSC_OPTIONAL_ARG_AT_END", "optional arguments must be at the end" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P7_Replace_Invocation]^static final DiagnosticType OPTIONAL_ARG_AT_END = DiagnosticType.error ( "JSC_OPTIONAL_ARG_AT_END", "optional arguments must be at the end" ) ;^98^99^100^^^98^100^static final DiagnosticType OPTIONAL_ARG_AT_END = DiagnosticType.warning ( "JSC_OPTIONAL_ARG_AT_END", "optional arguments must be at the end" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^static final DiagnosticType OPTIONAL_ARG_AT_END  = null ;^98^99^100^^^98^100^static final DiagnosticType OPTIONAL_ARG_AT_END = DiagnosticType.warning ( "JSC_OPTIONAL_ARG_AT_END", "optional arguments must be at the end" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType INEXISTANT_PARAM = DiagnosticType.warning ( "JSC_INEXISTANT_PARAMRA", "parameter {0} does not appear in {1}''s parameter list" ) ;^102^103^104^^^102^104^static final DiagnosticType INEXISTANT_PARAM = DiagnosticType.warning ( "JSC_INEXISTANT_PARAM", "parameter {0} does not appear in {1}''s parameter list" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType INEXISTANT_PARAM = DiagnosticType.warning ( "JSC_INEXISTANT_PARAM", "parameter {0}" ) ;^102^103^104^^^102^104^static final DiagnosticType INEXISTANT_PARAM = DiagnosticType.warning ( "JSC_INEXISTANT_PARAM", "parameter {0} does not appear in {1}''s parameter list" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P7_Replace_Invocation]^static final DiagnosticType INEXISTANT_PARAM = DiagnosticType.error ( "JSC_INEXISTANT_PARAM", "parameter {0} does not appear in {1}''s parameter list" ) ;^102^103^104^^^102^104^static final DiagnosticType INEXISTANT_PARAM = DiagnosticType.warning ( "JSC_INEXISTANT_PARAM", "parameter {0} does not appear in {1}''s parameter list" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^static  DiagnosticType INEXISTANT_PARAM = DiagnosticType.warning ( "JSC_INEXISTANT_PARAM", "parameter {0} does not appear in {1}''s parameter list" ) ;^102^103^104^^^102^104^static final DiagnosticType INEXISTANT_PARAM = DiagnosticType.warning ( "JSC_INEXISTANT_PARAM", "parameter {0} does not appear in {1}''s parameter list" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P2_Replace_Operator]^static final DiagnosticType TYPE_REDEFINITION = DiagnosticType.warning ( "JSC_TYPE_REDEFINITION", "attempted re-definition of type {0}\n" + "found  &&  : {1}\n"^106^107^108^109^^106^110^static final DiagnosticType TYPE_REDEFINITION = DiagnosticType.warning ( "JSC_TYPE_REDEFINITION", "attempted re-definition of type {0}\n" + "found   : {1}\n"^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P2_Replace_Operator]^static final DiagnosticType TYPE_REDEFINITION = DiagnosticType.warning ( "JSC_TYPE_REDEFINITION", "attempted re-definition of type {0}\n" + "found  |  : {1}\n"^106^107^108^109^^106^110^static final DiagnosticType TYPE_REDEFINITION = DiagnosticType.warning ( "JSC_TYPE_REDEFINITION", "attempted re-definition of type {0}\n" + "found   : {1}\n"^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType TYPE_REDEFINITION = DiagnosticType.warning ( "JSC_TYPE_REDEFINITIOSC_TYPE_REDEFINITION", "attempted re-definition of type {0}\n" + "found   : {1}\n"^106^107^108^109^^106^110^static final DiagnosticType TYPE_REDEFINITION = DiagnosticType.warning ( "JSC_TYPE_REDEFINITION", "attempted re-definition of type {0}\n" + "found   : {1}\n"^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType TYPE_REDEFINITION = DiagnosticType.warning ( "JSC_TYPE_REDEFINITION", "attempted re-definition of type {0}\nempted" + "found   : {1}\n"^106^107^108^109^^106^110^static final DiagnosticType TYPE_REDEFINITION = DiagnosticType.warning ( "JSC_TYPE_REDEFINITION", "attempted re-definition of type {0}\n" + "found   : {1}\n"^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType TYPE_REDEFINITION = DiagnosticType.warning ( "JSC_TYPE_REDEFINITION", "attempted re-definition of type {0}\n" + "ound   : {1}\n"^106^107^108^109^^106^110^static final DiagnosticType TYPE_REDEFINITION = DiagnosticType.warning ( "JSC_TYPE_REDEFINITION", "attempted re-definition of type {0}\n" + "found   : {1}\n"^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^static  DiagnosticType TYPE_REDEFINITION = DiagnosticType.warning ( "JSC_TYPE_REDEFINITION", "attempted re-definition of type {0}\n" + "found   : {1}\n"^106^107^108^109^^106^110^static final DiagnosticType TYPE_REDEFINITION = DiagnosticType.warning ( "JSC_TYPE_REDEFINITION", "attempted re-definition of type {0}\n" + "found   : {1}\n"^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType TEMPLATE_TYPE_DUPLICATED = DiagnosticType.error ( "LATE_", "Only one parameter type must be the template type" ) ;^112^113^114^^^112^114^static final DiagnosticType TEMPLATE_TYPE_DUPLICATED = DiagnosticType.error ( "JSC_TEMPLATE_TYPE_DUPLICATED", "Only one parameter type must be the template type" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType TEMPLATE_TYPE_DUPLICATED = DiagnosticType.error ( "JSC_TEMPLATE_TYPE_DUPLICATED", "ter type must be the template typnly one parameter type must be the template type" ) ;^112^113^114^^^112^114^static final DiagnosticType TEMPLATE_TYPE_DUPLICATED = DiagnosticType.error ( "JSC_TEMPLATE_TYPE_DUPLICATED", "Only one parameter type must be the template type" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P7_Replace_Invocation]^static final DiagnosticType TEMPLATE_TYPE_DUPLICATED = DiagnosticType.warning ( "JSC_TEMPLATE_TYPE_DUPLICATED", "Only one parameter type must be the template type" ) ;^112^113^114^^^112^114^static final DiagnosticType TEMPLATE_TYPE_DUPLICATED = DiagnosticType.error ( "JSC_TEMPLATE_TYPE_DUPLICATED", "Only one parameter type must be the template type" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^static final DiagnosticType TEMPLATE_TYPE_DUPLICATED  = null ;^112^113^114^^^112^114^static final DiagnosticType TEMPLATE_TYPE_DUPLICATED = DiagnosticType.error ( "JSC_TEMPLATE_TYPE_DUPLICATED", "Only one parameter type must be the template type" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType TEMPLATE_TYPE_EXPECTED = DiagnosticType.error ( "JSC_SC_TEMPLATE_TYPE_EXPECTED", "The template type must be a parameter type" ) ;^116^117^118^^^116^118^static final DiagnosticType TEMPLATE_TYPE_EXPECTED = DiagnosticType.error ( "JSC_TEMPLATE_TYPE_EXPECTED", "The template type must be a parameter type" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType TEMPLATE_TYPE_EXPECTED = DiagnosticType.error ( "JSC_TEMPLATE_TYPE_EXPECTED", "he template type must b" ) ;^116^117^118^^^116^118^static final DiagnosticType TEMPLATE_TYPE_EXPECTED = DiagnosticType.error ( "JSC_TEMPLATE_TYPE_EXPECTED", "The template type must be a parameter type" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P7_Replace_Invocation]^static final DiagnosticType TEMPLATE_TYPE_EXPECTED = DiagnosticType.warning ( "JSC_TEMPLATE_TYPE_EXPECTED", "The template type must be a parameter type" ) ;^116^117^118^^^116^118^static final DiagnosticType TEMPLATE_TYPE_EXPECTED = DiagnosticType.error ( "JSC_TEMPLATE_TYPE_EXPECTED", "The template type must be a parameter type" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P8_Replace_Mix]^static final DiagnosticType TEMPLATE_TYPE_EXPECTED  = null ;^116^117^118^^^116^118^static final DiagnosticType TEMPLATE_TYPE_EXPECTED = DiagnosticType.error ( "JSC_TEMPLATE_TYPE_EXPECTED", "The template type must be a parameter type" ) ;^[CLASS] FunctionTypeBuilder   [VARIABLES] 
[P5_Replace_Variable]^Preconditions.checkNotNull ( sourceNode ) ;^131^^^^^129^140^Preconditions.checkNotNull ( errorRoot ) ;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P14_Delete_Statement]^^131^^^^^129^140^Preconditions.checkNotNull ( errorRoot ) ;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P2_Replace_Operator]^this.fnName = fnName != null ? "" : fnName;^133^^^^^129^140^this.fnName = fnName == null ? "" : fnName;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P6_Replace_Expression]^this.fnName = fnName ( fnName;^133^^^^^129^140^this.fnName = fnName == null ? "" : fnName;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P8_Replace_Mix]^this.fnName = fnName == this ? "" : fnName;^133^^^^^129^140^this.fnName = fnName == null ? "" : fnName;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P8_Replace_Mix]^this.codingConvention =  null.getCodingConvention (  ) ;^134^^^^^129^140^this.codingConvention = compiler.getCodingConvention (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P8_Replace_Mix]^this.codingConvention = compiler .getTypeRegistry (  )  ;^134^^^^^129^140^this.codingConvention = compiler.getCodingConvention (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P14_Delete_Statement]^^134^135^^^^129^140^this.codingConvention = compiler.getCodingConvention (  ) ; this.typeRegistry = compiler.getTypeRegistry (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P7_Replace_Invocation]^this.typeRegistry = compiler .report (  )  ;^135^^^^^129^140^this.typeRegistry = compiler.getTypeRegistry (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P8_Replace_Mix]^this.typeRegistry =  null.getTypeRegistry (  ) ;^135^^^^^129^140^this.typeRegistry = compiler.getTypeRegistry (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P14_Delete_Statement]^^135^136^^^^129^140^this.typeRegistry = compiler.getTypeRegistry (  ) ; this.errorRoot = errorRoot;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P5_Replace_Variable]^this.errorRoot = sourceNode;^136^^^^^129^140^this.errorRoot = errorRoot;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P5_Replace_Variable]^this.sourceName = templateTypeName;^137^^^^^129^140^this.sourceName = sourceName;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^this.sourceNode = sourceNode;this.sourceName = sourceName;^137^^^^^129^140^this.sourceName = sourceName;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^this.scope = scope;this.sourceName = sourceName;^137^^^^^129^140^this.sourceName = sourceName;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P8_Replace_Mix]^this.compiler =  null;^138^^^^^129^140^this.compiler = compiler;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^this.scope = scope;this.compiler = compiler;^138^^^^^129^140^this.compiler = compiler;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P8_Replace_Mix]^this.scope =  null;^139^^^^^129^140^this.scope = scope;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^this.compiler = compiler;this.scope = scope;^139^^^^^129^140^this.scope = scope;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^this.sourceName = sourceName;this.scope = scope;^139^^^^^129^140^this.scope = scope;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^this.sourceNode = sourceNode;this.scope = scope;^139^^^^^129^140^this.scope = scope;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^thisType = objType;this.scope = scope;^139^^^^^129^140^this.scope = scope;^[CLASS] FunctionTypeBuilder  [METHOD] <init> [RETURN_TYPE] Scope)   String fnName AbstractCompiler compiler Node errorRoot String sourceName Scope scope [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P5_Replace_Variable]^this.sourceNode = parametersNode;^146^^^^^145^148^this.sourceNode = sourceNode;^[CLASS] FunctionTypeBuilder  [METHOD] setSourceNode [RETURN_TYPE] FunctionTypeBuilder   Node sourceNode [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^this.sourceName = sourceName;this.sourceNode = sourceNode;^146^^^^^145^148^this.sourceNode = sourceNode;^[CLASS] FunctionTypeBuilder  [METHOD] setSourceNode [RETURN_TYPE] FunctionTypeBuilder   Node sourceNode [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^this.scope = scope;this.sourceNode = sourceNode;^146^^^^^145^148^this.sourceNode = sourceNode;^[CLASS] FunctionTypeBuilder  [METHOD] setSourceNode [RETURN_TYPE] FunctionTypeBuilder   Node sourceNode [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P8_Replace_Mix]^return null;^147^^^^^145^148^return this;^[CLASS] FunctionTypeBuilder  [METHOD] setSourceNode [RETURN_TYPE] FunctionTypeBuilder   Node sourceNode [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  errorRoot  parametersNode  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  
[P7_Replace_Invocation]^returnType = oldType.setImplementedInterfaces (  ) ;^161^^^^^146^176^returnType = oldType.getReturnType (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^returnType =  null.getReturnType (  ) ;^161^^^^^146^176^returnType = oldType.getReturnType (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^parametersNode = oldType.getParametersNode (  ) ;returnType = oldType.getReturnType (  ) ;^161^^^^^146^176^returnType = oldType.getReturnType (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^returnType = oldType .getInstanceType (  )  ;^161^^^^^146^176^returnType = oldType.getReturnType (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^161^^^^^146^176^returnType = oldType.getReturnType (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P2_Replace_Operator]^if  ( paramsParent != null )  {^162^^^^^147^177^if  ( paramsParent == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^if  ( sourceNode == null )  {^162^^^^^147^177^if  ( paramsParent == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P6_Replace_Expression]^if  ( parametersNode == null )  {^162^^^^^147^177^if  ( paramsParent == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P6_Replace_Expression]^if  ( currentParam != null )  {^162^^^^^147^177^if  ( paramsParent == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^if  ( paramsParent == this )  {^162^^^^^147^177^if  ( paramsParent == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P9_Replace_Statement]^if  ( baseType != null )  {^162^^^^^147^177^if  ( paramsParent == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P9_Replace_Statement]^if  ( baseType == null )  {^162^^^^^147^177^if  ( paramsParent == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P9_Replace_Statement]^if  ( argsParent == null )  {^162^^^^^147^177^if  ( paramsParent == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P15_Unwrap_Block]^parametersNode = oldType.getParametersNode(); if ((parametersNode) == null) {    parametersNode = new com.google.javascript.rhino.jstype.FunctionParamBuilder(typeRegistry).build();};^162^163^164^165^166^147^177^if  ( paramsParent == null )  {  parametersNode = oldType.getParametersNode (  ) ; if  ( parametersNode == null )  { parametersNode = new FunctionParamBuilder ( typeRegistry ) .build (  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P16_Remove_Block]^^162^163^164^165^166^147^177^if  ( paramsParent == null )  {  parametersNode = oldType.getParametersNode (  ) ; if  ( parametersNode == null )  { parametersNode = new FunctionParamBuilder ( typeRegistry ) .build (  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , isInterface,^180^181^182^183^^177^186^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter (  typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^177^186^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) ,^180^181^182^183^^177^186^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( paramBuilder.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^177^186^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( typeRegistry, paramBuilder.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^177^186^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeFunctionType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^177^186^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry .getNativeFunctionType (  )  , warnedAboutArgList,^180^181^182^183^^177^186^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^warnedAboutArgList |=  addParameter ( null, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^177^186^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( warnedAboutArgList, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , paramBuilder,^180^181^182^183^^177^186^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( paramBuilder, warnedAboutArgList.getNativeType ( UNKNOWN_TYPE ) , typeRegistry,^180^181^182^183^^177^186^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^typeRegistry.getNativeFunctionType ( UNKNOWN_TYPE ) , warnedAboutArgList, codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^182^183^184^185^^177^186^typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList, codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^typeRegistry .getNativeFunctionType (  )  , warnedAboutArgList, codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^182^183^184^185^^177^186^typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList, codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^codingConvention.isOptionalParameter ( paramsParent ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^177^186^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^codingConvention.isOptionalParameter ( currentParam ) .isVarArgsParameter ( currentParam )  ) ;^184^185^^^^177^186^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^codingConvention.isOptionalParameter ( codingConvention ) , currentParam.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^177^186^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^codingConvention.isVarArgsParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^177^186^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^184^185^^^^177^186^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^177^186^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^codingConvention.isVarArgsParameter ( currentParam )  ) ;codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^177^186^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^codingConvention.isVarArgsParameter ( paramsParent )  ) ;^185^^^^^177^186^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^codingConvention.isOptionalParameter ( currentParam )  ) ;^185^^^^^177^186^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^codingConvention.isVarArgsParameter ( sourceNode )  ) ;^185^^^^^177^186^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^185^^^^^177^186^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P12_Insert_Condition]^if  ( codingConvention.isOptionalParameter ( param )  )  { codingConvention.isVarArgsParameter ( currentParam )  ) ; }^185^^^^^177^186^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P12_Insert_Condition]^if  ( codingConvention.isVarArgsParameter ( param )  )  { codingConvention.isVarArgsParameter ( currentParam )  ) ; }^185^^^^^177^186^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^paramBuilder.newParameterFromNode ( oldParams .hasNext (  )   ) ;^178^^^^^162^189^paramBuilder.newParameterFromNode ( oldParams.next (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^178^^^^^162^189^paramBuilder.newParameterFromNode ( oldParams.next (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^for  ( Node currentParam = sourceNode.getFirstChild (  ) ;^175^^^^^162^189^for  ( Node currentParam = paramsParent.getFirstChild (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^for  ( Node paramsParent = paramsParent.getFirstChild (  ) ;^175^^^^^162^189^for  ( Node currentParam = paramsParent.getFirstChild (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^for  ( Node paramsParent = currentParam.getFirstChild (  ) ;^175^^^^^162^189^for  ( Node currentParam = paramsParent.getFirstChild (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^for  ( Node currentParam = paramsParent.newString (  ) ;^175^^^^^162^189^for  ( Node currentParam = paramsParent.getFirstChild (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^for  ( Node currentParam = paramsParent .getString (  )  ;^175^^^^^162^189^for  ( Node currentParam = paramsParent.getFirstChild (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , isInterface,^180^181^182^183^^175^187^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter (  typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^175^187^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) ,^180^181^182^183^^175^187^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( paramBuilder.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^175^187^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeFunctionType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^175^187^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry .getNativeFunctionType (  )  , warnedAboutArgList,^180^181^182^183^^175^187^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^warnedAboutArgList |=  addParameter ( null, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^175^187^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( paramBuilder, warnedAboutArgList.getNativeType ( UNKNOWN_TYPE ) , typeRegistry,^180^181^182^183^^175^187^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeFunctionType ( UNKNOWN_TYPE ) , isInterface,^180^181^182^183^^175^187^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^typeRegistry.getNativeFunctionType ( UNKNOWN_TYPE ) , warnedAboutArgList, codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^182^183^184^185^^175^187^typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList, codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^codingConvention.isOptionalParameter ( sourceNode ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^175^187^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^codingConvention.isOptionalParameter ( currentParam ) .isVarArgsParameter ( currentParam )  ) ;^184^185^^^^175^187^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^codingConvention.isOptionalParameter ( codingConvention ) , currentParam.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^175^187^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^codingConvention.isVarArgsParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^175^187^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^184^185^^^^175^187^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^175^187^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^codingConvention.isVarArgsParameter ( currentParam )  ) ;codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^175^187^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^codingConvention.isVarArgsParameter ( sourceNode )  ) ;^185^^^^^175^187^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^codingConvention.isOptionalParameter ( currentParam )  ) ;^185^^^^^175^187^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^185^^^^^175^187^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P12_Insert_Condition]^if  ( codingConvention.isOptionalParameter ( param )  )  { codingConvention.isVarArgsParameter ( currentParam )  ) ; }^185^^^^^175^187^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P12_Insert_Condition]^if  ( codingConvention.isVarArgsParameter ( param )  )  { codingConvention.isVarArgsParameter ( currentParam )  ) ; }^185^^^^^175^187^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^paramBuilder.newParameterFromNode ( oldParams .hasNext (  )   ) ;^178^^^^^175^187^paramBuilder.newParameterFromNode ( oldParams.next (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^178^^^^^175^187^paramBuilder.newParameterFromNode ( oldParams.next (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( typeRegistry, paramBuilder.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^175^187^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^paramBuilder .addVarArgs ( returnType )  ;^178^^^^^175^187^paramBuilder.newParameterFromNode ( oldParams.next (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^codingConvention.isVarArgsParameter ( sourceNode ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^175^187^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^codingConvention.isVarArgsParameter ( paramsParent )  ) ;^185^^^^^175^187^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^currentParam != null; paramsParent = currentParam.getNext (  )  )  {^176^^^^^162^189^currentParam != null; currentParam = currentParam.getNext (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^currentParam != null; currentParam = currentParam.newString (  )  )  {^176^^^^^162^189^currentParam != null; currentParam = currentParam.getNext (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^currentParam !=  null; sourceNode^176^^^^^162^189^currentParam != null; currentParam = currentParam.getNext (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , isInterface,^180^181^182^183^^162^189^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter (  typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^162^189^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) ,^180^181^182^183^^162^189^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( paramBuilder.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^162^189^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( typeRegistry, paramBuilder.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^162^189^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeFunctionType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^162^189^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry .getNativeFunctionType (  )  , warnedAboutArgList,^180^181^182^183^^162^189^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^warnedAboutArgList |=  addParameter ( null, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^162^189^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^parametersNode = paramBuilder.addVarArgs (  ) ;^188^^^^^162^189^parametersNode = paramBuilder.build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^parametersNode =  null.build (  ) ;^188^^^^^162^189^parametersNode = paramBuilder.build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^parametersNode = oldType.getParametersNode (  ) ;parametersNode = paramBuilder.build (  ) ;^188^^^^^162^189^parametersNode = paramBuilder.build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^parametersNode = new FunctionParamBuilder ( typeRegistry ) .build (  ) ;parametersNode = paramBuilder.build (  ) ;^188^^^^^162^189^parametersNode = paramBuilder.build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^parametersNode = builder.build (  ) ;parametersNode = paramBuilder.build (  ) ;^188^^^^^162^189^parametersNode = paramBuilder.build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^FunctionParamBuilder builder = new FunctionParamBuilder ( typeRegistry ) ;FunctionParamBuilder paramBuilder = new FunctionParamBuilder ( typeRegistry ) ;^171^172^^^^162^189^FunctionParamBuilder paramBuilder = new FunctionParamBuilder ( typeRegistry ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^Iterator<Node> oldParams = oldType.getParameters (  ) .evaluate (  ) ;^173^^^^^162^189^Iterator<Node> oldParams = oldType.getParameters (  ) .iterator (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^Iterator<Node> oldParams = oldType.setImplementedInterfaces (  ) .iterator (  ) ;^173^^^^^162^189^Iterator<Node> oldParams = oldType.getParameters (  ) .iterator (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P3_Replace_Literal]^boolean warnedAboutArgList = true;^174^^^^^162^189^boolean warnedAboutArgList = false;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^boolean foundTemplateType = false;boolean warnedAboutArgList = false;^174^^^^^162^189^boolean warnedAboutArgList = false;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^boolean emittedWarning = false;boolean warnedAboutArgList = false;^174^^^^^162^189^boolean warnedAboutArgList = false;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^Iterator<Node> oldParams = oldType .getParametersNode (  )  .iterator (  ) ;^173^^^^^162^189^Iterator<Node> oldParams = oldType.getParameters (  ) .iterator (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^173^^^^^162^189^Iterator<Node> oldParams = oldType.getParameters (  ) .iterator (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^parametersNode = oldType.getParametersNode (  ) ;Iterator<Node> oldParams = oldType.getParameters (  ) .iterator (  ) ;^173^^^^^162^189^Iterator<Node> oldParams = oldType.getParameters (  ) .iterator (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^for  ( Node currentParam = parametersNode.getFirstChild (  ) ;^175^^^^^162^189^for  ( Node currentParam = paramsParent.getFirstChild (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^for  ( Node currentParam = sourceNode.newString (  ) ;^175^^^^^162^189^for  ( Node currentParam = paramsParent.getFirstChild (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^currentParam != null; sourceNode = currentParam.getNext (  )  )  {^176^^^^^162^189^currentParam != null; currentParam = currentParam.getNext (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^currentParam != null; currentParam = currentParam .getLineno (  )   )  {^176^^^^^162^189^currentParam != null; currentParam = currentParam.getNext (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^176^177^178^^^162^189^currentParam != null; currentParam = currentParam.getNext (  )  )  { if  ( oldParams.hasNext (  )  )  { paramBuilder.newParameterFromNode ( oldParams.next (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^if  ( oldParams .next (  )   )  {^177^^^^^162^189^if  ( oldParams.hasNext (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^paramBuilder .addVarArgs ( returnType )  ;^178^^^^^162^189^paramBuilder.newParameterFromNode ( oldParams.next (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( paramBuilder, warnedAboutArgList.getNativeType ( UNKNOWN_TYPE ) , typeRegistry,^180^181^182^183^^162^189^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^typeRegistry.getNativeFunctionType ( UNKNOWN_TYPE ) , warnedAboutArgList, codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^182^183^184^185^^162^189^typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList, codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^typeRegistry .getNativeFunctionType (  )  , warnedAboutArgList, codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^182^183^184^185^^162^189^typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList, codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^codingConvention.isOptionalParameter ( sourceNode ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^162^189^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^codingConvention.isOptionalParameter ( currentParam ) .isVarArgsParameter ( currentParam )  ) ;^184^185^^^^162^189^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^codingConvention.isOptionalParameter ( codingConvention ) , currentParam.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^162^189^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^codingConvention.isVarArgsParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^162^189^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^codingConvention.isOptionalParameter ( paramsParent ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^162^189^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^184^185^^^^162^189^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^162^189^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^codingConvention.isVarArgsParameter ( currentParam )  ) ;codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^162^189^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^codingConvention.isVarArgsParameter ( sourceNode )  ) ;^185^^^^^162^189^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^codingConvention.isOptionalParameter ( currentParam )  ) ;^185^^^^^162^189^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^185^^^^^162^189^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P12_Insert_Condition]^if  ( codingConvention.isOptionalParameter ( param )  )  { codingConvention.isVarArgsParameter ( currentParam )  ) ; }^185^^^^^162^189^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P12_Insert_Condition]^if  ( codingConvention.isVarArgsParameter ( param )  )  { codingConvention.isVarArgsParameter ( currentParam )  ) ; }^185^^^^^162^189^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^188^^^^^162^189^parametersNode = paramBuilder.build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P2_Replace_Operator]^if  ( parametersNode != null )  {^165^^^^^150^180^if  ( parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^if  ( sourceNode == null )  {^165^^^^^150^180^if  ( parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^if  ( parametersNode == true )  {^165^^^^^150^180^if  ( parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P9_Replace_Statement]^if  ( baseType != null )  {^165^^^^^150^180^if  ( parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P9_Replace_Statement]^if  ( maybeThisType != null )  {^165^^^^^150^180^if  ( parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P9_Replace_Statement]^if  ( paramsParent == null )  {^165^^^^^150^180^if  ( parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P9_Replace_Statement]^if  ( interType != null )  {^165^^^^^150^180^if  ( parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P9_Replace_Statement]^if  ( baseType == null )  {^165^^^^^150^180^if  ( parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P9_Replace_Statement]^if  ( argsParent == null )  {^165^^^^^150^180^if  ( parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P15_Unwrap_Block]^parametersNode = new com.google.javascript.rhino.jstype.FunctionParamBuilder(typeRegistry).build();^165^166^167^^^150^180^if  ( parametersNode == null )  { parametersNode = new FunctionParamBuilder ( typeRegistry ) .build (  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P16_Remove_Block]^^165^166^167^^^150^180^if  ( parametersNode == null )  { parametersNode = new FunctionParamBuilder ( typeRegistry ) .build (  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^parametersNode = new FunctionParamBuilder ( typeRegistry ) .isOptionalArg (  ) ;^166^^^^^151^181^parametersNode = new FunctionParamBuilder ( typeRegistry ) .build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^parametersNode  = null ;^166^^^^^151^181^parametersNode = new FunctionParamBuilder ( typeRegistry ) .build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^parametersNode = paramBuilder.build (  ) ;parametersNode = new FunctionParamBuilder ( typeRegistry ) .build (  ) ;^166^^^^^151^181^parametersNode = new FunctionParamBuilder ( typeRegistry ) .build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^parametersNode = builder.build (  ) ;parametersNode = new FunctionParamBuilder ( typeRegistry ) .build (  ) ;^166^^^^^151^181^parametersNode = new FunctionParamBuilder ( typeRegistry ) .build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P13_Insert_Block]^if  (  ( parametersNode )  == null )  {     parametersNode = new FunctionParamBuilder ( typeRegistry ) .build (  ) ; }^166^^^^^151^181^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^166^^^^^151^181^parametersNode = new FunctionParamBuilder ( typeRegistry ) .build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^parametersNode = oldType.setImplementedInterfaces (  ) ;^164^^^^^149^179^parametersNode = oldType.getParametersNode (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^parametersNode =  null.getParametersNode (  ) ;^164^^^^^149^179^parametersNode = oldType.getParametersNode (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^returnType = oldType.getReturnType (  ) ;parametersNode = oldType.getParametersNode (  ) ;^164^^^^^149^179^parametersNode = oldType.getParametersNode (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^parametersNode = paramBuilder.build (  ) ;parametersNode = oldType.getParametersNode (  ) ;^164^^^^^149^179^parametersNode = oldType.getParametersNode (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^parametersNode = builder.build (  ) ;parametersNode = oldType.getParametersNode (  ) ;^164^^^^^149^179^parametersNode = oldType.getParametersNode (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^164^^^^^149^179^parametersNode = oldType.getParametersNode (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^Iterator<Node> oldParams = oldType.getParameters (  ) .iterator (  ) ;parametersNode = oldType.getParametersNode (  ) ;^164^^^^^149^179^parametersNode = oldType.getParametersNode (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^if  ( parametersNode == false )  {^165^^^^^150^180^if  ( parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^if  ( oldParams .next (  )   )  {^177^^^^^162^192^if  ( oldParams.hasNext (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^codingConvention.isOptionalParameter ( sourceNode ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^177^186^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^paramBuilder .addVarArgs ( returnType )  ;^178^^^^^163^193^paramBuilder.newParameterFromNode ( oldParams.next (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^paramBuilder.newParameterFromNode ( this.next (  )  ) ;^178^^^^^163^193^paramBuilder.newParameterFromNode ( oldParams.next (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^178^^^^^163^193^paramBuilder.newParameterFromNode ( oldParams.next (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^for  ( Node currentParam = sourceNode.getFirstChild (  ) ;^175^^^^^160^190^for  ( Node currentParam = paramsParent.getFirstChild (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^for  ( Node sourceNode = paramsParent.getFirstChild (  ) ;^175^^^^^160^190^for  ( Node currentParam = paramsParent.getFirstChild (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^for  ( Node currentParam = paramsParent.newString (  ) ;^175^^^^^160^190^for  ( Node currentParam = paramsParent.getFirstChild (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^for  ( Node currentParam = paramsParent .getString (  )  ;^175^^^^^160^190^for  ( Node currentParam = paramsParent.getFirstChild (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^for  ( Node paramsParent = paramsParent.getFirstChild (  ) ;^175^^^^^160^190^for  ( Node currentParam = paramsParent.getFirstChild (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^if  ( oldParams .next (  )   )  {^177^^^^^175^187^if  ( oldParams.hasNext (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^typeRegistry .getNativeFunctionType (  )  , warnedAboutArgList, codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^182^183^184^185^^175^187^typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList, codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( warnedAboutArgList, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , paramBuilder,^180^181^182^183^^175^187^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^codingConvention.isOptionalParameter ( paramsParent ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^175^187^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^parametersNode = oldType .getParameters (  )  ;^164^^^^^149^179^parametersNode = oldType.getParametersNode (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^currentParam != null; paramsParent = currentParam.getNext (  )  )  {^176^^^^^161^191^currentParam != null; currentParam = currentParam.getNext (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^currentParam != null; currentParam = currentParam.newString (  )  )  {^176^^^^^161^191^currentParam != null; currentParam = currentParam.getNext (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^currentParam !=  null; paramsParent^176^^^^^161^191^currentParam != null; currentParam = currentParam.getNext (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , isInterface,^180^181^182^183^^165^195^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter (  typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^165^195^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) ,^180^181^182^183^^165^195^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( paramBuilder.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^165^195^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( warnedAboutArgList, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , paramBuilder,^180^181^182^183^^165^195^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( typeRegistry, paramBuilder.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^165^195^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeFunctionType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^165^195^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^warnedAboutArgList |=  addParameter ( null, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^180^181^182^183^^165^195^warnedAboutArgList |= addParameter ( paramBuilder, typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList,^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^parametersNode = paramBuilder.addVarArgs (  ) ;^188^^^^^173^203^parametersNode = paramBuilder.build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^parametersNode =  null.build (  ) ;^188^^^^^173^203^parametersNode = paramBuilder.build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^parametersNode = oldType.getParametersNode (  ) ;parametersNode = paramBuilder.build (  ) ;^188^^^^^173^203^parametersNode = paramBuilder.build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^parametersNode = new FunctionParamBuilder ( typeRegistry ) .build (  ) ;parametersNode = paramBuilder.build (  ) ;^188^^^^^173^203^parametersNode = paramBuilder.build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^parametersNode = builder.build (  ) ;parametersNode = paramBuilder.build (  ) ;^188^^^^^173^203^parametersNode = paramBuilder.build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^FunctionParamBuilder builder = new FunctionParamBuilder ( typeRegistry ) ;FunctionParamBuilder paramBuilder = new FunctionParamBuilder ( typeRegistry ) ;^171^172^^^^156^186^FunctionParamBuilder paramBuilder = new FunctionParamBuilder ( typeRegistry ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^Iterator<Node> oldParams = oldType.getParameters (  ) .evaluate (  ) ;^173^^^^^158^188^Iterator<Node> oldParams = oldType.getParameters (  ) .iterator (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^Iterator<Node> oldParams = oldType.setImplementedInterfaces (  ) .iterator (  ) ;^173^^^^^158^188^Iterator<Node> oldParams = oldType.getParameters (  ) .iterator (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^Iterator<Node> oldParams = oldType .getParametersNode (  )  .iterator (  ) ;^173^^^^^158^188^Iterator<Node> oldParams = oldType.getParameters (  ) .iterator (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P3_Replace_Literal]^boolean warnedAboutArgList = true;^174^^^^^159^189^boolean warnedAboutArgList = false;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^boolean foundTemplateType = false;boolean warnedAboutArgList = false;^174^^^^^159^189^boolean warnedAboutArgList = false;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^boolean emittedWarning = false;boolean warnedAboutArgList = false;^174^^^^^159^189^boolean warnedAboutArgList = false;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^173^^^^^158^188^Iterator<Node> oldParams = oldType.getParameters (  ) .iterator (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^parametersNode = oldType.getParametersNode (  ) ;Iterator<Node> oldParams = oldType.getParameters (  ) .iterator (  ) ;^173^^^^^158^188^Iterator<Node> oldParams = oldType.getParameters (  ) .iterator (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^currentParam != null; sourceNode = currentParam.getNext (  )  )  {^176^^^^^161^191^currentParam != null; currentParam = currentParam.getNext (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^176^177^178^^^161^191^currentParam != null; currentParam = currentParam.getNext (  )  )  { if  ( oldParams.hasNext (  )  )  { paramBuilder.newParameterFromNode ( oldParams.next (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^paramBuilder.newParameterFromNode ( oldParams .hasNext (  )   ) ;^178^^^^^163^193^paramBuilder.newParameterFromNode ( oldParams.next (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^typeRegistry.getNativeFunctionType ( UNKNOWN_TYPE ) , warnedAboutArgList, codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^182^183^184^185^^167^197^typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList, codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^typeRegistry .getNativeFunctionType (  )  , warnedAboutArgList, codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^182^183^184^185^^167^197^typeRegistry.getNativeType ( UNKNOWN_TYPE ) , warnedAboutArgList, codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^codingConvention.isOptionalParameter ( sourceNode ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^169^199^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^codingConvention.isOptionalParameter ( currentParam ) .isVarArgsParameter ( currentParam )  ) ;^184^185^^^^169^199^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^codingConvention.isOptionalParameter ( codingConvention ) , currentParam.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^169^199^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^codingConvention.isVarArgsParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^169^199^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^codingConvention .isOptionalParameter ( sourceNode , 2 )  , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^169^199^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^codingConvention.isVarArgsParameter ( sourceNode ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^169^199^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^184^185^^^^169^199^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^169^199^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P11_Insert_Donor_Statement]^codingConvention.isVarArgsParameter ( currentParam )  ) ;codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^184^185^^^^169^199^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P5_Replace_Variable]^codingConvention.isVarArgsParameter ( paramsParent )  ) ;^185^^^^^170^200^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P7_Replace_Invocation]^codingConvention.isOptionalParameter ( currentParam )  ) ;^185^^^^^170^200^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^codingConvention.isVarArgsParameter ( sourceNode )  ) ;^185^^^^^170^200^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^185^^^^^170^200^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P12_Insert_Condition]^if  ( codingConvention.isOptionalParameter ( param )  )  { codingConvention.isVarArgsParameter ( currentParam )  ) ; }^185^^^^^170^200^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P12_Insert_Condition]^if  ( codingConvention.isVarArgsParameter ( param )  )  { codingConvention.isVarArgsParameter ( currentParam )  ) ; }^185^^^^^170^200^codingConvention.isVarArgsParameter ( currentParam )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P14_Delete_Statement]^^188^^^^^173^203^parametersNode = paramBuilder.build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P8_Replace_Mix]^return null;^190^^^^^175^205^return this;^[CLASS] FunctionTypeBuilder  [METHOD] inferFromOverriddenFunction [RETURN_TYPE] FunctionTypeBuilder   FunctionType oldType Node paramsParent [VARIABLES] JSType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  oldType  String  fnName  sourceName  templateTypeName  ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Iterator  oldParams  List  implementedInterfaces  FunctionParamBuilder  paramBuilder  
[P2_Replace_Operator]^returnType = info != null || info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^197^198^199^^^196^205^returnType = info != null && info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^returnType = info == null && info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^197^198^199^^^196^205^returnType = info != null && info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^returnType = scope != null && info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( info )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^197^198^199^^^196^205^returnType = info != null && info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^returnType = info != null && info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( typeRegistry )  : scope.getNativeType ( UNKNOWN_TYPE ) ;^197^198^199^^^196^205^returnType = info != null && info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^returnType  =  typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^197^198^199^^^196^205^returnType = info != null && info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^returnType  =  info.getReturnType (  ) .evaluate ( scope )  ;^197^198^199^^^196^205^returnType = info != null && info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^returnType = info != null && info.hasParameterType (  )  ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^197^198^199^^^196^205^returnType = info != null && info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^returnType = info != null && info .getReturnType (  )   ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^197^198^199^^^196^205^returnType = info != null && info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^returnType = info != null && info.hasReturnType (  )  ? info.getReturnType (  )  .isTemplateType (  )   : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^197^198^199^^^196^205^returnType = info != null && info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^returnType = info != null && info.hasReturnType (  )  ? info.getParameterType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^197^198^199^^^196^205^returnType = info != null && info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^returnType = info != null && info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeFunctionType ( UNKNOWN_TYPE ) ;^197^198^199^^^196^205^returnType = info != null && info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^returnType = info != true && info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^197^198^199^^^196^205^returnType = info != null && info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^197^198^199^^^196^205^returnType = info != null && info.hasReturnType (  )  ? info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^info.getReturnType (  )  .isTemplateType (  )   : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^198^199^^^^196^205^info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^info.getParameterType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^198^199^^^^196^205^info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^198^199^^^^196^205^info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^198^199^^^^196^205^info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^typeRegistry.getNativeFunctionType ( UNKNOWN_TYPE ) ;^199^^^^^196^205^typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^199^^^^^196^205^typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^if  ( templateTypeName != null || returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^200^201^^^^196^205^if  ( templateTypeName != null && returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^if  ( templateTypeName == null && returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^200^201^^^^196^205^if  ( templateTypeName != null && returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^if  ( sourceName != null && returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^200^201^^^^196^205^if  ( templateTypeName != null && returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^if  ( templateTypeName != null ) {^200^201^^^^196^205^if  ( templateTypeName != null && returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^if  (  returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^200^201^^^^196^205^if  ( templateTypeName != null && returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^if  ( templateTypeName != null && returnType.restrictByNotNullOrUndefined (  ) .iterator (  )  )  {^200^201^^^^196^205^if  ( templateTypeName != null && returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^if  ( templateTypeName != true && returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^200^201^^^^196^205^if  ( templateTypeName != null && returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( templateTypeName != null && parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^200^201^^^^196^205^if  ( templateTypeName != null && returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P15_Unwrap_Block]^reportError(com.google.javascript.jscomp.FunctionTypeBuilder.TEMPLATE_TYPE_EXPECTED, fnName);^200^201^202^203^^196^205^if  ( templateTypeName != null && returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  { reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P16_Remove_Block]^^200^201^202^203^^196^205^if  ( templateTypeName != null && returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  { reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P13_Insert_Block]^if  (  (  ( templateTypeName )  != null )  &&  ( !foundTemplateType )  )  {     reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^200^^^^^196^205^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P13_Insert_Block]^if  (  (  ( templateTypeName )  != null )  &&  ( parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  )  {     if  ( foundTemplateType )  {         reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;     }     foundTemplateType = true; }^200^^^^^196^205^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P13_Insert_Block]^if  ( foundTemplateType )  {     reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ; }^200^^^^^196^205^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P13_Insert_Block]^if  ( interType != null )  {     implementedInterfaces.add ( interType ) ; }else {     reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ; }^200^^^^^196^205^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^202^^^^^196^205^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^reportError ( TEMPLATE_TYPE_EXPECTED, templateTypeName ) ;^202^^^^^196^205^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^reportError (  fnName ) ;^202^^^^^196^205^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^reportError ( TEMPLATE_TYPE_EXPECTED ) ;^202^^^^^196^205^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^reportError ( fnName, TEMPLATE_TYPE_EXPECTED ) ;^202^^^^^196^205^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^getOrCreateConstructor ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^202^^^^^196^205^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^202^^^^^196^205^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^202^^^^^196^205^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^202^^^^^196^205^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^202^^^^^196^205^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^202^^^^^196^205^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^returnType.restrictByNotNullOrUndefined (  ) .iterator (  )  )  {^201^^^^^196^205^returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^201^202^^^^196^205^returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  { reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^reportError ( OPTIONAL_ARG_AT_END, fnName ) ;^202^^^^^196^205^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^return null;^204^^^^^196^205^return this;^[CLASS] FunctionTypeBuilder  [METHOD] inferReturnType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  returnType  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^if  ( info == null )  {^212^^^^^197^227^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P6_Replace_Expression]^if  ( isConstructor || isInterface )  {^212^^^^^197^227^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P6_Replace_Expression]^if  ( baseType == null )  {^212^^^^^197^227^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P6_Replace_Expression]^if  ( interType != null )  {^212^^^^^197^227^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P6_Replace_Expression]^if  ( baseType != null )  {^212^^^^^197^227^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P6_Replace_Expression]^if  ( maybeFunctionType instanceof FunctionType )  {^212^^^^^197^227^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P6_Replace_Expression]^if  ( info.getImplementedInterfaceCount() > 0 )  {^212^^^^^197^227^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^if  ( info != true )  {^212^^^^^197^227^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( existingType != null )  {^212^^^^^197^227^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( isOptional )  {^212^^^^^197^227^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( ownerType != null )  {^212^^^^^197^227^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P6_Replace_Expression]^if  ( baseType == null )  {^217^^^^^202^232^if  ( info.hasBaseType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^if  ( info.hasParameterType (  )  )  {^217^^^^^202^232^if  ( info.hasBaseType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^if  ( info .getBaseType (  )   )  {^217^^^^^202^232^if  ( info.hasBaseType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P15_Unwrap_Block]^if ((isConstructor) || (isInterface)) {    baseType = com.google.javascript.rhino.jstype.ObjectType.cast(info.getBaseType().evaluate(scope));    if ((baseType) == null) {        reportWarning(com.google.javascript.jscomp.FunctionTypeBuilder.EXTENDS_NON_OBJECT, fnName, baseType.toString());    }}else {    reportWarning(com.google.javascript.jscomp.FunctionTypeBuilder.EXTENDS_WITHOUT_TYPEDEF, fnName);};^217^218^219^220^221^202^232^if  ( info.hasBaseType (  )  )  { if  ( isConstructor || isInterface )  { baseType = ObjectType.cast ( info.getBaseType (  ) .evaluate ( scope )  ) ; if  ( baseType == null )  { reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P16_Remove_Block]^^217^218^219^220^221^202^232^if  ( info.hasBaseType (  )  )  { if  ( isConstructor || isInterface )  { baseType = ObjectType.cast ( info.getBaseType (  ) .evaluate ( scope )  ) ; if  ( baseType == null )  { reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P2_Replace_Operator]^if  ( isConstructor && isInterface )  {^218^^^^^203^233^if  ( isConstructor || isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^if  ( warnedAboutArgList || isInterface )  {^218^^^^^203^233^if  ( isConstructor || isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^if  ( isConstructor || warnedAboutArgList )  {^218^^^^^203^233^if  ( isConstructor || isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P6_Replace_Expression]^if  ( isConstructor ) {^218^^^^^203^233^if  ( isConstructor || isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P6_Replace_Expression]^if  (  isInterface )  {^218^^^^^203^233^if  ( isConstructor || isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P6_Replace_Expression]^if  ( baseType == null )  {^218^^^^^203^233^if  ( isConstructor || isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P15_Unwrap_Block]^baseType = com.google.javascript.rhino.jstype.ObjectType.cast(info.getBaseType().evaluate(scope)); if ((baseType) == null) {    reportWarning(com.google.javascript.jscomp.FunctionTypeBuilder.EXTENDS_NON_OBJECT, fnName, baseType.toString());};^218^219^220^221^222^203^233^if  ( isConstructor || isInterface )  { baseType = ObjectType.cast ( info.getBaseType (  ) .evaluate ( scope )  ) ; if  ( baseType == null )  { reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P16_Remove_Block]^^218^219^220^221^222^203^233^if  ( isConstructor || isInterface )  { baseType = ObjectType.cast ( info.getBaseType (  ) .evaluate ( scope )  ) ; if  ( baseType == null )  { reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( VAR_ARGS_MUST_BE_LAST, fnName ) ;^224^^^^^218^225^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, templateTypeName ) ;^224^^^^^218^225^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning (  fnName ) ;^224^^^^^218^225^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( EXTENDS_WITHOUT_TYPEDEF ) ;^224^^^^^218^225^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( fnName, EXTENDS_WITHOUT_TYPEDEF ) ;^224^^^^^218^225^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^getOrCreateConstructor ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^224^^^^^218^225^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P14_Delete_Statement]^^224^^^^^218^225^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^224^^^^^218^225^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^224^^^^^218^225^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportWarning ( OPTIONAL_ARG_AT_END ) ;reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^224^^^^^218^225^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^224^^^^^218^225^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportWarning ( INEXISTANT_PARAM, inexistentName, fnName ) ;reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^224^^^^^218^225^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  ( foundTemplateType )  {     reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ; }^224^^^^^218^225^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  (  ( baseType )  == null )  {     reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ; }^224^^^^^218^225^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  (  ( info.getImplementedInterfaceCount (  )  )  > 0 )  {     reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ; }^224^^^^^218^225^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P2_Replace_Operator]^if  ( baseType != null )  {^220^^^^^205^235^if  ( baseType == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^if  ( thisType == null )  {^220^^^^^205^235^if  ( baseType == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^if  ( baseType == false )  {^220^^^^^205^235^if  ( baseType == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( parametersNode == null )  {^220^^^^^205^235^if  ( baseType == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( info == null )  {^220^^^^^205^235^if  ( baseType == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( maybeThisType != null )  {^220^^^^^205^235^if  ( baseType == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( existingType != null )  {^220^^^^^205^235^if  ( baseType == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( info != null )  {^220^^^^^205^235^if  ( baseType == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( paramsParent == null )  {^220^^^^^205^235^if  ( baseType == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( interType != null )  {^220^^^^^205^235^if  ( baseType == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( ownerType != null )  {^220^^^^^205^235^if  ( baseType == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( argsParent == null )  {^220^^^^^205^235^if  ( baseType == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P15_Unwrap_Block]^reportWarning(com.google.javascript.jscomp.FunctionTypeBuilder.EXTENDS_NON_OBJECT, fnName, baseType.toString());^220^221^222^^^205^235^if  ( baseType == null )  { reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P16_Remove_Block]^^220^221^222^^^205^235^if  ( baseType == null )  { reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  ( ! ( existingFn.hasEqualCallType ( fnType )  )  )  {     reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ; }^220^^^^^205^235^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  (  ( ! ( builder.addOptionalParams ( paramType )  )  )  &&  ( !warnedAboutArgList )  )  {     reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;     emittedWarning = true; }^220^^^^^205^235^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  ( foundTemplateType )  {     reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ; }^220^^^^^205^235^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  (  ( ! ( builder.addVarArgs ( paramType )  )  )  &&  ( !warnedAboutArgList )  )  {     reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;     emittedWarning = true; }^220^^^^^205^235^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  (  ( info.getImplementedInterfaceCount (  )  )  > 0 )  {     reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ; }^220^^^^^205^235^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( TEMPLATE_TYPE_EXPECTED, fnName, baseType.toString (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( EXTENDS_NON_OBJECT, templateTypeName, baseType.toString (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( EXTENDS_NON_OBJECT, fnName, thisType.toString (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning (  fnName, baseType.toString (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( EXTENDS_NON_OBJECT,  baseType.toString (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( EXTENDS_NON_OBJECT, fnName.toString (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( baseType, fnName, EXTENDS_NON_OBJECT.toString (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( fnName, EXTENDS_NON_OBJECT, baseType.toString (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^getOrCreateConstructor ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.cast (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType .getConstructor (  )   ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P14_Delete_Statement]^^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  (  ( baseType )  == null )  {     reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ; }^221^^^^^206^236^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^reportWarning ( EXTENDS_NON_OBJECT, fnName, thisType.cast (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^baseType = ObjectType.cast ( scope.getBaseType (  ) .evaluate ( info )  ) ;^219^^^^^204^234^baseType = ObjectType.cast ( info.getBaseType (  ) .evaluate ( scope )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^baseType = ObjectType.cast ( info.getParameterType (  ) .evaluate ( scope )  ) ;^219^^^^^204^234^baseType = ObjectType.cast ( info.getBaseType (  ) .evaluate ( scope )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^baseType = ObjectType.cast ( info .hasBaseType (  )  .evaluate ( scope )  ) ;^219^^^^^204^234^baseType = ObjectType.cast ( info.getBaseType (  ) .evaluate ( scope )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^baseType =  ObjectType.cast ( null.getBaseType (  ) .evaluate ( scope )  ) ;^219^^^^^204^234^baseType = ObjectType.cast ( info.getBaseType (  ) .evaluate ( scope )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  (  ( info != null )  &&  ( info.hasThisType (  )  )  )  {     maybeThisType = cast ( info.getThisType (  ) .evaluate ( scope )  ) ; }^219^^^^^204^234^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^baseType = ObjectType .toString (  )   ) ;^219^^^^^204^234^baseType = ObjectType.cast ( info.getBaseType (  ) .evaluate ( scope )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P14_Delete_Statement]^^219^^^^^204^234^baseType = ObjectType.cast ( info.getBaseType (  ) .evaluate ( scope )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^baseType = ObjectType.cast ( info.getBaseType (  )  .isTemplateType (  )   ) ;^219^^^^^204^234^baseType = ObjectType.cast ( info.getBaseType (  ) .evaluate ( scope )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( TEMPLATE_TYPE_DUPLICATED, fnName, baseType.toString (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^if  ( baseType == this )  {^220^^^^^205^235^if  ( baseType == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( VAR_ARGS_MUST_BE_LAST, fnName, baseType.toString (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^getOrCreateConstructor ( EXTENDS_NON_OBJECT, fnName, thisType.toString (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( TYPE_REDEFINITION, fnName, baseType.toString (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( EXTENDS_NON_OBJECT, baseType, fnName.toString (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^224^^^^^209^239^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, templateTypeName ) ;^224^^^^^209^239^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning (  fnName ) ;^224^^^^^209^239^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( EXTENDS_WITHOUT_TYPEDEF ) ;^224^^^^^209^239^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( fnName, EXTENDS_WITHOUT_TYPEDEF ) ;^224^^^^^209^239^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^getOrCreateConstructor ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^224^^^^^209^239^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^getOrCreateConstructor ( EXTENDS_WITHOUT_TYPEDEF, templateTypeName ) ;^224^^^^^209^239^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P14_Delete_Statement]^^224^^^^^209^239^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^224^^^^^209^239^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^224^^^^^209^239^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportWarning ( OPTIONAL_ARG_AT_END ) ;reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^224^^^^^209^239^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^224^^^^^209^239^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportWarning ( INEXISTANT_PARAM, inexistentName, fnName ) ;reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^224^^^^^209^239^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  ( foundTemplateType )  {     reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ; }^224^^^^^209^239^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  (  ( baseType )  == null )  {     reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ; }^224^^^^^209^239^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  (  ( info.getImplementedInterfaceCount (  )  )  > 0 )  {     reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ; }^224^^^^^209^239^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^if  ( isInterface || isConstructor )  {^218^^^^^203^233^if  ( isConstructor || isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^if  (  warnedAboutArgList )  {^218^^^^^203^233^if  ( isConstructor || isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^224^^^^^218^225^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^reportWarning ( TEMPLATE_TYPE_DUPLICATED, fnName, baseType.cast (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^if  ( baseType == true )  {^220^^^^^205^235^if  ( baseType == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P2_Replace_Operator]^if  ( isConstructor && isInterface )  {^229^^^^^214^244^if  ( isConstructor || isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^if  ( warnedAboutArgList || isInterface )  {^229^^^^^214^244^if  ( isConstructor || isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^if  ( isInterface || isConstructor )  {^229^^^^^214^244^if  ( isConstructor || isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P6_Replace_Expression]^if  ( isConstructor ) {^229^^^^^214^244^if  ( isConstructor || isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P6_Replace_Expression]^if  (  isInterface )  {^229^^^^^214^244^if  ( isConstructor || isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P6_Replace_Expression]^if  ( interType != null )  {^229^^^^^214^244^if  ( isConstructor || isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P6_Replace_Expression]^if  ( baseType != null )  {^229^^^^^214^244^if  ( isConstructor || isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P6_Replace_Expression]^if  ( maybeFunctionType instanceof FunctionType )  {^229^^^^^214^244^if  ( isConstructor || isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P6_Replace_Expression]^if  ( info.getImplementedInterfaceCount() > 0 )  {^229^^^^^214^244^if  ( isConstructor || isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P2_Replace_Operator]^} else if  ( info.getImplementedInterfaceCount (  )  < 0 )  {^248^^^^^233^263^} else if  ( info.getImplementedInterfaceCount (  )  > 0 )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P3_Replace_Literal]^} else if  ( info.getImplementedInterfaceCount (  )  > -3 )  {^248^^^^^233^263^} else if  ( info.getImplementedInterfaceCount (  )  > 0 )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P6_Replace_Expression]^} else {^248^^^^^233^263^} else if  ( info.getImplementedInterfaceCount (  )  > 0 )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^} else if  ( info.getParameterType (  )  > 0 )  {^248^^^^^233^263^} else if  ( info.getImplementedInterfaceCount (  )  > 0 )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^}  if  ( info.getImplementedInterfaceCount (  )  > 2 )  {^248^^^^^233^263^} else if  ( info.getImplementedInterfaceCount (  )  > 0 )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P15_Unwrap_Block]^reportWarning(com.google.javascript.jscomp.FunctionTypeBuilder.IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName);^248^249^250^^^233^263^} else if  ( info.getImplementedInterfaceCount (  )  > 0 )  { reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P16_Remove_Block]^^248^249^250^^^233^263^} else if  ( info.getImplementedInterfaceCount (  )  > 0 )  { reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  (  (  ( templateTypeName )  != null )  &&  ( !foundTemplateType )  )  {     reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^248^^^^^233^263^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  ( ! ( existingFn.hasEqualCallType ( fnType )  )  )  {     reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ; }^248^^^^^233^263^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  (  ( ! ( builder.addOptionalParams ( paramType )  )  )  &&  ( !warnedAboutArgList )  )  {     reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;     emittedWarning = true; }^248^^^^^233^263^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  ( foundTemplateType )  {     reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ; }^248^^^^^233^263^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  (  ( ! ( builder.addVarArgs ( paramType )  )  )  &&  ( !warnedAboutArgList )  )  {     reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;     emittedWarning = true; }^248^^^^^233^263^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  (  ( baseType )  == null )  {     reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ; }^248^^^^^233^263^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( VAR_ARGS_MUST_BE_LAST, fnName ) ;^249^^^^^234^264^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning (  fnName ) ;^249^^^^^234^264^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR ) ;^249^^^^^234^264^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( fnName, IMPLEMENTS_WITHOUT_CONSTRUCTOR ) ;^249^^^^^234^264^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^getOrCreateConstructor ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;^249^^^^^234^264^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^reportWarning ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^249^^^^^234^264^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P14_Delete_Statement]^^249^^^^^234^264^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;^249^^^^^234^264^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;^249^^^^^234^264^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportWarning ( INEXISTANT_PARAM, inexistentName, fnName ) ;reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;^249^^^^^234^264^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  ( foundTemplateType )  {     reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ; }^249^^^^^234^264^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  (  ( info.getImplementedInterfaceCount (  )  )  > 0 )  {     reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ; }^249^^^^^234^264^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^249^^^^^234^264^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, templateTypeName ) ;^249^^^^^234^264^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P2_Replace_Operator]^if  ( interType == null )  {^233^^^^^218^248^if  ( interType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^if  ( thisType != null )  {^233^^^^^218^248^if  ( interType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^if  ( interType != true )  {^233^^^^^218^248^if  ( interType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( baseType != null )  {^233^^^^^218^248^if  ( interType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( parametersNode == null )  {^233^^^^^218^248^if  ( interType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( info == null )  {^233^^^^^218^248^if  ( interType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( maybeThisType != null )  {^233^^^^^218^248^if  ( interType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( existingType != null )  {^233^^^^^218^248^if  ( interType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( info != null )  {^233^^^^^218^248^if  ( interType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( ownerType != null )  {^233^^^^^218^248^if  ( interType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( baseType == null )  {^233^^^^^218^248^if  ( interType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P15_Unwrap_Block]^implementedInterfaces.add(interType);^233^234^235^236^237^218^248^if  ( interType != null )  { implementedInterfaces.add ( interType ) ; } else { reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P16_Remove_Block]^^233^234^235^236^237^218^248^if  ( interType != null )  { implementedInterfaces.add ( interType ) ; } else { reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  (  (  ( templateTypeName )  != null )  &&  ( !foundTemplateType )  )  {     reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^233^^^^^218^248^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  (  (  ( templateTypeName )  != null )  &&  ( returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  )  {     reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^233^^^^^218^248^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportError ( BAD_IMPLEMENTED_TYPE, templateTypeName ) ;^236^^^^^233^237^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^getOrCreateConstructor ( BAD_IMPLEMENTED_TYPE, fnName ) ;^236^^^^^233^237^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P14_Delete_Statement]^^236^^^^^233^237^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^236^^^^^233^237^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^236^^^^^233^237^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^236^^^^^233^237^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^implementedInterfaces.add ( thisType ) ;^234^^^^^219^249^implementedInterfaces.add ( interType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P14_Delete_Statement]^^234^^^^^219^249^implementedInterfaces.add ( interType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^fnType.setImplementedInterfaces ( implementedInterfaces ) ;implementedInterfaces.add ( interType ) ;^234^^^^^219^249^implementedInterfaces.add ( interType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^implementedInterfaces = Lists.newArrayList (  ) ;implementedInterfaces.add ( interType ) ;^234^^^^^219^249^implementedInterfaces.add ( interType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P2_Replace_Operator]^if  ( baseType == null )  {^239^^^^^224^254^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^if  ( thisType != null )  {^239^^^^^224^254^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P6_Replace_Expression]^if  ( maybeFunctionType instanceof FunctionType )  {^239^^^^^224^254^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^if  ( baseType != false )  {^239^^^^^224^254^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( parametersNode == null )  {^239^^^^^224^254^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( info == null )  {^239^^^^^224^254^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( maybeThisType != null )  {^239^^^^^224^254^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( existingType != null )  {^239^^^^^224^254^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( info != null )  {^239^^^^^224^254^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( paramsParent == null )  {^239^^^^^224^254^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( interType != null )  {^239^^^^^224^254^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( ownerType != null )  {^239^^^^^224^254^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P9_Replace_Statement]^if  ( argsParent == null )  {^239^^^^^224^254^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P2_Replace_Operator]^if  ( maybeFunctionType  >>  FunctionType )  {^241^^^^^226^256^if  ( maybeFunctionType instanceof FunctionType )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^if  ( returnType instanceof FunctionType )  {^241^^^^^226^256^if  ( maybeFunctionType instanceof FunctionType )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P15_Unwrap_Block]^com.google.javascript.rhino.jstype.FunctionType functionType = baseType.getConstructor(); com.google.common.collect.Iterables.addAll(implementedInterfaces, functionType.getImplementedInterfaces());^241^242^243^244^245^226^256^if  ( maybeFunctionType instanceof FunctionType )  { FunctionType functionType = baseType.getConstructor (  ) ; Iterables.addAll ( implementedInterfaces, functionType.getImplementedInterfaces (  )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P16_Remove_Block]^^241^242^243^244^245^226^256^if  ( maybeFunctionType instanceof FunctionType )  { FunctionType functionType = baseType.getConstructor (  ) ; Iterables.addAll ( implementedInterfaces, functionType.getImplementedInterfaces (  )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P13_Insert_Block]^if  (  ( baseType )  != null )  {     JSType maybeFunctionType = baseType.getConstructor (  ) ;     if  ( maybeFunctionType instanceof FunctionType )  {         FunctionType functionType = baseType.getConstructor (  ) ;         addAll ( implementedInterfaces, functionType.getImplementedInterfaces (  )  ) ;     } }^241^^^^^226^256^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^FunctionType functionType = thisType.getConstructor (  ) ;^242^^^^^227^257^FunctionType functionType = baseType.getConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^FunctionType functionType = baseType.toString (  ) ;^242^^^^^227^257^FunctionType functionType = baseType.getConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^JSType maybeFunctionType = baseType.getConstructor (  ) ;FunctionType functionType = baseType.getConstructor (  ) ;^242^^^^^227^257^FunctionType functionType = baseType.getConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P14_Delete_Statement]^^242^^^^^227^257^FunctionType functionType = baseType.getConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^fnType = getOrCreateConstructor (  ) ;FunctionType functionType = baseType.getConstructor (  ) ;^242^^^^^227^257^FunctionType functionType = baseType.getConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^Iterables.addAll ( implementedInterfaces.getImplementedInterfaces (  )  ) ;^243^244^245^^^228^258^Iterables.addAll ( implementedInterfaces, functionType.getImplementedInterfaces (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^Iterables.addAll (  functionType.getImplementedInterfaces (  )  ) ;^243^244^245^^^228^258^Iterables.addAll ( implementedInterfaces, functionType.getImplementedInterfaces (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^Iterables.addAll ( functionType, implementedInterfaces.getImplementedInterfaces (  )  ) ;^243^244^245^^^228^258^Iterables.addAll ( implementedInterfaces, functionType.getImplementedInterfaces (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^Iterables.addAll ( implementedInterfaces, functionType.setImplementedInterfaces (  )  ) ;^243^244^245^^^228^258^Iterables.addAll ( implementedInterfaces, functionType.getImplementedInterfaces (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^Iterables.addAll ( implementedInterfaces, functionType .getImplementedInterfaceCount (  )   ) ;^243^244^245^^^228^258^Iterables.addAll ( implementedInterfaces, functionType.getImplementedInterfaces (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P14_Delete_Statement]^^243^244^245^^^228^258^Iterables.addAll ( implementedInterfaces, functionType.getImplementedInterfaces (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^functionType.setImplementedInterfaces (  )  ) ;^245^^^^^230^260^functionType.getImplementedInterfaces (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P14_Delete_Statement]^^245^^^^^230^260^functionType.getImplementedInterfaces (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^fnType.setImplementedInterfaces ( implementedInterfaces ) ;functionType.getImplementedInterfaces (  )  ) ;^245^^^^^230^260^functionType.getImplementedInterfaces (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^JSType maybeFunctionType = thisType.getConstructor (  ) ;^240^^^^^225^255^JSType maybeFunctionType = baseType.getConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^JSType maybeFunctionType = baseType.toString (  ) ;^240^^^^^225^255^JSType maybeFunctionType = baseType.getConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^FunctionType functionType = baseType.getConstructor (  ) ;JSType maybeFunctionType = baseType.getConstructor (  ) ;^240^^^^^225^255^JSType maybeFunctionType = baseType.getConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P14_Delete_Statement]^^240^^^^^225^255^JSType maybeFunctionType = baseType.getConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^fnType = getOrCreateConstructor (  ) ;JSType maybeFunctionType = baseType.getConstructor (  ) ;^240^^^^^225^255^JSType maybeFunctionType = baseType.getConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P2_Replace_Operator]^if  ( maybeFunctionType  >  FunctionType )  {^241^^^^^226^256^if  ( maybeFunctionType instanceof FunctionType )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^FunctionType functionType = thisType.toString (  ) ;^242^^^^^227^257^FunctionType functionType = baseType.getConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^functionType .getImplementedInterfaceCount (  )   ) ;^245^^^^^230^260^functionType.getImplementedInterfaces (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^implementedInterfaces  = null ;^230^^^^^215^245^implementedInterfaces = Lists.newArrayList (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^ObjectType interType = ObjectType.cast ( scope.evaluate ( t )  ) ;^232^^^^^217^247^ObjectType interType = ObjectType.cast ( t.evaluate ( scope )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P14_Delete_Statement]^^230^^^^^215^245^implementedInterfaces = Lists.newArrayList (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^implementedInterfaces.add ( interType ) ;implementedInterfaces = Lists.newArrayList (  ) ;^230^^^^^215^245^implementedInterfaces = Lists.newArrayList (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^for  ( JSTypeExpression t : info.getParameterType (  )  )  {^231^^^^^216^246^for  ( JSTypeExpression t : info.getImplementedInterfaces (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^ObjectType interType = ObjectType .toString (  )  ;^232^^^^^217^247^ObjectType interType = ObjectType.cast ( t.evaluate ( scope )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P14_Delete_Statement]^^232^^^^^217^247^ObjectType interType = ObjectType.cast ( t.evaluate ( scope )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^ObjectType interType = ObjectType.cast ( t .isTemplateType (  )   ) ;^232^^^^^217^247^ObjectType interType = ObjectType.cast ( t.evaluate ( scope )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportError ( BAD_IMPLEMENTED_TYPE, templateTypeName ) ;^236^^^^^221^251^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^getOrCreateConstructor ( BAD_IMPLEMENTED_TYPE, fnName ) ;^236^^^^^221^251^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P14_Delete_Statement]^^236^^^^^221^251^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^236^^^^^221^251^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^236^^^^^221^251^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^236^^^^^221^251^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^if  ( interType != false )  {^233^^^^^218^248^if  ( interType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^Iterables.addAll ( null, functionType.setImplementedInterfaces (  )  ) ;^243^244^245^^^228^258^Iterables.addAll ( implementedInterfaces, functionType.getImplementedInterfaces (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^JSType maybeFunctionType = thisType.toString (  ) ;^240^^^^^225^255^JSType maybeFunctionType = baseType.getConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P2_Replace_Operator]^if  ( maybeFunctionType  &  FunctionType )  {^241^^^^^226^256^if  ( maybeFunctionType instanceof FunctionType )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P2_Replace_Operator]^} else if  ( info.getImplementedInterfaceCount (  )  == 0 )  {^248^^^^^233^263^} else if  ( info.getImplementedInterfaceCount (  )  > 0 )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P3_Replace_Literal]^} else if  ( info.getImplementedInterfaceCount (  )  > 3 )  {^248^^^^^233^263^} else if  ( info.getImplementedInterfaceCount (  )  > 0 )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^isConstructor = info.hasParameterType (  ) ;^213^^^^^198^228^isConstructor = info.isConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^isConstructor =  null.isConstructor (  ) ;^213^^^^^198^228^isConstructor = info.isConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^isInterface = info.isInterface (  ) ;isConstructor = info.isConstructor (  ) ;^213^^^^^198^228^isConstructor = info.isConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^isInterface = info.hasParameterType (  ) ;^214^^^^^199^229^isInterface = info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^isInterface =  null.isInterface (  ) ;^214^^^^^199^229^isInterface = info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^isConstructor = info.isConstructor (  ) ;isInterface = info.isInterface (  ) ;^214^^^^^199^229^isInterface = info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P14_Delete_Statement]^^213^214^^^^198^228^isConstructor = info.isConstructor (  ) ; isInterface = info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P14_Delete_Statement]^^214^^^^^199^229^isInterface = info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^info.isConstructor (  )  || info.isInterface (  ) ;isInterface = info.isInterface (  ) ;^214^^^^^199^229^isInterface = info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P11_Insert_Donor_Statement]^info.isInterface (  ) ;isInterface = info.isInterface (  ) ;^214^^^^^199^229^isInterface = info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^224^^^^^209^239^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^for  ( JSTypeExpression t : info .getImplementedInterfaceCount (  )   )  {^231^^^^^216^246^for  ( JSTypeExpression t : info.getImplementedInterfaces (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^getOrCreateConstructor ( BAD_IMPLEMENTED_TYPE, templateTypeName ) ;^236^^^^^221^251^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^} else if  ( info .getImplementedInterfaces (  )   > 0 )  {^248^^^^^233^263^} else if  ( info.getImplementedInterfaceCount (  )  > 0 )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^reportWarning ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^224^^^^^218^225^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^if  ( thisType == true )  {^220^^^^^205^235^if  ( baseType == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^getOrCreateConstructor ( EXTENDS_NON_OBJECT, templateTypeName, baseType.toString (  )  ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^reportWarning ( VAR_ARGS_MUST_BE_LAST, fnName ) ;^224^^^^^209^239^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^getOrCreateConstructor ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^224^^^^^209^239^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^getOrCreateConstructor ( EXTENDS_WITHOUT_TYPEDEF, templateTypeName ) ;^224^^^^^218^225^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^if  ( isConstructor || warnedAboutArgList )  {^229^^^^^214^244^if  ( isConstructor || isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P2_Replace_Operator]^} else if  ( info.getImplementedInterfaceCount (  )  >= 0 )  {^248^^^^^233^263^} else if  ( info.getImplementedInterfaceCount (  )  > 0 )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P3_Replace_Literal]^} else if  ( info.getImplementedInterfaceCount (  )  > -2 )  {^248^^^^^233^263^} else if  ( info.getImplementedInterfaceCount (  )  > 0 )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^}  if  ( info.getParameterType (  )  > 2 )  {^248^^^^^233^263^} else if  ( info.getImplementedInterfaceCount (  )  > 0 )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P2_Replace_Operator]^if  ( maybeFunctionType  !=  FunctionType )  {^241^^^^^226^256^if  ( maybeFunctionType instanceof FunctionType )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P2_Replace_Operator]^if  ( maybeFunctionType  <=  FunctionType )  {^241^^^^^226^256^if  ( maybeFunctionType instanceof FunctionType )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^Iterables.addAll ( null, functionType.getImplementedInterfaces (  )  ) ;^243^244^245^^^228^258^Iterables.addAll ( implementedInterfaces, functionType.getImplementedInterfaces (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^if  ( interType != this )  {^233^^^^^218^248^if  ( interType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^getOrCreateConstructor ( BAD_IMPLEMENTED_TYPE, templateTypeName ) ;^236^^^^^233^237^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^if  ( baseType != this )  {^239^^^^^224^254^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P2_Replace_Operator]^if  ( maybeFunctionType  >=  FunctionType )  {^241^^^^^226^256^if  ( maybeFunctionType instanceof FunctionType )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P3_Replace_Literal]^} else if  ( info.getImplementedInterfaceCount (  )  > 7 )  {^248^^^^^233^263^} else if  ( info.getImplementedInterfaceCount (  )  > 0 )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^}  if  ( info.getParameterType (  )  > 1 )  {^248^^^^^233^263^} else if  ( info.getImplementedInterfaceCount (  )  > 0 )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^getOrCreateConstructor ( VAR_ARGS_MUST_BE_LAST, fnName ) ;^249^^^^^234^264^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P14_Delete_Statement]^^213^^^^^198^228^isConstructor = info.isConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P7_Replace_Invocation]^isInterface = info .getImplementedInterfaces (  )  ;^214^^^^^199^229^isInterface = info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^reportWarning ( TEMPLATE_TYPE_DUPLICATED, fnName, baseType .getConstructor (  )   ) ;^221^^^^^206^236^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^getOrCreateConstructor ( TYPE_REDEFINITION, fnName ) ;^249^^^^^234^264^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P8_Replace_Mix]^return null;^253^^^^^238^268^return this;^[CLASS] FunctionTypeBuilder  [METHOD] inferInheritance [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] JSType  maybeFunctionType  returnType  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  FunctionType  functionType  String  fnName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  JSTypeExpression  t  List  implementedInterfaces  
[P5_Replace_Variable]^ObjectType objType = ObjectType.cast ( returnType ) ;^261^^^^^260^266^ObjectType objType = ObjectType.cast ( type ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^261^^^^^260^266^ObjectType objType = ObjectType.cast ( type ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^if  ( objType != null ||  ( info == null || !info.hasType (  )  )  )  {^262^^^^^260^266^if  ( objType != null &&  ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^if  ( objType == null &&  ( info == null || !info.hasType (  )  )  )  {^262^^^^^260^266^if  ( objType != null &&  ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^if  ( objType != null &&  ( info == null && !info.hasType (  )  )  )  {^262^^^^^260^266^if  ( objType != null &&  ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^if  ( objType != null &&  ( info != null || !info.hasType (  )  )  )  {^262^^^^^260^266^if  ( objType != null &&  ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^if  ( info != null &&  ( objType == null || !info.hasType (  )  )  )  {^262^^^^^260^266^if  ( objType != null &&  ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^if  ( objType != null &&  ( info == null ) {^262^^^^^260^266^if  ( objType != null &&  ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^if  (  !info.hasType (  )  )  )  {^262^^^^^260^266^if  ( objType != null &&  ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^if  ( objType != null )  {^262^^^^^260^266^if  ( objType != null &&  ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^if  ( (info == null || !(info.hasType())) )  {^262^^^^^260^266^if  ( objType != null &&  ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^if  ( info == null )  {^262^^^^^260^266^if  ( objType != null &&  ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^if  ( objType != null &&  ( info == null || !info.hasParameterType (  )  )  )  {^262^^^^^260^266^if  ( objType != null &&  ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^if  ( objType != null &&  ( info == null || !info .hasBaseType (  )   )  )  {^262^^^^^260^266^if  ( objType != null &&  ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P15_Unwrap_Block]^thisType = objType;^262^263^264^^^260^266^if  ( objType != null &&  ( info == null || !info.hasType (  )  )  )  { thisType = objType; }^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P16_Remove_Block]^^262^263^264^^^260^266^if  ( objType != null &&  ( info == null || !info.hasType (  )  )  )  { thisType = objType; }^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^thisType = thisType;^263^^^^^260^266^thisType = objType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^thisType =  interType;^263^^^^^260^266^thisType = objType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^thisType = maybeThisType;thisType = objType;^263^^^^^260^266^thisType = objType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^this.scope = scope;thisType = objType;^263^^^^^260^266^thisType = objType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^thisType = ownerType;thisType = objType;^263^^^^^260^266^thisType = objType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^thisType =  null;^263^^^^^260^266^thisType = objType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^return null;^265^^^^^260^266^return this;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info JSType type [VARIABLES] ObjectType  baseType  interType  objType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^if  ( info != null || info.hasThisType (  )  )  {^278^^^^^263^293^if  ( info != null && info.hasThisType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^if  ( info == null && info.hasThisType (  )  )  {^278^^^^^263^293^if  ( info != null && info.hasThisType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^if  ( info != null ) {^278^^^^^263^293^if  ( info != null && info.hasThisType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^if  (  info.hasThisType (  )  )  {^278^^^^^263^293^if  ( info != null && info.hasThisType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^if  ( info != null && info.hasParameterType (  )  )  {^278^^^^^263^293^if  ( info != null && info.hasThisType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^if  ( info != null && info .getThisType (  )   )  {^278^^^^^263^293^if  ( info != null && info.hasThisType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P15_Unwrap_Block]^maybeThisType = com.google.javascript.rhino.jstype.ObjectType.cast(info.getThisType().evaluate(scope));^278^279^280^^^263^293^if  ( info != null && info.hasThisType (  )  )  { maybeThisType = ObjectType.cast ( info.getThisType (  ) .evaluate ( scope )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P16_Remove_Block]^^278^279^280^^^263^293^if  ( info != null && info.hasThisType (  )  )  { maybeThisType = ObjectType.cast ( info.getThisType (  ) .evaluate ( scope )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^maybeThisType = ObjectType.cast ( scope.getThisType (  ) .evaluate ( info )  ) ;^279^^^^^264^294^maybeThisType = ObjectType.cast ( info.getThisType (  ) .evaluate ( scope )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^maybeThisType = ObjectType .toString (  )   ) ;^279^^^^^264^294^maybeThisType = ObjectType.cast ( info.getThisType (  ) .evaluate ( scope )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^maybeThisType = ObjectType.cast ( info.getParameterType (  ) .evaluate ( scope )  ) ;^279^^^^^264^294^maybeThisType = ObjectType.cast ( info.getThisType (  ) .evaluate ( scope )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^maybeThisType =  ObjectType.cast ( null.getThisType (  ) .evaluate ( scope )  ) ;^279^^^^^264^294^maybeThisType = ObjectType.cast ( info.getThisType (  ) .evaluate ( scope )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P13_Insert_Block]^if  (  ( info != null )  &&  ( info.hasThisType (  )  )  )  {     maybeThisType = cast ( info.getThisType (  ) .evaluate ( scope )  ) ; }^279^^^^^264^294^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^maybeThisType = ObjectType.cast ( info .hasThisType (  )  .evaluate ( scope )  ) ;^279^^^^^264^294^maybeThisType = ObjectType.cast ( info.getThisType (  ) .evaluate ( scope )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^279^^^^^264^294^maybeThisType = ObjectType.cast ( info.getThisType (  ) .evaluate ( scope )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^if  ( maybeThisType == null )  {^281^^^^^266^296^if  ( maybeThisType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^if  ( owner != null && (info == null) || !(info.hasType()) )  {^281^^^^^266^296^if  ( maybeThisType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^if  ( owner != null )  {^281^^^^^266^296^if  ( maybeThisType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^if  ( (info == null || !(info.hasType())) )  {^281^^^^^266^296^if  ( maybeThisType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^if  ( info == null )  {^281^^^^^266^296^if  ( maybeThisType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^if  ( ownerType != null )  {^281^^^^^266^296^if  ( maybeThisType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^if  ( maybeThisType != false )  {^281^^^^^266^296^if  ( maybeThisType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( baseType != null )  {^281^^^^^266^296^if  ( maybeThisType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( parametersNode == null )  {^281^^^^^266^296^if  ( maybeThisType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( existingType != null )  {^281^^^^^266^296^if  ( maybeThisType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( interType != null )  {^281^^^^^266^296^if  ( maybeThisType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( baseType == null )  {^281^^^^^266^296^if  ( maybeThisType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^} else if  ( owner != null || ( info == null || !info.hasType (  )  )  )  {^289^290^^^^274^304^} else if  ( owner != null && ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^} else if  ( owner == null && ( info == null || !info.hasType (  )  )  )  {^289^290^^^^274^304^} else if  ( owner != null && ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^} else if  ( owner != null && ( info == null && !info.hasType (  )  )  )  {^289^290^^^^274^304^} else if  ( owner != null && ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^} else if  ( owner != null && ( info != null || !info.hasType (  )  )  )  {^289^290^^^^274^304^} else if  ( owner != null && ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^} else if  ( sourceNode != null && ( info == null || !info.hasType (  )  )  )  {^289^290^^^^274^304^} else if  ( owner != null && ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^} else if  ( info != null && ( owner == null || !info.hasType (  )  )  )  {^289^290^^^^274^304^} else if  ( owner != null && ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^} else if  ( owner != null && ( info == null ) {^289^290^^^^274^304^} else if  ( owner != null && ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^} else if  (  !info.hasType (  )  )  )  {^289^290^^^^274^304^} else if  ( owner != null && ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^} else if  ( owner != null )  {^289^290^^^^274^304^} else if  ( owner != null && ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^} else if  ( (info == null || !(info.hasType())) )  {^289^290^^^^274^304^} else if  ( owner != null && ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^} else if  ( info == null )  {^289^290^^^^274^304^} else if  ( owner != null && ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^} else if  ( ownerType != null )  {^289^290^^^^274^304^} else if  ( owner != null && ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P6_Replace_Expression]^} else {^289^290^^^^274^304^} else if  ( owner != null && ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^} else if  ( owner != null && ( info == null || !info.hasParameterType (  )  )  )  {^289^290^^^^274^304^} else if  ( owner != null && ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^if  ( ownerType == null )  {^302^^^^^289^305^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^if  ( objType != null )  {^302^^^^^289^305^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^if  ( ownerType != true )  {^302^^^^^289^305^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( baseType != null )  {^302^^^^^289^305^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( info == null )  {^302^^^^^289^305^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( maybeThisType != null )  {^302^^^^^289^305^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( existingType != null )  {^302^^^^^289^305^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( info != null )  {^302^^^^^289^305^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( interType != null )  {^302^^^^^289^305^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( baseType == null )  {^302^^^^^289^305^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P15_Unwrap_Block]^thisType = ownerType;^302^303^304^^^289^305^if  ( ownerType != null )  { thisType = ownerType; }^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P16_Remove_Block]^^302^303^304^^^289^305^if  ( ownerType != null )  { thisType = ownerType; }^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P13_Insert_Block]^if  (  ( baseType )  != null )  {     fnType.setPrototypeBasedOn ( baseType ) ; }^302^^^^^289^305^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^thisType = thisType;^303^^^^^289^305^thisType = ownerType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^thisType =  objType;^303^^^^^289^305^thisType = ownerType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^thisType = maybeThisType;thisType = ownerType;^303^^^^^289^305^thisType = ownerType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^thisType = objType;thisType = ownerType;^303^^^^^289^305^thisType = ownerType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P1_Replace_Type]^char ownerTypeName = owner.getQualifiedName (  ) ;^297^^^^^289^305^String ownerTypeName = owner.getQualifiedName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^String sourceNodeTypeName = owner.getQualifiedName (  ) ;^297^^^^^289^305^String ownerTypeName = owner.getQualifiedName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^String ownerTypeName = owner.newString (  ) ;^297^^^^^289^305^String ownerTypeName = owner.getQualifiedName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^String ownerTypeName = owner .getLineno (  )  ;^297^^^^^289^305^String ownerTypeName = owner.getQualifiedName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^String argumentName = arg.getString (  ) ;String ownerTypeName = owner.getQualifiedName (  ) ;^297^^^^^289^305^String ownerTypeName = owner.getQualifiedName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^String paramName = param.getString (  ) ;String ownerTypeName = owner.getQualifiedName (  ) ;^297^^^^^289^305^String ownerTypeName = owner.getQualifiedName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, templateTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType sourceNodeType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, templateTypeName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope,  sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scopeTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType (  ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName,  owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, sourceName, ownerTypeName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType sourceNameType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, owner, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( ownerTypeName.getType ( scope, typeRegistry, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( sourceName, ownerTypeName, scope, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^ObjectType ownerType = ObjectType .cast (  )   )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^ObjectType ownerType = ObjectType.cast ( typeRegistry .getType ( sourceName )   )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.newString (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.newString (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, templateTypeName, owner.newString (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P13_Insert_Block]^if  (  ( owner != null )  &&  (  ( info == null )  ||  ( ! ( info.hasType (  )  )  )  )  )  {     String ownerTypeName = owner.getQualifiedName (  ) ;     ObjectType ownerType = cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;     if  ( ownerType != null )  {         thisType = ownerType;     } }^298^^^^^289^305^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType scopeType = ObjectType.cast ( typeRegistry.getType ( owner, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( scope.getType ( typeRegistry, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^ObjectType ownerType = ObjectType.cast ( typeRegistry .getType ( templateTypeName )   )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( scope, sourceNodeTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^289^305^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( scope, ownerTypeName, templateTypeName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^289^305^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( scope,  sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^289^305^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( scopeTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^289^305^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType (  ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^289^305^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( scope, ownerTypeName,  owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^289^305^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( scope, sourceName, ownerTypeName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^289^305^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( owner, scopeTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^289^305^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( ownerTypeName, scope, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^289^305^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( sourceName, ownerTypeName, scope, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^289^305^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.newString (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^289^305^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.newString (  )  )  ) ;^299^300^301^^^289^305^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^typeRegistry.getType ( scope, paramsParentTypeName, sourceName, owner.getLineno (  ) , owner .getLineno (  )   )  ) ;^299^300^301^^^289^305^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^299^300^301^^^289^305^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^owner.getLineno (  ) , sourceNode.getCharno (  )  )  ) ;^301^^^^^289^305^owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^owner.newString (  ) , owner.getCharno (  )  )  ) ;^301^^^^^289^305^owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^owner .getNext (  )  , owner.getCharno (  )  )  ) ;^301^^^^^289^305^owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^301^^^^^289^305^owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^owner.getLineno (  ) , owner.newString (  )  )  ) ;^301^^^^^289^305^owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^owner.getLineno (  ) , owner .getLineno (  )   )  ) ;^301^^^^^289^305^owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^if  ( ownerType == null )  {^302^^^^^287^317^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^if  ( objType != null )  {^302^^^^^287^317^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^if  ( ownerType != this )  {^302^^^^^287^317^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( baseType != null )  {^302^^^^^287^317^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( info == null )  {^302^^^^^287^317^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( maybeThisType != null )  {^302^^^^^287^317^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( existingType != null )  {^302^^^^^287^317^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( info != null )  {^302^^^^^287^317^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( interType != null )  {^302^^^^^287^317^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( baseType == null )  {^302^^^^^287^317^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P15_Unwrap_Block]^thisType = ownerType;^302^303^304^^^287^317^if  ( ownerType != null )  { thisType = ownerType; }^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P16_Remove_Block]^^302^303^304^^^287^317^if  ( ownerType != null )  { thisType = ownerType; }^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P13_Insert_Block]^if  (  ( baseType )  != null )  {     fnType.setPrototypeBasedOn ( baseType ) ; }^302^^^^^287^317^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^thisType = thisType;^303^^^^^288^318^thisType = ownerType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^thisType =  null;^303^^^^^288^318^thisType = ownerType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^thisType = maybeThisType;thisType = ownerType;^303^^^^^288^318^thisType = ownerType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^thisType = objType;thisType = ownerType;^303^^^^^288^318^thisType = ownerType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^thisType =  objType;^303^^^^^288^318^thisType = ownerType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P1_Replace_Type]^char ownerTypeName = owner.getQualifiedName (  ) ;^297^^^^^282^312^String ownerTypeName = owner.getQualifiedName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^String sourceNodeTypeName = owner.getQualifiedName (  ) ;^297^^^^^282^312^String ownerTypeName = owner.getQualifiedName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^String ownerTypeName = owner.newString (  ) ;^297^^^^^282^312^String ownerTypeName = owner.getQualifiedName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^String ownerTypeName = owner .getLineno (  )  ;^297^^^^^282^312^String ownerTypeName = owner.getQualifiedName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^String argumentName = arg.getString (  ) ;String ownerTypeName = owner.getQualifiedName (  ) ;^297^^^^^282^312^String ownerTypeName = owner.getQualifiedName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^String paramName = param.getString (  ) ;String ownerTypeName = owner.getQualifiedName (  ) ;^297^^^^^282^312^String ownerTypeName = owner.getQualifiedName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, templateTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType sourceNodeType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, templateTypeName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope,  sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scopeTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType (  ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName,  owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, sourceName, ownerTypeName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType typeRegistryType = ObjectType.cast ( owner.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( sourceName.getType ( scope, ownerTypeName, typeRegistry, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( ownerTypeName, scope, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.newString (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner .getNext (  )  , owner.getCharno (  )  )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.newString (  )  )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^ObjectType ownerType = ObjectType .cast (  )   )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P13_Insert_Block]^if  (  ( owner != null )  &&  (  ( info == null )  ||  ( ! ( info.hasType (  )  )  )  )  )  {     String ownerTypeName = owner.getQualifiedName (  ) ;     ObjectType ownerType = cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;     if  ( ownerType != null )  {         thisType = ownerType;     } }^298^^^^^283^313^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^( info == null || !info.hasParameterType (  )  )  )  {^290^^^^^275^305^( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^String paramsParentTypeName = owner.getQualifiedName (  ) ;^297^^^^^282^312^String ownerTypeName = owner.getQualifiedName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType scopeType = ObjectType.cast ( typeRegistry.getType ( owner, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^ObjectType ownerType = ObjectType.cast ( typeRegistry .getType ( templateTypeName )   )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner .getLineno (  )   )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( scope, templateTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^284^314^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( scope, paramsParentTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^284^314^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( scope, ownerTypeName, templateTypeName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^284^314^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( scope,  sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^284^314^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( scopeTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^284^314^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType (  ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^284^314^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( scope, ownerTypeName,  owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^284^314^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( scope, sourceName, ownerTypeName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^284^314^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( owner, scopeTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^284^314^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.newString (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^284^314^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.newString (  )  )  ) ;^299^300^301^^^284^314^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^typeRegistry.getType ( scope, templateTypeName, sourceName, owner.newString (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^284^314^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^299^300^301^^^284^314^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^owner.getLineno (  ) , sourceNode.getCharno (  )  )  ) ;^301^^^^^286^316^owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^owner.newString (  ) , owner.getCharno (  )  )  ) ;^301^^^^^286^316^owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^owner.getLineno (  ) , paramsParent.getCharno (  )  )  ) ;^301^^^^^286^316^owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^301^^^^^286^316^owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^owner.getLineno (  ) , owner.newString (  )  )  ) ;^301^^^^^286^316^owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^owner.getLineno (  ) , paramsParent.newString (  )  )  ) ;^301^^^^^286^316^owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^thisType = thisType;^288^^^^^273^303^thisType = maybeThisType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^thisType =  ownerType;^288^^^^^273^303^thisType = maybeThisType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^thisType = ownerType;thisType = maybeThisType;^288^^^^^273^303^thisType = maybeThisType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^thisType = objType;thisType = maybeThisType;^288^^^^^273^303^thisType = maybeThisType;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^} else if  ( paramsParent != null && ( info == null || !info.hasType (  )  )  )  {^289^290^^^^274^304^} else if  ( owner != null && ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^}  if  ( owner != false && ( info == false || !info.hasType (  )  )  )  {^289^290^^^^274^304^} else if  ( owner != null && ( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^if  ( thisType != null )  {^302^^^^^289^305^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^if  ( ownerType != false )  {^302^^^^^289^305^if  ( ownerType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^String paramsParentTypeName = owner.getQualifiedName (  ) ;^297^^^^^289^305^String ownerTypeName = owner.getQualifiedName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType paramsParentType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType typeRegistryType = ObjectType.cast ( owner.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner .getLineno (  )   )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^ObjectType paramsParentType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.newString (  )  )  ) ;^298^299^300^301^^289^305^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( scope, templateTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^289^305^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( scope, sourceNameTypeName, owner, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^289^305^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^owner.getLineno (  ) , paramsParent.getCharno (  )  )  ) ;^301^^^^^289^305^owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( ownerTypeName.getType ( scope, typeRegistry, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( sourceName, ownerTypeName, scope, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^( info == null || !info .hasBaseType (  )   )  )  {^290^^^^^275^305^( info == null || !info.hasType (  )  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^ObjectType ownerTypeNameType = ObjectType.cast ( typeRegistry.getType ( scope, owner, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^298^299^300^301^^283^313^ObjectType ownerType = ObjectType.cast ( typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( scope, sourceNodeTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^284^314^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.getType ( scope, owner, sourceName, ownerTypeName.getLineno (  ) , owner.getCharno (  )  )  ) ;^299^300^301^^^284^314^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner .getNext (  )  , owner.getCharno (  )  )  ) ;^299^300^301^^^284^314^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^typeRegistry .getType ( sourceName )   )  ) ;^299^300^301^^^284^314^typeRegistry.getType ( scope, ownerTypeName, sourceName, owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^owner.newString (  ) , sourceNode.getCharno (  )  )  ) ;^301^^^^^286^316^owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^owner.getLineno (  ) , owner .getLineno (  )   )  ) ;^301^^^^^286^316^owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^owner.getLineno (  ) , sourceNode .getLineno (  )   )  ) ;^301^^^^^286^316^owner.getLineno (  ) , owner.getCharno (  )  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^return null;^307^^^^^292^322^return this;^[CLASS] FunctionTypeBuilder  [METHOD] inferThisType [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info Node owner [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P1_Replace_Type]^for  ( char name : info.getParameterNames (  )  )  {^316^^^^^313^321^for  ( String name : info.getParameterNames (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^for  ( String name : info.getParameterType (  )  )  {^316^^^^^313^321^for  ( String name : info.getParameterNames (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^316^317^318^^^313^321^for  ( String name : info.getParameterNames (  )  )  { lp.addChildToBack ( Node.newString ( Token.NAME, name )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^lp.addChildToBack ( Node.newString ( Token.NAME )  ) ;^317^^^^^313^321^lp.addChildToBack ( Node.newString ( Token.NAME, name )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^lp .children (  )  ;^317^^^^^313^321^lp.addChildToBack ( Node.newString ( Token.NAME, name )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^lp.addChildToBack ( Node.newString ( Token.NAME, templateTypeName )  ) ;^317^^^^^313^321^lp.addChildToBack ( Node.newString ( Token.NAME, name )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^317^^^^^313^321^lp.addChildToBack ( Node.newString ( Token.NAME, name )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^lp.addChildToBack ( Node .getString (  )   ) ;^317^^^^^313^321^lp.addChildToBack ( Node.newString ( Token.NAME, name )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^return inferParameterTypes ( sourceNode, info ) ;^320^^^^^313^321^return inferParameterTypes ( lp, info ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^return inferParameterTypes (  info ) ;^320^^^^^313^321^return inferParameterTypes ( lp, info ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^return inferParameterTypes ( lp ) ;^320^^^^^313^321^return inferParameterTypes ( lp, info ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^return inferParameterTypes ( info, lp ) ;^320^^^^^313^321^return inferParameterTypes ( lp, info ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^return isVarArgsParameter ( lp, info ) ;^320^^^^^313^321^return inferParameterTypes ( lp, info ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^return inferParameterTypes ( parametersNode, info ) ;^320^^^^^313^321^return inferParameterTypes ( lp, info ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^320^^^^^313^321^return inferParameterTypes ( lp, info ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  returnType  type  boolean  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  fnName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^if  ( argsParent != null )  {^329^^^^^314^344^if  ( argsParent == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( sourceNode == null )  {^329^^^^^314^344^if  ( argsParent == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P6_Replace_Expression]^if  ( info == null )  {^329^^^^^314^344^if  ( argsParent == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P8_Replace_Mix]^if  ( argsParent == false )  {^329^^^^^314^344^if  ( argsParent == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( baseType != null )  {^329^^^^^314^344^if  ( argsParent == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( parametersNode == null )  {^329^^^^^314^344^if  ( argsParent == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( paramsParent == null )  {^329^^^^^314^344^if  ( argsParent == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( baseType == null )  {^329^^^^^314^344^if  ( argsParent == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P15_Unwrap_Block]^if (info == null) {    return this;}else {    return inferParameterTypes(info);};^329^330^331^332^333^314^344^if  ( argsParent == null )  { if  ( info == null )  { return this; } else { return inferParameterTypes ( info ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P16_Remove_Block]^^329^330^331^332^333^314^344^if  ( argsParent == null )  { if  ( info == null )  { return this; } else { return inferParameterTypes ( info ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  ( info == null )  {     return this; }else {     return inferParameterTypes ( info ) ; }^329^^^^^314^344^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P2_Replace_Operator]^if  ( info != null )  {^330^^^^^315^345^if  ( info == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P8_Replace_Mix]^if  ( info == this )  {^330^^^^^315^345^if  ( info == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( baseType != null )  {^330^^^^^315^345^if  ( info == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( isOptional )  {^330^^^^^315^345^if  ( info == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( interType != null )  {^330^^^^^315^345^if  ( info == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( ownerType != null )  {^330^^^^^315^345^if  ( info == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( baseType == null )  {^330^^^^^315^345^if  ( info == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( argsParent == null )  {^330^^^^^315^345^if  ( info == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P15_Unwrap_Block]^return this;^330^331^332^333^334^315^345^if  ( info == null )  { return this; } else { return inferParameterTypes ( info ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P16_Remove_Block]^^330^331^332^333^334^315^345^if  ( info == null )  { return this; } else { return inferParameterTypes ( info ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  ( argsParent == null )  {     if  ( info == null )  {         return this;     }else {         return inferParameterTypes ( info ) ;     } }^330^^^^^315^345^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^return inferReturnType ( info ) ;^333^^^^^330^334^return inferParameterTypes ( info ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^333^^^^^330^334^return inferParameterTypes ( info ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P8_Replace_Mix]^return null;^331^^^^^316^346^return this;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^return inferReturnType ( info ) ;^333^^^^^318^348^return inferParameterTypes ( info ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^333^^^^^318^348^return inferParameterTypes ( info ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^FunctionParamBuilder paramBuilder = new FunctionParamBuilder ( typeRegistry ) ;FunctionParamBuilder builder = new FunctionParamBuilder ( typeRegistry ) ;^338^^^^^323^353^FunctionParamBuilder builder = new FunctionParamBuilder ( typeRegistry ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P3_Replace_Literal]^boolean warnedAboutArgList = true;^339^^^^^324^354^boolean warnedAboutArgList = false;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^boolean foundTemplateType = false;boolean warnedAboutArgList = false;^339^^^^^324^354^boolean warnedAboutArgList = false;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^boolean emittedWarning = false;boolean warnedAboutArgList = false;^339^^^^^324^354^boolean warnedAboutArgList = false;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P2_Replace_Operator]^Set<String> allJsDocParams =  ( info != null )  ? Sets.<String>newHashSet (  )  : Sets.newHashSet ( info.getParameterNames (  )  ) ;^340^341^342^^^325^355^Set<String> allJsDocParams =  ( info == null )  ? Sets.<String>newHashSet (  )  : Sets.newHashSet ( info.getParameterNames (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P6_Replace_Expression]^Set<String> allJsDocParams =  ( Sets.newHashSet ( info.getParameterNames (  )  ) ;^340^341^342^^^325^355^Set<String> allJsDocParams =  ( info == null )  ? Sets.<String>newHashSet (  )  : Sets.newHashSet ( info.getParameterNames (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^Set<String> allJsDocParams =  ( info == null )  ? Sets.<String>newHashSet (  )  : Sets.newHashSet ( info.getParameterType (  )  ) ;^340^341^342^^^325^355^Set<String> allJsDocParams =  ( info == null )  ? Sets.<String>newHashSet (  )  : Sets.newHashSet ( info.getParameterNames (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^341^342^^^^326^356^Sets.<String>newHashSet (  )  : Sets.newHashSet ( info.getParameterNames (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^Sets.newHashSet ( info.getParameterNames (  )  ) ;Sets.<String>newHashSet (  )  : Sets.newHashSet ( info.getParameterNames (  )  ) ;^341^342^^^^326^356^Sets.<String>newHashSet (  )  : Sets.newHashSet ( info.getParameterNames (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^Sets.newHashSet ( info.getParameterType (  )  ) ;^342^^^^^327^357^Sets.newHashSet ( info.getParameterNames (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^Sets.newHashSet ( info .getParameterType ( ownerTypeName )   ) ;^342^^^^^327^357^Sets.newHashSet ( info.getParameterNames (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^342^^^^^327^357^Sets.newHashSet ( info.getParameterNames (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^Sets.<String>newHashSet (  )  : Sets.newHashSet ( info.getParameterNames (  )  ) ;Sets.newHashSet ( info.getParameterNames (  )  ) ;^342^^^^^327^357^Sets.newHashSet ( info.getParameterNames (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P3_Replace_Literal]^boolean foundTemplateType = true;^343^^^^^328^358^boolean foundTemplateType = false;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^boolean warnedAboutArgList = false;boolean foundTemplateType = false;^343^^^^^328^358^boolean foundTemplateType = false;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^boolean emittedWarning = false;boolean foundTemplateType = false;^343^^^^^328^358^boolean foundTemplateType = false;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P12_Insert_Condition]^if  ( foundTemplateType )  { boolean foundTemplateType = false; }^343^^^^^328^358^boolean foundTemplateType = false;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P2_Replace_Operator]^if  ( templateTypeName != null || parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^353^354^^^^338^368^if  ( templateTypeName != null && parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P2_Replace_Operator]^if  ( templateTypeName == null && parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^353^354^^^^338^368^if  ( templateTypeName != null && parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( templateTypeName != null && type.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^353^354^^^^338^368^if  ( templateTypeName != null && parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( sourceName != null && parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^353^354^^^^338^368^if  ( templateTypeName != null && parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P6_Replace_Expression]^if  ( templateTypeName != null ) {^353^354^^^^338^368^if  ( templateTypeName != null && parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P6_Replace_Expression]^if  (  parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^353^354^^^^338^368^if  ( templateTypeName != null && parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^if  ( templateTypeName != null && parameterType.restrictByNotNullOrUndefined (  ) .evaluate (  )  )  {^353^354^^^^338^368^if  ( templateTypeName != null && parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( templateTypeName != null && returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^353^354^^^^338^368^if  ( templateTypeName != null && parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P15_Unwrap_Block]^if (foundTemplateType) {    reportError(com.google.javascript.jscomp.FunctionTypeBuilder.TEMPLATE_TYPE_DUPLICATED, fnName);}; foundTemplateType = true;^353^354^355^356^357^338^368^if  ( templateTypeName != null && parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  { if  ( foundTemplateType )  { reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P16_Remove_Block]^^353^354^355^356^357^338^368^if  ( templateTypeName != null && parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  { if  ( foundTemplateType )  { reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  (  ( templateTypeName )  != null )  &&  ( !foundTemplateType )  )  {     reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^353^^^^^338^368^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  (  ( templateTypeName )  != null )  &&  ( returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  )  {     reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^353^^^^^338^368^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( warnedAboutArgList )  {^355^^^^^353^359^if  ( foundTemplateType )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P15_Unwrap_Block]^reportError(com.google.javascript.jscomp.FunctionTypeBuilder.TEMPLATE_TYPE_DUPLICATED, fnName);^355^356^357^^^353^359^if  ( foundTemplateType )  { reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P16_Remove_Block]^^355^356^357^^^353^359^if  ( foundTemplateType )  { reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  (  ( templateTypeName )  != null )  &&  ( !foundTemplateType )  )  {     reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^355^^^^^353^359^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  ( ! ( existingFn.hasEqualCallType ( fnType )  )  )  {     reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ; }^355^^^^^353^359^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  ( baseType )  == null )  {     reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ; }^355^^^^^353^359^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  (  ( templateTypeName )  != null )  &&  ( returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  )  {     reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^355^^^^^353^359^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  ( info.getImplementedInterfaceCount (  )  )  > 0 )  {     reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ; }^355^^^^^353^359^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportError ( VAR_ARGS_MUST_BE_LAST, fnName ) ;^356^^^^^353^359^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportError ( TEMPLATE_TYPE_DUPLICATED, sourceName ) ;^356^^^^^353^359^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportError (  fnName ) ;^356^^^^^353^359^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportError ( TEMPLATE_TYPE_DUPLICATED ) ;^356^^^^^353^359^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportError ( fnName, TEMPLATE_TYPE_DUPLICATED ) ;^356^^^^^353^359^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^getOrCreateConstructor ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^356^^^^^353^359^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P8_Replace_Mix]^reportError ( TEMPLATE_TYPE_DUPLICATED, ownerTypeName ) ;^356^^^^^353^359^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^356^^^^^353^359^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^356^^^^^353^359^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^356^^^^^353^359^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  (  ( templateTypeName )  != null )  &&  ( !foundTemplateType )  )  {     reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^356^^^^^353^359^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  ( foundTemplateType )  {     reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ; }^356^^^^^353^359^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P3_Replace_Literal]^foundTemplateType = false;^358^^^^^353^359^foundTemplateType = true;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P12_Insert_Condition]^if  ( foundTemplateType )  { foundTemplateType = true; }^358^^^^^353^359^foundTemplateType = true;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportError ( TEMPLATE_TYPE_DUPLICATED, templateTypeName ) ;^356^^^^^353^359^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( warnedAboutArgList )  {^355^^^^^340^370^if  ( foundTemplateType )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P15_Unwrap_Block]^reportError(com.google.javascript.jscomp.FunctionTypeBuilder.TEMPLATE_TYPE_DUPLICATED, fnName);^355^356^357^^^340^370^if  ( foundTemplateType )  { reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P16_Remove_Block]^^355^356^357^^^340^370^if  ( foundTemplateType )  { reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  (  ( templateTypeName )  != null )  &&  ( !foundTemplateType )  )  {     reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^355^^^^^340^370^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  ( ! ( existingFn.hasEqualCallType ( fnType )  )  )  {     reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ; }^355^^^^^340^370^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  ( baseType )  == null )  {     reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ; }^355^^^^^340^370^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  (  ( templateTypeName )  != null )  &&  ( returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  )  {     reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^355^^^^^340^370^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  ( info.getImplementedInterfaceCount (  )  )  > 0 )  {     reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ; }^355^^^^^340^370^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportError ( VAR_ARGS_MUST_BE_LAST, fnName ) ;^356^^^^^341^371^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportError ( TEMPLATE_TYPE_DUPLICATED, sourceName ) ;^356^^^^^341^371^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportError (  fnName ) ;^356^^^^^341^371^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportError ( TEMPLATE_TYPE_DUPLICATED ) ;^356^^^^^341^371^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportError ( fnName, TEMPLATE_TYPE_DUPLICATED ) ;^356^^^^^341^371^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^getOrCreateConstructor ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^356^^^^^341^371^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^356^^^^^341^371^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^356^^^^^341^371^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^356^^^^^341^371^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  (  ( templateTypeName )  != null )  &&  ( !foundTemplateType )  )  {     reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^356^^^^^341^371^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  ( foundTemplateType )  {     reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ; }^356^^^^^341^371^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P3_Replace_Literal]^foundTemplateType = false;^358^^^^^343^373^foundTemplateType = true;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P12_Insert_Condition]^if  ( foundTemplateType )  { foundTemplateType = true; }^358^^^^^343^373^foundTemplateType = true;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( builder, type, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^360^361^362^363^^345^375^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( builder, parameterType, isInterface, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^360^361^362^363^^345^375^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( parametersNode, info ) , isVarArgsParameter ( arg, info )  ) ;^360^361^362^363^^345^375^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter (  parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^360^361^362^363^^345^375^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( builder,  warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^360^361^362^363^^345^375^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( builder, parameterType,  isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^360^361^362^363^^345^375^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter (  info ) , isVarArgsParameter ( arg, info )  ) ;^360^361^362^363^^345^375^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg ) , isVarArgsParameter ( arg, info )  ) ;^360^361^362^363^^345^375^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( warnedAboutArgList, parameterType, builder, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^360^361^362^363^^345^375^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( builder, info, warnedAboutArgList, isOptionalParameter ( arg, parameterType ) , isVarArgsParameter ( arg, info )  ) ;^360^361^362^363^^345^375^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( builder, parameterType, arg, isOptionalParameter ( warnedAboutArgList, info ) , isVarArgsParameter ( arg, info )  ) ;^360^361^362^363^^345^375^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( builder, arg, warnedAboutArgList, isOptionalParameter ( parameterType, info ) , isVarArgsParameter ( arg, info )  ) ;^360^361^362^363^^345^375^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( info, parameterType, warnedAboutArgList, isOptionalParameter ( arg, builder ) , isVarArgsParameter ( arg, info )  ) ;^360^361^362^363^^345^375^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isVarArgsParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^360^361^362^363^^345^375^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isOptionalParameter ( arg, info )  ) ;^360^361^362^363^^345^375^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P8_Replace_Mix]^warnedAboutArgList |=  addParameter ( null, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^360^361^362^363^^345^375^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P1_Replace_Type]^char argumentName = arg.getchar (  ) ;^345^^^^^330^360^String argumentName = arg.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^String sourceNodeumentName = arg.getString (  ) ;^345^^^^^330^360^String argumentName = arg.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^String argumentName = arg.newString (  ) ;^345^^^^^330^360^String argumentName = arg.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P8_Replace_Mix]^String parametersNodeumentName = arg.getString (  ) ;^345^^^^^330^360^String argumentName = arg.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^String ownerTypeName = owner.getQualifiedName (  ) ;String argumentName = arg.getString (  ) ;^345^^^^^330^360^String argumentName = arg.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^String paramName = param.getString (  ) ;String argumentName = arg.getString (  ) ;^345^^^^^330^360^String argumentName = arg.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P2_Replace_Operator]^JSType parameterType = info != null || info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^349^350^351^352^^334^364^JSType parameterType = info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P2_Replace_Operator]^JSType parameterType = info == null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^349^350^351^352^^334^364^JSType parameterType = info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^JSType parameterType = info != null && info.hasParameterType ( templateTypeName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^349^350^351^352^^334^364^JSType parameterType = info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^JSType parameterType = scope != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( info )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^349^350^351^352^^334^364^JSType parameterType = info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^JSType parameterType = info != null && info.hasParameterType ( scope )  ? info.getParameterType ( argumentName ) .evaluate ( argumentName )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^349^350^351^352^^334^364^JSType parameterType = info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^JSType parameterType = info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( typeRegistry )  : scope.getNativeType ( UNKNOWN_TYPE ) ;^349^350^351^352^^334^364^JSType parameterType = info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^JSType parameterType = info != null && info.hasParameterType ( typeRegistry )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : argumentName.getNativeType ( UNKNOWN_TYPE ) ;^349^350^351^352^^334^364^JSType parameterType = info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P6_Replace_Expression]^JSType parameterType  =  typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^349^350^351^352^^334^364^JSType parameterType = info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P6_Replace_Expression]^JSType parameterType  =  info.getParameterType ( argumentName ) .evaluate ( scope )  ;^349^350^351^352^^334^364^JSType parameterType = info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^JSType parameterType = info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName )  .isTemplateType (  )   : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^349^350^351^352^^334^364^JSType parameterType = info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^JSType parameterType = info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeFunctionType ( UNKNOWN_TYPE ) ;^349^350^351^352^^334^364^JSType parameterType = info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P8_Replace_Mix]^JSType parameterType = info != null && info.hasParameterType ( ownerTypeName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^349^350^351^352^^334^364^JSType parameterType = info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^for  ( Node arg : parametersNode.children (  )  )  {^344^^^^^329^359^for  ( Node arg : argsParent.children (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^for  ( Node arg : argsParent.newString (  )  )  {^344^^^^^329^359^for  ( Node arg : argsParent.children (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^for  ( Node arg : argsParent .addChildToBack (  )   )  {^344^^^^^329^359^for  ( Node arg : argsParent.children (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P8_Replace_Mix]^for  ( Node arg : sourceNode.children (  )  )  {^344^^^^^329^359^for  ( Node arg : argsParent.children (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^String ownerumentName = arg.getString (  ) ;^345^^^^^330^360^String argumentName = arg.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^345^346^^^^330^360^String argumentName = arg.getString (  ) ; allJsDocParams.remove ( argumentName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^allJsDocParams.remove ( sourceName ) ;^346^^^^^331^361^allJsDocParams.remove ( argumentName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P8_Replace_Mix]^allJsDocParams.remove ( templateTypeName ) ;^346^^^^^331^361^allJsDocParams.remove ( argumentName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^346^^^^^331^361^allJsDocParams.remove ( argumentName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^info != null && info.hasParameterType ( ownerTypeName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^350^351^352^^^335^365^info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^info != null && argumentName.hasParameterType ( info )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^350^351^352^^^335^365^info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P6_Replace_Expression]^info ! =  typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^350^351^352^^^335^365^info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P6_Replace_Expression]^info ! =  info.getParameterType ( argumentName ) .evaluate ( scope )  ;^350^351^352^^^335^365^info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^info != null && info .getParameterType ( ownerTypeName )   ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^350^351^352^^^335^365^info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P8_Replace_Mix]^info != null && info.hasParameterType ( templateTypeName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^350^351^352^^^335^365^info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^350^351^352^^^335^365^info != null && info.hasParameterType ( argumentName )  ? info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^info.getParameterType ( templateTypeName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^351^352^^^^336^366^info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^info.getParameterType ( scope ) .evaluate ( argumentName )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^351^352^^^^336^366^info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P8_Replace_Mix]^info .hasParameterType ( argumentName )  .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^351^352^^^^336^366^info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^351^352^^^^336^366^info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^info.getReturnType (  ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^351^352^^^^336^366^info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P8_Replace_Mix]^info.getParameterType ( ownerTypeName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^351^352^^^^336^366^info.getParameterType ( argumentName ) .evaluate ( scope )  : typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^typeRegistry.getNativeFunctionType ( UNKNOWN_TYPE ) ;^352^^^^^337^367^typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^typeRegistry .getNativeFunctionType (  )  ;^352^^^^^337^367^typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^352^^^^^337^367^typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^parameterType.restrictByNotNullOrUndefined (  ) .evaluate (  )  )  {^354^^^^^339^369^parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P8_Replace_Mix]^parameterType.restrictByNotNullOrUndefined (  )  .iterator (  )   )  {^354^^^^^339^369^parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^354^355^356^^^339^369^parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  { if  ( foundTemplateType )  { reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P8_Replace_Mix]^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^356^^^^^341^371^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( owner, info ) , isVarArgsParameter ( arg, info )  ) ;^360^361^362^363^^345^375^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^warnedAboutArgList |= addParameter ( arg, parameterType, warnedAboutArgList, isOptionalParameter ( builder, info ) , isVarArgsParameter ( arg, info )  ) ;^360^361^362^363^^345^375^warnedAboutArgList |= addParameter ( builder, parameterType, warnedAboutArgList, isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^isOptionalParameter ( sourceNode, info ) , isVarArgsParameter ( arg, info )  ) ;^362^363^^^^347^377^isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^isOptionalParameter (  info ) , isVarArgsParameter ( arg, info )  ) ;^362^363^^^^347^377^isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^isOptionalParameter ( arg ) , isVarArgsParameter ( arg, info )  ) ;^362^363^^^^347^377^isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^isOptionalParameter ( info, arg ) , isVarArgsParameter ( arg, info )  ) ;^362^363^^^^347^377^isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^isVarArgsParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^362^363^^^^347^377^isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^362^363^^^^347^377^isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^codingConvention.isOptionalParameter ( currentParam ) , codingConvention.isVarArgsParameter ( currentParam )  ) ;isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^362^363^^^^347^377^isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^isVarArgsParameter ( arg, info )  ) ;isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^362^363^^^^347^377^isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^isVarArgsParameter ( owner, info )  ) ;^363^^^^^348^378^isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^isVarArgsParameter (  info )  ) ;^363^^^^^348^378^isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^isVarArgsParameter ( arg )  ) ;^363^^^^^348^378^isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^isVarArgsParameter ( info, arg )  ) ;^363^^^^^348^378^isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^isOptionalParameter ( arg, info )  ) ;^363^^^^^348^378^isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P8_Replace_Mix]^isOptionalParameter ( owner, info )  ) ;^363^^^^^348^378^isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^363^^^^^348^378^isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^isOptionalParameter ( arg, info ) , isVarArgsParameter ( arg, info )  ) ;isVarArgsParameter ( arg, info )  ) ;^363^^^^^348^378^isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^codingConvention.isVarArgsParameter ( currentParam )  ) ;isVarArgsParameter ( arg, info )  ) ;^363^^^^^348^378^isVarArgsParameter ( arg, info )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P2_Replace_Operator]^if  ( templateTypeName != null || !foundTemplateType )  {^366^^^^^351^381^if  ( templateTypeName != null && !foundTemplateType )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P2_Replace_Operator]^if  ( templateTypeName == null && !foundTemplateType )  {^366^^^^^351^381^if  ( templateTypeName != null && !foundTemplateType )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( templateTypeName != null && !warnedAboutArgList )  {^366^^^^^351^381^if  ( templateTypeName != null && !foundTemplateType )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( ownerTypeName != null && !foundTemplateType )  {^366^^^^^351^381^if  ( templateTypeName != null && !foundTemplateType )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P6_Replace_Expression]^if  ( templateTypeName != null ) {^366^^^^^351^381^if  ( templateTypeName != null && !foundTemplateType )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P6_Replace_Expression]^if  (  !foundTemplateType )  {^366^^^^^351^381^if  ( templateTypeName != null && !foundTemplateType )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P8_Replace_Mix]^if  ( templateTypeName != true && !foundTemplateType )  {^366^^^^^351^381^if  ( templateTypeName != null && !foundTemplateType )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P15_Unwrap_Block]^reportError(com.google.javascript.jscomp.FunctionTypeBuilder.TEMPLATE_TYPE_EXPECTED, fnName);^366^367^368^^^351^381^if  ( templateTypeName != null && !foundTemplateType )  { reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P16_Remove_Block]^^366^367^368^^^351^381^if  ( templateTypeName != null && !foundTemplateType )  { reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  (  ( templateTypeName )  != null )  &&  ( parameterType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  )  {     if  ( foundTemplateType )  {         reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;     }     foundTemplateType = true; }^366^^^^^351^381^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  ( ! ( builder.addOptionalParams ( paramType )  )  )  &&  ( !warnedAboutArgList )  )  {     reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;     emittedWarning = true; }^366^^^^^351^381^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  ( foundTemplateType )  {     reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ; }^366^^^^^351^381^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  ( ! ( builder.addVarArgs ( paramType )  )  )  &&  ( !warnedAboutArgList )  )  {     reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;     emittedWarning = true; }^366^^^^^351^381^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  (  ( templateTypeName )  != null )  &&  ( returnType.restrictByNotNullOrUndefined (  ) .isTemplateType (  )  )  )  {     reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^366^^^^^351^381^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  ( info.getImplementedInterfaceCount (  )  )  > 0 )  {     reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ; }^366^^^^^351^381^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  ( interType != null )  {     implementedInterfaces.add ( interType ) ; }else {     reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ; }^366^^^^^351^381^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportError ( VAR_ARGS_MUST_BE_LAST, fnName ) ;^367^^^^^352^382^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportError ( TEMPLATE_TYPE_EXPECTED, templateTypeName ) ;^367^^^^^352^382^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportError (  fnName ) ;^367^^^^^352^382^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportError ( TEMPLATE_TYPE_EXPECTED ) ;^367^^^^^352^382^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportError ( fnName, TEMPLATE_TYPE_EXPECTED ) ;^367^^^^^352^382^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^getOrCreateConstructor ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^367^^^^^352^382^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^367^^^^^352^382^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ;reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^367^^^^^352^382^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^367^^^^^352^382^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^reportError ( BAD_IMPLEMENTED_TYPE, fnName ) ;reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^367^^^^^352^382^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^367^^^^^352^382^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  (  ( templateTypeName )  != null )  &&  ( !foundTemplateType )  )  {     reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^367^^^^^352^382^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  ( foundTemplateType )  {     reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ; }^367^^^^^352^382^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportError ( OPTIONAL_ARG_AT_END, fnName ) ;^367^^^^^352^382^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportError ( TEMPLATE_TYPE_EXPECTED, ownerTypeName ) ;^367^^^^^352^382^reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P1_Replace_Type]^for  ( char inexistentName : allJsDocParams )  {^370^^^^^355^385^for  ( String inexistentName : allJsDocParams )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( INEXISTANT_PARAM, templateTypeName, fnName ) ;^371^^^^^356^386^reportWarning ( INEXISTANT_PARAM, inexistentName, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( TEMPLATE_TYPE_DUPLICATED, inexistentName, fnName ) ;^371^^^^^356^386^reportWarning ( INEXISTANT_PARAM, inexistentName, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( INEXISTANT_PARAM, inexistentName, sourceName ) ;^371^^^^^356^386^reportWarning ( INEXISTANT_PARAM, inexistentName, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( INEXISTANT_PARAM,  fnName ) ;^371^^^^^356^386^reportWarning ( INEXISTANT_PARAM, inexistentName, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning (  inexistentName, fnName ) ;^371^^^^^356^386^reportWarning ( INEXISTANT_PARAM, inexistentName, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( INEXISTANT_PARAM, inexistentName ) ;^371^^^^^356^386^reportWarning ( INEXISTANT_PARAM, inexistentName, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( inexistentName, INEXISTANT_PARAM, fnName ) ;^371^^^^^356^386^reportWarning ( INEXISTANT_PARAM, inexistentName, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( INEXISTANT_PARAM, fnName, inexistentName ) ;^371^^^^^356^386^reportWarning ( INEXISTANT_PARAM, inexistentName, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^maybeSetBaseType ( INEXISTANT_PARAM, inexistentName, fnName ) ;^371^^^^^356^386^reportWarning ( INEXISTANT_PARAM, inexistentName, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^371^^^^^356^386^reportWarning ( INEXISTANT_PARAM, inexistentName, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ;reportWarning ( INEXISTANT_PARAM, inexistentName, fnName ) ;^371^^^^^356^386^reportWarning ( INEXISTANT_PARAM, inexistentName, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;reportWarning ( INEXISTANT_PARAM, inexistentName, fnName ) ;^371^^^^^356^386^reportWarning ( INEXISTANT_PARAM, inexistentName, fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^parametersNode = builder.addVarArgs (  ) ;^374^^^^^359^389^parametersNode = builder.build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P8_Replace_Mix]^parametersNode =  null.build (  ) ;^374^^^^^359^389^parametersNode = builder.build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^parametersNode = oldType.getParametersNode (  ) ;parametersNode = builder.build (  ) ;^374^^^^^359^389^parametersNode = builder.build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^parametersNode = new FunctionParamBuilder ( typeRegistry ) .build (  ) ;parametersNode = builder.build (  ) ;^374^^^^^359^389^parametersNode = builder.build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^parametersNode = paramBuilder.build (  ) ;parametersNode = builder.build (  ) ;^374^^^^^359^389^parametersNode = builder.build (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^374^375^^^^359^389^parametersNode = builder.build (  ) ; return this;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P8_Replace_Mix]^return null;^375^^^^^360^390^return this;^[CLASS] FunctionTypeBuilder  [METHOD] inferParameterTypes [RETURN_TYPE] FunctionTypeBuilder   Node argsParent JSDocInfo info [VARIABLES] JSType  maybeFunctionType  parameterType  returnType  type  Set  allJsDocParams  Node  arg  argsParent  currentParam  errorRoot  lp  owner  parametersNode  paramsParent  sourceNode  String  argumentName  fnName  inexistentName  name  ownerTypeName  sourceName  templateTypeName  JSDocInfo  info  ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  List  implementedInterfaces  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( codingConvention.isOptionalParameter ( owner )  )  {^383^^^^^381^390^if  ( codingConvention.isOptionalParameter ( param )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^if  ( param.isOptionalParameter ( codingConvention )  )  {^383^^^^^381^390^if  ( codingConvention.isOptionalParameter ( param )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^if  ( codingConvention.isVarArgsParameter ( param )  )  {^383^^^^^381^390^if  ( codingConvention.isOptionalParameter ( param )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^if  ( codingConvention .isOptionalParameter ( parametersNode , info )   )  {^383^^^^^381^390^if  ( codingConvention.isOptionalParameter ( param )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P15_Unwrap_Block]^return true;^383^384^385^^^381^390^if  ( codingConvention.isOptionalParameter ( param )  )  { return true; }^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P16_Remove_Block]^^383^384^385^^^381^390^if  ( codingConvention.isOptionalParameter ( param )  )  { return true; }^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P13_Insert_Block]^if  ( codingConvention.isVarArgsParameter ( param )  )  {     return true; }^383^^^^^381^390^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P3_Replace_Literal]^return false;^384^^^^^381^390^return true;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^if  ( codingConvention.isOptionalParameter ( parametersNode )  )  {^383^^^^^381^390^if  ( codingConvention.isOptionalParameter ( param )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^if  ( codingConvention.isVarArgsParameter ( parametersNode )  )  {^383^^^^^381^390^if  ( codingConvention.isOptionalParameter ( param )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P13_Insert_Block]^if  ( codingConvention.isOptionalParameter ( param )  )  {     return true; }^383^^^^^381^390^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P1_Replace_Type]^char paramName = param.getchar (  ) ;^387^^^^^381^390^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^String parametersNodeName = param.getString (  ) ;^387^^^^^381^390^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^String paramName = param.newString (  ) ;^387^^^^^381^390^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^String paramName = param .newString ( name )  ;^387^^^^^381^390^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^String parametersNodeName = param.newString (  ) ;^387^^^^^381^390^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^String argumentName = arg.getString (  ) ;String paramName = param.getString (  ) ;^387^^^^^381^390^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^String ownerTypeName = owner.getQualifiedName (  ) ;String paramName = param.getString (  ) ;^387^^^^^381^390^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^String sourceNodeName = param.getString (  ) ;^387^^^^^381^390^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^String paramName = param .newString ( paramName )  ;^387^^^^^381^390^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^387^^^^^381^390^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^return info != null || info.hasParameterType ( paramName )  && info.getParameterType ( paramName ) .isOptionalArg (  ) ;^388^389^^^^381^390^return info != null && info.hasParameterType ( paramName )  && info.getParameterType ( paramName ) .isOptionalArg (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^return info == null && info.hasParameterType ( paramName )  && info.getParameterType ( paramName ) .isOptionalArg (  ) ;^388^389^^^^381^390^return info != null && info.hasParameterType ( paramName )  && info.getParameterType ( paramName ) .isOptionalArg (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^return info != null && info.hasParameterType ( templateTypeName )  && info.getParameterType ( paramName ) .isOptionalArg (  ) ;^388^389^^^^381^390^return info != null && info.hasParameterType ( paramName )  && info.getParameterType ( paramName ) .isOptionalArg (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^return paramName != null && info.hasParameterType ( info )  && info.getParameterType ( paramName ) .isOptionalArg (  ) ;^388^389^^^^381^390^return info != null && info.hasParameterType ( paramName )  && info.getParameterType ( paramName ) .isOptionalArg (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^return info != null || info.hasParameterType ( paramName )  || info.getParameterType ( paramName ) .isOptionalArg (  ) ;;^388^389^^^^381^390^return info != null && info.hasParameterType ( paramName )  && info.getParameterType ( paramName ) .isOptionalArg (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^return info != null && info.hasParameterType ( sourceName )  && info.getParameterType ( paramName ) .isOptionalArg (  ) ;^388^389^^^^381^390^return info != null && info.hasParameterType ( paramName )  && info.getParameterType ( paramName ) .isOptionalArg (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^388^389^^^^381^390^return info != null && info.hasParameterType ( paramName )  && info.getParameterType ( paramName ) .isOptionalArg (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^info.getParameterType ( paramName )  .isVarArgs (  )  ;^389^^^^^381^390^info.getParameterType ( paramName ) .isOptionalArg (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^info.getParameterType ( templateTypeName )  .isVarArgs (  )  ;^389^^^^^381^390^info.getParameterType ( paramName ) .isOptionalArg (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^389^^^^^381^390^info.getParameterType ( paramName ) .isOptionalArg (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^info.getParameterType ( paramName ) .isVarArgs (  ) ;info.getParameterType ( paramName ) .isOptionalArg (  ) ;^389^^^^^381^390^info.getParameterType ( paramName ) .isOptionalArg (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^info.getParameterType ( sourceName ) .isOptionalArg (  ) ;^389^^^^^381^390^info.getParameterType ( paramName ) .isOptionalArg (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^info.getParameterType ( templateTypeName ) .isOptionalArg (  ) ;^389^^^^^381^390^info.getParameterType ( paramName ) .isOptionalArg (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isOptionalParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^if  ( codingConvention.isVarArgsParameter ( sourceNode )  )  {^398^^^^^396^405^if  ( codingConvention.isVarArgsParameter ( param )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^if  ( param.isVarArgsParameter ( codingConvention )  )  {^398^^^^^396^405^if  ( codingConvention.isVarArgsParameter ( param )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^if  ( codingConvention.isOptionalParameter ( param )  )  {^398^^^^^396^405^if  ( codingConvention.isVarArgsParameter ( param )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^if  ( codingConvention .isVarArgsParameter ( currentParam , info )   )  {^398^^^^^396^405^if  ( codingConvention.isVarArgsParameter ( param )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P15_Unwrap_Block]^return true;^398^399^400^^^396^405^if  ( codingConvention.isVarArgsParameter ( param )  )  { return true; }^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P16_Remove_Block]^^398^399^400^^^396^405^if  ( codingConvention.isVarArgsParameter ( param )  )  { return true; }^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P13_Insert_Block]^if  ( codingConvention.isOptionalParameter ( param )  )  {     return true; }^398^^^^^396^405^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P3_Replace_Literal]^return false;^399^^^^^396^405^return true;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^if  ( codingConvention.isVarArgsParameter ( parametersNode )  )  {^398^^^^^396^405^if  ( codingConvention.isVarArgsParameter ( param )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P13_Insert_Block]^if  ( codingConvention.isVarArgsParameter ( param )  )  {     return true; }^398^^^^^396^405^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P1_Replace_Type]^char paramName = param.getchar (  ) ;^402^^^^^396^405^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^String ownerName = param.getString (  ) ;^402^^^^^396^405^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^String paramName = param.newString (  ) ;^402^^^^^396^405^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^String sourceNodeName = param.newString (  ) ;^402^^^^^396^405^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^String argumentName = arg.getString (  ) ;String paramName = param.getString (  ) ;^402^^^^^396^405^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^String ownerTypeName = owner.getQualifiedName (  ) ;String paramName = param.getString (  ) ;^402^^^^^396^405^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^String sourceNodeName = param.getString (  ) ;^402^^^^^396^405^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^String sourceNodeName = param .newString ( templateTypeName )  ;^402^^^^^396^405^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^402^^^^^396^405^String paramName = param.getString (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^return info != null || info.hasParameterType ( paramName )  && info.getParameterType ( paramName ) .isVarArgs (  ) ;^403^404^^^^396^405^return info != null && info.hasParameterType ( paramName )  && info.getParameterType ( paramName ) .isVarArgs (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^return info == null && info.hasParameterType ( paramName )  && info.getParameterType ( paramName ) .isVarArgs (  ) ;^403^404^^^^396^405^return info != null && info.hasParameterType ( paramName )  && info.getParameterType ( paramName ) .isVarArgs (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^return paramName != null && info.hasParameterType ( info )  && info.getParameterType ( paramName ) .isVarArgs (  ) ;^403^404^^^^396^405^return info != null && info.hasParameterType ( paramName )  && info.getParameterType ( paramName ) .isVarArgs (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^return info != this && info .getParameterType ( argumentName )   && info.getParameterType ( paramName ) .isVarArgs (  ) ;^403^404^^^^396^405^return info != null && info.hasParameterType ( paramName )  && info.getParameterType ( paramName ) .isVarArgs (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^return info != null && info.hasParameterType ( ownerTypeName )  && info.getParameterType ( paramName ) .isVarArgs (  ) ;^403^404^^^^396^405^return info != null && info.hasParameterType ( paramName )  && info.getParameterType ( paramName ) .isVarArgs (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^return info != null && info .getParameterType ( paramName )   && info.getParameterType ( paramName ) .isVarArgs (  ) ;^403^404^^^^396^405^return info != null && info.hasParameterType ( paramName )  && info.getParameterType ( paramName ) .isVarArgs (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^403^404^^^^396^405^return info != null && info.hasParameterType ( paramName )  && info.getParameterType ( paramName ) .isVarArgs (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^info.getParameterType ( sourceName ) .isVarArgs (  ) ;^404^^^^^396^405^info.getParameterType ( paramName ) .isVarArgs (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^info.getParameterType ( paramName )  .isOptionalArg (  )  ;^404^^^^^396^405^info.getParameterType ( paramName ) .isVarArgs (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^info .hasParameterType ( sourceName )  .isVarArgs (  ) ;^404^^^^^396^405^info.getParameterType ( paramName ) .isVarArgs (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^info .hasParameterType ( argumentName )  .isVarArgs (  ) ;^404^^^^^396^405^info.getParameterType ( paramName ) .isVarArgs (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^404^^^^^396^405^info.getParameterType ( paramName ) .isVarArgs (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^info.getParameterType ( paramName ) .isOptionalArg (  ) ;info.getParameterType ( paramName ) .isVarArgs (  ) ;^404^^^^^396^405^info.getParameterType ( paramName ) .isVarArgs (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^info.getParameterType ( ownerTypeName ) .isVarArgs (  ) ;^404^^^^^396^405^info.getParameterType ( paramName ) .isVarArgs (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isVarArgsParameter [RETURN_TYPE] boolean   Node param JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^if  ( info == null )  {^411^^^^^410^416^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^if  ( info != true )  {^411^^^^^410^416^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( baseType != null )  {^411^^^^^410^416^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( existingType != null )  {^411^^^^^410^416^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( isOptional )  {^411^^^^^410^416^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( interType != null )  {^411^^^^^410^416^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( ownerType != null )  {^411^^^^^410^416^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P9_Replace_Statement]^if  ( baseType == null )  {^411^^^^^410^416^if  ( info != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P15_Unwrap_Block]^templateTypeName = info.getTemplateTypeName(); typeRegistry.setTemplateTypeName(templateTypeName);^411^412^413^414^^410^416^if  ( info != null )  { templateTypeName = info.getTemplateTypeName (  ) ; typeRegistry.setTemplateTypeName ( templateTypeName ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P16_Remove_Block]^^411^412^413^414^^410^416^if  ( info != null )  { templateTypeName = info.getTemplateTypeName (  ) ; typeRegistry.setTemplateTypeName ( templateTypeName ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^templateTypeName = info.getParameterType (  ) ;^412^^^^^410^416^templateTypeName = info.getTemplateTypeName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^templateTypeName =  null.getTemplateTypeName (  ) ;^412^^^^^410^416^templateTypeName = info.getTemplateTypeName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^templateTypeName = info .getBaseType (  )  ;^412^^^^^410^416^templateTypeName = info.getTemplateTypeName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^412^^^^^410^416^templateTypeName = info.getTemplateTypeName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^typeRegistry.clearTemplateTypeName (  ) ;templateTypeName = info.getTemplateTypeName (  ) ;^412^^^^^410^416^templateTypeName = info.getTemplateTypeName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^String ownerTypeName = owner.getQualifiedName (  ) ;templateTypeName = info.getTemplateTypeName (  ) ;^412^^^^^410^416^templateTypeName = info.getTemplateTypeName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P5_Replace_Variable]^typeRegistry.setTemplateTypeName ( sourceName ) ;^413^^^^^410^416^typeRegistry.setTemplateTypeName ( templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^typeRegistry.clearTemplateTypeName ( templateTypeName ) ;^413^^^^^410^416^typeRegistry.setTemplateTypeName ( templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^typeRegistry.setTemplateTypeName ( ownerTypeName ) ;^413^^^^^410^416^typeRegistry.setTemplateTypeName ( templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^413^^^^^410^416^typeRegistry.setTemplateTypeName ( templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^typeRegistry.clearTemplateTypeName (  ) ;typeRegistry.setTemplateTypeName ( templateTypeName ) ;^413^^^^^410^416^typeRegistry.setTemplateTypeName ( templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;typeRegistry.setTemplateTypeName ( templateTypeName ) ;^413^^^^^410^416^typeRegistry.setTemplateTypeName ( templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;typeRegistry.setTemplateTypeName ( templateTypeName ) ;^413^^^^^410^416^typeRegistry.setTemplateTypeName ( templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P12_Insert_Condition]^if  ( templateTypeName != null && !foundTemplateType )  { templateTypeName = info.getTemplateTypeName (  ) ; }^412^^^^^410^416^templateTypeName = info.getTemplateTypeName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^typeRegistry .clearTemplateTypeName (  )  ;^413^^^^^410^416^typeRegistry.setTemplateTypeName ( templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^return null;^415^^^^^410^416^return this;^[CLASS] FunctionTypeBuilder  [METHOD] inferTemplateTypeName [RETURN_TYPE] FunctionTypeBuilder   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  parameterType  returnType  type  boolean  foundTemplateType  isConstructor  isInterface  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P3_Replace_Literal]^boolean emittedWarning = true;^431^^^^^430^458^boolean emittedWarning = false;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^boolean warnedAboutArgList = false;boolean emittedWarning = false;^431^^^^^430^458^boolean emittedWarning = false;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^boolean foundTemplateType = false;boolean emittedWarning = false;^431^^^^^430^458^boolean emittedWarning = false;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( isVarArgs )  {^432^^^^^430^458^if  ( isOptional )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P6_Replace_Expression]^if  ( !(builder.addVarArgs(paramType)) && !warnedAboutArgList )  {^432^^^^^430^458^if  ( isOptional )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P6_Replace_Expression]^if  ( !(builder.addRequiredParams(paramType)) && !warnedAboutArgList )  {^432^^^^^430^458^if  ( isOptional )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^if  ( isInterface )  {^432^^^^^430^458^if  ( isOptional )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( info == null )  {^432^^^^^430^458^if  ( isOptional )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( info != null )  {^432^^^^^430^458^if  ( isOptional )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^} else if  ( warnedAboutArgList )  {^440^^^^^430^458^} else if  ( isVarArgs )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P6_Replace_Expression]^} else if  ( !(builder.addRequiredParams(paramType)) && !warnedAboutArgList )  {^440^^^^^430^458^} else if  ( isVarArgs )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P6_Replace_Expression]^} else {^440^^^^^430^458^} else if  ( isVarArgs )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P9_Replace_Statement]^} else if  ( isInterface )  {^440^^^^^430^458^} else if  ( isVarArgs )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P15_Unwrap_Block]^if ((!(builder.addVarArgs(paramType))) && (!warnedAboutArgList)) {    reportWarning(com.google.javascript.jscomp.FunctionTypeBuilder.VAR_ARGS_MUST_BE_LAST);    emittedWarning = true;};^440^441^442^443^444^430^458^} else if  ( isVarArgs )  { if  ( !builder.addVarArgs ( paramType )  && !warnedAboutArgList )  { reportWarning ( VAR_ARGS_MUST_BE_LAST ) ; emittedWarning = true; }^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P16_Remove_Block]^^440^441^442^443^444^430^458^} else if  ( isVarArgs )  { if  ( !builder.addVarArgs ( paramType )  && !warnedAboutArgList )  { reportWarning ( VAR_ARGS_MUST_BE_LAST ) ; emittedWarning = true; }^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P2_Replace_Operator]^if  ( !builder.addRequiredParams ( paramType )  || !warnedAboutArgList )  {^446^^^^^440^456^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( !builder.addRequiredParams ( type )  && !warnedAboutArgList )  {^446^^^^^440^456^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( !builder.addRequiredParams ( paramType )  && !isVarArgs )  {^446^^^^^440^456^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P6_Replace_Expression]^if  ( !builder.addRequiredParams ( paramType )  ) {^446^^^^^440^456^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P6_Replace_Expression]^if  (  !warnedAboutArgList )  {^446^^^^^440^456^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^if  ( !builder.addRequiredParams ( returnType )  && !warnedAboutArgList )  {^446^^^^^440^456^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( !builder.addVarArgs ( paramType )  && !warnedAboutArgList )  {^446^^^^^440^456^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( !builder.addOptionalParams ( paramType )  && !warnedAboutArgList )  {^446^^^^^440^456^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^if  ( builder.addVarArgs (  )  )  {^449^^^^^440^456^if  ( builder.hasVarArgs (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^if  ( builder .addVarArgs ( maybeFunctionType )   )  {^449^^^^^440^456^if  ( builder.hasVarArgs (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P15_Unwrap_Block]^reportWarning(com.google.javascript.jscomp.FunctionTypeBuilder.VAR_ARGS_MUST_BE_LAST);^449^450^451^452^453^440^456^if  ( builder.hasVarArgs (  )  )  { reportWarning ( VAR_ARGS_MUST_BE_LAST ) ; } else { reportWarning ( OPTIONAL_ARG_AT_END ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P16_Remove_Block]^^449^450^451^452^453^440^456^if  ( builder.hasVarArgs (  )  )  { reportWarning ( VAR_ARGS_MUST_BE_LAST ) ; } else { reportWarning ( OPTIONAL_ARG_AT_END ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( TEMPLATE_TYPE_EXPECTED ) ;^452^^^^^440^456^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^getOrCreateConstructor ( OPTIONAL_ARG_AT_END ) ;^452^^^^^440^456^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^452^^^^^440^456^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^452^^^^^440^456^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;reportWarning ( OPTIONAL_ARG_AT_END ) ;^452^^^^^440^456^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;reportWarning ( OPTIONAL_ARG_AT_END ) ;^452^^^^^440^456^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( OPTIONAL_ARG_AT_END ) ;^450^^^^^440^456^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^getOrCreateConstructor ( VAR_ARGS_MUST_BE_LAST ) ;^450^^^^^440^456^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^reportWarning ( TEMPLATE_TYPE_DUPLICATED ) ;^450^^^^^440^456^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^450^^^^^440^456^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P3_Replace_Literal]^emittedWarning = false;^454^^^^^440^456^emittedWarning = true;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( TYPE_REDEFINITION ) ;^450^^^^^440^456^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( TEMPLATE_TYPE_DUPLICATED ) ;^452^^^^^440^456^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^reportWarning ( TEMPLATE_TYPE_EXPECTED ) ;^450^^^^^440^456^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^getOrCreateConstructor ( TEMPLATE_TYPE_EXPECTED ) ;^452^^^^^440^456^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P2_Replace_Operator]^if  ( !builder.addVarArgs ( paramType )  || !warnedAboutArgList )  {^441^^^^^430^458^if  ( !builder.addVarArgs ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( !builder.addVarArgs ( paramType )  && !isOptional )  {^441^^^^^430^458^if  ( !builder.addVarArgs ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P6_Replace_Expression]^if  ( !builder.addVarArgs ( paramType )  ) {^441^^^^^430^458^if  ( !builder.addVarArgs ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P6_Replace_Expression]^if  (  !warnedAboutArgList )  {^441^^^^^430^458^if  ( !builder.addVarArgs ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^if  ( !builder .hasVarArgs (  )   && !warnedAboutArgList )  {^441^^^^^430^458^if  ( !builder.addVarArgs ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( !builder.addOptionalParams ( paramType )  && !warnedAboutArgList )  {^441^^^^^430^458^if  ( !builder.addVarArgs ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^441^^^^^430^458^if  ( !builder.addVarArgs ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P15_Unwrap_Block]^reportWarning(com.google.javascript.jscomp.FunctionTypeBuilder.VAR_ARGS_MUST_BE_LAST); emittedWarning = true;^441^442^443^444^^430^458^if  ( !builder.addVarArgs ( paramType )  && !warnedAboutArgList )  { reportWarning ( VAR_ARGS_MUST_BE_LAST ) ; emittedWarning = true; }^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P16_Remove_Block]^^441^442^443^444^^430^458^if  ( !builder.addVarArgs ( paramType )  && !warnedAboutArgList )  { reportWarning ( VAR_ARGS_MUST_BE_LAST ) ; emittedWarning = true; }^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  (  ( templateTypeName )  != null )  &&  ( !foundTemplateType )  )  {     reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^441^^^^^430^458^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  ( ! ( builder.addOptionalParams ( paramType )  )  )  &&  ( !warnedAboutArgList )  )  {     reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;     emittedWarning = true; }^441^^^^^430^458^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  ( ! ( builder.addRequiredParams ( paramType )  )  )  &&  ( !warnedAboutArgList )  )  {     if  ( builder.hasVarArgs (  )  )  {         reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;     }else {         reportWarning ( OPTIONAL_ARG_AT_END ) ;     }     emittedWarning = true; }^441^^^^^430^458^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  ( baseType )  == null )  {     reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ; }^441^^^^^430^458^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  ( info.getImplementedInterfaceCount (  )  )  > 0 )  {     reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ; }^441^^^^^430^458^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P3_Replace_Literal]^emittedWarning = false;^443^^^^^430^458^emittedWarning = true;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( TEMPLATE_TYPE_EXPECTED ) ;^442^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^getOrCreateConstructor ( VAR_ARGS_MUST_BE_LAST ) ;^442^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^getOrCreateConstructor ( OPTIONAL_ARG_AT_END ) ;^442^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^442^443^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ; emittedWarning = true;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^if  ( !builder.addVarArgs ( returnType )  && !warnedAboutArgList )  {^441^^^^^430^458^if  ( !builder.addVarArgs ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^reportWarning ( TYPE_REDEFINITION ) ;^442^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^442^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^if  ( !builder.addVarArgs ( paramType )  && !isVarArgs )  {^441^^^^^430^458^if  ( !builder.addVarArgs ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^reportWarning ( OPTIONAL_ARG_AT_END ) ;^442^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P2_Replace_Operator]^if  ( !builder.addRequiredParams ( paramType )  || !warnedAboutArgList )  {^446^^^^^430^458^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( !builder.addRequiredParams ( type )  && !warnedAboutArgList )  {^446^^^^^430^458^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( !builder.addRequiredParams ( paramType )  && !isInterface )  {^446^^^^^430^458^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P6_Replace_Expression]^if  ( !builder.addRequiredParams ( paramType )  ) {^446^^^^^430^458^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P6_Replace_Expression]^if  (  !warnedAboutArgList )  {^446^^^^^430^458^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^if  ( !builder .addOptionalParams ( type )   && !warnedAboutArgList )  {^446^^^^^430^458^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^if  ( !builder.addRequiredParams ( type )  ) {^446^^^^^430^458^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( !builder.addVarArgs ( paramType )  && !warnedAboutArgList )  {^446^^^^^430^458^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( !builder.addOptionalParams ( paramType )  && !warnedAboutArgList )  {^446^^^^^430^458^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^if  ( builder.addVarArgs (  )  )  {^449^^^^^430^458^if  ( builder.hasVarArgs (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P15_Unwrap_Block]^reportWarning(com.google.javascript.jscomp.FunctionTypeBuilder.VAR_ARGS_MUST_BE_LAST);^449^450^451^452^453^430^458^if  ( builder.hasVarArgs (  )  )  { reportWarning ( VAR_ARGS_MUST_BE_LAST ) ; } else { reportWarning ( OPTIONAL_ARG_AT_END ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P16_Remove_Block]^^449^450^451^452^453^430^458^if  ( builder.hasVarArgs (  )  )  { reportWarning ( VAR_ARGS_MUST_BE_LAST ) ; } else { reportWarning ( OPTIONAL_ARG_AT_END ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( TYPE_REDEFINITION ) ;^452^^^^^449^453^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^getOrCreateConstructor ( OPTIONAL_ARG_AT_END ) ;^452^^^^^449^453^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^452^^^^^449^453^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^452^^^^^449^453^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;reportWarning ( OPTIONAL_ARG_AT_END ) ;^452^^^^^449^453^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;reportWarning ( OPTIONAL_ARG_AT_END ) ;^452^^^^^449^453^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( TEMPLATE_TYPE_EXPECTED ) ;^450^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^getOrCreateConstructor ( VAR_ARGS_MUST_BE_LAST ) ;^450^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^reportWarning ( TYPE_REDEFINITION ) ;^450^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^450^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P3_Replace_Literal]^emittedWarning = false;^454^^^^^430^458^emittedWarning = true;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^if  ( builder .addVarArgs ( type )   )  {^449^^^^^430^458^if  ( builder.hasVarArgs (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^reportWarning ( OPTIONAL_ARG_AT_END ) ;^450^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^452^^^^^430^458^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^getOrCreateConstructor ( OPTIONAL_ARG_AT_END ) ;^452^^^^^430^458^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^452^^^^^430^458^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^reportWarning ( EXTENDS_WITHOUT_TYPEDEF, fnName ) ;reportWarning ( OPTIONAL_ARG_AT_END ) ;^452^^^^^430^458^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P11_Insert_Donor_Statement]^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;reportWarning ( OPTIONAL_ARG_AT_END ) ;^452^^^^^430^458^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^if  ( builder .addVarArgs ( paramType )   )  {^449^^^^^430^458^if  ( builder.hasVarArgs (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^getOrCreateConstructor ( TEMPLATE_TYPE_DUPLICATED ) ;^452^^^^^449^453^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( TEMPLATE_TYPE_DUPLICATED ) ;^450^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^getOrCreateConstructor ( TYPE_REDEFINITION ) ;^450^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( !builder.addVarArgs ( type )  && !warnedAboutArgList )  {^441^^^^^430^458^if  ( !builder.addVarArgs ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( TEMPLATE_TYPE_DUPLICATED ) ;^442^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( TEMPLATE_TYPE_DUPLICATED ) ;^452^^^^^430^458^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^reportWarning ( TYPE_REDEFINITION ) ;^452^^^^^430^458^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P2_Replace_Operator]^if  ( !builder.addOptionalParams ( paramType )  || !warnedAboutArgList )  {^436^^^^^430^458^if  ( !builder.addOptionalParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( !builder.addOptionalParams ( paramType )  && !isInterface )  {^436^^^^^430^458^if  ( !builder.addOptionalParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P6_Replace_Expression]^if  ( !builder.addOptionalParams ( paramType )  ) {^436^^^^^430^458^if  ( !builder.addOptionalParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P6_Replace_Expression]^if  (  !warnedAboutArgList )  {^436^^^^^430^458^if  ( !builder.addOptionalParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( !builder.addVarArgs ( paramType )  && !warnedAboutArgList )  {^436^^^^^430^458^if  ( !builder.addOptionalParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P9_Replace_Statement]^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^436^^^^^430^458^if  ( !builder.addOptionalParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P15_Unwrap_Block]^reportWarning(com.google.javascript.jscomp.FunctionTypeBuilder.VAR_ARGS_MUST_BE_LAST); emittedWarning = true;^436^437^438^439^^430^458^if  ( !builder.addOptionalParams ( paramType )  && !warnedAboutArgList )  { reportWarning ( VAR_ARGS_MUST_BE_LAST ) ; emittedWarning = true; }^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P16_Remove_Block]^^436^437^438^439^^430^458^if  ( !builder.addOptionalParams ( paramType )  && !warnedAboutArgList )  { reportWarning ( VAR_ARGS_MUST_BE_LAST ) ; emittedWarning = true; }^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  (  ( templateTypeName )  != null )  &&  ( !foundTemplateType )  )  {     reportError ( TEMPLATE_TYPE_EXPECTED, fnName ) ; }^436^^^^^430^458^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  ( ! ( builder.addVarArgs ( paramType )  )  )  &&  ( !warnedAboutArgList )  )  {     reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;     emittedWarning = true; }^436^^^^^430^458^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  ( ! ( builder.addRequiredParams ( paramType )  )  )  &&  ( !warnedAboutArgList )  )  {     if  ( builder.hasVarArgs (  )  )  {         reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;     }else {         reportWarning ( OPTIONAL_ARG_AT_END ) ;     }     emittedWarning = true; }^436^^^^^430^458^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  ( baseType )  == null )  {     reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ; }^436^^^^^430^458^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P13_Insert_Block]^if  (  ( info.getImplementedInterfaceCount (  )  )  > 0 )  {     reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ; }^436^^^^^430^458^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P3_Replace_Literal]^emittedWarning = false;^438^^^^^430^458^emittedWarning = true;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( TYPE_REDEFINITION ) ;^437^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^getOrCreateConstructor ( VAR_ARGS_MUST_BE_LAST ) ;^437^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^getOrCreateConstructor ( TEMPLATE_TYPE_DUPLICATED ) ;^437^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^437^438^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ; emittedWarning = true;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( !builder.addOptionalParams ( type )  && !warnedAboutArgList )  {^436^^^^^430^458^if  ( !builder.addOptionalParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^if  ( !builder.addOptionalParams ( returnType )  && !warnedAboutArgList )  {^436^^^^^430^458^if  ( !builder.addOptionalParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( OPTIONAL_ARG_AT_END ) ;^437^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( !builder.addOptionalParams ( paramType )  && !isVarArgs )  {^436^^^^^430^458^if  ( !builder.addOptionalParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^if  ( !builder .addRequiredParams ( maybeFunctionType )   && !warnedAboutArgList )  {^436^^^^^430^458^if  ( !builder.addOptionalParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^if  ( !builder.addOptionalParams ( type )  ) {^436^^^^^430^458^if  ( !builder.addOptionalParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P14_Delete_Statement]^^437^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^} else if  ( isOptional )  {^440^^^^^430^458^} else if  ( isVarArgs )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^if  ( !builder .addOptionalParams ( maybeFunctionType )   && !isVarArgs )  {^446^^^^^440^456^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^if  ( builder .addVarArgs ( type )   )  {^449^^^^^440^456^if  ( builder.hasVarArgs (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^if  ( builder .addVarArgs ( returnType )   )  {^449^^^^^440^456^if  ( builder.hasVarArgs (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^getOrCreateConstructor ( TEMPLATE_TYPE_DUPLICATED ) ;^450^^^^^440^456^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^getOrCreateConstructor ( VAR_ARGS_MUST_BE_LAST ) ;^452^^^^^440^456^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^getOrCreateConstructor ( OPTIONAL_ARG_AT_END ) ;^450^^^^^440^456^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P7_Replace_Invocation]^if  ( !builder .addOptionalParams ( returnType )   && !warnedAboutArgList )  {^446^^^^^440^456^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^getOrCreateConstructor ( TYPE_REDEFINITION ) ;^450^^^^^440^456^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^if  ( !builder.addVarArgs ( paramType )  && !isInterface )  {^441^^^^^430^458^if  ( !builder.addVarArgs ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^getOrCreateConstructor ( TYPE_REDEFINITION ) ;^442^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^if  ( !builder.addRequiredParams ( paramType )  && !isVarArgs )  {^446^^^^^430^458^if  ( !builder.addRequiredParams ( paramType )  && !warnedAboutArgList )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( TEMPLATE_TYPE_EXPECTED ) ;^452^^^^^430^458^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^if  ( builder .addVarArgs ( returnType )   )  {^449^^^^^430^458^if  ( builder.hasVarArgs (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^reportWarning ( TEMPLATE_TYPE_EXPECTED ) ;^452^^^^^449^453^reportWarning ( OPTIONAL_ARG_AT_END ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P8_Replace_Mix]^reportWarning ( TEMPLATE_TYPE_DUPLICATED ) ;^437^^^^^430^458^reportWarning ( VAR_ARGS_MUST_BE_LAST ) ;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P5_Replace_Variable]^return warnedAboutArgList;^457^^^^^430^458^return emittedWarning;^[CLASS] FunctionTypeBuilder  [METHOD] addParameter [RETURN_TYPE] boolean   FunctionParamBuilder builder JSType paramType boolean warnedAboutArgList boolean isOptional boolean isVarArgs [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  FunctionParamBuilder  builder  
[P2_Replace_Operator]^if  ( returnType == null && parametersNode == null )  {^464^^^^^463^491^if  ( returnType == null || parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P2_Replace_Operator]^if  ( returnType != null || parametersNode == null )  {^464^^^^^463^491^if  ( returnType == null || parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P2_Replace_Operator]^if  ( returnType == null || parametersNode != null )  {^464^^^^^463^491^if  ( returnType == null || parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^if  ( parameterType == null || parametersNode == null )  {^464^^^^^463^491^if  ( returnType == null || parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^if  ( returnType == null || owner == null )  {^464^^^^^463^491^if  ( returnType == null || parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^if  ( parametersNode == null || returnType == null )  {^464^^^^^463^491^if  ( returnType == null || parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P6_Replace_Expression]^if  ( returnType == null ) {^464^^^^^463^491^if  ( returnType == null || parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P6_Replace_Expression]^if  (  parametersNode == null )  {^464^^^^^463^491^if  ( returnType == null || parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^if  (  parametersNode == true )  {^464^^^^^463^491^if  ( returnType == null || parametersNode == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("All Function types must have params and a return type");^464^465^466^467^^463^491^if  ( returnType == null || parametersNode == null )  { throw new IllegalStateException ( "All Function types must have params and a return type" ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P16_Remove_Block]^^464^465^466^467^^463^491^if  ( returnType == null || parametersNode == null )  { throw new IllegalStateException ( "All Function types must have params and a return type" ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P3_Replace_Literal]^throw new IllegalStateException ( "t have params and all Function types must have params and a return type" ) ;^465^466^^^^463^491^throw new IllegalStateException ( "All Function types must have params and a return type" ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P13_Insert_Block]^if  (  (  ( returnType )  == null )  ||  (  ( parametersNode )  == null )  )  {     throw new IllegalStateException ( "All Function types must have params and a return type" ) ; }^465^^^^^463^491^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P3_Replace_Literal]^throw new IllegalStateException ( "ion " ) ;^465^466^^^^463^491^throw new IllegalStateException ( "All Function types must have params and a return type" ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P3_Replace_Literal]^throw new IllegalStateException ( "ll Function types must have params and a return type" ) ;^465^466^^^^463^491^throw new IllegalStateException ( "All Function types must have params and a return type" ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P3_Replace_Literal]^throw new IllegalStateException ( "tion types must have params" ) ;^465^466^^^^463^491^throw new IllegalStateException ( "All Function types must have params and a return type" ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^if  ( warnedAboutArgList )  {^470^^^^^463^491^if  ( isConstructor )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^if  ( isVarArgs )  {^470^^^^^463^491^if  ( isConstructor )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^} else if  ( isOptional )  {^472^^^^^463^491^} else if  ( isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P6_Replace_Expression]^} else {^472^^^^^463^491^} else if  ( isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^}  if  ( warnedAboutArgList )  {^472^^^^^463^491^} else if  ( isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P9_Replace_Statement]^} else if  ( isVarArgs )  {^472^^^^^463^491^} else if  ( isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P15_Unwrap_Block]^fnType = typeRegistry.createInterfaceType(fnName, sourceNode); if ((scope.isGlobal()) && (!(fnName.isEmpty()))) {    typeRegistry.declareType(fnName, fnType.getInstanceType());}; maybeSetBaseType(fnType);^472^473^474^475^476^463^491^} else if  ( isInterface )  { fnType = typeRegistry.createInterfaceType ( fnName, sourceNode ) ; if  ( scope.isGlobal (  )  && !fnName.isEmpty (  )  )  { typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P16_Remove_Block]^^472^473^474^475^476^463^491^} else if  ( isInterface )  { fnType = typeRegistry.createInterfaceType ( fnName, sourceNode ) ; if  ( scope.isGlobal (  )  && !fnName.isEmpty (  )  )  { typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, sourceName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, paramsParent, parametersNode, returnType, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, paramsParent, returnType, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, type, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, ownerType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, sourceName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType (  fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry,  sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName,  parametersNode, returnType, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode,  returnType, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode,  thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType,  templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( templateTypeName, fnName, sourceNode, parametersNode, returnType, thisType, typeRegistry ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, templateTypeName, sourceNode, parametersNode, returnType, thisType, fnName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, parametersNode, sourceNode, returnType, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, returnType, sourceNode, parametersNode, fnName, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, templateTypeName, thisType ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^fnType ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, paramName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, owner, returnType, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, paramName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( parametersNode, fnName, sourceNode, typeRegistry, returnType, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, templateTypeName, parametersNode, returnType, thisType, sourceNode ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, thisType, returnType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, thisType, returnType, parametersNode, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^inferReturnType ( fnType ) ;^481^^^^^472^482^maybeSetBaseType ( fnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P14_Delete_Statement]^^481^^^^^472^482^maybeSetBaseType ( fnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P2_Replace_Operator]^if  ( scope.isGlobal (  )  || !fnName.isEmpty (  )  )  {^474^^^^^463^491^if  ( scope.isGlobal (  )  && !fnName.isEmpty (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P6_Replace_Expression]^if  ( scope.isGlobal (  )  ) {^474^^^^^463^491^if  ( scope.isGlobal (  )  && !fnName.isEmpty (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P6_Replace_Expression]^if  (  !fnName.isEmpty (  )  )  {^474^^^^^463^491^if  ( scope.isGlobal (  )  && !fnName.isEmpty (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^if  ( scope.isGlobal (  )  && fnName.isEmpty (  )  )  {^474^^^^^463^491^if  ( scope.isGlobal (  )  && !fnName.isEmpty (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P15_Unwrap_Block]^typeRegistry.declareType(fnName, fnType.getInstanceType());^474^475^476^^^463^491^if  ( scope.isGlobal (  )  && !fnName.isEmpty (  )  )  { typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P16_Remove_Block]^^474^475^476^^^463^491^if  ( scope.isGlobal (  )  && !fnName.isEmpty (  )  )  { typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^typeRegistry.declareType ( paramName, fnType.getInstanceType (  )  ) ;^475^^^^^463^491^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^typeRegistry.declareType ( fnName.getInstanceType (  )  ) ;^475^^^^^463^491^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^typeRegistry.declareType (  fnType.getInstanceType (  )  ) ;^475^^^^^463^491^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^typeRegistry.getType ( fnName, fnType.getInstanceType (  )  ) ;^475^^^^^463^491^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^typeRegistry .getNativeType (  )  ;^475^^^^^463^491^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^typeRegistry.declareType ( fnName, fnType.setImplementedInterfaces (  )  ) ;^475^^^^^463^491^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^typeRegistry.declareType ( fnName, fnType .getReturnType (  )   ) ;^475^^^^^463^491^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^typeRegistry.getType ( sourceName, fnType.getInstanceType (  )  ) ;^475^^^^^463^491^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P14_Delete_Statement]^^475^^^^^463^491^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = typeRegistry.createInterfaceType ( templateTypeName, sourceNode ) ;^473^^^^^463^491^fnType = typeRegistry.createInterfaceType ( fnName, sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = typeRegistry.createInterfaceType ( fnName, paramsParent ) ;^473^^^^^463^491^fnType = typeRegistry.createInterfaceType ( fnName, sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = typeRegistry.createInterfaceType (  sourceNode ) ;^473^^^^^463^491^fnType = typeRegistry.createInterfaceType ( fnName, sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = typeRegistry.createInterfaceType ( fnName ) ;^473^^^^^463^491^fnType = typeRegistry.createInterfaceType ( fnName, sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = fnName.createInterfaceType ( typeRegistry, sourceNode ) ;^473^^^^^463^491^fnType = typeRegistry.createInterfaceType ( fnName, sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = typeRegistry.createInterfaceType ( sourceNode, fnName ) ;^473^^^^^463^491^fnType = typeRegistry.createInterfaceType ( fnName, sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^fnType = typeRegistry.clearTemplateTypeName ( fnName, sourceNode ) ;^473^^^^^463^491^fnType = typeRegistry.createInterfaceType ( fnName, sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^fnType  = null ;^473^^^^^463^491^fnType = typeRegistry.createInterfaceType ( fnName, sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = typeRegistry.createInterfaceType ( fnName, owner ) ;^473^^^^^463^491^fnType = typeRegistry.createInterfaceType ( fnName, sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P14_Delete_Statement]^^473^^^^^463^491^fnType = typeRegistry.createInterfaceType ( fnName, sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;fnType = typeRegistry.createInterfaceType ( fnName, sourceNode ) ;^473^^^^^463^491^fnType = typeRegistry.createInterfaceType ( fnName, sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^typeRegistry.declareType ( sourceName, fnType.getInstanceType (  )  ) ;^475^^^^^463^491^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^typeRegistry.declareType ( templateTypeName, fnType.getInstanceType (  )  ) ;^475^^^^^463^491^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^inferReturnType ( fnType ) ;^477^^^^^463^491^maybeSetBaseType ( fnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P14_Delete_Statement]^^477^^^^^463^491^maybeSetBaseType ( fnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^typeRegistry.declareType ( sourceName, fnType.setImplementedInterfaces (  )  ) ;^475^^^^^463^491^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = sourceNode.createInterfaceType ( fnName, typeRegistry ) ;^473^^^^^463^491^fnType = typeRegistry.createInterfaceType ( fnName, sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^fnType ;^473^^^^^463^491^fnType = typeRegistry.createInterfaceType ( fnName, sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, sourceName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, owner, parametersNode, returnType, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, owner, returnType, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, parameterType, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, ownerType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, sourceName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType (  fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry,  sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName,  parametersNode, returnType, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode,  returnType, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode,  thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType,  templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( parametersNode, fnName, sourceNode, typeRegistry, returnType, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, templateTypeName, sourceNode, parametersNode, returnType, thisType, fnName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, thisType, parametersNode, returnType, sourceNode, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, parametersNode, sourceNode, returnType, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( returnType, fnName, sourceNode, parametersNode, typeRegistry, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^fnType  =  fnType ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, paramsParent, parametersNode, returnType, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, paramsParent, returnType, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, type, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, paramName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( fnName, typeRegistry, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, thisType, sourceNode, parametersNode, returnType, fnName, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, param, returnType, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = typeRegistry.createInterfaceType ( paramName, sourceNode ) ;^473^^^^^463^491^fnType = typeRegistry.createInterfaceType ( fnName, sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^typeRegistry.declareType ( fnType, fnName.getInstanceType (  )  ) ;^475^^^^^463^491^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^inferReturnType ( fnType ) ;^481^^^^^463^491^maybeSetBaseType ( fnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P14_Delete_Statement]^^481^^^^^463^491^maybeSetBaseType ( fnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^fnType  =  fnType ;^471^^^^^463^491^fnType = getOrCreateConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P14_Delete_Statement]^^471^^^^^463^491^fnType = getOrCreateConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^JSType maybeFunctionType = baseType.getConstructor (  ) ;fnType = getOrCreateConstructor (  ) ;^471^^^^^463^491^fnType = getOrCreateConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^FunctionType functionType = baseType.getConstructor (  ) ;fnType = getOrCreateConstructor (  ) ;^471^^^^^463^491^fnType = getOrCreateConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^} else if  ( warnedAboutArgList )  {^472^^^^^463^491^} else if  ( isInterface )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, param, parametersNode, returnType, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, sourceNode, returnType, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, parameterType, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, returnType, parametersNode, sourceNode, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( fnName, typeRegistry, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, sourceNode, fnName, parametersNode, returnType, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, returnType, parametersNode, thisType, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, thisType, sourceNode, parametersNode, returnType, fnName, templateTypeName ) ;^479^480^^^^472^482^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^typeRegistry.getType ( templateTypeName, fnType.getInstanceType (  )  ) ;^475^^^^^463^491^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^fnType ;^471^^^^^463^491^fnType = getOrCreateConstructor (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, objType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, returnType, parametersNode, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( thisType, fnName, sourceNode, parametersNode, returnType, typeRegistry, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^fnType ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, templateTypeName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, sourceNode, returnType, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, sourceNode, fnName, parametersNode, returnType, thisType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, templateTypeName, parametersNode, returnType, thisType, sourceNode ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, templateTypeName, returnType, thisType, parametersNode ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, thisType, returnType, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, thisType, returnType, parametersNode, templateTypeName ) ;^479^480^^^^463^491^fnType = new FunctionType ( typeRegistry, fnName, sourceNode, parametersNode, returnType, thisType, templateTypeName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^typeRegistry.declareType ( paramName, fnType.setImplementedInterfaces (  )  ) ;^475^^^^^463^491^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P2_Replace_Operator]^if  ( implementedInterfaces == null )  {^484^^^^^463^491^if  ( implementedInterfaces != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^if  ( implementedInterfaces != false )  {^484^^^^^463^491^if  ( implementedInterfaces != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P15_Unwrap_Block]^fnType.setImplementedInterfaces(implementedInterfaces);^484^485^486^^^463^491^if  ( implementedInterfaces != null )  { fnType.setImplementedInterfaces ( implementedInterfaces ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P16_Remove_Block]^^484^485^486^^^463^491^if  ( implementedInterfaces != null )  { fnType.setImplementedInterfaces ( implementedInterfaces ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^fnType.setSource ( implementedInterfaces ) ;^485^^^^^463^491^fnType.setImplementedInterfaces ( implementedInterfaces ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^fnType .getImplementedInterfaces (  )  ;^485^^^^^463^491^fnType.setImplementedInterfaces ( implementedInterfaces ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P14_Delete_Statement]^^485^^^^^463^491^fnType.setImplementedInterfaces ( implementedInterfaces ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P13_Insert_Block]^if  (  ( implementedInterfaces )  != null )  {     fnType.setImplementedInterfaces ( implementedInterfaces ) ; }^485^^^^^463^491^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^typeRegistry.getNativeType (  ) ;^488^^^^^463^491^typeRegistry.clearTemplateTypeName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P14_Delete_Statement]^^488^^^^^463^491^typeRegistry.clearTemplateTypeName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^typeRegistry.setTemplateTypeName ( templateTypeName ) ;typeRegistry.clearTemplateTypeName (  ) ;^488^^^^^463^491^typeRegistry.clearTemplateTypeName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;typeRegistry.clearTemplateTypeName (  ) ;^488^^^^^463^491^typeRegistry.clearTemplateTypeName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^templateTypeName = info.getTemplateTypeName (  ) ;typeRegistry.clearTemplateTypeName (  ) ;^488^^^^^463^491^typeRegistry.clearTemplateTypeName (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] buildAndRegister [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P2_Replace_Operator]^if  ( baseType == null )  {^494^^^^^493^497^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^if  ( thisType != null )  {^494^^^^^493^497^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^if  ( thisType != false )  {^494^^^^^493^497^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P9_Replace_Statement]^if  ( parametersNode == null )  {^494^^^^^493^497^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P9_Replace_Statement]^if  ( info == null )  {^494^^^^^493^497^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P9_Replace_Statement]^if  ( maybeThisType != null )  {^494^^^^^493^497^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P9_Replace_Statement]^if  ( existingType != null )  {^494^^^^^493^497^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P9_Replace_Statement]^if  ( info != null )  {^494^^^^^493^497^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P9_Replace_Statement]^if  ( paramsParent == null )  {^494^^^^^493^497^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P9_Replace_Statement]^if  ( interType != null )  {^494^^^^^493^497^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P9_Replace_Statement]^if  ( ownerType != null )  {^494^^^^^493^497^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P9_Replace_Statement]^if  ( argsParent == null )  {^494^^^^^493^497^if  ( baseType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P15_Unwrap_Block]^fnType.setPrototypeBasedOn(baseType);^494^495^496^^^493^497^if  ( baseType != null )  { fnType.setPrototypeBasedOn ( baseType ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P16_Remove_Block]^^494^495^496^^^493^497^if  ( baseType != null )  { fnType.setPrototypeBasedOn ( baseType ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P13_Insert_Block]^if  ( ownerType != null )  {     thisType = ownerType; }^494^^^^^493^497^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType.setPrototypeBasedOn ( thisType ) ;^495^^^^^493^497^fnType.setPrototypeBasedOn ( baseType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^fnType.hasEqualCallType ( baseType ) ;^495^^^^^493^497^fnType.setPrototypeBasedOn ( baseType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^fnType .getReturnType (  )  ;^495^^^^^493^497^fnType.setPrototypeBasedOn ( baseType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^fnType.hasEqualCallType ( thisType ) ;^495^^^^^493^497^fnType.setPrototypeBasedOn ( baseType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P14_Delete_Statement]^^495^^^^^493^497^fnType.setPrototypeBasedOn ( baseType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P13_Insert_Block]^if  (  ( baseType )  != null )  {     fnType.setPrototypeBasedOn ( baseType ) ; }^495^^^^^493^497^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] maybeSetBaseType [RETURN_TYPE] void   FunctionType fnType [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType fnType = typeRegistry.createConstructorType ( sourceName, sourceNode, parametersNode, returnType ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, param, returnType ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, parameterType ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType fnType = typeRegistry.createConstructorType (  sourceNode, parametersNode, returnType ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType fnType = typeRegistry.createConstructorType ( fnName,  parametersNode, returnType ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode,  returnType ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType fnType = fnName.createConstructorType ( typeRegistry, sourceNode, parametersNode, returnType ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType fnType = typeRegistry.createConstructorType ( parametersNode, sourceNode, fnName, returnType ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType fnType = typeRegistry.createConstructorType ( sourceNode, fnName, parametersNode, returnType ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType fnType = parametersNode.createConstructorType ( fnName, sourceNode, typeRegistry, returnType ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType fnType = returnType.createConstructorType ( fnName, sourceNode, parametersNode, typeRegistry ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^FunctionType fnType = typeRegistry.getNativeFunctionType ( fnName, sourceNode, parametersNode, returnType ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, sourceNode, returnType ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType fnType = typeRegistry.createConstructorType ( fnName, owner, parametersNode, returnType ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, type ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType fnType = sourceNode.createConstructorType ( fnName, typeRegistry, parametersNode, returnType ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType fnType = typeRegistry.createConstructorType ( returnType, sourceNode, parametersNode, fnName ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType fnType = typeRegistry.createConstructorType ( fnName, parametersNode, sourceNode, returnType ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, returnType, parametersNode ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^FunctionType fnType = typeRegistry .createInterfaceType ( argumentName , currentParam )  ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, paramsParent, returnType ) ;^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P14_Delete_Statement]^^513^514^^^^498^528^FunctionType fnType = typeRegistry.createConstructorType ( fnName, sourceNode, parametersNode, returnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^JSType existingType = typeRegistry.getType ( templateTypeName ) ;^515^^^^^500^530^JSType existingType = typeRegistry.getType ( fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^JSType existingType = fnName.getType ( typeRegistry ) ;^515^^^^^500^530^JSType existingType = typeRegistry.getType ( fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^JSType existingType = typeRegistry.getNativeType ( fnName ) ;^515^^^^^500^530^JSType existingType = typeRegistry.getType ( fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^JSType existingType = typeRegistry .getType ( scope , fnName , fnName )  ;^515^^^^^500^530^JSType existingType = typeRegistry.getType ( fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P14_Delete_Statement]^^515^^^^^500^530^JSType existingType = typeRegistry.getType ( fnName ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P2_Replace_Operator]^if  ( existingType == null )  {^517^^^^^502^532^if  ( existingType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^if  ( type != null )  {^517^^^^^502^532^if  ( existingType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P6_Replace_Expression]^if  ( existingType instanceof InstanceObjectType )  {^517^^^^^502^532^if  ( existingType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P6_Replace_Expression]^if  ( isInstanceObject || fnName.equals("Function") )  {^517^^^^^502^532^if  ( existingType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P6_Replace_Expression]^if  ( existingFn.getSource() == null )  {^517^^^^^502^532^if  ( existingType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^if  ( existingType != true )  {^517^^^^^502^532^if  ( existingType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P9_Replace_Statement]^if  ( baseType != null )  {^517^^^^^502^532^if  ( existingType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P9_Replace_Statement]^if  ( maybeThisType != null )  {^517^^^^^502^532^if  ( existingType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P9_Replace_Statement]^if  ( info != null )  {^517^^^^^502^532^if  ( existingType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P9_Replace_Statement]^if  ( interType != null )  {^517^^^^^502^532^if  ( existingType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P9_Replace_Statement]^if  ( ownerType != null )  {^517^^^^^502^532^if  ( existingType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P9_Replace_Statement]^if  ( baseType == null )  {^517^^^^^502^532^if  ( existingType != null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P2_Replace_Operator]^if  ( isInstanceObject && fnName.equals ( "Function" )  )  {^519^^^^^504^534^if  ( isInstanceObject || fnName.equals ( "Function" )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P3_Replace_Literal]^if  ( isInstanceObject || fnName.equals ( "Fuunction" )  )  {^519^^^^^504^534^if  ( isInstanceObject || fnName.equals ( "Function" )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^if  ( warnedAboutArgList || fnName.equals ( "Function" )  )  {^519^^^^^504^534^if  ( isInstanceObject || fnName.equals ( "Function" )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^if  ( isInstanceObject || sourceName.equals ( "Function" )  )  {^519^^^^^504^534^if  ( isInstanceObject || fnName.equals ( "Function" )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^if  ( fnName || isInstanceObject.equals ( "Function" )  )  {^519^^^^^504^534^if  ( isInstanceObject || fnName.equals ( "Function" )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P6_Replace_Expression]^if  ( isInstanceObject ) {^519^^^^^504^534^if  ( isInstanceObject || fnName.equals ( "Function" )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P6_Replace_Expression]^if  (  fnName.equals ( "Function" )  )  {^519^^^^^504^534^if  ( isInstanceObject || fnName.equals ( "Function" )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P6_Replace_Expression]^if  ( existingFn.getSource() == null )  {^519^^^^^504^534^if  ( isInstanceObject || fnName.equals ( "Function" )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P2_Replace_Operator]^if  ( existingFn.getSource (  )  != null )  {^525^^^^^510^540^if  ( existingFn.getSource (  )  == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^if  ( fnType.getSource (  )  == null )  {^525^^^^^510^540^if  ( existingFn.getSource (  )  == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^if  ( existingFn.setSource (  )  == null )  {^525^^^^^510^540^if  ( existingFn.getSource (  )  == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^if  ( existingFn .setSource ( param )   == false )  {^525^^^^^510^540^if  ( existingFn.getSource (  )  == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P15_Unwrap_Block]^existingFn.setSource(sourceNode);^525^526^527^^^510^540^if  ( existingFn.getSource (  )  == null )  { existingFn.setSource ( sourceNode ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P16_Remove_Block]^^525^526^527^^^510^540^if  ( existingFn.getSource (  )  == null )  { existingFn.setSource ( sourceNode ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^existingFn.setSource ( owner ) ;^526^^^^^511^541^existingFn.setSource ( sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^existingFn.setPrototypeBasedOn ( sourceNode ) ;^526^^^^^511^541^existingFn.setSource ( sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^existingFn.setSource ( parametersNode ) ;^526^^^^^511^541^existingFn.setSource ( sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P14_Delete_Statement]^^526^^^^^511^541^existingFn.setSource ( sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P12_Insert_Condition]^if  ( existingFn.getSource (  )  == null )  { existingFn.setSource ( sourceNode ) ; }^526^^^^^511^541^existingFn.setSource ( sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^if  ( !existingFn .getReturnType (  )   )  {^529^^^^^514^544^if  ( !existingFn.hasEqualCallType ( fnType )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P15_Unwrap_Block]^reportWarning(com.google.javascript.jscomp.FunctionTypeBuilder.TYPE_REDEFINITION, fnName, fnType.toString(), existingFn.toString());^529^530^531^532^^514^544^if  ( !existingFn.hasEqualCallType ( fnType )  )  { reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P16_Remove_Block]^^529^530^531^532^^514^544^if  ( !existingFn.hasEqualCallType ( fnType )  )  { reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P13_Insert_Block]^if  ( foundTemplateType )  {     reportError ( TEMPLATE_TYPE_DUPLICATED, fnName ) ; }^529^^^^^514^544^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P13_Insert_Block]^if  (  ( baseType )  == null )  {     reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ; }^529^^^^^514^544^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P13_Insert_Block]^if  (  ( info.getImplementedInterfaceCount (  )  )  > 0 )  {     reportWarning ( IMPLEMENTS_WITHOUT_CONSTRUCTOR, fnName ) ; }^529^^^^^514^544^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^reportWarning ( TEMPLATE_TYPE_DUPLICATED, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^reportWarning ( TYPE_REDEFINITION, fnName.toString (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) .toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^reportWarning (  fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^reportWarning ( TYPE_REDEFINITION,  fnType.toString (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^reportWarning ( TYPE_REDEFINITION, fnName, existingFn.toString (  ) , fnType.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^reportWarning ( fnType, fnName, TYPE_REDEFINITION.toString (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^reportWarning ( TYPE_REDEFINITION, fnType, fnName.toString (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^reportError ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^reportWarning ( TYPE_REDEFINITION, fnName, fnType.setSource (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^reportWarning ( TYPE_REDEFINITION, fnName, existingFn.toString (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P14_Delete_Statement]^^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^fnType.toString (  ) , existingFn.toString (  )  ) ;reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^reportWarning ( EXTENDS_NON_OBJECT, fnName, baseType.toString (  )  ) ;reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P13_Insert_Block]^if  ( ! ( existingFn.hasEqualCallType ( fnType )  )  )  {     reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ; }^530^^^^^515^545^[Delete]^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^fnType.setSource (  ) , existingFn.toString (  )  ) ;^531^^^^^516^546^fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^fnType .getConstructor (  )  , existingFn^531^^^^^516^546^fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P14_Delete_Statement]^^531^^^^^516^546^fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;fnType.toString (  ) , existingFn.toString (  )  ) ;^531^^^^^516^546^fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^fnType.toString (  ) , fnType.toString (  )  ) ;^531^^^^^516^546^fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^return fnType;^534^^^^^519^549^return existingFn;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType existingFn = warnedAboutArgList ? (  ( InstanceObjectType )  existingType ) .getConstructor (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^520^521^522^523^^505^535^FunctionType existingFn = isInstanceObject ? (  ( InstanceObjectType )  existingType ) .getConstructor (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType existingFn = typeRegistry ? (  ( InstanceObjectType )  existingType ) .getConstructor (  )  : isInstanceObject.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^520^521^522^523^^505^535^FunctionType existingFn = isInstanceObject ? (  ( InstanceObjectType )  existingType ) .getConstructor (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P6_Replace_Expression]^FunctionType existingFn  =  typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^520^521^522^523^^505^535^FunctionType existingFn = isInstanceObject ? (  ( InstanceObjectType )  existingType ) .getConstructor (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P6_Replace_Expression]^FunctionType existingFn  =  (  ( InstanceObjectType )  existingType ) .getConstructor (  )  ;^520^521^522^523^^505^535^FunctionType existingFn = isInstanceObject ? (  ( InstanceObjectType )  existingType ) .getConstructor (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^FunctionType existingFn = isInstanceObject ? (  ( InstanceObjectType )  existingType ) .evaluate (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^520^521^522^523^^505^535^FunctionType existingFn = isInstanceObject ? (  ( InstanceObjectType )  existingType ) .getConstructor (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^FunctionType existingFn = isInstanceObject ? (  ( InstanceObjectType )  existingType )  .toString (  )   : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^520^521^522^523^^505^535^FunctionType existingFn = isInstanceObject ? (  ( InstanceObjectType )  existingType ) .getConstructor (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^FunctionType existingFn = isInstanceObject ? (  ( InstanceObjectType )  existingType ) .getConstructor (  )  : typeRegistry.getNativeType ( FUNCTION_FUNCTION_TYPE ) ;^520^521^522^523^^505^535^FunctionType existingFn = isInstanceObject ? (  ( InstanceObjectType )  existingType ) .getConstructor (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^FunctionType existingFn = isVarArgs ? (  ( InstanceObjectType )  existingType ) .getConstructor (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^520^521^522^523^^505^535^FunctionType existingFn = isInstanceObject ? (  ( InstanceObjectType )  existingType ) .getConstructor (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^(  ( InstanceObjectType )  existingType ) .evaluate (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^522^523^^^^507^537^(  ( InstanceObjectType )  existingType ) .getConstructor (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P14_Delete_Statement]^^522^523^^^^507^537^(  ( InstanceObjectType )  existingType ) .getConstructor (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^typeRegistry.getNativeType ( FUNCTION_FUNCTION_TYPE ) ;^523^^^^^508^538^typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P14_Delete_Statement]^^523^^^^^508^538^typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P11_Insert_Donor_Statement]^typeRegistry.getNativeType ( UNKNOWN_TYPE ) ;typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^523^^^^^508^538^typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P12_Insert_Condition]^if  ( maybeFunctionType instanceof FunctionType )  { typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ; }^523^^^^^508^538^typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^if  ( existingFn .setSource ( errorRoot )   == null )  {^525^^^^^510^540^if  ( existingFn.getSource (  )  == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^existingFn .getSource (  )  ;^526^^^^^511^541^existingFn.setSource ( sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^reportWarning ( TYPE_REDEFINITION, existingFn, fnType.toString (  ) , fnName.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^reportWarning ( existingFn, fnName, fnType.toString (  ) , TYPE_REDEFINITION.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^reportWarning ( fnName, TYPE_REDEFINITION, fnType.toString (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^reportWarning ( TYPE_REDEFINITION, fnName, fnType .getConstructor (  )  , existingFn^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^reportWarning ( TYPE_REDEFINITION, templateTypeName, fnType.setSource (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^fnType.setSource (  ) , fnType.toString (  )  ) ;^531^^^^^516^546^fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^if  ( existingFn.setSource (  )  == this )  {^525^^^^^510^540^if  ( existingFn.getSource (  )  == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^reportWarning ( VAR_ARGS_MUST_BE_LAST, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^reportWarning ( TYPE_REDEFINITION, paramName, fnType.toString (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P2_Replace_Operator]^boolean isInstanceObject = existingType  >>  InstanceObjectType;^518^^^^^503^533^boolean isInstanceObject = existingType instanceof InstanceObjectType;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^boolean isInstanceObject = type instanceof InstanceObjectType;^518^^^^^503^533^boolean isInstanceObject = existingType instanceof InstanceObjectType;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^FunctionType existingFn = isOptional ? (  ( InstanceObjectType )  existingType ) .getConstructor (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^520^521^522^523^^505^535^FunctionType existingFn = isInstanceObject ? (  ( InstanceObjectType )  existingType ) .getConstructor (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P3_Replace_Literal]^if  ( isInstanceObject || fnName.equals ( "nunction" )  )  {^519^^^^^504^534^if  ( isInstanceObject || fnName.equals ( "Function" )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^if  ( isInstanceObject || templateTypeName.equals ( "Function" )  )  {^519^^^^^504^534^if  ( isInstanceObject || fnName.equals ( "Function" )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^(  ( InstanceObjectType )  existingType )  .toString (  )   : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^522^523^^^^507^537^(  ( InstanceObjectType )  existingType ) .getConstructor (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^if  ( existingFn .setSource ( sourceNode )   == null )  {^525^^^^^510^540^if  ( existingFn.getSource (  )  == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^existingFn.setSource ( param ) ;^526^^^^^511^541^existingFn.setSource ( sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^existingFn.setPrototypeBasedOn ( paramsParent ) ;^526^^^^^511^541^existingFn.setSource ( sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^reportWarning ( TYPE_REDEFINITION, templateTypeName, fnType.toString (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^reportWarning ( VAR_ARGS_MUST_BE_LAST, fnName, fnType.setSource (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P3_Replace_Literal]^if  ( isInstanceObject || fnName.equals ( "unctiunction" )  )  {^519^^^^^504^534^if  ( isInstanceObject || fnName.equals ( "Function" )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^if  ( isOptional || fnName.equals ( "Function" )  )  {^519^^^^^504^534^if  ( isInstanceObject || fnName.equals ( "Function" )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^if  ( existingFn .setSource ( paramsParent )   == null )  {^525^^^^^510^540^if  ( existingFn.getSource (  )  == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^if  ( existingFn.getSource (  )  == false )  {^525^^^^^510^540^if  ( existingFn.getSource (  )  == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^existingFn.setPrototypeBasedOn ( parametersNode ) ;^526^^^^^511^541^existingFn.setSource ( sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^if  ( existingFn.hasEqualCallType ( fnType )  )  {^529^^^^^514^544^if  ( !existingFn.hasEqualCallType ( fnType )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , fnType.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^typeRegistry .getNativeType (  )  ;^523^^^^^508^538^typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^existingFn.setSource ( paramsParent ) ;^526^^^^^511^541^existingFn.setSource ( sourceNode ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^reportWarning ( OPTIONAL_ARG_AT_END, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^if  ( existingFn .setSource ( arg )   == null )  {^525^^^^^510^540^if  ( existingFn.getSource (  )  == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^if  ( existingFn.getSource (  )  == true )  {^525^^^^^510^540^if  ( existingFn.getSource (  )  == null )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^if  ( !existingFn.hasEqualCallType ( existingFn )  )  {^529^^^^^514^544^if  ( !existingFn.hasEqualCallType ( fnType )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^reportWarning ( TEMPLATE_TYPE_EXPECTED, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^reportWarning ( TYPE_REDEFINITION, sourceName, fnType.toString (  ) , existingFn.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^reportWarning ( TYPE_REDEFINITION, fnName, fnType.setSource (  ) , fnType.toString (  )  ) ;^530^531^^^^515^545^reportWarning ( TYPE_REDEFINITION, fnName, fnType.toString (  ) , existingFn.toString (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P2_Replace_Operator]^boolean isInstanceObject = existingType  <  InstanceObjectType;^518^^^^^503^533^boolean isInstanceObject = existingType instanceof InstanceObjectType;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^FunctionType existingFn = isOptional ? (  ( InstanceObjectType )  existingType ) .evaluate (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^520^521^522^523^^505^535^FunctionType existingFn = isInstanceObject ? (  ( InstanceObjectType )  existingType ) .getConstructor (  )  : typeRegistry.getNativeFunctionType ( FUNCTION_FUNCTION_TYPE ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P3_Replace_Literal]^if  ( isInstanceObject || fnName.equals ( "FunctionF" )  )  {^519^^^^^504^534^if  ( isInstanceObject || fnName.equals ( "Function" )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^maybeSetBaseType ( existingFn ) ;^542^^^^^527^557^maybeSetBaseType ( fnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^inferReturnType ( fnType ) ;^542^^^^^527^557^maybeSetBaseType ( fnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P14_Delete_Statement]^^542^^^^^527^557^maybeSetBaseType ( fnType ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P2_Replace_Operator]^if  ( scope.isGlobal (  )  || !fnName.isEmpty (  )  )  {^544^^^^^529^559^if  ( scope.isGlobal (  )  && !fnName.isEmpty (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P6_Replace_Expression]^if  ( scope.isGlobal (  )  ) {^544^^^^^529^559^if  ( scope.isGlobal (  )  && !fnName.isEmpty (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P6_Replace_Expression]^if  (  !fnName.isEmpty (  )  )  {^544^^^^^529^559^if  ( scope.isGlobal (  )  && !fnName.isEmpty (  )  )  {^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P15_Unwrap_Block]^typeRegistry.declareType(fnName, fnType.getInstanceType());^544^545^546^^^529^559^if  ( scope.isGlobal (  )  && !fnName.isEmpty (  )  )  { typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P16_Remove_Block]^^544^545^546^^^529^559^if  ( scope.isGlobal (  )  && !fnName.isEmpty (  )  )  { typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ; }^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^typeRegistry.declareType ( fnName, existingFn.getInstanceType (  )  ) ;^545^^^^^530^560^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^typeRegistry.declareType ( sourceName, fnType.getInstanceType (  )  ) ;^545^^^^^530^560^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^typeRegistry.declareType ( fnName.getInstanceType (  )  ) ;^545^^^^^530^560^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^typeRegistry.declareType (  fnType.getInstanceType (  )  ) ;^545^^^^^530^560^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^typeRegistry.declareType ( fnType, fnName.getInstanceType (  )  ) ;^545^^^^^530^560^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^typeRegistry.getType ( fnName, fnType.getInstanceType (  )  ) ;^545^^^^^530^560^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^typeRegistry.declareType ( fnName, fnType.setImplementedInterfaces (  )  ) ;^545^^^^^530^560^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P7_Replace_Invocation]^typeRegistry.declareType ( fnName, fnType .getReturnType (  )   ) ;^545^^^^^530^560^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^typeRegistry.declareType ( fnName, existingFn .getReturnType (  )   ) ;^545^^^^^530^560^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P14_Delete_Statement]^^545^^^^^530^560^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^typeRegistry.declareType ( fnName, existingFn.setImplementedInterfaces (  )  ) ;^545^^^^^530^560^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^typeRegistry.declareType ( templateTypeName, fnType.getInstanceType (  )  ) ;^545^^^^^530^560^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P8_Replace_Mix]^typeRegistry .getNativeType (  )  ;^545^^^^^530^560^typeRegistry.declareType ( fnName, fnType.getInstanceType (  )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^return existingFn;^547^^^^^532^562^return fnType;^[CLASS] FunctionTypeBuilder  [METHOD] getOrCreateConstructor [RETURN_TYPE] FunctionType   [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  FunctionType  existingFn  fnType  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, errorRoot, TEMPLATE_TYPE_DUPLICATED, args )  ) ;^551^^^^^550^552^compiler.report ( JSError.make ( sourceName, errorRoot, warning, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportWarning [RETURN_TYPE] void   DiagnosticType warning  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( templateTypeName, errorRoot, warning, args )  ) ;^551^^^^^550^552^compiler.report ( JSError.make ( sourceName, errorRoot, warning, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportWarning [RETURN_TYPE] void   DiagnosticType warning  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, param, warning, args )  ) ;^551^^^^^550^552^compiler.report ( JSError.make ( sourceName, errorRoot, warning, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportWarning [RETURN_TYPE] void   DiagnosticType warning  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, errorRoot,  args )  ) ;^551^^^^^550^552^compiler.report ( JSError.make ( sourceName, errorRoot, warning, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportWarning [RETURN_TYPE] void   DiagnosticType warning  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, errorRoot, warning )  ) ;^551^^^^^550^552^compiler.report ( JSError.make ( sourceName, errorRoot, warning, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportWarning [RETURN_TYPE] void   DiagnosticType warning  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make (  errorRoot, warning, args )  ) ;^551^^^^^550^552^compiler.report ( JSError.make ( sourceName, errorRoot, warning, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportWarning [RETURN_TYPE] void   DiagnosticType warning  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName,  warning, args )  ) ;^551^^^^^550^552^compiler.report ( JSError.make ( sourceName, errorRoot, warning, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportWarning [RETURN_TYPE] void   DiagnosticType warning  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, errorRoot, args, warning )  ) ;^551^^^^^550^552^compiler.report ( JSError.make ( sourceName, errorRoot, warning, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportWarning [RETURN_TYPE] void   DiagnosticType warning  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( errorRoot, sourceName, warning, args )  ) ;^551^^^^^550^552^compiler.report ( JSError.make ( sourceName, errorRoot, warning, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportWarning [RETURN_TYPE] void   DiagnosticType warning  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, warning, errorRoot, args )  ) ;^551^^^^^550^552^compiler.report ( JSError.make ( sourceName, errorRoot, warning, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportWarning [RETURN_TYPE] void   DiagnosticType warning  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P14_Delete_Statement]^^551^^^^^550^552^compiler.report ( JSError.make ( sourceName, errorRoot, warning, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportWarning [RETURN_TYPE] void   DiagnosticType warning  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P11_Insert_Donor_Statement]^compiler.report ( JSError.make ( sourceName, errorRoot, error, args )  ) ;compiler.report ( JSError.make ( sourceName, errorRoot, warning, args )  ) ;^551^^^^^550^552^compiler.report ( JSError.make ( sourceName, errorRoot, warning, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportWarning [RETURN_TYPE] void   DiagnosticType warning  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( ownerTypeName, errorRoot, warning, args )  ) ;^551^^^^^550^552^compiler.report ( JSError.make ( sourceName, errorRoot, warning, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportWarning [RETURN_TYPE] void   DiagnosticType warning  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, paramsParent, warning, args )  ) ;^551^^^^^550^552^compiler.report ( JSError.make ( sourceName, errorRoot, warning, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportWarning [RETURN_TYPE] void   DiagnosticType warning  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( args, errorRoot, warning, sourceName )  ) ;^551^^^^^550^552^compiler.report ( JSError.make ( sourceName, errorRoot, warning, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportWarning [RETURN_TYPE] void   DiagnosticType warning  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( warning, errorRoot, sourceName, args )  ) ;^551^^^^^550^552^compiler.report ( JSError.make ( sourceName, errorRoot, warning, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportWarning [RETURN_TYPE] void   DiagnosticType warning  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, TEMPLATE_TYPE_EXPECTEDRoot, error, args )  ) ;^555^^^^^554^556^compiler.report ( JSError.make ( sourceName, errorRoot, error, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportError [RETURN_TYPE] void   DiagnosticType error  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( paramName, errorRoot, error, args )  ) ;^555^^^^^554^556^compiler.report ( JSError.make ( sourceName, errorRoot, error, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportError [RETURN_TYPE] void   DiagnosticType error  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, param, error, args )  ) ;^555^^^^^554^556^compiler.report ( JSError.make ( sourceName, errorRoot, error, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportError [RETURN_TYPE] void   DiagnosticType error  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, errorRoot,  args )  ) ;^555^^^^^554^556^compiler.report ( JSError.make ( sourceName, errorRoot, error, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportError [RETURN_TYPE] void   DiagnosticType error  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, errorRoot, error )  ) ;^555^^^^^554^556^compiler.report ( JSError.make ( sourceName, errorRoot, error, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportError [RETURN_TYPE] void   DiagnosticType error  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make (  errorRoot, error, args )  ) ;^555^^^^^554^556^compiler.report ( JSError.make ( sourceName, errorRoot, error, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportError [RETURN_TYPE] void   DiagnosticType error  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName,  error, args )  ) ;^555^^^^^554^556^compiler.report ( JSError.make ( sourceName, errorRoot, error, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportError [RETURN_TYPE] void   DiagnosticType error  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, argsRoot, error, error )  ) ;^555^^^^^554^556^compiler.report ( JSError.make ( sourceName, errorRoot, error, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportError [RETURN_TYPE] void   DiagnosticType error  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P14_Delete_Statement]^^555^^^^^554^556^compiler.report ( JSError.make ( sourceName, errorRoot, error, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportError [RETURN_TYPE] void   DiagnosticType error  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P11_Insert_Donor_Statement]^compiler.report ( JSError.make ( sourceName, errorRoot, warning, args )  ) ;compiler.report ( JSError.make ( sourceName, errorRoot, error, args )  ) ;^555^^^^^554^556^compiler.report ( JSError.make ( sourceName, errorRoot, error, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportError [RETURN_TYPE] void   DiagnosticType error  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, warningRoot, error, args )  ) ;^555^^^^^554^556^compiler.report ( JSError.make ( sourceName, errorRoot, error, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportError [RETURN_TYPE] void   DiagnosticType error  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, sourceNode, error, args )  ) ;^555^^^^^554^556^compiler.report ( JSError.make ( sourceName, errorRoot, error, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportError [RETURN_TYPE] void   DiagnosticType error  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( error, sourceNameRoot, error, args )  ) ;^555^^^^^554^556^compiler.report ( JSError.make ( sourceName, errorRoot, error, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportError [RETURN_TYPE] void   DiagnosticType error  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( args, errorRoot, error, sourceName )  ) ;^555^^^^^554^556^compiler.report ( JSError.make ( sourceName, errorRoot, error, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportError [RETURN_TYPE] void   DiagnosticType error  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P5_Replace_Variable]^compiler.report ( JSError.make ( sourceName, args, error, errorRoot )  ) ;^555^^^^^554^556^compiler.report ( JSError.make ( sourceName, errorRoot, error, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportError [RETURN_TYPE] void   DiagnosticType error  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P8_Replace_Mix]^compiler.report ( JSError.make ( ownerTypeName, errorRoot, error, args )  ) ;^555^^^^^554^556^compiler.report ( JSError.make ( sourceName, errorRoot, error, args )  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] reportError [RETURN_TYPE] void   DiagnosticType error  args [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  String[]  args  
[P2_Replace_Operator]^return info.getParameterCount (  )  > 0 && info.hasReturnType (  )  || info.hasThisType (  )  || info.isConstructor (  )  ||^562^563^564^565^^561^567^return info.getParameterCount (  )  > 0 || info.hasReturnType (  )  || info.hasThisType (  )  || info.isConstructor (  )  ||^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P2_Replace_Operator]^return info.getParameterCount (  )  >= 0 || info.hasReturnType (  )  || info.hasThisType (  )  || info.isConstructor (  )  ||^562^563^564^565^^561^567^return info.getParameterCount (  )  > 0 || info.hasReturnType (  )  || info.hasThisType (  )  || info.isConstructor (  )  ||^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P3_Replace_Literal]^return info.getParameterCount (  )  > -1 || info.hasReturnType (  )  || info.hasThisType (  )  || info.isConstructor (  )  ||^562^563^564^565^^561^567^return info.getParameterCount (  )  > 0 || info.hasReturnType (  )  || info.hasThisType (  )  || info.isConstructor (  )  ||^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^return info.getParameterType (  )  > 0 || info.hasReturnType (  )  || info.hasThisType (  )  || info.isConstructor (  )  ||^562^563^564^565^^561^567^return info.getParameterCount (  )  > 0 || info.hasReturnType (  )  || info.hasThisType (  )  || info.isConstructor (  )  ||^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^return info.getParameterCount (  )  > 0 || info.hasParameterType (  )  || info.hasThisType (  )  || info.isConstructor (  )  ||^562^563^564^565^^561^567^return info.getParameterCount (  )  > 0 || info.hasReturnType (  )  || info.hasThisType (  )  || info.isConstructor (  )  ||^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^return info.getParameterCount (  )  > 0 || info.hasReturnType (  )  || info.hasParameterType (  )  || info.isConstructor (  )  ||^562^563^564^565^^561^567^return info.getParameterCount (  )  > 0 || info.hasReturnType (  )  || info.hasThisType (  )  || info.isConstructor (  )  ||^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^return info.getParameterCount (  )  > 0 || info.hasReturnType (  )  || info .getThisType (  )   || info.isConstructor (  )  ||^562^563^564^565^^561^567^return info.getParameterCount (  )  > 0 || info.hasReturnType (  )  || info.hasThisType (  )  || info.isConstructor (  )  ||^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^return info.getParameterCount (  )  > 0 || info.hasReturnType (  )  || info.hasThisType (  )  || info.hasParameterType (  )  ||^562^563^564^565^^561^567^return info.getParameterCount (  )  > 0 || info.hasReturnType (  )  || info.hasThisType (  )  || info.isConstructor (  )  ||^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P8_Replace_Mix]^return true ;^562^563^564^565^^561^567^return info.getParameterCount (  )  > 0 || info.hasReturnType (  )  || info.hasThisType (  )  || info.isConstructor (  )  ||^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^return info .getParameterNames (  )   > 0 || info.hasReturnType (  )  || info.hasThisType (  )  || info.isConstructor (  )  ||^562^563^564^565^^561^567^return info.getParameterCount (  )  > 0 || info.hasReturnType (  )  || info.hasThisType (  )  || info.isConstructor (  )  ||^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^info.hasParameterType (  )  || info.hasThisType (  )  || info.isConstructor (  )  || info.isInterface (  ) ;^563^564^565^566^^561^567^info.hasReturnType (  )  || info.hasThisType (  )  || info.isConstructor (  )  || info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^info .getReturnType (  )   || info.hasThisType (  )  || info.isConstructor (  )  || info.isInterface (  ) ;^563^564^565^566^^561^567^info.hasReturnType (  )  || info.hasThisType (  )  || info.isConstructor (  )  || info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^info.hasParameterType (  )  || info.isConstructor (  )  || info.isInterface (  ) ;^564^565^566^^^561^567^info.hasThisType (  )  || info.isConstructor (  )  || info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^info .getThisType (  )   || info.isConstructor (  )  || info.isInterface (  ) ;^564^565^566^^^561^567^info.hasThisType (  )  || info.isConstructor (  )  || info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^564^565^566^^^561^567^info.hasThisType (  )  || info.isConstructor (  )  || info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^info.hasParameterType (  )  || info.isInterface (  ) ;^565^566^^^^561^567^info.isConstructor (  )  || info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^info .isInterface (  )   || info.isInterface (  ) ;^565^566^^^^561^567^info.isConstructor (  )  || info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^565^566^^^^561^567^info.isConstructor (  )  || info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P7_Replace_Invocation]^info.hasParameterType (  ) ;^566^^^^^561^567^info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P14_Delete_Statement]^^566^^^^^561^567^info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
[P11_Insert_Donor_Statement]^isInterface = info.isInterface (  ) ;info.isInterface (  ) ;^566^^^^^561^567^info.isInterface (  ) ;^[CLASS] FunctionTypeBuilder  [METHOD] isFunctionTypeDeclaration [RETURN_TYPE] boolean   JSDocInfo info [VARIABLES] ObjectType  baseType  interType  maybeThisType  objType  ownerType  thisType  AbstractCompiler  compiler  JSTypeRegistry  typeRegistry  JSType  existingType  maybeFunctionType  paramType  parameterType  returnType  type  boolean  emittedWarning  foundTemplateType  isConstructor  isInstanceObject  isInterface  isOptional  isVarArgs  warnedAboutArgList  Scope  scope  DiagnosticType  EXTENDS_NON_OBJECT  EXTENDS_WITHOUT_TYPEDEF  IMPLEMENTS_WITHOUT_CONSTRUCTOR  INEXISTANT_PARAM  OPTIONAL_ARG_AT_END  TEMPLATE_TYPE_DUPLICATED  TEMPLATE_TYPE_EXPECTED  TYPE_REDEFINITION  VAR_ARGS_MUST_BE_LAST  error  warning  CodingConvention  codingConvention  Node  arg  argsParent  currentParam  errorRoot  lp  owner  param  parametersNode  paramsParent  sourceNode  List  implementedInterfaces  String  argumentName  fnName  inexistentName  name  ownerTypeName  paramName  sourceName  templateTypeName  JSDocInfo  info  
