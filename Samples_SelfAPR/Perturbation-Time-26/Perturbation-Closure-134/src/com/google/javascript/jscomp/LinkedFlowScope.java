[P8_Replace_Mix]^private  LinkedFlowScope parent;^45^^^^^40^50^private final LinkedFlowScope parent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [VARIABLES] 
[P1_Replace_Type]^private  long  depth;^48^^^^^43^53^private int depth;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [VARIABLES] 
[P8_Replace_Mix]^private  short  depth;^48^^^^^43^53^private int depth;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [VARIABLES] 
[P1_Replace_Type]^static final  long  MAX_DEPTH = 250;^50^^^^^45^55^static final int MAX_DEPTH = 250;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [VARIABLES] 
[P3_Replace_Literal]^static final int MAX_DEPTH = 259;^50^^^^^45^55^static final int MAX_DEPTH = 250;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [VARIABLES] 
[P8_Replace_Mix]^static final int MAX_DEPTH = 250 + 1;^50^^^^^45^55^static final int MAX_DEPTH = 250;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [VARIABLES] 
[P3_Replace_Literal]^private boolean frozen = true;^57^^^^^52^62^private boolean frozen = false;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [VARIABLES] 
[P8_Replace_Mix]^LinkedFlowSlot parent;^371^^^^^366^376^final LinkedFlowSlot parent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [VARIABLES] 
[P8_Replace_Mix]^private  LinkedFlowScope linkedEquivalent;^388^^^^^383^393^private final LinkedFlowScope linkedEquivalent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [VARIABLES] 
[P8_Replace_Mix]^private Map<String, StaticSlot<JSType>> symbols  = null ;^392^^^^^387^397^private Map<String, StaticSlot<JSType>> symbols = Maps.newHashMap (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [VARIABLES] 
[P8_Replace_Mix]^final Set<String> dirtySymbols  = null ;^402^^^^^397^407^final Set<String> dirtySymbols = Sets.newHashSet (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache   [VARIABLES] 
[P5_Replace_Variable]^this.cache = flattened;^65^^^^^63^75^this.cache = cache;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^this.parent = parent;this.cache = cache;^65^^^^^63^75^this.cache = cache;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( directParent != null )  {^66^^^^^63^75^if  ( directParent == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( parent == null )  {^66^^^^^63^75^if  ( directParent == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  ( directParent.depth + 1 )  {^66^^^^^63^75^if  ( directParent == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( directParent == true )  {^66^^^^^63^75^if  ( directParent == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( joinedType != null )  {^66^^^^^63^75^if  ( directParent == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( flattened == null )  {^66^^^^^63^75^if  ( directParent == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( fnSlotType == null )  {^66^^^^^63^75^if  ( directParent == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( result == null )  {^66^^^^^63^75^if  ( directParent == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this.lastSlot = parent.lastSlot;^71^^^^^63^75^this.lastSlot = directParent.lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this.lastSlot = parent;^71^^^^^63^75^this.lastSlot = directParent.lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this.lastSlot = directParent.lastSlot.lastSlot;^71^^^^^63^75^this.lastSlot = directParent.lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this.lastSlot = directParent;^71^^^^^63^75^this.lastSlot = directParent.lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^this.depth = directParent.depth + 1;this.lastSlot = directParent.lastSlot;^71^^^^^63^75^this.lastSlot = directParent.lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^this.lastSlot = null;this.lastSlot = directParent.lastSlot;^71^^^^^63^75^this.lastSlot = directParent.lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^this.parent = directParent;this.lastSlot = directParent.lastSlot;^71^^^^^63^75^this.lastSlot = directParent.lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P3_Replace_Literal]^this.depth = directParent.depth + depth;^72^^^^^63^75^this.depth = directParent.depth + 1;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this.depth = parent.depth + 1;^72^^^^^63^75^this.depth = directParent.depth + 1;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this.depth = depth + 1;^72^^^^^63^75^this.depth = directParent.depth + 1;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this.depth = directParent.depth.depth + 1;^72^^^^^63^75^this.depth = directParent.depth + 1;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this.depth = directParent + 1;^72^^^^^63^75^this.depth = directParent.depth + 1;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^this.depth = directParent.depth + 3;^72^^^^^63^75^this.depth = directParent.depth + 1;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^this.lastSlot = directParent.lastSlot;this.depth = directParent.depth + 1;^72^^^^^63^75^this.depth = directParent.depth + 1;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^this.parent = directParent;this.depth = directParent.depth + 1;^72^^^^^63^75^this.depth = directParent.depth + 1;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this.parent = parent;^73^^^^^63^75^this.parent = directParent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^linkedEquivalent = directParent;this.parent = directParent;^73^^^^^63^75^this.parent = directParent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^this.parent = cache.linkedEquivalent;this.parent = directParent;^73^^^^^63^75^this.parent = directParent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^this.lastSlot = directParent.lastSlot;this.parent = directParent;^73^^^^^63^75^this.parent = directParent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^this.depth = directParent.depth + 1;this.parent = directParent;^73^^^^^63^75^this.parent = directParent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^this.parent = parent;this.parent = directParent;^73^^^^^63^75^this.parent = directParent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^this.lastSlot = true;^67^^^^^63^75^this.lastSlot = null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^this.lastSlot = directParent.lastSlot;this.lastSlot = null;^67^^^^^63^75^this.lastSlot = null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P3_Replace_Literal]^this.depth = depth;^68^^^^^63^75^this.depth = 0;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^this.depth = 0 / 4;^68^^^^^63^75^this.depth = 0;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this.parent = flattened.linkedEquivalent;^69^^^^^63^75^this.parent = cache.linkedEquivalent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this.parent = cache.linkedEquivalent.linkedEquivalent;^69^^^^^63^75^this.parent = cache.linkedEquivalent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this.parent = cache;^69^^^^^63^75^this.parent = cache.linkedEquivalent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^this.parent = directParent;this.parent = cache.linkedEquivalent;^69^^^^^63^75^this.parent = cache.linkedEquivalent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^this.parent = parent;this.parent = cache.linkedEquivalent;^69^^^^^63^75^this.parent = cache.linkedEquivalent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^this.depth = 0 / 2;^68^^^^^63^75^this.depth = 0;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this.parent = parent;^69^^^^^63^75^this.parent = cache.linkedEquivalent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P3_Replace_Literal]^this.depth = directParent.depth ;^72^^^^^63^75^this.depth = directParent.depth + 1;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^this.depth = directParent.depth + 1L;^72^^^^^63^75^this.depth = directParent.depth + 1;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   FlatFlowScopeCache cache LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this ( flattened, null ) ;^78^^^^^77^79^this ( cache, null ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$FlatFlowScopeCache)   FlatFlowScopeCache cache [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^78^^^^^77^79^this ( cache, null ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$FlatFlowScopeCache)   FlatFlowScopeCache cache [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this ( parent.cache, directParent ) ;^82^^^^^81^83^this ( directParent.cache, directParent ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this ( flattened, directParent ) ;^82^^^^^81^83^this ( directParent.cache, directParent ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this ( directParent.cache ) ;^82^^^^^81^83^this ( directParent.cache, directParent ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this (  directParent ) ;^82^^^^^81^83^this ( directParent.cache, directParent ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this ( directParent.cache.cache, directParent ) ;^82^^^^^81^83^this ( directParent.cache, directParent ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this ( directParent, directParent.cache ) ;^82^^^^^81^83^this ( directParent.cache, directParent ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^82^^^^^81^83^this ( directParent.cache, directParent ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P3_Replace_Literal]^super ( name, type, false ) ;^374^^^^^373^376^super ( name, type, true ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$LinkedFlowSlot)   String name JSType type LinkedFlowSlot parent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  JSType  type  Scope  functionScope  String  name  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^super (  type, true ) ;^374^^^^^373^376^super ( name, type, true ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$LinkedFlowSlot)   String name JSType type LinkedFlowSlot parent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  JSType  type  Scope  functionScope  String  name  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^super ( name,  true ) ;^374^^^^^373^376^super ( name, type, true ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$LinkedFlowSlot)   String name JSType type LinkedFlowSlot parent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  JSType  type  Scope  functionScope  String  name  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^super ( type, name, true ) ;^374^^^^^373^376^super ( name, type, true ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$LinkedFlowSlot)   String name JSType type LinkedFlowSlot parent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  JSType  type  Scope  functionScope  String  name  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^374^^^^^373^376^super ( name, type, true ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$LinkedFlowSlot)   String name JSType type LinkedFlowSlot parent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  JSType  type  Scope  functionScope  String  name  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^this.parent = lastSlot;^375^^^^^373^376^this.parent = parent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$LinkedFlowSlot)   String name JSType type LinkedFlowSlot parent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  JSType  type  Scope  functionScope  String  name  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^this.cache = cache;this.parent = parent;^375^^^^^373^376^this.parent = parent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$LinkedFlowSlot)   String name JSType type LinkedFlowSlot parent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  JSType  type  Scope  functionScope  String  name  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^this.parent = cache.linkedEquivalent;this.parent = parent;^375^^^^^373^376^this.parent = parent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$LinkedFlowSlot)   String name JSType type LinkedFlowSlot parent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  JSType  type  Scope  functionScope  String  name  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^this.parent = directParent;this.parent = parent;^375^^^^^373^376^this.parent = parent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$LinkedFlowSlot)   String name JSType type LinkedFlowSlot parent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  JSType  type  Scope  functionScope  String  name  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^this.functionScope =  null;^406^^^^^405^409^this.functionScope = functionScope;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] Scope)   Scope functionScope [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^functionScope = cache.functionScope;this.functionScope = functionScope;^406^^^^^405^409^this.functionScope = functionScope;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] Scope)   Scope functionScope [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^symbols  = null ;^407^^^^^405^409^symbols = ImmutableMap.of (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] Scope)   Scope functionScope [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^symbols = directParent.allFlowSlots (  ) ;symbols = ImmutableMap.of (  ) ;^407^^^^^405^409^symbols = ImmutableMap.of (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] Scope)   Scope functionScope [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^407^408^^^^405^409^symbols = ImmutableMap.of (  ) ; linkedEquivalent = null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] Scope)   Scope functionScope [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^linkedEquivalent = this;^408^^^^^405^409^linkedEquivalent = null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] Scope)   Scope functionScope [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^linkedEquivalent = directParent;linkedEquivalent = null;^408^^^^^405^409^linkedEquivalent = null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] Scope)   Scope functionScope [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^FlatFlowScopeCache cache = parent.cache;^413^^^^^412^418^FlatFlowScopeCache cache = directParent.cache;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^FlatFlowScopeCache cache = flattened;^413^^^^^412^418^FlatFlowScopeCache cache = directParent.cache;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^FlatFlowScopeCache cache = directParent.cache.cache;^413^^^^^412^418^FlatFlowScopeCache cache = directParent.cache;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^FlatFlowScopeCache cache = directParent;^413^^^^^412^418^FlatFlowScopeCache cache = directParent.cache;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^functionScope = flattened.functionScope;^415^^^^^412^418^functionScope = cache.functionScope;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^functionScope = functionScope;^415^^^^^412^418^functionScope = cache.functionScope;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^functionScope = cache.functionScope.functionScope;^415^^^^^412^418^functionScope = cache.functionScope;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^functionScope = cache;^415^^^^^412^418^functionScope = cache.functionScope;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^this.functionScope = functionScope;functionScope = cache.functionScope;^415^^^^^412^418^functionScope = cache.functionScope;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^symbols = parent.allFlowSlots (  ) ;^416^^^^^412^418^symbols = directParent.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^symbols = directParent.equals (  ) ;^416^^^^^412^418^symbols = directParent.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^symbols = ImmutableMap.of (  ) ;symbols = directParent.allFlowSlots (  ) ;^416^^^^^412^418^symbols = directParent.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^416^^^^^412^418^symbols = directParent.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^linkedEquivalent = parent;^417^^^^^412^418^linkedEquivalent = directParent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^linkedEquivalent =  null;^417^^^^^412^418^linkedEquivalent = directParent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^linkedEquivalent = null;linkedEquivalent = directParent;^417^^^^^412^418^linkedEquivalent = directParent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^this.parent = directParent;linkedEquivalent = directParent;^417^^^^^412^418^linkedEquivalent = directParent;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  Scope  functionScope  Map  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^linkedEquivalent = false;^423^^^^^408^438^linkedEquivalent = null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^linkedEquivalent = directParent;linkedEquivalent = null;^423^^^^^408^438^linkedEquivalent = null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^functionScope = parent.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^functionScope = joinedScopeA.flowsFromBottom (  )  ? parent.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^functionScope = joinedScopeB.flowsFromBottom (  )  ? joinedScopeA.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^functionScope  =  joinedScopeA.getFunctionScope (  ) ;^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^functionScope  =  joinedScopeB.getFunctionScope (  )  ;^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^functionScope = joinedScopeA.getSlot (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^functionScope = joinedScopeA .allFlowSlots (  )   ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getSlot (  )  : joinedScopeA.getFunctionScope (  ) ;^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB .createChildFlowScope (  )   : joinedScopeA^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^functionScope =  null.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : null.getFunctionScope (  ) ;^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^joinedScopeB.getSlot (  )  : joinedScopeA.getFunctionScope (  ) ;^428^^^^^413^443^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^428^^^^^413^443^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Scope functionScope = getFunctionScope (  ) ;joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^428^^^^^413^443^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^428^^^^^413^443^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^return getFunctionScope (  ) .getParentScope (  ) ;joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^428^^^^^413^443^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^428^^^^^413^443^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^428^^^^^413^443^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P12_Insert_Condition]^if  ( this.getFunctionScope (  )  != that.getFunctionScope (  )  )  { joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ; }^428^^^^^413^443^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^joinedScopeB.getFunctionScope (  )  : linkedEquivalent.getFunctionScope (  ) ;^428^^^^^413^443^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^Map<String, StaticSlot<JSType>> slotsA = parent.allFlowSlots (  ) ;^430^^^^^415^445^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.equals (  ) ;^430^^^^^415^445^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^430^^^^^415^445^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^430^^^^^415^445^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> myFlowSlots = allFlowSlots (  ) ;Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^430^^^^^415^445^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^430^^^^^415^445^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^Map<String, StaticSlot<JSType>> slotsA = linkedEquivalent.allFlowSlots (  ) ;^430^^^^^415^445^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^430^431^^^^415^445^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ; Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^Map<String, StaticSlot<JSType>> slotsB = linkedEquivalent.allFlowSlots (  ) ;^431^^^^^416^446^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.equals (  ) ;^431^^^^^416^446^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^431^^^^^416^446^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^431^^^^^416^446^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^431^^^^^416^446^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> myFlowSlots = allFlowSlots (  ) ;Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^431^^^^^416^446^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^Map<String, StaticSlot<JSType>> slotsB = parent.allFlowSlots (  ) ;^431^^^^^416^446^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^Map<String, StaticSlot<JSType>> slotsB = parent.equals (  ) ;^431^^^^^416^446^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^431^^^^^416^446^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^symbols =  null;^433^^^^^418^448^symbols = slotsA;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^Set<String> symbolNames = Sets.newHashSet ( symbols.get (  )  ) ;^446^^^^^431^461^Set<String> symbolNames = Sets.newHashSet ( symbols.keySet (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^446^^^^^431^461^Set<String> symbolNames = Sets.newHashSet ( symbols.keySet (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^symbolNames.addAll ( slotsB.keySet (  )  ) ;Set<String> symbolNames = Sets.newHashSet ( symbols.keySet (  )  ) ;^446^^^^^431^461^Set<String> symbolNames = Sets.newHashSet ( symbols.keySet (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^symbolNames.addAll ( slotsB.get (  )  ) ;^447^^^^^432^462^symbolNames.addAll ( slotsB.keySet (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^447^^^^^432^462^symbolNames.addAll ( slotsB.keySet (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Set<String> symbolNames = Sets.newHashSet ( symbols.keySet (  )  ) ;symbolNames.addAll ( slotsB.keySet (  )  ) ;^447^^^^^432^462^symbolNames.addAll ( slotsB.keySet (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( slotB == null && slotB.getType (  )  == null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( slotB != null || slotB.getType (  )  == null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( slotB == null || slotB.getType (  )  != null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  ( slotB == null ) {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  (  slotB.getType (  )  == null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  ( fnSlot == null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  ( fnSlotType == null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  ( slotA == null || slotA.getType() == null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  ( slotA == null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  ( slotA.getType (  )  == null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( slotB == null || slotB .setType ( fnSlotType )   == null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( slotB == null || slotB .setType ( joinedType )   == null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( slotB == false || slotB.getType (  )  == false )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^} else if  ( slotA == null && slotA.getType (  )  == null )  {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^} else if  ( slotA != null || slotA.getType (  )  == null )  {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^} else if  ( slotA == null || slotA.getType (  )  != null )  {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^} else if  ( slotA == null ) {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^} else if  (  slotA.getType (  )  == null )  {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^} else if  ( fnSlot == null )  {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^} else if  ( fnSlotType == null )  {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^} else {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^} else if  ( slotA == null || slotA .setType ( joinedType )   == null )  {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^}  if  ( slotA == this || slotA.getType (  )  == this )  {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^joinedType = slotB.getType (  ) .getLeastSupertype ( slotA.getType (  )  ) ;^477^478^^^^464^479^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^joinedType = slotA .setType ( joinedType )  .getLeastSupertype ( slotB^477^478^^^^464^479^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^joinedType =  null.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^464^479^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^464^479^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^464^479^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^slotA.getType (  )  .getLeastSupertype ( joinedType )  ;^478^^^^^464^479^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^478^^^^^464^479^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^478^^^^^464^479^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^478^^^^^464^479^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^slotA .setType ( joinedType )  .getLeastSupertype ( slotB^478^^^^^464^479^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( fnSlotType != null )  {^468^^^^^453^483^if  ( fnSlotType == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( joinedType == null )  {^468^^^^^453^483^if  ( fnSlotType == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( fnSlotType == false )  {^468^^^^^453^483^if  ( fnSlotType == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( directParent == null )  {^468^^^^^453^483^if  ( fnSlotType == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( joinedType != null )  {^468^^^^^453^483^if  ( fnSlotType == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( flattened == null )  {^468^^^^^453^483^if  ( fnSlotType == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( result == null )  {^468^^^^^453^483^if  ( fnSlotType == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( fnSlotType == null )  { }else {     joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ; }^468^^^^^453^483^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^joinedType = slotB.getType (  ) .getLeastSupertype ( joinedType ) ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^joinedType = fnSlotType.getType (  ) .getLeastSupertype ( slotB ) ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^joinedType = slotB .setType ( joinedType )  .getLeastSupertype ( fnSlotType ) ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^joinedType =  null.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^joinedType = slotB.getType (  )  .getLeastSupertype ( fnSlotType )  ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^symbols.put (  slotB ) ;^470^^^^^455^485^symbols.put ( name, slotB ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^symbols.put ( name ) ;^470^^^^^455^485^symbols.put ( name, slotB ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^symbols.put ( slotB, name ) ;^470^^^^^455^485^symbols.put ( name, slotB ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^470^^^^^455^485^symbols.put ( name, slotB ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^slots.put ( slot.getName (  ) , slot ) ;symbols.put ( name, slotB ) ;^470^^^^^455^485^symbols.put ( name, slotB ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^joinedType = fnSlotType.getType (  ) .getLeastSupertype ( slotB ) ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^joinedType =  null.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^StaticSlot<JSType> fnSlot = name.getFunctionScope (  ) .getSlot ( joinedScopeA ) ;^465^466^^^^450^480^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^StaticSlot<JSType> fnSlot = joinedScopeA.getSlot (  ) .getSlot ( name ) ;^465^466^^^^450^480^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^StaticSlot<JSType> fnSlot = joinedScopeA .createChildFlowScope (  )  .getSlot ( name ) ;^465^466^^^^450^480^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^StaticSlot<JSType> fnSlot = parent.getSlot (  ) .getSlot ( name ) ;^465^466^^^^450^480^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> slotB = slotsB.get ( name ) ;StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^465^466^^^^450^480^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> slotA = slotsA.get ( name ) ;StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^465^466^^^^450^480^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^465^466^^^^450^480^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^JSType fnSlotType = fnSlot != null ? null : fnSlot.getType (  ) ;^467^^^^^452^482^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^JSType fnSlotType = fnSlot ( fnSlot.getType (  ) ;^467^^^^^452^482^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^JSType fnSlotType = fnSlot == null ? null : fnSlot .setType ( fnSlotType )  ;^467^^^^^452^482^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType bType = slotB.getType (  ) ;JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^467^^^^^452^482^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType aType = slotA.getType (  ) ;JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^467^^^^^452^482^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^467^^^^^452^482^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^= parent.getFunctionScope (  ) .getSlot ( name ) ;^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^= name.getFunctionScope (  ) .getSlot ( joinedScopeA ) ;^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^= joinedScopeA.getSlot (  ) .getSlot ( name ) ;^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^466^467^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ; JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^return getFunctionScope (  ) .isBottom (  ) ;= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^return getFunctionScope (  ) .getParentScope (  ) ;= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^return functionScope.getSlot ( name ) ;= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^= joinedScopeA .createChildFlowScope (  )  .getSlot ( name ) ;^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^= linkedEquivalent.getFunctionScope (  ) .getSlot ( name ) ;^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^JSType nullType = fnSlot == null ? null : fnSlot.getType (  ) ;^467^^^^^452^482^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^467^^^^^452^482^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^joinedType = slotB.getType (  ) .getLeastSupertype ( joinedType ) ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^joinedType = slotB.getType (  )  .getLeastSupertype ( fnSlotType )  ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^joinedType = slotB .setType ( joinedType )  .getLeastSupertype ( fnSlotType ) ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^joinedType = 1.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^symbols .put ( lastSlot )  ;^470^^^^^455^485^symbols.put ( name, slotB ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^symbols.put ( name, 4 ) ;^470^^^^^455^485^symbols.put ( name, slotB ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^joinedType = 2.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^joinedType = slotB.getType (  ) .getLeastSupertype ( slotA.getType (  )  ) ;^477^478^^^^462^492^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^joinedType = slotA .setType ( fnSlotType )  .getLeastSupertype ( slotB^477^478^^^^462^492^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^joinedType =  null.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^462^492^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^462^492^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^462^492^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^StaticSlot<JSType> fnSlot = parent.getFunctionScope (  ) .getSlot ( name ) ;^465^466^^^^450^480^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^StaticSlot<JSType> fnSlot = linkedEquivalent.getSlot (  ) .getSlot ( name ) ;^465^466^^^^450^480^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^} else if  ( slotA == null || slotA .setType ( fnSlotType )   == null )  {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^JSType fnSlotType = fnSlot == null ? null : fnSlot .setType ( joinedType )  ;^467^^^^^452^482^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^joinedType = slotB .setType ( fnSlotType )  .getLeastSupertype ( fnSlotType ) ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^slotA.getType (  )  .getLeastSupertype ( fnSlotType )  ;^478^^^^^463^493^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^slotA .setType ( joinedType )  .getLeastSupertype ( slotB^478^^^^^463^493^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^slotA .setType ( fnSlotType )  .getLeastSupertype ( slotB^478^^^^^463^493^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^478^^^^^463^493^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^478^^^^^463^493^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^478^^^^^463^493^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( fnSlotType != null )  {^458^^^^^443^473^if  ( fnSlotType == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( joinedType == null )  {^458^^^^^443^473^if  ( fnSlotType == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( fnSlotType == false )  {^458^^^^^443^473^if  ( fnSlotType == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( directParent == null )  {^458^^^^^443^473^if  ( fnSlotType == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( joinedType != null )  {^458^^^^^443^473^if  ( fnSlotType == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( flattened == null )  {^458^^^^^443^473^if  ( fnSlotType == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( result == null )  {^458^^^^^443^473^if  ( fnSlotType == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^^458^459^460^^462^443^473^if  ( fnSlotType == null )  {  } else { joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( fnSlotType == null )  {     symbols.put ( name, slotB ) ; }else {     joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ; }^458^^^^^443^473^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^joinedType = slotA.getType (  ) .getLeastSupertype ( joinedType ) ;^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^joinedType = fnSlotType.getType (  ) .getLeastSupertype ( slotA ) ;^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^joinedType =  null.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^joinedType = slotA.getType (  )  .getLeastSupertype ( fnSlotType )  ;^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^joinedType = 2.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^joinedType = slotA .setType ( joinedType )  .getLeastSupertype ( fnSlotType ) ;^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^joinedType = slotA.getType (  ) .getLeastSupertype ( joinedType ) ;^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^joinedType = fnSlotType.getType (  ) .getLeastSupertype ( slotA ) ;^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^joinedType = slotA.getType (  )  .getLeastSupertype ( fnSlotType )  ;^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^joinedType =  null.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^StaticSlot<JSType> fnSlot = linkedEquivalent.getFunctionScope (  ) .getSlot ( name ) ;^455^456^^^^440^470^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^StaticSlot<JSType> fnSlot = name.getFunctionScope (  ) .getSlot ( joinedScopeB ) ;^455^456^^^^440^470^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^StaticSlot<JSType> fnSlot = joinedScopeB.getSlot (  ) .getSlot ( name ) ;^455^456^^^^440^470^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^StaticSlot<JSType> fnSlot = parent.getFunctionScope (  ) .getSlot ( name ) ;^455^456^^^^440^470^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> slotB = slotsB.get ( name ) ;StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^455^456^^^^440^470^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> slotA = slotsA.get ( name ) ;StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^455^456^^^^440^470^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^455^456^^^^440^470^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^JSType fnSlotType = fnSlot != null ? null : fnSlot.getType (  ) ;^457^^^^^442^472^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^JSType fnSlotType = fnSlot ( fnSlot.getType (  ) ;^457^^^^^442^472^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^JSType fnSlotType = fnSlot == null ? null : fnSlot .setType ( fnSlotType )  ;^457^^^^^442^472^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType bType = slotB.getType (  ) ;JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^457^^^^^442^472^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType aType = slotA.getType (  ) ;JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^457^^^^^442^472^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^457^^^^^442^472^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^= parent.getFunctionScope (  ) .getSlot ( name ) ;^456^^^^^441^471^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^= name.getFunctionScope (  ) .getSlot ( joinedScopeB ) ;^456^^^^^441^471^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^= joinedScopeB.getSlot (  ) .getSlot ( name ) ;^456^^^^^441^471^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^456^^^^^441^471^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^456^^^^^441^471^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^456^^^^^441^471^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^return getFunctionScope (  ) .isBottom (  ) ;= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^456^^^^^441^471^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^return getFunctionScope (  ) .getParentScope (  ) ;= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^456^^^^^441^471^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^return functionScope.getSlot ( name ) ;= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^456^^^^^441^471^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^= linkedEquivalent.getFunctionScope (  ) .getSlot ( name ) ;^456^^^^^441^471^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^JSType 2Type = fnSlot == null ? null : fnSlot.getType (  ) ;^457^^^^^442^472^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^457^^^^^442^472^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^joinedType = slotA .setType ( fnSlotType )  .getLeastSupertype ( fnSlotType ) ;^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( joinedType == this )  {^458^^^^^443^473^if  ( fnSlotType == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^joinedType = slotA .setType ( fnSlotType )  .getLeastSupertype ( fnSlotType ) ;^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^}  if  (  slotA.getType (  )  == this )  {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^joinedType = slotA.getType (  )  .getLeastSupertype ( joinedType )  ;^477^478^^^^464^479^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^slotA .setType ( fnSlotType )  .getLeastSupertype ( slotB^478^^^^^464^479^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( fnSlotType == this )  {^468^^^^^453^483^if  ( fnSlotType == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^symbols .put ( parent )  ;^470^^^^^455^485^symbols.put ( name, slotB ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^JSType 0Type = fnSlot == null ? null : fnSlot.getType (  ) ;^467^^^^^452^482^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^joinedType = slotB .setType ( joinedType )  .getLeastSupertype ( joinedType ) ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^joinedType = 1.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^joinedType = slotB .setType ( fnSlotType )  .getLeastSupertype ( fnSlotType ) ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^symbols.put ( name, 2 ) ;^470^^^^^455^485^symbols.put ( name, slotB ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( joinedType == null )  {^481^^^^^466^496^if  ( joinedType != null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( fnSlotType != null )  {^481^^^^^466^496^if  ( joinedType != null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( joinedType != false )  {^481^^^^^466^496^if  ( joinedType != null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( directParent == null )  {^481^^^^^466^496^if  ( joinedType != null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( flattened == null )  {^481^^^^^466^496^if  ( joinedType != null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( fnSlotType == null )  {^481^^^^^466^496^if  ( joinedType != null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( result == null )  {^481^^^^^466^496^if  ( joinedType != null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^symbols.put(name, new com.google.javascript.rhino.jstype.SimpleSlot(name, joinedType, true));^481^482^483^^^466^496^if  ( joinedType != null )  { symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^481^482^483^^^466^496^if  ( joinedType != null )  { symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P3_Replace_Literal]^symbols.put ( name, new SimpleSlot ( name, joinedType, false )  ) ;^482^^^^^467^497^symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P4_Replace_Constructor]^symbols.put (  new SimpleSlot ( name, joinedType, true )  ) ;^482^^^^^467^497^symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P4_Replace_Constructor]^symbols.put ( name, new SimpleSlot ( name,  true )  ) ;^482^^^^^467^497^symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^symbols.put ( name, new SimpleSlot ( name, fnSlotType, true )  ) ;^482^^^^^467^497^symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^symbols.put ( joinedType, new SimpleSlot ( name, name, true )  ) ;^482^^^^^467^497^symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( joinedType != null )  {     symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ; }^482^^^^^467^497^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^482^^^^^467^497^symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^joinedType = 3.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P1_Replace_Type]^for  ( char name : symbolNames )  {^449^^^^^434^464^for  ( String name : symbolNames )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^StaticSlot<JSType> slotA = name.get ( slotsA ) ;^450^^^^^435^465^StaticSlot<JSType> slotA = slotsA.get ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^StaticSlot<JSType> slotA = slotsA.put ( name ) ;^450^^^^^435^465^StaticSlot<JSType> slotA = slotsA.get ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^StaticSlot<JSType> slotB = name.get ( slotsB ) ;^451^^^^^436^466^StaticSlot<JSType> slotB = slotsB.get ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^StaticSlot<JSType> slotB = slotsB.put ( name ) ;^451^^^^^436^466^StaticSlot<JSType> slotB = slotsB.get ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P12_Insert_Condition]^if  ( joinedType != null )  { JSType joinedType = null; }^453^^^^^438^468^JSType joinedType = null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^StaticSlot<JSType> fnSlot = linkedEquivalent.getSlot (  ) .getSlot ( name ) ;^455^456^^^^440^470^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^JSType 3Type = fnSlot == null ? null : fnSlot.getType (  ) ;^457^^^^^442^472^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^StaticSlot<JSType> slotA = slotsA .get (  )  ;^450^^^^^435^465^StaticSlot<JSType> slotA = slotsA.get ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^450^^^^^435^465^StaticSlot<JSType> slotA = slotsA.get ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> slotB = slotsB.get ( name ) ;StaticSlot<JSType> slotA = slotsA.get ( name ) ;^450^^^^^435^465^StaticSlot<JSType> slotA = slotsA.get ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;StaticSlot<JSType> slotA = slotsA.get ( name ) ;^450^^^^^435^465^StaticSlot<JSType> slotA = slotsA.get ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^StaticSlot<JSType> slotB = slotsB .get (  )  ;^451^^^^^436^466^StaticSlot<JSType> slotB = slotsB.get ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^451^^^^^436^466^StaticSlot<JSType> slotB = slotsB.get ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> slotA = slotsA.get ( name ) ;StaticSlot<JSType> slotB = slotsB.get ( name ) ;^451^^^^^436^466^StaticSlot<JSType> slotB = slotsB.get ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;StaticSlot<JSType> slotB = slotsB.get ( name ) ;^451^^^^^436^466^StaticSlot<JSType> slotB = slotsB.get ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^joinedType = this.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^slotA.getType (  ) .getLeastSupertype ( 3.getType (  )  ) ;^478^^^^^463^493^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  StaticSlot  fnSlot  slotA  slotB  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return functionScope;^87^^^^^86^88^return cache.functionScope;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getFunctionScope [RETURN_TYPE] Scope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return flattened.functionScope;^87^^^^^86^88^return cache.functionScope;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getFunctionScope [RETURN_TYPE] Scope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return cache;^87^^^^^86^88^return cache.functionScope;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getFunctionScope [RETURN_TYPE] Scope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return cache.functionScope.functionScope;^87^^^^^86^88^return cache.functionScope;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getFunctionScope [RETURN_TYPE] Scope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^return getFunctionScope (  ) .isLocal (  ) ;^92^^^^^91^93^return getFunctionScope (  ) .isBottom (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] flowsFromBottom [RETURN_TYPE] boolean   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^return createChildFlowScope (  ) .isBottom (  ) ;^92^^^^^91^93^return getFunctionScope (  ) .isBottom (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] flowsFromBottom [RETURN_TYPE] boolean   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^92^^^^^91^93^return getFunctionScope (  ) .isBottom (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] flowsFromBottom [RETURN_TYPE] boolean   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P4_Replace_Constructor]^return return  new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  )   ) ;^99^^^^^98^100^return new LinkedFlowScope ( new FlatFlowScopeCache ( scope )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createEntryLattice [RETURN_TYPE] LinkedFlowScope   Scope scope [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return new LinkedFlowScope ( new FlatFlowScopeCache ( functionScope )  ) ;^99^^^^^98^100^return new LinkedFlowScope ( new FlatFlowScopeCache ( scope )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createEntryLattice [RETURN_TYPE] LinkedFlowScope   Scope scope [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^return  new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  )   ) ;^99^^^^^98^100^return new LinkedFlowScope ( new FlatFlowScopeCache ( scope )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createEntryLattice [RETURN_TYPE] LinkedFlowScope   Scope scope [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P4_Replace_Constructor]^return return  LinkedFlowScope (  new FlatFlowScopeCache ( this )   ) ;^99^^^^^98^100^return new LinkedFlowScope ( new FlatFlowScopeCache ( scope )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createEntryLattice [RETURN_TYPE] LinkedFlowScope   Scope scope [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^104^^^^^103^108^Preconditions.checkState ( !frozen ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferSlotType [RETURN_TYPE] void   String symbol JSType type [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  type  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P4_Replace_Constructor]^lastSlot = new LinkedFlowSlot (  type, lastSlot ) ;^105^^^^^103^108^lastSlot = new LinkedFlowSlot ( symbol, type, lastSlot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferSlotType [RETURN_TYPE] void   String symbol JSType type [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  type  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P4_Replace_Constructor]^lastSlot = new LinkedFlowSlot ( symbol,  lastSlot ) ;^105^^^^^103^108^lastSlot = new LinkedFlowSlot ( symbol, type, lastSlot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferSlotType [RETURN_TYPE] void   String symbol JSType type [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  type  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^lastSlot = new LinkedFlowSlot ( symbol, type, parent ) ;^105^^^^^103^108^lastSlot = new LinkedFlowSlot ( symbol, type, lastSlot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferSlotType [RETURN_TYPE] void   String symbol JSType type [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  type  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^lastSlot = new LinkedFlowSlot ( symbol, type ) ;^105^^^^^103^108^lastSlot = new LinkedFlowSlot ( symbol, type, lastSlot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferSlotType [RETURN_TYPE] void   String symbol JSType type [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  type  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^lastSlot = new LinkedFlowSlot ( type, symbol, lastSlot ) ;^105^^^^^103^108^lastSlot = new LinkedFlowSlot ( symbol, type, lastSlot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferSlotType [RETURN_TYPE] void   String symbol JSType type [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  type  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^lastSlot = new LinkedFlowSlot ( symbol, lastSlot, type ) ;^105^^^^^103^108^lastSlot = new LinkedFlowSlot ( symbol, type, lastSlot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferSlotType [RETURN_TYPE] void   String symbol JSType type [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  type  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^lastSlot =  new LinkedFlowSlot ( null, type, lastSlot ) ;^105^^^^^103^108^lastSlot = new LinkedFlowSlot ( symbol, type, lastSlot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferSlotType [RETURN_TYPE] void   String symbol JSType type [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  type  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^lastSlot = new LinkedFlowSlot ( lastSlot, type, symbol ) ;^105^^^^^103^108^lastSlot = new LinkedFlowSlot ( symbol, type, lastSlot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferSlotType [RETURN_TYPE] void   String symbol JSType type [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  type  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^cache.dirtySymbols.addAll ( symbol ) ;^107^^^^^103^108^cache.dirtySymbols.add ( symbol ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferSlotType [RETURN_TYPE] void   String symbol JSType type [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  type  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^107^^^^^103^108^cache.dirtySymbols.add ( symbol ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferSlotType [RETURN_TYPE] void   String symbol JSType type [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  type  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^return symbols.get ( name ) ;cache.dirtySymbols.add ( symbol ) ;^107^^^^^103^108^cache.dirtySymbols.add ( symbol ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferSlotType [RETURN_TYPE] void   String symbol JSType type [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  type  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P12_Insert_Condition]^if  ( cache.dirtySymbols.contains ( name )  )  { cache.dirtySymbols.add ( symbol ) ; }^107^^^^^103^108^cache.dirtySymbols.add ( symbol ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferSlotType [RETURN_TYPE] void   String symbol JSType type [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  type  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^Scope functionScope = createChildFlowScope (  ) ;^113^^^^^111^125^Scope functionScope = getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P12_Insert_Condition]^if  ( this.getFunctionScope (  )  != that.getFunctionScope (  )  )  { Scope functionScope = getFunctionScope (  ) ; }^113^^^^^111^125^Scope functionScope = getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^113^^^^^111^125^Scope functionScope = getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;Scope functionScope = getFunctionScope (  ) ;^113^^^^^111^125^Scope functionScope = getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^return getFunctionScope (  ) .getParentScope (  ) ;Scope functionScope = getFunctionScope (  ) ;^113^^^^^111^125^Scope functionScope = getFunctionScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( scope.isLocal (  )  )  {^114^^^^^111^125^if  ( functionScope.isLocal (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  ( functionScope.getVar ( symbol )  == null )  {^114^^^^^111^125^if  ( functionScope.isLocal (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( functionScope.getSlot (  )  )  {^114^^^^^111^125^if  ( functionScope.isLocal (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( functionScope .isBottom (  )   )  {^114^^^^^111^125^if  ( functionScope.isLocal (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  (  (  ( functionScope.getVar ( symbol )  )  == null )  &&  ( ! ( functionScope.isBottom (  )  )  )  )  {     functionScope.declare ( symbol, null, bottomType, null ) ; }^114^^^^^111^125^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( functionScope.getVar ( symbol )  == null || !functionScope.isBottom (  )  )  {^115^^^^^111^125^if  ( functionScope.getVar ( symbol )  == null && !functionScope.isBottom (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( functionScope.getVar ( symbol )  != null && !functionScope.isBottom (  )  )  {^115^^^^^111^125^if  ( functionScope.getVar ( symbol )  == null && !functionScope.isBottom (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( scope.getVar ( symbol )  == null && !functionScope.isBottom (  )  )  {^115^^^^^111^125^if  ( functionScope.getVar ( symbol )  == null && !functionScope.isBottom (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( symbol.getVar ( functionScope )  == null && !functionScope.isBottom (  )  )  {^115^^^^^111^125^if  ( functionScope.getVar ( symbol )  == null && !functionScope.isBottom (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  ( functionScope.getVar ( symbol )  == null ) {^115^^^^^111^125^if  ( functionScope.getVar ( symbol )  == null && !functionScope.isBottom (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  (  !functionScope.isBottom (  )  )  {^115^^^^^111^125^if  ( functionScope.getVar ( symbol )  == null && !functionScope.isBottom (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( functionScope .getVars (  )   == null && !functionScope.isBottom (  )  )  {^115^^^^^111^125^if  ( functionScope.getVar ( symbol )  == null && !functionScope.isBottom (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( functionScope.getVar ( symbol )  == null && !functionScope.getSlot (  )  )  {^115^^^^^111^125^if  ( functionScope.getVar ( symbol )  == null && !functionScope.isBottom (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( functionScope.isLocal (  )  )  {     if  (  (  ( functionScope.getVar ( symbol )  )  == null )  &&  ( ! ( functionScope.isBottom (  )  )  )  )  {         functionScope.declare ( symbol, null, bottomType, null ) ;     }     inferSlotType ( symbol, inferredType ) ; }^115^^^^^111^125^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^functionScope.declare ( symbol, null, inferredType, null ) ;^120^^^^^111^125^functionScope.declare ( symbol, null, bottomType, null ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^functionScope.declare (  null, bottomType, null ) ;^120^^^^^111^125^functionScope.declare ( symbol, null, bottomType, null ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^functionScope.declare ( symbol, null,  null ) ;^120^^^^^111^125^functionScope.declare ( symbol, null, bottomType, null ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^functionScope.declare ( bottomType, null, symbol, null ) ;^120^^^^^111^125^functionScope.declare ( symbol, null, bottomType, null ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^120^^^^^111^125^functionScope.declare ( symbol, null, bottomType, null ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^inferSlotType ( symbol, bottomType ) ;^123^^^^^111^125^inferSlotType ( symbol, inferredType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^inferSlotType (  inferredType ) ;^123^^^^^111^125^inferSlotType ( symbol, inferredType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^inferSlotType ( symbol ) ;^123^^^^^111^125^inferSlotType ( symbol, inferredType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^inferSlotType ( inferredType, symbol ) ;^123^^^^^111^125^inferSlotType ( symbol, inferredType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^diffSlots ( symbol, inferredType ) ;^123^^^^^111^125^inferSlotType ( symbol, inferredType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^123^^^^^111^125^inferSlotType ( symbol, inferredType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( functionScope.getVar ( symbol )  == true && !functionScope.isBottom (  )  )  {^115^^^^^111^125^if  ( functionScope.getVar ( symbol )  == null && !functionScope.isBottom (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^functionScope .getVar ( symbol )  ;^120^^^^^111^125^functionScope.declare ( symbol, null, bottomType, null ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( scope .getVars (  )   == null && !functionScope.isBottom (  )  )  {^115^^^^^111^125^if  ( functionScope.getVar ( symbol )  == null && !functionScope.isBottom (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^diffSlots ( symbol, bottomType ) ;^123^^^^^111^125^inferSlotType ( symbol, inferredType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] inferQualifiedSlot [RETURN_TYPE] void   String symbol JSType bottomType JSType inferredType [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  bottomType  inferredType  Scope  functionScope  scope  String  symbol  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return scope.getTypeOfThis (  ) ;^129^^^^^128^130^return cache.functionScope.getTypeOfThis (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getTypeOfThis [RETURN_TYPE] JSType   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return flattened.functionScope.getTypeOfThis (  ) ;^129^^^^^128^130^return cache.functionScope.getTypeOfThis (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getTypeOfThis [RETURN_TYPE] JSType   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return cache.getTypeOfThis (  ) ;^129^^^^^128^130^return cache.functionScope.getTypeOfThis (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getTypeOfThis [RETURN_TYPE] JSType   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return cache.functionScope.functionScope.getTypeOfThis (  ) ;^129^^^^^128^130^return cache.functionScope.getTypeOfThis (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getTypeOfThis [RETURN_TYPE] JSType   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^return cache.functionScope.getVars (  ) ;^129^^^^^128^130^return cache.functionScope.getTypeOfThis (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getTypeOfThis [RETURN_TYPE] JSType   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^return cache.functionScope .getSlot ( 2 )  ;^129^^^^^128^130^return cache.functionScope.getTypeOfThis (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getTypeOfThis [RETURN_TYPE] JSType   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^129^^^^^128^130^return cache.functionScope.getTypeOfThis (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getTypeOfThis [RETURN_TYPE] JSType   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^return getFunctionScope (  ) .getVars (  ) ;^134^^^^^133^135^return getFunctionScope (  ) .getParentScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getParentScope [RETURN_TYPE] StaticScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^return createChildFlowScope (  ) .getParentScope (  ) ;^134^^^^^133^135^return getFunctionScope (  ) .getParentScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getParentScope [RETURN_TYPE] StaticScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P12_Insert_Condition]^if  ( this.getFunctionScope (  )  != that.getFunctionScope (  )  )  { return getFunctionScope (  ) .getParentScope (  ) ; }^134^^^^^133^135^return getFunctionScope (  ) .getParentScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getParentScope [RETURN_TYPE] StaticScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^134^^^^^133^135^return getFunctionScope (  ) .getParentScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getParentScope [RETURN_TYPE] StaticScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( flattened.dirtySymbols.contains ( name )  )  {^141^^^^^140^150^if  ( cache.dirtySymbols.contains ( name )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( cache.dirtySymbols.addAll ( name )  )  {^141^^^^^140^150^if  ( cache.dirtySymbols.contains ( name )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( symbols.containsKey ( name )  )  {^141^^^^^140^150^if  ( cache.dirtySymbols.contains ( name )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^for (com.google.javascript.jscomp.LinkedFlowScope.LinkedFlowSlot slot = lastSlot; slot != null; slot = slot.parent) {    if (slot.getName().equals(name)) {        return slot;    }};^141^142^143^144^145^140^150^if  ( cache.dirtySymbols.contains ( name )  )  { for  ( LinkedFlowSlot slot = lastSlot; slot != null; slot = slot.parent )  { if  ( slot.getName (  ) .equals ( name )  )  { return slot; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^141^142^143^144^145^140^150^if  ( cache.dirtySymbols.contains ( name )  )  { for  ( LinkedFlowSlot slot = lastSlot; slot != null; slot = slot.parent )  { if  ( slot.getName (  ) .equals ( name )  )  { return slot; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( parent.getName (  ) .equals ( name )  )  {^144^^^^^140^150^if  ( slot.getName (  ) .equals ( name )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( name.getName (  ) .equals ( slot )  )  {^144^^^^^140^150^if  ( slot.getName (  ) .equals ( name )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( slot.equals (  ) .equals ( name )  )  {^144^^^^^140^150^if  ( slot.getName (  ) .equals ( name )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( slot .getType (  )  .equals ( name )  )  {^144^^^^^140^150^if  ( slot.getName (  ) .equals ( name )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^return slot;^144^145^146^^^140^150^if  ( slot.getName (  ) .equals ( name )  )  { return slot; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^144^145^146^^^140^150^if  ( slot.getName (  ) .equals ( name )  )  { return slot; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {     return false; }^144^^^^^140^150^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( ! ( currentSlot.getName (  ) .equals ( result.getName (  )  )  )  )  {     return null; }^144^^^^^140^150^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return parent;^145^^^^^140^150^return slot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^for  ( LinkedFlowSlot parent = lastSlot;^142^^^^^140^150^for  ( LinkedFlowSlot slot = lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^for  ( LinkedFlowSlot slot = parent;^142^^^^^140^150^for  ( LinkedFlowSlot slot = lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^for  ( LinkedFlowSlot lastSlot = slot;^142^^^^^140^150^for  ( LinkedFlowSlot slot = lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( contains ( name )  )  {     for  ( LinkedFlowSlot slot = lastSlot; slot != null; slot = slot.parent )  {         if  ( slot.getName (  ) .equals ( name )  )  {             return slot;         }     } }^142^^^^^140^150^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( slot.getName (  )  .equals ( name )   )  {^144^^^^^140^150^if  ( slot.getName (  ) .equals ( name )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( parent .getType (  )  .equals ( name )  )  {^144^^^^^140^150^if  ( slot.getName (  ) .equals ( name )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( slot.getName (  ) .equals ( name )  )  {     return slot; }^144^^^^^140^150^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^slot != null; parent = slot.parent )  {^143^^^^^140^150^slot != null; slot = slot.parent )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^slot != null; slot = parent )  {^143^^^^^140^150^slot != null; slot = slot.parent )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^slot != null; slot.parent = slot )  {^143^^^^^140^150^slot != null; slot = slot.parent )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^slot !=  null; parent^143^^^^^140^150^slot != null; slot = slot.parent )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( name.contains ( cache.dirtySymbols )  )  {^141^^^^^140^150^if  ( cache.dirtySymbols.contains ( name )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( name.dirtySymbols.contains ( cache )  )  {^141^^^^^140^150^if  ( cache.dirtySymbols.contains ( name )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( parent.equals (  ) .equals ( name )  )  {^144^^^^^140^150^if  ( slot.getName (  ) .equals ( name )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return flattened.getSlot ( name ) ;^149^^^^^140^150^return cache.getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return name.getSlot ( cache ) ;^149^^^^^140^150^return cache.getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^return cache.FlatFlowScopeCache ( name ) ;^149^^^^^140^150^return cache.getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^return flattened.FlatFlowScopeCache ( name ) ;^149^^^^^140^150^return cache.getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^149^^^^^140^150^return cache.getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P3_Replace_Literal]^frozen = false;^160^^^^^159^170^frozen = true;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^linkedB.frozen = true;frozen = true;^160^^^^^159^170^frozen = true;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^linkedA.frozen = true;frozen = true;^160^^^^^159^170^frozen = true;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( depth >= MAX_DEPTH )  {^162^^^^^159^170^if  ( depth > MAX_DEPTH )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( depth > depth )  {^162^^^^^159^170^if  ( depth > MAX_DEPTH )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( MAX_DEPTH > depth )  {^162^^^^^159^170^if  ( depth > MAX_DEPTH )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  ( flattened == null )  {^162^^^^^159^170^if  ( depth > MAX_DEPTH )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^if ((flattened) == null) {    flattened = new com.google.javascript.jscomp.LinkedFlowScope.FlatFlowScopeCache(this);}; return new com.google.javascript.jscomp.LinkedFlowScope(flattened);^162^163^164^165^^159^170^if  ( depth > MAX_DEPTH )  { if  ( flattened == null )  { flattened = new FlatFlowScopeCache ( this ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^162^163^164^165^^159^170^if  ( depth > MAX_DEPTH )  { if  ( flattened == null )  { flattened = new FlatFlowScopeCache ( this ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( flattened != null )  {^163^^^^^159^170^if  ( flattened == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( cache == null )  {^163^^^^^159^170^if  ( flattened == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( flattened == true )  {^163^^^^^159^170^if  ( flattened == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( directParent == null )  {^163^^^^^159^170^if  ( flattened == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( joinedType != null )  {^163^^^^^159^170^if  ( flattened == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( fnSlotType == null )  {^163^^^^^159^170^if  ( flattened == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( result == null )  {^163^^^^^159^170^if  ( flattened == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^flattened = new com.google.javascript.jscomp.LinkedFlowScope.FlatFlowScopeCache(this);^163^164^165^^^159^170^if  ( flattened == null )  { flattened = new FlatFlowScopeCache ( this ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^163^164^165^^^159^170^if  ( flattened == null )  { flattened = new FlatFlowScopeCache ( this ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P4_Replace_Constructor]^flattened = flattened =  new FlatFlowScopeCache ( linkedA, linkedB )  ;^164^^^^^159^170^flattened = new FlatFlowScopeCache ( this ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^flattened =  new FlatFlowScopeCache ( linkedA, linkedB )  ;^164^^^^^159^170^flattened = new FlatFlowScopeCache ( this ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  (  ( flattened )  == null )  {     flattened = new FlatFlowScopeCache ( this ) ; }^164^^^^^159^170^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P4_Replace_Constructor]^return return  new FlatFlowScopeCache ( this )  ;^166^^^^^159^170^return new LinkedFlowScope ( flattened ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return new LinkedFlowScope ( cache ) ;^166^^^^^159^170^return new LinkedFlowScope ( flattened ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^return  new FlatFlowScopeCache ( this )  ;^166^^^^^159^170^return new LinkedFlowScope ( flattened ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P4_Replace_Constructor]^return return  new FlatFlowScopeCache ( this )  ;^169^^^^^159^170^return new LinkedFlowScope ( this ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^return  new FlatFlowScopeCache ( this )  ;^169^^^^^159^170^return new LinkedFlowScope ( this ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] createChildFlowScope [RETURN_TYPE] FlowScope   [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( result != null )  {^189^^^^^178^198^if  ( result == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P8_Replace_Mix]^if  ( result == this )  {^189^^^^^178^198^if  ( result == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P9_Replace_Statement]^if  ( directParent == null )  {^189^^^^^178^198^if  ( result == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P9_Replace_Statement]^if  ( joinedType != null )  {^189^^^^^178^198^if  ( result == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P9_Replace_Statement]^if  ( flattened == null )  {^189^^^^^178^198^if  ( result == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P9_Replace_Statement]^if  ( aIsNull && bIsNull )  {^189^^^^^178^198^if  ( result == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P9_Replace_Statement]^if  ( fnSlotType == null )  {^189^^^^^178^198^if  ( result == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P15_Unwrap_Block]^result = currentSlot;^189^190^191^192^193^178^198^if  ( result == null )  { result = currentSlot; } else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  { return null; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P16_Remove_Block]^^189^190^191^192^193^178^198^if  ( result == null )  { result = currentSlot; } else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  { return null; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P13_Insert_Block]^if  ( ! ( currentSlot.getName (  ) .equals ( result.getName (  )  )  )  )  {     return null; }^189^^^^^178^198^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P13_Insert_Block]^if  ( aIsNull && bIsNull )  {     return false; }else     if  ( aIsNull ^ bIsNull )  {         return true;     }^189^^^^^178^198^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P6_Replace_Expression]^} else {^191^^^^^178^198^} else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P7_Replace_Invocation]^} else if  ( !currentSlot.equals (  ) .equals ( result.getName (  )  )  )  {^191^^^^^178^198^} else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P7_Replace_Invocation]^} else if  ( !currentSlot .getType (  )  .equals ( result^191^^^^^178^198^} else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P8_Replace_Mix]^}  if  ( !currentSlot.equals (  ) .equals ( result.getName (  )  )  )  {^191^^^^^178^198^} else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P15_Unwrap_Block]^return null;^191^192^193^^^178^198^} else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  { return null; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P16_Remove_Block]^^191^192^193^^^178^198^} else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  { return null; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P13_Insert_Block]^if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {     return false; }^191^^^^^178^198^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P13_Insert_Block]^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {     return false; }^191^^^^^178^198^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P13_Insert_Block]^if  ( slot.getName (  ) .equals ( name )  )  {     return slot; }^191^^^^^178^198^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P13_Insert_Block]^if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {     return false; }^191^^^^^178^198^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P13_Insert_Block]^if  ( result == null )  {     result = currentSlot; }else     if  ( ! ( currentSlot.getName (  ) .equals ( result.getName (  )  )  )  )  {         return null;     }^191^^^^^178^198^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P8_Replace_Mix]^return false;^192^^^^^178^198^return null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P8_Replace_Mix]^return this;^192^^^^^178^198^return null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P8_Replace_Mix]^} else if  ( !currentSlot.equals (  ) .equals ( 2.getName (  )  )  )  {^191^^^^^178^198^} else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P13_Insert_Block]^if  ( ! ( currentSlot.getName (  ) .equals ( result.getName (  )  )  )  )  {     return null; }^191^^^^^178^198^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P8_Replace_Mix]^result =  slot;^190^^^^^178^198^result = currentSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P8_Replace_Mix]^return true;^192^^^^^178^198^return null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P5_Replace_Variable]^for  ( LinkedFlowScope parent = this;^181^^^^^178^198^for  ( LinkedFlowScope currentScope = this;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P8_Replace_Mix]^if  ( result == false )  {^189^^^^^178^198^if  ( result == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P5_Replace_Variable]^} else if  ( !currentSlot.getName (  ) .equals ( null.getName (  )  )  )  {^191^^^^^178^198^} else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P5_Replace_Variable]^for  ( LinkedFlowSlot currentSlot = parent.lastSlot;^184^^^^^178^198^for  ( LinkedFlowSlot currentSlot = currentScope.lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P5_Replace_Variable]^for  ( LinkedFlowSlot slot = currentScope.lastSlot;^184^^^^^178^198^for  ( LinkedFlowSlot currentSlot = currentScope.lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P5_Replace_Variable]^for  ( LinkedFlowSlot currentSlot = slot;^184^^^^^178^198^for  ( LinkedFlowSlot currentSlot = currentScope.lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P5_Replace_Variable]^for  ( LinkedFlowSlot currentScope.lastSlot = currentSlot;^184^^^^^178^198^for  ( LinkedFlowSlot currentSlot = currentScope.lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P8_Replace_Mix]^if  ( 1 == false )  {^189^^^^^178^198^if  ( result == null )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P8_Replace_Mix]^result =  null;^190^^^^^178^198^result = currentSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P5_Replace_Variable]^currentSlot = slot )  {^188^^^^^178^198^currentSlot = currentSlot.parent )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P5_Replace_Variable]^currentSlot = currentSlot.parent.parent )  {^188^^^^^178^198^currentSlot = currentSlot.parent )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P5_Replace_Variable]^currentSlot = currentSlot )  {^188^^^^^178^198^currentSlot = currentSlot.parent )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P8_Replace_Mix]^currentSlot =  slot.parent )  {^188^^^^^178^198^currentSlot = currentSlot.parent )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P5_Replace_Variable]^for  ( LinkedFlowSlot currentSlot = currentScope.lastSlot.lastSlot;^184^^^^^178^198^for  ( LinkedFlowSlot currentSlot = currentScope.lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P5_Replace_Variable]^for  ( LinkedFlowSlot currentSlot = currentScope;^184^^^^^178^198^for  ( LinkedFlowSlot currentSlot = currentScope.lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P5_Replace_Variable]^} else if  ( !currentSlot.getName (  ) .equals ( 1.getName (  )  )  )  {^191^^^^^178^198^} else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P5_Replace_Variable]^} else if  ( !currentSlot.getName (  ) .equals ( 0.getName (  )  )  )  {^191^^^^^178^198^} else if  ( !currentSlot.getName (  ) .equals ( result.getName (  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P5_Replace_Variable]^currentScope = parent.parent )  {^183^^^^^178^198^currentScope = currentScope.parent )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P5_Replace_Variable]^currentScope = parent )  {^183^^^^^178^198^currentScope = currentScope.parent )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P5_Replace_Variable]^currentScope = currentScope.parent.parent )  {^183^^^^^178^198^currentScope = currentScope.parent )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P5_Replace_Variable]^currentScope = currentScope )  {^183^^^^^178^198^currentScope = currentScope.parent )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P5_Replace_Variable]^for  ( LinkedFlowSlot currentSlot = linkedEquivalent.lastSlot;^184^^^^^178^198^for  ( LinkedFlowSlot currentSlot = currentScope.lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] findUniqueRefinedSlot [RETURN_TYPE] StaticSlot   FlowScope blindScope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  result  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  blindScope  
[P6_Replace_Expression]^if  ( type == null )  {^208^^^^^205^216^if  ( var.isTypeInferred (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( var.setType (  )  )  {^208^^^^^205^216^if  ( var.isTypeInferred (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^com.google.javascript.rhino.jstype.JSType type = var.getType(); if ((type == null) || (type.isUnknownType())) {    com.google.javascript.rhino.jstype.JSType flowType = getSlot(var.getName()).getType();    var.setType(flowType);};^208^209^210^211^212^205^216^if  ( var.isTypeInferred (  )  )  { JSType type = var.getType (  ) ; if  ( type == null || type.isUnknownType (  )  )  { JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ; var.setType ( flowType ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^208^209^210^211^212^205^216^if  ( var.isTypeInferred (  )  )  { JSType type = var.getType (  ) ; if  ( type == null || type.isUnknownType (  )  )  { JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ; var.setType ( flowType ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  (  ( type == null )  ||  ( type.isUnknownType (  )  )  )  {     JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;     var.setType ( flowType ) ; }^208^^^^^205^216^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( type == null && type.isUnknownType (  )  )  {^210^^^^^205^216^if  ( type == null || type.isUnknownType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( type != null || type.isUnknownType (  )  )  {^210^^^^^205^216^if  ( type == null || type.isUnknownType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  ( type == null ) {^210^^^^^205^216^if  ( type == null || type.isUnknownType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  (  type.isUnknownType (  )  )  {^210^^^^^205^216^if  ( type == null || type.isUnknownType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( type == null || type.differsFrom (  )  )  {^210^^^^^205^216^if  ( type == null || type.isUnknownType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( type == null || type .isNoType (  )   )  {^210^^^^^205^216^if  ( type == null || type.isUnknownType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^com.google.javascript.rhino.jstype.JSType flowType = getSlot(var.getName()).getType(); var.setType(flowType);^210^211^212^213^^205^216^if  ( type == null || type.isUnknownType (  )  )  { JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ; var.setType ( flowType ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^210^211^212^213^^205^216^if  ( type == null || type.isUnknownType (  )  )  { JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ; var.setType ( flowType ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( var.isTypeInferred (  )  )  {     JSType type = var.getType (  ) ;     if  (  ( type == null )  ||  ( type.isUnknownType (  )  )  )  {         JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;         var.setType ( flowType ) ;     } }^210^^^^^205^216^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^JSType flowType = getSlot ( var.getName (  )  ) .getLeastSupertype (  ) ;^211^^^^^205^216^JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^JSType flowType = equals ( var.getName (  )  ) .getType (  ) ;^211^^^^^205^216^JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^JSType flowType = getSlot ( var.setType (  )  ) .getType (  ) ;^211^^^^^205^216^JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType bType = slotB.getType (  ) ;JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;^211^^^^^205^216^JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType type = var.getType (  ) ;JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;^211^^^^^205^216^JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType aType = slotA.getType (  ) ;JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;^211^^^^^205^216^JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;^211^^^^^205^216^JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  (  ( type == null )  ||  ( type.isUnknownType (  )  )  )  {     JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;     var.setType ( flowType ) ; }^211^^^^^205^216^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^211^^^^^205^216^JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^JSType flowType = getSlot ( var .getType (  )   ) .getType (  ) ;^211^^^^^205^216^JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^211^212^^^^205^216^JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ; var.setType ( flowType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^var.setType ( type ) ;^212^^^^^205^216^var.setType ( flowType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^212^^^^^205^216^var.setType ( flowType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^JSType type = var.setType (  ) ;^209^^^^^205^216^JSType type = var.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^JSType type = var .setType ( type )  ;^209^^^^^205^216^JSType type = var.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType bType = slotB.getType (  ) ;JSType type = var.getType (  ) ;^209^^^^^205^216^JSType type = var.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType aType = slotA.getType (  ) ;JSType type = var.getType (  ) ;^209^^^^^205^216^JSType type = var.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;JSType type = var.getType (  ) ;^209^^^^^205^216^JSType type = var.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^JSType flowType = getSlot ( var.getName (  )  )  .setType ( flowType )  ;^211^^^^^205^216^JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^209^^^^^205^216^JSType type = var.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( flowType == null || type.isUnknownType (  )  )  {^210^^^^^205^216^if  ( type == null || type.isUnknownType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^var .getType (  )  ;^212^^^^^205^216^var.setType ( flowType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( type == true || type.isUnknownType (  )  )  {^210^^^^^205^216^if  ( type == null || type.isUnknownType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^for  ( Iterator<Var> it = functionScope.getVars (  ) ; it.hasNext (  ) ; )  {^206^^^^^205^216^for  ( Iterator<Var> it = scope.getVars (  ) ; it.hasNext (  ) ; )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^for  ( Iterator<Var> it = scope.getVar (  ) ; it.hasNext (  ) ; )  {^206^^^^^205^216^for  ( Iterator<Var> it = scope.getVars (  ) ; it.hasNext (  ) ; )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^for  ( Iterator<Var> it = functionScope.getVar (  ) ; it.hasNext (  ) ; )  {^206^^^^^205^216^for  ( Iterator<Var> it = scope.getVars (  ) ; it.hasNext (  ) ; )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( type == true ) {^210^^^^^205^216^if  ( type == null || type.isUnknownType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^JSType flowType = getSlot ( var.getName (  )  )  .setType ( type )  ;^211^^^^^205^216^JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( flowType == null || type.differsFrom (  )  )  {^210^^^^^205^216^if  ( type == null || type.isUnknownType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( type == false || type.isUnknownType (  )  )  {^210^^^^^205^216^if  ( type == null || type.isUnknownType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^207^^^^^205^216^Var var = it.next (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( var .getType (  )   )  {^208^^^^^205^216^if  ( var.isTypeInferred (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^Var var = it .hasNext (  )  ;^207^^^^^205^216^Var var = it.next (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^JSType type = var .setType ( flowType )  ;^209^^^^^205^216^JSType type = var.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^for  ( Iterator<Var> it = scope.getVars (  ) ; it .next (  )  ; )  {^206^^^^^205^216^for  ( Iterator<Var> it = scope.getVars (  ) ; it.hasNext (  ) ; )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] completeScope [RETURN_TYPE] void   Scope scope [VARIABLES] LinkedFlowScope  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  JSType  flowType  type  Scope  functionScope  scope  Var  var  Iterator  it  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^for  ( parent = this;^230^^^^^228^235^for  ( current = this;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] optimize [RETURN_TYPE] LinkedFlowScope   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^for  ( current  =  for  ( current ;^230^^^^^228^235^for  ( current = this;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] optimize [RETURN_TYPE] LinkedFlowScope   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^current = linkedEquivalent.parent )  {}^233^^^^^228^235^current = current.parent )  {}^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] optimize [RETURN_TYPE] LinkedFlowScope   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^current = linkedEquivalent )  {}^233^^^^^228^235^current = current.parent )  {}^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] optimize [RETURN_TYPE] LinkedFlowScope   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^current = current.parent.parent )  {}^233^^^^^228^235^current = current.parent )  {}^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] optimize [RETURN_TYPE] LinkedFlowScope   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^current = current )  {}^233^^^^^228^235^current = current.parent )  {}^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] optimize [RETURN_TYPE] LinkedFlowScope   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^current =  null.parent )  {}^233^^^^^228^235^current = current.parent )  {}^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] optimize [RETURN_TYPE] LinkedFlowScope   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return joinedScopeB;^234^^^^^228^235^return current;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] optimize [RETURN_TYPE] LinkedFlowScope   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^return parent;^234^^^^^228^235^return current;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] optimize [RETURN_TYPE] LinkedFlowScope   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^LinkedFlowScope linkedB =  ( LinkedFlowScope )  b;LinkedFlowScope linkedA =  ( LinkedFlowScope )  a;^243^^^^^241^251^LinkedFlowScope linkedA =  ( LinkedFlowScope )  a;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P11_Insert_Donor_Statement]^LinkedFlowScope that =  ( LinkedFlowScope )  other;LinkedFlowScope linkedA =  ( LinkedFlowScope )  a;^243^^^^^241^251^LinkedFlowScope linkedA =  ( LinkedFlowScope )  a;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P12_Insert_Condition]^if  ( other instanceof LinkedFlowScope )  { LinkedFlowScope linkedA =  ( LinkedFlowScope )  a; }^243^^^^^241^251^LinkedFlowScope linkedA =  ( LinkedFlowScope )  a;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P11_Insert_Donor_Statement]^LinkedFlowScope linkedA =  ( LinkedFlowScope )  a;LinkedFlowScope linkedB =  ( LinkedFlowScope )  b;^244^^^^^241^251^LinkedFlowScope linkedB =  ( LinkedFlowScope )  b;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P11_Insert_Donor_Statement]^LinkedFlowScope that =  ( LinkedFlowScope )  other;LinkedFlowScope linkedB =  ( LinkedFlowScope )  b;^244^^^^^241^251^LinkedFlowScope linkedB =  ( LinkedFlowScope )  b;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P3_Replace_Literal]^linkedA.frozen = false;^245^^^^^241^251^linkedA.frozen = true;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P11_Insert_Donor_Statement]^linkedB.frozen = true;linkedA.frozen = true;^245^^^^^241^251^linkedA.frozen = true;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P11_Insert_Donor_Statement]^frozen = true;linkedA.frozen = true;^245^^^^^241^251^linkedA.frozen = true;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P3_Replace_Literal]^linkedB.frozen = false;^246^^^^^241^251^linkedB.frozen = true;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P11_Insert_Donor_Statement]^linkedA.frozen = true;linkedB.frozen = true;^246^^^^^241^251^linkedB.frozen = true;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P11_Insert_Donor_Statement]^frozen = true;linkedB.frozen = true;^246^^^^^241^251^linkedB.frozen = true;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P2_Replace_Operator]^if  ( linkedA.optimize (  )  != linkedB.optimize (  )  )  {^247^^^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P5_Replace_Variable]^if  ( joinedScopeB.optimize (  )  == linkedB.optimize (  )  )  {^247^^^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P5_Replace_Variable]^if  ( linkedA.optimize (  )  == linkedEquivalent.optimize (  )  )  {^247^^^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P5_Replace_Variable]^if  ( linkedB.optimize (  )  == linkedA.optimize (  )  )  {^247^^^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P7_Replace_Invocation]^if  ( linkedA.equals (  )  == linkedB.optimize (  )  )  {^247^^^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P7_Replace_Invocation]^if  ( linkedA .completeScope ( scope )   == linkedB^247^^^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P8_Replace_Mix]^if  ( parent.optimize (  )  == linkedB.optimize (  )  )  {^247^^^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P9_Replace_Statement]^if  ( this.optimize (  )  == that.optimize (  )  )  {^247^^^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P15_Unwrap_Block]^return linkedA.createChildFlowScope();^247^248^249^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  { return linkedA.createChildFlowScope (  ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P16_Remove_Block]^^247^248^249^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  { return linkedA.createChildFlowScope (  ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P13_Insert_Block]^if  (  ( this.optimize (  )  )  ==  ( that.optimize (  )  )  )  {     return true; }^247^^^^^241^251^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P5_Replace_Variable]^return linkedB.createChildFlowScope (  ) ;^248^^^^^241^251^return linkedA.createChildFlowScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P7_Replace_Invocation]^return linkedA.equals (  ) ;^248^^^^^241^251^return linkedA.createChildFlowScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P7_Replace_Invocation]^return linkedA .LinkedFlowScope ( cache , joinedScopeA )  ;^248^^^^^241^251^return linkedA.createChildFlowScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P8_Replace_Mix]^return linkedB.equals (  ) ;^248^^^^^241^251^return linkedA.createChildFlowScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P5_Replace_Variable]^return parent.createChildFlowScope (  ) ;^248^^^^^241^251^return linkedA.createChildFlowScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P14_Delete_Statement]^^248^^^^^241^251^return linkedA.createChildFlowScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P5_Replace_Variable]^return linkedEquivalent.createChildFlowScope (  ) ;^248^^^^^241^251^return linkedA.createChildFlowScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P5_Replace_Variable]^if  ( linkedA.optimize (  )  == joinedScopeB.optimize (  )  )  {^247^^^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P7_Replace_Invocation]^if  ( linkedA .completeScope ( functionScope )   == linkedB^247^^^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P8_Replace_Mix]^if  ( linkedA.optimize (  )  == linkedA.optimize (  )  )  {^247^^^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P8_Replace_Mix]^return parent.equals (  ) ;^248^^^^^241^251^return linkedA.createChildFlowScope (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P4_Replace_Constructor]^return return  new LinkedFlowScope ( new FlatFlowScopeCache ( scope )  )   ) ;^250^^^^^241^251^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P4_Replace_Constructor]^return new LinkedFlowScope ( new FlatFlowScopeCache (  linkedB )  ) ;^250^^^^^241^251^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P4_Replace_Constructor]^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA )  ) ;^250^^^^^241^251^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P5_Replace_Variable]^return new LinkedFlowScope ( new FlatFlowScopeCache ( parent, linkedB )  ) ;^250^^^^^241^251^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P5_Replace_Variable]^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedEquivalent )  ) ;^250^^^^^241^251^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P5_Replace_Variable]^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedB, linkedA )  ) ;^250^^^^^241^251^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P8_Replace_Mix]^return  new LinkedFlowScope ( new FlatFlowScopeCache ( scope )  )   ) ;^250^^^^^241^251^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P5_Replace_Variable]^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, joinedScopeB )  ) ;^250^^^^^241^251^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P8_Replace_Mix]^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, parent )  ) ;^250^^^^^241^251^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P4_Replace_Constructor]^return return  LinkedFlowScope (  new FlatFlowScopeCache ( this )   ) ;^250^^^^^241^251^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P5_Replace_Variable]^return new LinkedFlowScope ( new FlatFlowScopeCache ( joinedScopeB, linkedB )  ) ;^250^^^^^241^251^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Map  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  FlowScope  a  b  
[P2_Replace_Operator]^if  ( other  ^  LinkedFlowScope )  {^256^^^^^241^271^if  ( other instanceof LinkedFlowScope )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  ( this.optimize() == that.optimize() )  {^256^^^^^241^271^if  ( other instanceof LinkedFlowScope )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  ( this.getFunctionScope() != that.getFunctionScope() )  {^256^^^^^241^271^if  ( other instanceof LinkedFlowScope )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  ( cache == that.cache )  {^256^^^^^241^271^if  ( other instanceof LinkedFlowScope )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^com.google.javascript.jscomp.LinkedFlowScope that = ((com.google.javascript.jscomp.LinkedFlowScope) (other)); if ((this.optimize()) == (that.optimize())) {    return true;}; if ((this.getFunctionScope()) != (that.getFunctionScope())) {    return false;}; if ((cache) == (that.cache)) {    for (java.lang.String name : cache.dirtySymbols) {        if (diffSlots(getSlot(name), that.getSlot(name))) {            return false;        }    }    return true;}; java.util.Map<java.lang.String, com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType>> myFlowSlots = allFlowSlots(); java.util.Map<java.lang.String, com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType>> otherFlowSlots = that.allFlowSlots(); for (com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> slot : myFlowSlots.values()) {    if (diffSlots(slot, otherFlowSlots.get(slot.getName()))) {        return false;    }    otherFlowSlots.remove(slot.getName());}; for (com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> slot : otherFlowSlots.values()) {    if (diffSlots(slot, myFlowSlots.get(slot.getName()))) {        return false;    }}; return true;^256^257^258^259^260^241^271^if  ( other instanceof LinkedFlowScope )  { LinkedFlowScope that =  ( LinkedFlowScope )  other; if  ( this.optimize (  )  == that.optimize (  )  )  { return true; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^256^257^258^259^260^241^271^if  ( other instanceof LinkedFlowScope )  { LinkedFlowScope that =  ( LinkedFlowScope )  other; if  ( this.optimize (  )  == that.optimize (  )  )  { return true; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( this.optimize (  )  != that.optimize (  )  )  {^258^^^^^243^273^if  ( this.optimize (  )  == that.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( this.optimize (  )  == linkedEquivalent.optimize (  )  )  {^258^^^^^243^273^if  ( this.optimize (  )  == that.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( this.allFlowSlots (  )  == that.optimize (  )  )  {^258^^^^^243^273^if  ( this.optimize (  )  == that.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( this.equals (  )  == that.optimize (  )  )  {^258^^^^^243^273^if  ( this.optimize (  )  == that.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( this .completeScope ( functionScope )   == that^258^^^^^243^273^if  ( this.optimize (  )  == that.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^258^^^^^243^273^if  ( this.optimize (  )  == that.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^return true;^258^259^260^^^243^273^if  ( this.optimize (  )  == that.optimize (  )  )  { return true; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^258^259^260^^^243^273^if  ( this.optimize (  )  == that.optimize (  )  )  { return true; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  (  ( this.getFunctionScope (  )  )  !=  ( that.getFunctionScope (  )  )  )  {     return false; }^258^^^^^243^273^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  (  ( aType.isNoType (  )  )  ||  ( bType.isNoType (  )  )  )  {     return false; }^258^^^^^243^273^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  (  ( linkedA.optimize (  )  )  ==  ( linkedB.optimize (  )  )  )  {     return linkedA.createChildFlowScope (  ) ; }^258^^^^^243^273^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P3_Replace_Literal]^return false;^259^^^^^244^274^return true;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( this.getFunctionScope (  )  == that.getFunctionScope (  )  )  {^270^^^^^255^285^if  ( this.getFunctionScope (  )  != that.getFunctionScope (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( this.getFunctionScope (  )  != linkedA.getFunctionScope (  )  )  {^270^^^^^255^285^if  ( this.getFunctionScope (  )  != that.getFunctionScope (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( this.createChildFlowScope (  )  != that.getFunctionScope (  )  )  {^270^^^^^255^285^if  ( this.getFunctionScope (  )  != that.getFunctionScope (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( this.getSlot (  )  != that.getFunctionScope (  )  )  {^270^^^^^255^285^if  ( this.getFunctionScope (  )  != that.getFunctionScope (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( this .createChildFlowScope (  )   != that^270^^^^^255^285^if  ( this.getFunctionScope (  )  != that.getFunctionScope (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( this.getFunctionScope (  )  != linkedEquivalent.getFunctionScope (  )  )  {^270^^^^^255^285^if  ( this.getFunctionScope (  )  != that.getFunctionScope (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^return false;^270^271^272^^^255^285^if  ( this.getFunctionScope (  )  != that.getFunctionScope (  )  )  { return false; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^270^271^272^^^255^285^if  ( this.getFunctionScope (  )  != that.getFunctionScope (  )  )  { return false; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  (  ( aType.isNoType (  )  )  ||  ( bType.isNoType (  )  )  )  {     return false; }^270^^^^^255^285^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {     return false; }^270^^^^^255^285^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  (  ( this.optimize (  )  )  ==  ( that.optimize (  )  )  )  {     return true; }^270^^^^^255^285^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P3_Replace_Literal]^return true;^271^^^^^256^286^return false;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( cache < that.cache )  {^274^^^^^259^289^if  ( cache == that.cache )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( cache == parent.cache )  {^274^^^^^259^289^if  ( cache == that.cache )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( flattened == that.cache )  {^274^^^^^259^289^if  ( cache == that.cache )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( cache == flattened )  {^274^^^^^259^289^if  ( cache == that.cache )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( that.cache == cache )  {^274^^^^^259^289^if  ( cache == that.cache )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( diffSlots ( getSlot ( name ) , linkedA.getSlot ( name )  )  )  {^279^^^^^264^294^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( diffSlots ( getSlot ( name ) .getSlot ( name )  )  )  {^279^^^^^264^294^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( diffSlots ( getSlot ( that ) , name.getSlot ( name )  )  )  {^279^^^^^264^294^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( inferQualifiedSlot ( getSlot ( name ) , that.getSlot ( name )  )  )  {^279^^^^^264^294^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( diffSlots ( getSlot ( name ) , that.equals ( name )  )  )  {^279^^^^^264^294^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( diffSlots ( getSlot ( name ) , that.inferSlotType ( name )  )  )  {^279^^^^^264^294^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( diffSlots ( getSlot ( name ) , parent.getSlot ( name )  )  )  {^279^^^^^264^294^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^return false;^279^280^281^^^264^294^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  { return false; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^279^280^281^^^264^294^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  { return false; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  (  ( this.getFunctionScope (  )  )  !=  ( that.getFunctionScope (  )  )  )  {     return false; }^279^^^^^264^294^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {     return false; }^279^^^^^264^294^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  (  ( aType.isNoType (  )  )  ||  ( bType.isNoType (  )  )  )  {     return false; }^279^^^^^264^294^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( ! ( currentSlot.getName (  ) .equals ( result.getName (  )  )  )  )  {     return null; }^279^^^^^264^294^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( slot.getName (  ) .equals ( name )  )  {     return slot; }^279^^^^^264^294^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {     return false; }^279^^^^^264^294^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P3_Replace_Literal]^return true;^280^^^^^265^295^return false;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P3_Replace_Literal]^return false;^284^^^^^269^299^return true;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P1_Replace_Type]^for  ( char name : cache.dirtySymbols )  {^278^^^^^263^293^for  ( String name : cache.dirtySymbols )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( diffSlots ( getSlot ( name ) , linkedB.getSlot ( name )  )  )  {^279^^^^^264^294^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( inferQualifiedSlot ( getSlot ( name ) , linkedEquivalent.getSlot ( name )  )  )  {^279^^^^^264^294^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {     return false; }^279^^^^^264^294^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( diffSlots ( getSlot ( name ) , linkedB.inferSlotType ( name )  )  )  {^279^^^^^264^294^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( diffSlots ( getSlot ( name ) , linkedEquivalent.getSlot ( name )  )  )  {^279^^^^^264^294^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( diffSlots (  otherFlowSlots.get ( slot.getName (  )  )  )  )  {^291^^^^^276^306^if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( diffSlots ( slot.get ( slot.getName (  )  )  )  )  {^291^^^^^276^306^if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( diffSlots ( otherFlowSlots, slot.get ( slot.getName (  )  )  )  )  {^291^^^^^276^306^if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( inferQualifiedSlot ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {^291^^^^^276^306^if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( diffSlots ( slot, otherFlowSlots.put ( slot.getName (  )  )  )  )  {^291^^^^^276^306^if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( diffSlots ( slot, otherFlowSlots .get (  )  ( slot^291^^^^^276^306^if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {^291^^^^^276^306^if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^return false;^291^292^293^^^276^306^if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  { return false; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^291^292^293^^^276^306^if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  { return false; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {     return false; }^291^^^^^276^306^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( ! ( currentSlot.getName (  ) .equals ( result.getName (  )  )  )  )  {     return null; }^291^^^^^276^306^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {     return false; }^291^^^^^276^306^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P3_Replace_Literal]^return true;^292^^^^^277^307^return false;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( diffSlots (  myFlowSlots.get ( slot.getName (  )  )  )  )  {^297^^^^^282^312^if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( diffSlots ( slot.get ( slot.getName (  )  )  )  )  {^297^^^^^282^312^if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( diffSlots ( myFlowSlots, slot.get ( slot.getName (  )  )  )  )  {^297^^^^^282^312^if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( inferQualifiedSlot ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {^297^^^^^282^312^if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( diffSlots ( slot, myFlowSlots.put ( slot.getName (  )  )  )  )  {^297^^^^^282^312^if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( diffSlots ( slot, myFlowSlots .get (  )  ( slot^297^^^^^282^312^if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {^297^^^^^282^312^if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^return false;^297^298^299^^^282^312^if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  { return false; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^297^298^299^^^282^312^if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  { return false; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {     return false; }^297^^^^^282^312^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  (  ( aType.isNoType (  )  )  ||  ( bType.isNoType (  )  )  )  {     return false; }^297^^^^^282^312^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {     return false; }^297^^^^^282^312^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( ! ( currentSlot.getName (  ) .equals ( result.getName (  )  )  )  )  {     return null; }^297^^^^^282^312^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P3_Replace_Literal]^return true;^298^^^^^283^313^return false;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P3_Replace_Literal]^return false;^301^^^^^286^316^return true;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^LinkedFlowScope linkedB =  ( LinkedFlowScope )  b;LinkedFlowScope that =  ( LinkedFlowScope )  other;^257^^^^^242^272^LinkedFlowScope that =  ( LinkedFlowScope )  other;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^LinkedFlowScope linkedA =  ( LinkedFlowScope )  a;LinkedFlowScope that =  ( LinkedFlowScope )  other;^257^^^^^242^272^LinkedFlowScope that =  ( LinkedFlowScope )  other;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^Map<String, StaticSlot<JSType>> myFlowSlots = flowsFromBottom (  ) ;^287^^^^^272^302^Map<String, StaticSlot<JSType>> myFlowSlots = allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;Map<String, StaticSlot<JSType>> myFlowSlots = allFlowSlots (  ) ;^287^^^^^272^302^Map<String, StaticSlot<JSType>> myFlowSlots = allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;Map<String, StaticSlot<JSType>> myFlowSlots = allFlowSlots (  ) ;^287^^^^^272^302^Map<String, StaticSlot<JSType>> myFlowSlots = allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;Map<String, StaticSlot<JSType>> myFlowSlots = allFlowSlots (  ) ;^287^^^^^272^302^Map<String, StaticSlot<JSType>> myFlowSlots = allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;Map<String, StaticSlot<JSType>> myFlowSlots = allFlowSlots (  ) ;^287^^^^^272^302^Map<String, StaticSlot<JSType>> myFlowSlots = allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^Map<String, StaticSlot<JSType>> otherFlowSlots = linkedA.allFlowSlots (  ) ;^288^^^^^273^303^Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^Map<String, StaticSlot<JSType>> otherFlowSlots = that.equals (  ) ;^288^^^^^273^303^Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^Map<String, StaticSlot<JSType>> otherFlowSlots = linkedEquivalent.allFlowSlots (  ) ;^288^^^^^273^303^Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^288^^^^^273^303^Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^288^^^^^273^303^Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> myFlowSlots = allFlowSlots (  ) ;Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^288^^^^^273^303^Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^288^^^^^273^303^Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( this .completeScope ( scope )   == that^258^^^^^243^273^if  ( this.optimize (  )  == that.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( this.optimize (  )  == linkedA.optimize (  )  )  {^258^^^^^243^273^if  ( this.optimize (  )  == that.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( this.equals (  )  == parent.optimize (  )  )  {^258^^^^^243^273^if  ( this.optimize (  )  == that.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( this.getFunctionScope (  )  != linkedB.getFunctionScope (  )  )  {^270^^^^^255^285^if  ( this.getFunctionScope (  )  != that.getFunctionScope (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( inferQualifiedSlot ( getSlot ( name ) , linkedA.getSlot ( name )  )  )  {^279^^^^^264^294^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^287^^^^^272^302^Map<String, StaticSlot<JSType>> myFlowSlots = allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^Map<String, StaticSlot<JSType>> otherFlowSlots = linkedB.allFlowSlots (  ) ;^288^^^^^273^303^Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^288^^^^^273^303^Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^for  ( StaticSlot<JSType> slot : myFlowSlots.put (  )  )  {^290^^^^^275^305^for  ( StaticSlot<JSType> slot : myFlowSlots.values (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^290^291^292^293^^275^305^for  ( StaticSlot<JSType> slot : myFlowSlots.values (  )  )  { if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  { return false; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( diffSlots ( null, otherFlowSlots.get ( slot.getName (  )  )  )  )  {^291^^^^^276^306^if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( diffSlots ( slot, otherFlowSlots.get ( slot .getType (  )   )  )  )  {^291^^^^^276^306^if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( diffSlots ( slot, otherFlowSlots.get ( slot.getName (  )  )  )  )  {     return false; }^291^^^^^276^306^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^otherFlowSlots.put ( slot.getName (  )  ) ;^294^^^^^279^309^otherFlowSlots.remove ( slot.getName (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^otherFlowSlots .get (  )  ;^294^^^^^279^309^otherFlowSlots.remove ( slot.getName (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^otherFlowSlots.remove ( slot .getType (  )   ) ;^294^^^^^279^309^otherFlowSlots.remove ( slot.getName (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^294^^^^^279^309^otherFlowSlots.remove ( slot.getName (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^slots.put ( slot.getName (  ) , slot ) ;otherFlowSlots.remove ( slot.getName (  )  ) ;^294^^^^^279^309^otherFlowSlots.remove ( slot.getName (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P12_Insert_Condition]^if  ( !slots.containsKey ( slot.getName (  )  )  )  { otherFlowSlots.remove ( slot.getName (  )  ) ; }^294^^^^^279^309^otherFlowSlots.remove ( slot.getName (  )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^for  ( StaticSlot<JSType> slot : otherFlowSlots.put (  )  )  {^296^^^^^281^311^for  ( StaticSlot<JSType> slot : otherFlowSlots.values (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^for  ( StaticSlot<JSType> slot : otherFlowSlots .containsKey (  )   )  {^296^^^^^281^311^for  ( StaticSlot<JSType> slot : otherFlowSlots.values (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^296^297^298^299^^281^311^for  ( StaticSlot<JSType> slot : otherFlowSlots.values (  )  )  { if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  { return false; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {     return false; }^297^^^^^282^312^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( diffSlots ( 3, myFlowSlots.get ( slot.getName (  )  )  )  )  {^297^^^^^282^312^if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( this.optimize (  )  > that.optimize (  )  )  {^258^^^^^243^273^if  ( this.optimize (  )  == that.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( this.optimize (  )  == linkedB.optimize (  )  )  {^258^^^^^243^273^if  ( this.optimize (  )  == that.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( this .completeScope ( scope )   == linkedEquivalent^258^^^^^243^273^if  ( this.optimize (  )  == that.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( this.getFunctionScope (  )  != parent.getFunctionScope (  )  )  {^270^^^^^255^285^if  ( this.getFunctionScope (  )  != that.getFunctionScope (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( cache != that.cache )  {^274^^^^^259^289^if  ( cache == that.cache )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( cache == that )  {^274^^^^^259^289^if  ( cache == that.cache )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( diffSlots ( slot, myFlowSlots.get ( slot .getType (  )   )  )  )  {^297^^^^^282^312^if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^Map<String, StaticSlot<JSType>> otherFlowSlots = parent.allFlowSlots (  ) ;^288^^^^^273^303^Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( this.optimize (  )  == parent.optimize (  )  )  {^258^^^^^243^273^if  ( this.optimize (  )  == that.optimize (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( diffSlots ( getSlot ( name ) , linkedA.equals ( name )  )  )  {^279^^^^^264^294^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( diffSlots ( getSlot ( name ) , linkedA.inferSlotType ( name )  )  )  {^279^^^^^264^294^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^for  ( StaticSlot<JSType> slot : myFlowSlots .containsKey (  )   )  {^290^^^^^275^305^for  ( StaticSlot<JSType> slot : myFlowSlots.values (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^for  ( StaticSlot<JSType> slot : this.values (  )  )  {^296^^^^^281^311^for  ( StaticSlot<JSType> slot : otherFlowSlots.values (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P3_Replace_Literal]^return true;^303^^^^^288^318^return false;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slot  boolean  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  Object  other  String  name  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^boolean aIsNull = slotA == null && slotA.getType (  )  == null;^312^^^^^310^329^boolean aIsNull = slotA == null || slotA.getType (  )  == null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^boolean aIsNull = slotA != null || slotA.getType (  )  == null;^312^^^^^310^329^boolean aIsNull = slotA == null || slotA.getType (  )  == null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^boolean aIsNull = slotA == null || slotA .setType ( aType )   == null;^312^^^^^310^329^boolean aIsNull = slotA == null || slotA.getType (  )  == null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^boolean bIsNull = slotB == null || slotB.getType (  )  == null;boolean aIsNull = slotA == null || slotA.getType (  )  == null;^312^^^^^310^329^boolean aIsNull = slotA == null || slotA.getType (  )  == null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^312^313^^^^310^329^boolean aIsNull = slotA == null || slotA.getType (  )  == null; boolean bIsNull = slotB == null || slotB.getType (  )  == null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^boolean bIsNull = slotB == null && slotB.getType (  )  == null;^313^^^^^310^329^boolean bIsNull = slotB == null || slotB.getType (  )  == null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^boolean bIsNull = slotB != null || slotB.getType (  )  == null;^313^^^^^310^329^boolean bIsNull = slotB == null || slotB.getType (  )  == null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^boolean bIsNull = slotB == null || slotB .setType ( aType )   == null;^313^^^^^310^329^boolean bIsNull = slotB == null || slotB.getType (  )  == null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^boolean aIsNull = slotA == null || slotA.getType (  )  == null;boolean bIsNull = slotB == null || slotB.getType (  )  == null;^313^^^^^310^329^boolean bIsNull = slotB == null || slotB.getType (  )  == null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^boolean bIsNull = null == null || slotB.getType (  )  == null;^313^^^^^310^329^boolean bIsNull = slotB == null || slotB.getType (  )  == null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^313^^^^^310^329^boolean bIsNull = slotB == null || slotB.getType (  )  == null;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( aIsNull || bIsNull )  {^314^^^^^310^329^if  ( aIsNull && bIsNull )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( frozen && bIsNull )  {^314^^^^^310^329^if  ( aIsNull && bIsNull )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( bIsNull && aIsNull )  {^314^^^^^310^329^if  ( aIsNull && bIsNull )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  ( aIsNull ) {^314^^^^^310^329^if  ( aIsNull && bIsNull )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  (  bIsNull )  {^314^^^^^310^329^if  ( aIsNull && bIsNull )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  ( aIsNull ^ bIsNull )  {^314^^^^^310^329^if  ( aIsNull && bIsNull )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( aIsNull && frozen )  {^314^^^^^310^329^if  ( aIsNull && bIsNull )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^return false;^314^315^316^317^318^310^329^if  ( aIsNull && bIsNull )  { return false; } else if  ( aIsNull ^ bIsNull )  { return true; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^314^315^316^317^318^310^329^if  ( aIsNull && bIsNull )  { return false; } else if  ( aIsNull ^ bIsNull )  { return true; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( result == null )  {     result = currentSlot; }else     if  ( ! ( currentSlot.getName (  ) .equals ( result.getName (  )  )  )  )  {         return null;     }^314^^^^^310^329^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^} else if  ( aIsNull & bIsNull )  {^316^^^^^310^329^} else if  ( aIsNull ^ bIsNull )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^} else if  ( frozen ^ bIsNull )  {^316^^^^^310^329^} else if  ( aIsNull ^ bIsNull )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^} else if  ( aIsNull ^ frozen )  {^316^^^^^310^329^} else if  ( aIsNull ^ bIsNull )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^} else if  ( bIsNull ^ aIsNull )  {^316^^^^^310^329^} else if  ( aIsNull ^ bIsNull )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^} else {^316^^^^^310^329^} else if  ( aIsNull ^ bIsNull )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^return true;^316^317^318^^^310^329^} else if  ( aIsNull ^ bIsNull )  { return true; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^316^317^318^^^310^329^} else if  ( aIsNull ^ bIsNull )  { return true; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P3_Replace_Literal]^return false;^317^^^^^310^329^return true;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P3_Replace_Literal]^return true;^315^^^^^310^329^return false;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType bType = slotB.getType (  ) ;JSType aType = slotA.getType (  ) ;^321^^^^^310^329^JSType aType = slotA.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType type = var.getType (  ) ;JSType aType = slotA.getType (  ) ;^321^^^^^310^329^JSType aType = slotA.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;JSType aType = slotA.getType (  ) ;^321^^^^^310^329^JSType aType = slotA.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;JSType aType = slotA.getType (  ) ;^321^^^^^310^329^JSType aType = slotA.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^JSType aType = slotA .setType ( aType )  ;^321^^^^^310^329^JSType aType = slotA.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^321^^^^^310^329^JSType aType = slotA.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^JSType bType = 4.getType (  ) ;^322^^^^^310^329^JSType bType = slotB.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType type = var.getType (  ) ;JSType bType = slotB.getType (  ) ;^322^^^^^310^329^JSType bType = slotB.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType aType = slotA.getType (  ) ;JSType bType = slotB.getType (  ) ;^322^^^^^310^329^JSType bType = slotB.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;JSType bType = slotB.getType (  ) ;^322^^^^^310^329^JSType bType = slotB.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^JSType flowType = getSlot ( var.getName (  )  ) .getType (  ) ;JSType bType = slotB.getType (  ) ;^322^^^^^310^329^JSType bType = slotB.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^JSType bType = slotB .setType ( aType )  ;^322^^^^^310^329^JSType bType = slotB.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^322^^^^^310^329^JSType bType = slotB.getType (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P2_Replace_Operator]^if  ( aType.isNoType (  )  && bType.isNoType (  )  )  {^323^^^^^310^329^if  ( aType.isNoType (  )  || bType.isNoType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( bType.isNoType (  )  || aType.isNoType (  )  )  {^323^^^^^310^329^if  ( aType.isNoType (  )  || bType.isNoType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  ( aType.isNoType (  )  ) {^323^^^^^310^329^if  ( aType.isNoType (  )  || bType.isNoType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P6_Replace_Expression]^if  (  bType.isNoType (  )  )  {^323^^^^^310^329^if  ( aType.isNoType (  )  || bType.isNoType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( aType.differsFrom (  )  || bType.isNoType (  )  )  {^323^^^^^310^329^if  ( aType.isNoType (  )  || bType.isNoType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( aType .isUnknownType (  )   || bType^323^^^^^310^329^if  ( aType.isNoType (  )  || bType.isNoType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( aType.differsFrom (  )  ) {^323^^^^^310^329^if  ( aType.isNoType (  )  || bType.isNoType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^return false;^323^324^325^^^310^329^if  ( aType.isNoType (  )  || bType.isNoType (  )  )  { return false; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^323^324^325^^^310^329^if  ( aType.isNoType (  )  || bType.isNoType (  )  )  { return false; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  (  ( this.getFunctionScope (  )  )  !=  ( that.getFunctionScope (  )  )  )  {     return false; }^323^^^^^310^329^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( diffSlots ( getSlot ( name ) , that.getSlot ( name )  )  )  {     return false; }^323^^^^^310^329^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( diffSlots ( slot, myFlowSlots.get ( slot.getName (  )  )  )  )  {     return false; }^323^^^^^310^329^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  (  ( this.optimize (  )  )  ==  ( that.optimize (  )  )  )  {     return true; }^323^^^^^310^329^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P3_Replace_Literal]^return true;^324^^^^^310^329^return false;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( bType.isNoType (  )  || bType.isNoType (  )  )  {^323^^^^^310^329^if  ( aType.isNoType (  )  || bType.isNoType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( aType.isNoType (  )  || aType.isNoType (  )  )  {^323^^^^^310^329^if  ( aType.isNoType (  )  || bType.isNoType (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return bType.differsFrom ( aType ) ;^328^^^^^310^329^return aType.differsFrom ( bType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^return aType .isNoType (  )  ;^328^^^^^310^329^return aType.differsFrom ( bType ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^328^329^^^^310^329^return aType.differsFrom ( bType ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] diffSlots [RETURN_TYPE] boolean   JSType> slotA JSType> slotB [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  StaticSlot  slotA  slotB  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  JSType  aType  bType  Scope  functionScope  scope  Map  myFlowSlots  otherFlowSlots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> slotB = slotsB.get ( name ) ;Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;^350^^^^^349^365^Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> slotA = slotsA.get ( name ) ;Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;^350^^^^^349^365^Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;^350^^^^^349^365^Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> otherFlowSlots = that.allFlowSlots (  ) ;Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;^350^^^^^349^365^Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> myFlowSlots = allFlowSlots (  ) ;Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;^350^^^^^349^365^Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;^350^^^^^349^365^Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^350^351^^^^349^365^Map<String, StaticSlot<JSType>> slots = Maps.newHashMap (  ) ; for  ( LinkedFlowSlot slot = lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( !slots.containsKey ( parent.getName (  )  )  )  {^353^^^^^349^365^if  ( !slots.containsKey ( slot.getName (  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( !slots.put ( slot.getName (  )  )  )  {^353^^^^^349^365^if  ( !slots.containsKey ( slot.getName (  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( !slots.containsKey ( slot.equals (  )  )  )  {^353^^^^^349^365^if  ( !slots.containsKey ( slot.getName (  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( !slots.containsKey ( slot .getType (  )   )  )  {^353^^^^^349^365^if  ( !slots.containsKey ( slot.getName (  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( !slots.containsKey ( key )  )  {^353^^^^^349^365^if  ( !slots.containsKey ( slot.getName (  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^slots.put(slot.getName(), slot);^353^354^355^^^349^365^if  ( !slots.containsKey ( slot.getName (  )  )  )  { slots.put ( slot.getName (  ) , slot ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^353^354^355^^^349^365^if  ( !slots.containsKey ( slot.getName (  )  )  )  { slots.put ( slot.getName (  ) , slot ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( ! ( slots.containsKey ( key )  )  )  {     slots.put ( key, get ( key )  ) ; }^353^^^^^349^365^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^slots.put ( parent.getName (  ) , slot ) ;^354^^^^^349^365^slots.put ( slot.getName (  ) , slot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^slots.put ( slot.getName (  )  ) ;^354^^^^^349^365^slots.put ( slot.getName (  ) , slot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^slots.put ( slot.equals (  ) , slot ) ;^354^^^^^349^365^slots.put ( slot.getName (  ) , slot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^slots .put ( currentSlot )  ;^354^^^^^349^365^slots.put ( slot.getName (  ) , slot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^354^^^^^349^365^slots.put ( slot.getName (  ) , slot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^symbols.put ( name, slotB ) ;slots.put ( slot.getName (  ) , slot ) ;^354^^^^^349^365^slots.put ( slot.getName (  ) , slot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^otherFlowSlots.remove ( slot.getName (  )  ) ;slots.put ( slot.getName (  ) , slot ) ;^354^^^^^349^365^slots.put ( slot.getName (  ) , slot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P12_Insert_Condition]^if  ( !slots.containsKey ( slot.getName (  )  )  )  { slots.put ( slot.getName (  ) , slot ) ; }^354^^^^^349^365^slots.put ( slot.getName (  ) , slot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^slots.put ( parent.equals (  ) , slot ) ;^354^^^^^349^365^slots.put ( slot.getName (  ) , slot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^for  ( LinkedFlowSlot parent = lastSlot;^351^^^^^349^365^for  ( LinkedFlowSlot slot = lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^for  ( LinkedFlowSlot slot = parent;^351^^^^^349^365^for  ( LinkedFlowSlot slot = lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^for  ( LinkedFlowSlot lastSlot = slot;^351^^^^^349^365^for  ( LinkedFlowSlot slot = lastSlot;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( !slots .containsKey (  )   )  {^353^^^^^349^365^if  ( !slots.containsKey ( slot.getName (  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( !slots.containsKey ( parent.equals (  )  )  )  {^353^^^^^349^365^if  ( !slots.containsKey ( slot.getName (  )  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^slots.put ( parent .getType (  )  , slot ) ;^354^^^^^349^365^slots.put ( slot.getName (  ) , slot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^slots.put ( slot .getType (  )  , slot ) ;^354^^^^^349^365^slots.put ( slot.getName (  ) , slot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^slot != null; parent = slot.parent )  {^352^^^^^349^365^slot != null; slot = slot.parent )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^slot != null; slot = parent )  {^352^^^^^349^365^slot != null; slot = slot.parent )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^slot != null; slot.parent = slot )  {^352^^^^^349^365^slot != null; slot = slot.parent )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^slot !=  null; parent^352^^^^^349^365^slot != null; slot = slot.parent )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^slots .put ( lastSlot )  ;^354^^^^^349^365^slots.put ( slot.getName (  ) , slot ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( !slots.put ( key )  )  {^359^^^^^349^365^if  ( !slots.containsKey ( key )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( symbols.containsKey ( name )  )  {^359^^^^^349^365^if  ( !slots.containsKey ( key )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( !slots.containsKey ( slot.getName (  )  )  )  {^359^^^^^349^365^if  ( !slots.containsKey ( key )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^slots.put(key, cache.symbols.get(key));^359^360^361^^^349^365^if  ( !slots.containsKey ( key )  )  { slots.put ( key, cache.symbols.get ( key )  ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^359^360^361^^^349^365^if  ( !slots.containsKey ( key )  )  { slots.put ( key, cache.symbols.get ( key )  ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P13_Insert_Block]^if  ( ! ( slots.containsKey ( slot.getName (  )  )  )  )  {     slots.put ( slot.getName (  ) , slot ) ; }^359^^^^^349^365^[Delete]^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^slots.put ( key, flattened.symbols.get ( key )  ) ;^360^^^^^349^365^slots.put ( key, cache.symbols.get ( key )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^slots.put (  cache.symbols.get ( key )  ) ;^360^^^^^349^365^slots.put ( key, cache.symbols.get ( key )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^slots.put ( key.get ( key )  ) ;^360^^^^^349^365^slots.put ( key, cache.symbols.get ( key )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^slots.put ( key.symbols.get ( key )  ) ;^360^^^^^349^365^slots.put ( key, cache.symbols.get ( key )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^slots.put ( cache.symbols, key.get ( key )  ) ;^360^^^^^349^365^slots.put ( key, cache.symbols.get ( key )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^slots.put ( key, cache.symbols.symbols.get ( key )  ) ;^360^^^^^349^365^slots.put ( key, cache.symbols.get ( key )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^slots .put ( slot )  ;^360^^^^^349^365^slots.put ( key, cache.symbols.get ( key )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^slots.put ( key, cache.symbols.put ( key )  ) ;^360^^^^^349^365^slots.put ( key, cache.symbols.get ( key )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^slots.put ( key, cache.symbols .put ( currentSlot )   ) ;^360^^^^^349^365^slots.put ( key, cache.symbols.get ( key )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^360^^^^^349^365^slots.put ( key, cache.symbols.get ( key )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^slots.put ( cache, key.symbols.get ( key )  ) ;^360^^^^^349^365^slots.put ( key, cache.symbols.get ( key )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P1_Replace_Type]^for  ( char key : cache.symbols.keySet (  )  )  {^358^^^^^349^365^for  ( String key : cache.symbols.keySet (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^for  ( String key : flattened.symbols.keySet (  )  )  {^358^^^^^349^365^for  ( String key : cache.symbols.keySet (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^for  ( String key : cache.keySet (  )  )  {^358^^^^^349^365^for  ( String key : cache.symbols.keySet (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^for  ( String key : cache.symbols.symbols.keySet (  )  )  {^358^^^^^349^365^for  ( String key : cache.symbols.keySet (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^for  ( String key : cache.symbols.get (  )  )  {^358^^^^^349^365^for  ( String key : cache.symbols.keySet (  )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^358^359^360^361^^349^365^for  ( String key : cache.symbols.keySet (  )  )  { if  ( !slots.containsKey ( key )  )  { slots.put ( key, cache.symbols.get ( key )  ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^if  ( !slots .containsKey (  )   )  {^359^^^^^349^365^if  ( !slots.containsKey ( key )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^slots.put ( key, cache.get ( key )  ) ;^360^^^^^349^365^slots.put ( key, cache.symbols.get ( key )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^slots.put ( key, this.get ( key )  ) ;^360^^^^^349^365^slots.put ( key, cache.symbols.get ( key )  ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] allFlowSlots [RETURN_TYPE] Map   [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  key  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( 4.containsKey ( name )  )  {^491^^^^^490^496^if  ( symbols.containsKey ( name )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^if  ( name.containsKey ( symbols )  )  {^491^^^^^490^496^if  ( symbols.containsKey ( name )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^if  ( symbols.put ( name )  )  {^491^^^^^490^496^if  ( symbols.containsKey ( name )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( !slots.containsKey ( key )  )  {^491^^^^^490^496^if  ( symbols.containsKey ( name )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P9_Replace_Statement]^if  ( cache.dirtySymbols.contains ( name )  )  {^491^^^^^490^496^if  ( symbols.containsKey ( name )  )  {^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P15_Unwrap_Block]^return symbols.get(name);^491^492^493^494^495^490^496^if  ( symbols.containsKey ( name )  )  { return symbols.get ( name ) ; } else { return functionScope.getSlot ( name ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P16_Remove_Block]^^491^492^493^494^495^490^496^if  ( symbols.containsKey ( name )  )  { return symbols.get ( name ) ; } else { return functionScope.getSlot ( name ) ; }^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return scope.getSlot ( name ) ;^494^^^^^490^496^return functionScope.getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return name.getSlot ( functionScope ) ;^494^^^^^490^496^return functionScope.getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^return functionScope.getVar ( name ) ;^494^^^^^490^496^return functionScope.getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P8_Replace_Mix]^return scope.getVar ( name ) ;^494^^^^^490^496^return functionScope.getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P12_Insert_Condition]^if  ( functionScope.isLocal (  )  )  { return functionScope.getSlot ( name ) ; }^494^^^^^490^496^return functionScope.getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^494^^^^^490^496^return functionScope.getSlot ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return name.get ( symbols ) ;^492^^^^^490^496^return symbols.get ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^return symbols.put ( name ) ;^492^^^^^490^496^return symbols.get ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^return symbols .put ( currentSlot )  ;^492^^^^^490^496^return symbols.get ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P5_Replace_Variable]^return 2.get ( name ) ;^492^^^^^490^496^return symbols.get ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P14_Delete_Statement]^^492^^^^^490^496^return symbols.get ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P7_Replace_Invocation]^return symbols .put ( slot )  ;^492^^^^^490^496^return symbols.get ( name ) ;^[CLASS] LinkedFlowScope FlowScopeJoinOp LinkedFlowSlot FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  current  currentScope  directParent  joinedScopeA  joinedScopeB  linkedA  linkedB  linkedEquivalent  parent  that  LinkedFlowSlot  currentSlot  lastSlot  parent  slot  boolean  aIsNull  bIsNull  frozen  Set  dirtySymbols  symbolNames  Scope  functionScope  scope  String  name  Map  myFlowSlots  otherFlowSlots  slots  slotsA  slotsB  symbols  int  MAX_DEPTH  depth  FlatFlowScopeCache  cache  flattened  
[P11_Insert_Donor_Statement]^LinkedFlowScope linkedB =  ( LinkedFlowScope )  b;LinkedFlowScope linkedA =  ( LinkedFlowScope )  a;^243^^^^^241^251^LinkedFlowScope linkedA =  ( LinkedFlowScope )  a;^[CLASS] FlowScopeJoinOp  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P11_Insert_Donor_Statement]^LinkedFlowScope linkedA =  ( LinkedFlowScope )  a;LinkedFlowScope linkedB =  ( LinkedFlowScope )  b;^244^^^^^241^251^LinkedFlowScope linkedB =  ( LinkedFlowScope )  b;^[CLASS] FlowScopeJoinOp  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P3_Replace_Literal]^linkedA.frozen = false;^245^^^^^241^251^linkedA.frozen = true;^[CLASS] FlowScopeJoinOp  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P11_Insert_Donor_Statement]^linkedB.frozen = true;linkedA.frozen = true;^245^^^^^241^251^linkedA.frozen = true;^[CLASS] FlowScopeJoinOp  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P3_Replace_Literal]^linkedB.frozen = false;^246^^^^^241^251^linkedB.frozen = true;^[CLASS] FlowScopeJoinOp  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P11_Insert_Donor_Statement]^linkedA.frozen = true;linkedB.frozen = true;^246^^^^^241^251^linkedB.frozen = true;^[CLASS] FlowScopeJoinOp  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P2_Replace_Operator]^if  ( linkedA.optimize (  )  != linkedB.optimize (  )  )  {^247^^^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^[CLASS] FlowScopeJoinOp  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P5_Replace_Variable]^if  ( linkedB.optimize (  )  == linkedA.optimize (  )  )  {^247^^^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^[CLASS] FlowScopeJoinOp  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P7_Replace_Invocation]^if  ( linkedA .createChildFlowScope (  )   == linkedB^247^^^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^[CLASS] FlowScopeJoinOp  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P15_Unwrap_Block]^return linkedA.createChildFlowScope();^247^248^249^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  { return linkedA.createChildFlowScope (  ) ; }^[CLASS] FlowScopeJoinOp  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P16_Remove_Block]^^247^248^249^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  { return linkedA.createChildFlowScope (  ) ; }^[CLASS] FlowScopeJoinOp  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P5_Replace_Variable]^return linkedB.createChildFlowScope (  ) ;^248^^^^^241^251^return linkedA.createChildFlowScope (  ) ;^[CLASS] FlowScopeJoinOp  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P14_Delete_Statement]^^248^^^^^241^251^return linkedA.createChildFlowScope (  ) ;^[CLASS] FlowScopeJoinOp  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P8_Replace_Mix]^if  ( linkedB.optimize (  )  == linkedB.optimize (  )  )  {^247^^^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^[CLASS] FlowScopeJoinOp  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P5_Replace_Variable]^if  ( linkedA.optimize (  )  == linkedA.optimize (  )  )  {^247^^^^^241^251^if  ( linkedA.optimize (  )  == linkedB.optimize (  )  )  {^[CLASS] FlowScopeJoinOp  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P4_Replace_Constructor]^return new LinkedFlowScope ( new FlatFlowScopeCache (  linkedB )  ) ;^250^^^^^241^251^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  ) ;^[CLASS] FlowScopeJoinOp  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P4_Replace_Constructor]^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA )  ) ;^250^^^^^241^251^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  ) ;^[CLASS] FlowScopeJoinOp  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P5_Replace_Variable]^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedB, linkedA )  ) ;^250^^^^^241^251^return new LinkedFlowScope ( new FlatFlowScopeCache ( linkedA, linkedB )  ) ;^[CLASS] FlowScopeJoinOp  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P8_Replace_Mix]^LinkedFlowSlot parent;^371^^^^^366^376^final LinkedFlowSlot parent;^[CLASS] LinkedFlowSlot  [METHOD] apply [RETURN_TYPE] FlowScope   FlowScope a FlowScope b [VARIABLES] LinkedFlowScope  linkedA  linkedB  boolean  FlowScope  a  b  
[P3_Replace_Literal]^super ( name, type, false ) ;^374^^^^^373^376^super ( name, type, true ) ;^[CLASS] LinkedFlowSlot  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$LinkedFlowSlot)   String name JSType type LinkedFlowSlot parent [VARIABLES] LinkedFlowSlot  parent  String  name  JSType  type  boolean  
[P5_Replace_Variable]^super (  type, true ) ;^374^^^^^373^376^super ( name, type, true ) ;^[CLASS] LinkedFlowSlot  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$LinkedFlowSlot)   String name JSType type LinkedFlowSlot parent [VARIABLES] LinkedFlowSlot  parent  String  name  JSType  type  boolean  
[P5_Replace_Variable]^super ( name,  true ) ;^374^^^^^373^376^super ( name, type, true ) ;^[CLASS] LinkedFlowSlot  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$LinkedFlowSlot)   String name JSType type LinkedFlowSlot parent [VARIABLES] LinkedFlowSlot  parent  String  name  JSType  type  boolean  
[P5_Replace_Variable]^super ( type, name, true ) ;^374^^^^^373^376^super ( name, type, true ) ;^[CLASS] LinkedFlowSlot  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$LinkedFlowSlot)   String name JSType type LinkedFlowSlot parent [VARIABLES] LinkedFlowSlot  parent  String  name  JSType  type  boolean  
[P14_Delete_Statement]^^374^375^^^^373^376^super ( name, type, true ) ; this.parent = parent;^[CLASS] LinkedFlowSlot  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$LinkedFlowSlot)   String name JSType type LinkedFlowSlot parent [VARIABLES] LinkedFlowSlot  parent  String  name  JSType  type  boolean  
[P8_Replace_Mix]^this.parent =  null;^375^^^^^373^376^this.parent = parent;^[CLASS] LinkedFlowSlot  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$LinkedFlowSlot)   String name JSType type LinkedFlowSlot parent [VARIABLES] LinkedFlowSlot  parent  String  name  JSType  type  boolean  
[P8_Replace_Mix]^private Map<String, StaticSlot<JSType>> symbols  = null ;^392^^^^^387^397^private Map<String, StaticSlot<JSType>> symbols = Maps.newHashMap (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$LinkedFlowSlot)   String name JSType type LinkedFlowSlot parent [VARIABLES] LinkedFlowSlot  parent  String  name  JSType  type  boolean  
[P8_Replace_Mix]^final Set<String> dirtySymbols  = null ;^402^^^^^397^407^final Set<String> dirtySymbols = Sets.newHashSet (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope$LinkedFlowSlot)   String name JSType type LinkedFlowSlot parent [VARIABLES] LinkedFlowSlot  parent  String  name  JSType  type  boolean  
[P8_Replace_Mix]^this.functionScope =  null;^406^^^^^405^409^this.functionScope = functionScope;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] Scope)   Scope functionScope [VARIABLES] LinkedFlowScope  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  
[P11_Insert_Donor_Statement]^functionScope = cache.functionScope;this.functionScope = functionScope;^406^^^^^405^409^this.functionScope = functionScope;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] Scope)   Scope functionScope [VARIABLES] LinkedFlowScope  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  
[P8_Replace_Mix]^symbols  = null ;^407^^^^^405^409^symbols = ImmutableMap.of (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] Scope)   Scope functionScope [VARIABLES] LinkedFlowScope  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  
[P11_Insert_Donor_Statement]^symbols = directParent.allFlowSlots (  ) ;symbols = ImmutableMap.of (  ) ;^407^^^^^405^409^symbols = ImmutableMap.of (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] Scope)   Scope functionScope [VARIABLES] LinkedFlowScope  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  
[P14_Delete_Statement]^^407^408^^^^405^409^symbols = ImmutableMap.of (  ) ; linkedEquivalent = null;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] Scope)   Scope functionScope [VARIABLES] LinkedFlowScope  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  
[P8_Replace_Mix]^linkedEquivalent = this;^408^^^^^405^409^linkedEquivalent = null;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] Scope)   Scope functionScope [VARIABLES] LinkedFlowScope  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  
[P11_Insert_Donor_Statement]^linkedEquivalent = directParent;linkedEquivalent = null;^408^^^^^405^409^linkedEquivalent = null;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] Scope)   Scope functionScope [VARIABLES] LinkedFlowScope  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  
[P5_Replace_Variable]^FlatFlowScopeCache cache = linkedEquivalent.cache;^413^^^^^412^418^FlatFlowScopeCache cache = directParent.cache;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  FlatFlowScopeCache  cache  
[P5_Replace_Variable]^FlatFlowScopeCache cache = directParent.cache.cache;^413^^^^^412^418^FlatFlowScopeCache cache = directParent.cache;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  FlatFlowScopeCache  cache  
[P5_Replace_Variable]^FlatFlowScopeCache cache = directParent;^413^^^^^412^418^FlatFlowScopeCache cache = directParent.cache;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  FlatFlowScopeCache  cache  
[P5_Replace_Variable]^functionScope = functionScope;^415^^^^^412^418^functionScope = cache.functionScope;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  FlatFlowScopeCache  cache  
[P5_Replace_Variable]^functionScope = cache.functionScope.functionScope;^415^^^^^412^418^functionScope = cache.functionScope;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  FlatFlowScopeCache  cache  
[P5_Replace_Variable]^functionScope = cache;^415^^^^^412^418^functionScope = cache.functionScope;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  FlatFlowScopeCache  cache  
[P8_Replace_Mix]^functionScope =  null.functionScope;^415^^^^^412^418^functionScope = cache.functionScope;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  FlatFlowScopeCache  cache  
[P11_Insert_Donor_Statement]^this.functionScope = functionScope;functionScope = cache.functionScope;^415^^^^^412^418^functionScope = cache.functionScope;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  FlatFlowScopeCache  cache  
[P5_Replace_Variable]^symbols = linkedEquivalent.allFlowSlots (  ) ;^416^^^^^412^418^symbols = directParent.allFlowSlots (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  FlatFlowScopeCache  cache  
[P7_Replace_Invocation]^symbols = directParent .flowsFromBottom (  )  ;^416^^^^^412^418^symbols = directParent.allFlowSlots (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  FlatFlowScopeCache  cache  
[P11_Insert_Donor_Statement]^symbols = ImmutableMap.of (  ) ;symbols = directParent.allFlowSlots (  ) ;^416^^^^^412^418^symbols = directParent.allFlowSlots (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  FlatFlowScopeCache  cache  
[P14_Delete_Statement]^^416^^^^^412^418^symbols = directParent.allFlowSlots (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  FlatFlowScopeCache  cache  
[P5_Replace_Variable]^linkedEquivalent = linkedEquivalent;^417^^^^^412^418^linkedEquivalent = directParent;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  FlatFlowScopeCache  cache  
[P8_Replace_Mix]^linkedEquivalent =  null;^417^^^^^412^418^linkedEquivalent = directParent;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  FlatFlowScopeCache  cache  
[P11_Insert_Donor_Statement]^linkedEquivalent = null;linkedEquivalent = directParent;^417^^^^^412^418^linkedEquivalent = directParent;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope directParent [VARIABLES] LinkedFlowScope  directParent  linkedEquivalent  Set  dirtySymbols  boolean  Scope  functionScope  Map  symbols  FlatFlowScopeCache  cache  
[P8_Replace_Mix]^linkedEquivalent = false;^423^^^^^408^438^linkedEquivalent = null;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^linkedEquivalent = directParent;linkedEquivalent = null;^423^^^^^408^438^linkedEquivalent = null;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^functionScope = linkedEquivalent.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^functionScope = joinedScopeA.flowsFromBottom (  )  ? linkedEquivalent.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^functionScope = joinedScopeB.flowsFromBottom (  )  ? joinedScopeA.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P6_Replace_Expression]^functionScope  =  joinedScopeA.getFunctionScope (  ) ;^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P6_Replace_Expression]^functionScope  =  joinedScopeB.getFunctionScope (  )  ;^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^functionScope = joinedScopeA .allFlowSlots (  )   ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB .allFlowSlots (  )   : joinedScopeA^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^functionScope =  linkedEquivalent.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : linkedEquivalent.getFunctionScope (  ) ;^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^427^428^^^^412^442^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^428^^^^^413^443^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^428^^^^^413^443^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^functionScope = joinedScopeA.flowsFromBottom (  )  ? joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^428^^^^^413^443^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^428^^^^^413^443^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^joinedScopeB.getFunctionScope (  )  : linkedEquivalent.getFunctionScope (  ) ;^428^^^^^413^443^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^joinedScopeB .allFlowSlots (  )   : joinedScopeA^428^^^^^413^443^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^Map<String, StaticSlot<JSType>> slotsA = linkedEquivalent.allFlowSlots (  ) ;^430^^^^^415^445^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^430^^^^^415^445^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA .flowsFromBottom (  )  ;^430^^^^^415^445^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^430^431^^^^415^445^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ; Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^Map<String, StaticSlot<JSType>> slotsB = linkedEquivalent .flowsFromBottom (  )  ;^431^^^^^416^446^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^Map<String, StaticSlot<JSType>> slotsA = joinedScopeA.allFlowSlots (  ) ;Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^431^^^^^416^446^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^Map<String, StaticSlot<JSType>> slotsB = linkedEquivalent.allFlowSlots (  ) ;^431^^^^^416^446^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^431^^^^^416^446^Map<String, StaticSlot<JSType>> slotsB = joinedScopeB.allFlowSlots (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^symbols =  null;^433^^^^^418^448^symbols = slotsA;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^Set<String> symbolNames = Sets.newHashSet ( symbols .get ( name )   ) ;^446^^^^^431^461^Set<String> symbolNames = Sets.newHashSet ( symbols.keySet (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^446^^^^^431^461^Set<String> symbolNames = Sets.newHashSet ( symbols.keySet (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^symbolNames.addAll ( slotsB.keySet (  )  ) ;Set<String> symbolNames = Sets.newHashSet ( symbols.keySet (  )  ) ;^446^^^^^431^461^Set<String> symbolNames = Sets.newHashSet ( symbols.keySet (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^446^447^^^^431^461^Set<String> symbolNames = Sets.newHashSet ( symbols.keySet (  )  ) ; symbolNames.addAll ( slotsB.keySet (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^symbolNames.addAll ( slotsB.get (  )  ) ;^447^^^^^432^462^symbolNames.addAll ( slotsB.keySet (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^symbolNames.addAll ( slotsB .get ( name )   ) ;^447^^^^^432^462^symbolNames.addAll ( slotsB.keySet (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^symbolNames.addAll ( 3.keySet (  )  ) ;^447^^^^^432^462^symbolNames.addAll ( slotsB.keySet (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^447^^^^^432^462^symbolNames.addAll ( slotsB.keySet (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^Set<String> symbolNames = Sets.newHashSet ( symbols.keySet (  )  ) ;symbolNames.addAll ( slotsB.keySet (  )  ) ;^447^^^^^432^462^symbolNames.addAll ( slotsB.keySet (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P2_Replace_Operator]^if  ( slotB == null && slotB.getType (  )  == null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P2_Replace_Operator]^if  ( slotB != null || slotB.getType (  )  == null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P2_Replace_Operator]^if  ( slotB == null || slotB.getType (  )  != null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P6_Replace_Expression]^if  ( slotB == null ) {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P6_Replace_Expression]^if  (  slotB.getType (  )  == null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P6_Replace_Expression]^if  ( fnSlot == null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P6_Replace_Expression]^if  ( fnSlotType == null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P6_Replace_Expression]^if  ( slotA == null || slotA.getType() == null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P6_Replace_Expression]^if  ( slotA == null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P6_Replace_Expression]^if  ( slotA.getType (  )  == null )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^if  (  slotB.getType (  )  == false )  {^454^^^^^439^469^if  ( slotB == null || slotB.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P2_Replace_Operator]^} else if  ( slotA == null && slotA.getType (  )  == null )  {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P2_Replace_Operator]^} else if  ( slotA != null || slotA.getType (  )  == null )  {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P2_Replace_Operator]^} else if  ( slotA == null || slotA.getType (  )  != null )  {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P6_Replace_Expression]^} else if  ( slotA == null ) {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P6_Replace_Expression]^} else if  (  slotA.getType (  )  == null )  {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P6_Replace_Expression]^} else if  ( fnSlot == null )  {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P6_Replace_Expression]^} else if  ( fnSlotType == null )  {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P6_Replace_Expression]^} else {^464^^^^^449^479^} else if  ( slotA == null || slotA.getType (  )  == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^joinedType = slotB.getType (  ) .getLeastSupertype ( slotA.getType (  )  ) ;^477^478^^^^464^479^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^joinedType =  null.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^464^479^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^464^479^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^464^479^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^slotA.getType (  )  .getLeastSupertype ( joinedType )  ;^478^^^^^464^479^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^478^^^^^464^479^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^478^^^^^464^479^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^478^^^^^464^479^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^slotA.getType (  ) .getLeastSupertype ( 1.getType (  )  ) ;^478^^^^^464^479^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P2_Replace_Operator]^if  ( fnSlotType != null )  {^468^^^^^453^483^if  ( fnSlotType == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^if  ( joinedType == null )  {^468^^^^^453^483^if  ( fnSlotType == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^if  ( fnSlotType == this )  {^468^^^^^453^483^if  ( fnSlotType == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P9_Replace_Statement]^if  ( joinedType != null )  {^468^^^^^453^483^if  ( fnSlotType == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P13_Insert_Block]^if  ( fnSlotType == null )  { }else {     joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ; }^468^^^^^453^483^[Delete]^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^joinedType = slotB.getType (  ) .getLeastSupertype ( joinedType ) ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^joinedType = fnSlotType.getType (  ) .getLeastSupertype ( slotB ) ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^joinedType =  0.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^symbols.put (  slotB ) ;^470^^^^^455^485^symbols.put ( name, slotB ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^symbols.put ( name ) ;^470^^^^^455^485^symbols.put ( name, slotB ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^symbols .get ( name )  ;^470^^^^^455^485^symbols.put ( name, slotB ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^470^^^^^455^485^symbols.put ( name, slotB ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^joinedType = slotB.getType (  ) .getLeastSupertype ( joinedType ) ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^joinedType = fnSlotType.getType (  ) .getLeastSupertype ( slotB ) ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^joinedType =  null.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^StaticSlot<JSType> fnSlot = linkedEquivalent.getFunctionScope (  ) .getSlot ( name ) ;^465^466^^^^450^480^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^StaticSlot<JSType> fnSlot = name.getFunctionScope (  ) .getSlot ( joinedScopeA ) ;^465^466^^^^450^480^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  )  .getSlot ( name )  ;^465^466^^^^450^480^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^StaticSlot<JSType> fnSlot = joinedScopeA .allFlowSlots (  )  .getSlot ( name ) ;^465^466^^^^450^480^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> slotB = slotsB.get ( name ) ;StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^465^466^^^^450^480^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> slotA = slotsA.get ( name ) ;StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^465^466^^^^450^480^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^465^466^^^^450^480^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P2_Replace_Operator]^JSType fnSlotType = fnSlot != null ? null : fnSlot.getType (  ) ;^467^^^^^452^482^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P6_Replace_Expression]^JSType fnSlotType = fnSlot ( fnSlot.getType (  ) ;^467^^^^^452^482^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^= name.getFunctionScope (  ) .getSlot ( joinedScopeA ) ;^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^= linkedEquivalent .allFlowSlots (  )  .getSlot ( name ) ;^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^466^467^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ; JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^return functionScope.getSlot ( name ) ;= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^= joinedScopeA .allFlowSlots (  )  .getSlot ( name ) ;^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^467^^^^^452^482^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^if  ( fnSlotType == false )  {^468^^^^^453^483^if  ( fnSlotType == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^joinedType =  null.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^symbols.put ( slotB, name ) ;^470^^^^^455^485^symbols.put ( name, slotB ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^joinedType = slotB.getType (  ) .getLeastSupertype ( slotA.getType (  )  ) ;^477^478^^^^462^492^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^joinedType =  null.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^462^492^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^462^492^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^477^478^^^^462^492^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^JSType 1Type = fnSlot == null ? null : fnSlot.getType (  ) ;^467^^^^^452^482^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^= linkedEquivalent.getFunctionScope (  ) .getSlot ( name ) ;^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^= joinedScopeA.getFunctionScope (  )  .getSlot ( name )  ;^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^466^^^^^451^481^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^478^^^^^463^493^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^478^^^^^463^493^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^478^^^^^463^493^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P2_Replace_Operator]^if  ( fnSlotType != null )  {^458^^^^^443^473^if  ( fnSlotType == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^if  ( joinedType == null )  {^458^^^^^443^473^if  ( fnSlotType == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^if  ( fnSlotType == true )  {^458^^^^^443^473^if  ( fnSlotType == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P9_Replace_Statement]^if  ( joinedType != null )  {^458^^^^^443^473^if  ( fnSlotType == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P15_Unwrap_Block]^^458^459^460^^462^443^473^if  ( fnSlotType == null )  {  } else { joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ; }^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P13_Insert_Block]^if  ( fnSlotType == null )  {     symbols.put ( name, slotB ) ; }else {     joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ; }^458^^^^^443^473^[Delete]^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^joinedType = slotA.getType (  ) .getLeastSupertype ( joinedType ) ;^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^joinedType = fnSlotType.getType (  ) .getLeastSupertype ( slotA ) ;^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^joinedType =  null.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^joinedType = slotA.getType (  ) .getLeastSupertype ( joinedType ) ;^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^joinedType = fnSlotType.getType (  ) .getLeastSupertype ( slotA ) ;^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^joinedType =  null.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^StaticSlot<JSType> fnSlot = linkedEquivalent.getFunctionScope (  ) .getSlot ( name ) ;^455^456^^^^440^470^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^StaticSlot<JSType> fnSlot = name.getFunctionScope (  ) .getSlot ( joinedScopeB ) ;^455^456^^^^440^470^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> slotB = slotsB.get ( name ) ;StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^455^456^^^^440^470^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> slotA = slotsA.get ( name ) ;StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^455^456^^^^440^470^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> fnSlot = joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^455^456^^^^440^470^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P2_Replace_Operator]^JSType fnSlotType = fnSlot != null ? null : fnSlot.getType (  ) ;^457^^^^^442^472^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P6_Replace_Expression]^JSType fnSlotType = fnSlot ( fnSlot.getType (  ) ;^457^^^^^442^472^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^= linkedEquivalent.getFunctionScope (  ) .getSlot ( name ) ;^456^^^^^441^471^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^= name.getFunctionScope (  ) .getSlot ( joinedScopeB ) ;^456^^^^^441^471^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^= joinedScopeB .allFlowSlots (  )  .getSlot ( name ) ;^456^^^^^441^471^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^456^^^^^441^471^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^= joinedScopeA.getFunctionScope (  ) .getSlot ( name ) ;= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^456^^^^^441^471^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^joinedScopeB.getFunctionScope (  )  : joinedScopeA.getFunctionScope (  ) ;= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^456^^^^^441^471^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^return functionScope.getSlot ( name ) ;= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^456^^^^^441^471^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^457^^^^^442^472^JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^joinedType = slotA.getType (  )  .getLeastSupertype ( fnSlotType )  ;^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^joinedType = this.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^458^463^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^slotA.getType (  )  .getLeastSupertype ( fnSlotType )  ;^478^^^^^464^479^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^slotA.getType (  ) .getLeastSupertype ( this.getType (  )  ) ;^478^^^^^464^479^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^if  ( joinedType == true )  {^468^^^^^453^483^if  ( fnSlotType == null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^joinedType = slotB.getType (  )  .getLeastSupertype ( fnSlotType )  ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^joinedType = slotB.getType (  )  .getLeastSupertype ( fnSlotType )  ;^473^^^^^458^488^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^joinedType =  1.getType (  ) .getLeastSupertype ( fnSlotType ) ;^473^^^^^468^474^joinedType = slotB.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P2_Replace_Operator]^if  ( joinedType == null )  {^481^^^^^466^496^if  ( joinedType != null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^if  ( fnSlotType != null )  {^481^^^^^466^496^if  ( joinedType != null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^if  ( joinedType != false )  {^481^^^^^466^496^if  ( joinedType != null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P9_Replace_Statement]^if  ( fnSlotType == null )  {^481^^^^^466^496^if  ( joinedType != null )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P15_Unwrap_Block]^symbols.put(name, new com.google.javascript.rhino.jstype.SimpleSlot(name, joinedType, true));^481^482^483^^^466^496^if  ( joinedType != null )  { symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ; }^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P16_Remove_Block]^^481^482^483^^^466^496^if  ( joinedType != null )  { symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ; }^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P3_Replace_Literal]^symbols.put ( name, new SimpleSlot ( name, joinedType, false )  ) ;^482^^^^^467^497^symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P4_Replace_Constructor]^symbols.put (  new SimpleSlot ( name, joinedType, true )  ) ;^482^^^^^467^497^symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P4_Replace_Constructor]^symbols.put ( name, new SimpleSlot ( name,  true )  ) ;^482^^^^^467^497^symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^symbols.put ( name, new SimpleSlot ( name, fnSlotType, true )  ) ;^482^^^^^467^497^symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^symbols.put ( joinedType, new SimpleSlot ( name, name, true )  ) ;^482^^^^^467^497^symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P13_Insert_Block]^if  ( joinedType != null )  {     symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ; }^482^^^^^467^497^[Delete]^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^482^^^^^467^497^symbols.put ( name, new SimpleSlot ( name, joinedType, true )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^joinedType = slotA.getType (  )  .getLeastSupertype ( joinedType )  ;^477^478^^^^462^492^joinedType = slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P1_Replace_Type]^for  ( char name : symbolNames )  {^449^^^^^434^464^for  ( String name : symbolNames )  {^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^StaticSlot<JSType> slotA = name.get ( slotsA ) ;^450^^^^^435^465^StaticSlot<JSType> slotA = slotsA.get ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^StaticSlot<JSType> slotA = slotsA.put ( name ) ;^450^^^^^435^465^StaticSlot<JSType> slotA = slotsA.get ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^StaticSlot<JSType> slotA = slotsA .keySet (  )  ;^450^^^^^435^465^StaticSlot<JSType> slotA = slotsA.get ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^StaticSlot<JSType> slotB = name.get ( slotsB ) ;^451^^^^^436^466^StaticSlot<JSType> slotB = slotsB.get ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^StaticSlot<JSType> slotB = slotsB.put ( name ) ;^451^^^^^436^466^StaticSlot<JSType> slotB = slotsB.get ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^StaticSlot<JSType> slotB = slotsB .keySet (  )  ;^451^^^^^436^466^StaticSlot<JSType> slotB = slotsB.get ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P12_Insert_Condition]^if  ( joinedType != null )  { JSType joinedType = null; }^453^^^^^438^468^JSType joinedType = null;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^StaticSlot<JSType> fnSlot = joinedScopeB .allFlowSlots (  )  .getSlot ( name ) ;^455^456^^^^440^470^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^StaticSlot<JSType> fnSlot = linkedEquivalent .allFlowSlots (  )  .getSlot ( name ) ;^455^456^^^^440^470^StaticSlot<JSType> fnSlot = joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^450^^^^^435^465^StaticSlot<JSType> slotA = slotsA.get ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> slotB = slotsB.get ( name ) ;StaticSlot<JSType> slotA = slotsA.get ( name ) ;^450^^^^^435^465^StaticSlot<JSType> slotA = slotsA.get ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^451^^^^^436^466^StaticSlot<JSType> slotB = slotsB.get ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P11_Insert_Donor_Statement]^StaticSlot<JSType> slotA = slotsA.get ( name ) ;StaticSlot<JSType> slotB = slotsB.get ( name ) ;^451^^^^^436^466^StaticSlot<JSType> slotB = slotsB.get ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^456^457^^^^441^471^= joinedScopeB.getFunctionScope (  ) .getSlot ( name ) ; JSType fnSlotType = fnSlot == null ? null : fnSlot.getType (  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^joinedType = 1.getType (  ) .getLeastSupertype ( fnSlotType ) ;^462^^^^^447^477^joinedType = slotA.getType (  ) .getLeastSupertype ( fnSlotType ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^slotA.getType (  )  .getLeastSupertype ( fnSlotType )  ;^478^^^^^463^493^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^slotA.getType (  ) .getLeastSupertype ( 0.getType (  )  ) ;^478^^^^^463^493^slotA.getType (  ) .getLeastSupertype ( slotB.getType (  )  ) ;^[CLASS] FlatFlowScopeCache  [METHOD] <init> [RETURN_TYPE] LinkedFlowScope)   LinkedFlowScope joinedScopeA LinkedFlowScope joinedScopeB [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  StaticSlot  fnSlot  slotA  slotB  Set  dirtySymbols  symbolNames  JSType  fnSlotType  joinedType  boolean  Scope  functionScope  String  name  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^if  ( name.containsKey ( symbols )  )  {^491^^^^^490^496^if  ( symbols.containsKey ( name )  )  {^[CLASS] FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  Set  dirtySymbols  symbolNames  String  name  boolean  Scope  functionScope  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^if  ( symbols.get ( name )  )  {^491^^^^^490^496^if  ( symbols.containsKey ( name )  )  {^[CLASS] FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  Set  dirtySymbols  symbolNames  String  name  boolean  Scope  functionScope  Map  slotsA  slotsB  symbols  
[P15_Unwrap_Block]^return symbols.get(name);^491^492^493^494^495^490^496^if  ( symbols.containsKey ( name )  )  { return symbols.get ( name ) ; } else { return functionScope.getSlot ( name ) ; }^[CLASS] FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  Set  dirtySymbols  symbolNames  String  name  boolean  Scope  functionScope  Map  slotsA  slotsB  symbols  
[P16_Remove_Block]^^491^492^493^494^495^490^496^if  ( symbols.containsKey ( name )  )  { return symbols.get ( name ) ; } else { return functionScope.getSlot ( name ) ; }^[CLASS] FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  Set  dirtySymbols  symbolNames  String  name  boolean  Scope  functionScope  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^return name.getSlot ( functionScope ) ;^494^^^^^490^496^return functionScope.getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  Set  dirtySymbols  symbolNames  String  name  boolean  Scope  functionScope  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^494^^^^^490^496^return functionScope.getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  Set  dirtySymbols  symbolNames  String  name  boolean  Scope  functionScope  Map  slotsA  slotsB  symbols  
[P5_Replace_Variable]^return name.get ( symbols ) ;^492^^^^^490^496^return symbols.get ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  Set  dirtySymbols  symbolNames  String  name  boolean  Scope  functionScope  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^return symbols.containsKey ( name ) ;^492^^^^^490^496^return symbols.get ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  Set  dirtySymbols  symbolNames  String  name  boolean  Scope  functionScope  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^return symbols .keySet (  )  ;^492^^^^^490^496^return symbols.get ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  Set  dirtySymbols  symbolNames  String  name  boolean  Scope  functionScope  Map  slotsA  slotsB  symbols  
[P14_Delete_Statement]^^492^^^^^490^496^return symbols.get ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  Set  dirtySymbols  symbolNames  String  name  boolean  Scope  functionScope  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^if  ( symbols .keySet (  )   )  {^491^^^^^490^496^if  ( symbols.containsKey ( name )  )  {^[CLASS] FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  Set  dirtySymbols  symbolNames  String  name  boolean  Scope  functionScope  Map  slotsA  slotsB  symbols  
[P8_Replace_Mix]^if  ( 3 .keySet (  )   )  {^491^^^^^490^496^if  ( symbols.containsKey ( name )  )  {^[CLASS] FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  Set  dirtySymbols  symbolNames  String  name  boolean  Scope  functionScope  Map  slotsA  slotsB  symbols  
[P7_Replace_Invocation]^return functionScope .getSlot ( name )  ;^494^^^^^490^496^return functionScope.getSlot ( name ) ;^[CLASS] FlatFlowScopeCache  [METHOD] getSlot [RETURN_TYPE] StaticSlot   String name [VARIABLES] LinkedFlowScope  directParent  joinedScopeA  joinedScopeB  linkedEquivalent  Set  dirtySymbols  symbolNames  String  name  boolean  Scope  functionScope  Map  slotsA  slotsB  symbols  
