[P3_Replace_Literal]^static final DiagnosticType CONST_REASSIGNED_VALUE_ERROR = DiagnosticType.error ( "LUE_ERR", "constant {0} assigned a value more than once" ) ;^38^39^40^41^^38^41^static final DiagnosticType CONST_REASSIGNED_VALUE_ERROR = DiagnosticType.error ( "JSC_CONSTANT_REASSIGNED_VALUE_ERROR", "constant {0} assigned a value more than once" ) ;^[CLASS] ConstCheck   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType CONST_REASSIGNED_VALUE_ERROR = DiagnosticType.error ( "JSC_CONSTANT_REASSIGNED_VALUE_ERROR", "constant {0} assigned a value more than once a value " ) ;^38^39^40^41^^38^41^static final DiagnosticType CONST_REASSIGNED_VALUE_ERROR = DiagnosticType.error ( "JSC_CONSTANT_REASSIGNED_VALUE_ERROR", "constant {0} assigned a value more than once" ) ;^[CLASS] ConstCheck   [VARIABLES] 
[P8_Replace_Mix]^static  DiagnosticType CONST_REASSIGNED_VALUE_ERROR = DiagnosticType.error ( "JSC_CONSTANT_REASSIGNED_VALUE_ERROR", "constant {0} assigned a value more than once" ) ;^38^39^40^41^^38^41^static final DiagnosticType CONST_REASSIGNED_VALUE_ERROR = DiagnosticType.error ( "JSC_CONSTANT_REASSIGNED_VALUE_ERROR", "constant {0} assigned a value more than once" ) ;^[CLASS] ConstCheck   [VARIABLES] 
[P8_Replace_Mix]^private  AbstractCompiler compiler;^43^^^^^38^48^private final AbstractCompiler compiler;^[CLASS] ConstCheck   [VARIABLES] 
[P8_Replace_Mix]^private  Set<Scope.Var> initializedConstants;^44^^^^^39^49^private final Set<Scope.Var> initializedConstants;^[CLASS] ConstCheck   [VARIABLES] 
[P8_Replace_Mix]^this.compiler =  null;^50^^^^^49^52^this.compiler = compiler;^[CLASS] ConstCheck  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  
[P8_Replace_Mix]^this.initializedConstants  = null ;^51^^^^^49^52^this.initializedConstants = new HashSet<Scope.Var> (  ) ;^[CLASS] ConstCheck  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  
[P12_Insert_Condition]^if  ( initializedConstants.contains ( var )  )  { this.initializedConstants = new HashSet<Scope.Var> (  ) ; }^51^^^^^49^52^this.initializedConstants = new HashSet<Scope.Var> (  ) ;^[CLASS] ConstCheck  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler, externs, this ) ;^58^^^^^57^59^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] ConstCheck  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler,  this ) ;^58^^^^^57^59^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] ConstCheck  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse (  root, this ) ;^58^^^^^57^59^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] ConstCheck  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse ( root, compiler, this ) ;^58^^^^^57^59^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] ConstCheck  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Node  externs  root  
[P7_Replace_Invocation]^NodeTraversal .getScope (  )  ;^58^^^^^57^59^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] ConstCheck  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Node  externs  root  
[P14_Delete_Statement]^^58^^^^^57^59^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] ConstCheck  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Node  externs  root  
[P2_Replace_Operator]^if  ( parent != null || parent.getType (  )  == Token.VAR && n.hasChildren (  )  )  {^67^68^69^^^52^82^if  ( parent != null && parent.getType (  )  == Token.VAR && n.hasChildren (  )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P2_Replace_Operator]^if  ( parent == null && parent.getType (  )  == Token.VAR && n.hasChildren (  )  )  {^67^68^69^^^52^82^if  ( parent != null && parent.getType (  )  == Token.VAR && n.hasChildren (  )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P2_Replace_Operator]^if  ( parent != null && parent.getType (  )  != Token.VAR && n.hasChildren (  )  )  {^67^68^69^^^52^82^if  ( parent != null && parent.getType (  )  == Token.VAR && n.hasChildren (  )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^if  ( n != null && parent.getType (  )  == Token.VAR && n.hasChildren (  )  )  {^67^68^69^^^52^82^if  ( parent != null && parent.getType (  )  == Token.VAR && n.hasChildren (  )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^if  ( parent != parentull && parent.getType (  )  == Token.VAR && n.hasChildren (  )  )  {^67^68^69^^^52^82^if  ( parent != null && parent.getType (  )  == Token.VAR && n.hasChildren (  )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P6_Replace_Expression]^if  ( parent != null ) {^67^68^69^^^52^82^if  ( parent != null && parent.getType (  )  == Token.VAR && n.hasChildren (  )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P6_Replace_Expression]^if  (  parent.getType (  )  == Token.VAR && n.hasChildren (  )  )  {^67^68^69^^^52^82^if  ( parent != null && parent.getType (  )  == Token.VAR && n.hasChildren (  )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P6_Replace_Expression]^if  ( (parent != null && parent.getType() == VAR) )  {^67^68^69^^^52^82^if  ( parent != null && parent.getType (  )  == Token.VAR && n.hasChildren (  )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P6_Replace_Expression]^if  ( parent.getType (  )  == VAR )  {^67^68^69^^^52^82^if  ( parent != null && parent.getType (  )  == Token.VAR && n.hasChildren (  )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P8_Replace_Mix]^if  ( parent != this && parent.getType (  )  == Token.VAR && n.hasChildren (  )  )  {^67^68^69^^^52^82^if  ( parent != null && parent.getType (  )  == Token.VAR && n.hasChildren (  )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P15_Unwrap_Block]^if (initializedConstants.contains(var)) {    reportError(t, n, name);}else {    initializedConstants.add(var);};^72^73^74^75^76^67^79^if  ( isConstant ( var )  )  { if  ( initializedConstants.contains ( var )  )  { reportError ( t, n, name ) ; } else { initializedConstants.add ( var ) ; }^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P16_Remove_Block]^^72^73^74^75^76^67^79^if  ( isConstant ( var )  )  { if  ( initializedConstants.contains ( var )  )  { reportError ( t, n, name ) ; } else { initializedConstants.add ( var ) ; }^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P13_Insert_Block]^if  ( initializedConstants.contains ( var )  )  {     reportError ( t, n, name ) ; }else {     initializedConstants.add ( var ) ; }^72^^^^^67^79^[Delete]^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^if  ( initializedConstants.add ( var )  )  {^73^^^^^67^79^if  ( initializedConstants.contains ( var )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P15_Unwrap_Block]^reportError(t, n, name);^73^74^75^76^77^67^79^if  ( initializedConstants.contains ( var )  )  { reportError ( t, n, name ) ; } else { initializedConstants.add ( var ) ; }^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P16_Remove_Block]^^73^74^75^76^77^67^79^if  ( initializedConstants.contains ( var )  )  { reportError ( t, n, name ) ; } else { initializedConstants.add ( var ) ; }^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P13_Insert_Block]^if  ( isConstant ( var )  )  {     if  ( initializedConstants.contains ( var )  )  {         reportError ( t, n, name ) ;     }else {         initializedConstants.add ( var ) ;     } }^73^^^^^67^79^[Delete]^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^initializedConstants.contains ( var ) ;^76^^^^^67^79^initializedConstants.add ( var ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^76^^^^^67^79^initializedConstants.add ( var ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P12_Insert_Condition]^if  ( initializedConstants.contains ( var )  )  { initializedConstants.add ( var ) ; }^76^^^^^67^79^initializedConstants.add ( var ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( t, parent, name ) ;^74^^^^^67^79^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError (  n, name ) ;^74^^^^^67^79^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( t,  name ) ;^74^^^^^67^79^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( t, n ) ;^74^^^^^67^79^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( n, t, name ) ;^74^^^^^67^79^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( name, n, t ) ;^74^^^^^67^79^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^visit ( t, n, name ) ;^74^^^^^67^79^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^74^^^^^67^79^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^if  ( 0.contains ( var )  )  {^73^^^^^67^79^if  ( initializedConstants.contains ( var )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^if  ( var.contains ( initializedConstants )  )  {^73^^^^^67^79^if  ( initializedConstants.contains ( var )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( t, name, n ) ;^74^^^^^67^79^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^if  ( initializedConstants.contains ( 3 )  )  {^73^^^^^67^79^if  ( initializedConstants.contains ( var )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P1_Replace_Type]^char name = n.getchar (  ) ;^70^^^^^67^79^String name = n.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^String parentame = n.getString (  ) ;^70^^^^^67^79^String name = n.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P11_Insert_Donor_Statement]^String name = lhs.getString (  ) ;String name = n.getString (  ) ;^70^^^^^67^79^String name = n.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^Scope.Var var = name.getScope (  ) .getVar ( t ) ;^71^^^^^67^79^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^70^71^^^^67^79^String name = n.getString (  ) ; Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P11_Insert_Donor_Statement]^n.hasChildren (  )  )  { String name = n.getString (  ) ;String name = n.getString (  ) ;^70^^^^^67^79^String name = n.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^71^^^^^67^79^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^if  ( isConstant ( 2 )  )  {^72^^^^^67^79^if  ( isConstant ( var )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^if  ( 3.contains ( var )  )  {^73^^^^^67^79^if  ( initializedConstants.contains ( var )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P8_Replace_Mix]^initializedConstants.contains ( null ) ;^76^^^^^67^79^initializedConstants.add ( var ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P15_Unwrap_Block]^if (initializedConstants.contains(var)) {    reportError(t, n, name);}else {    initializedConstants.add(var);};^72^73^74^75^76^57^87^if  ( isConstant ( var )  )  { if  ( initializedConstants.contains ( var )  )  { reportError ( t, n, name ) ; } else { initializedConstants.add ( var ) ; }^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P16_Remove_Block]^^72^73^74^75^76^57^87^if  ( isConstant ( var )  )  { if  ( initializedConstants.contains ( var )  )  { reportError ( t, n, name ) ; } else { initializedConstants.add ( var ) ; }^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P13_Insert_Block]^if  ( initializedConstants.contains ( var )  )  {     reportError ( t, n, name ) ; }else {     initializedConstants.add ( var ) ; }^72^^^^^57^87^[Delete]^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^if  ( initializedConstants.add ( var )  )  {^73^^^^^58^88^if  ( initializedConstants.contains ( var )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P8_Replace_Mix]^if  ( initializedConstants.contains ( null )  )  {^73^^^^^58^88^if  ( initializedConstants.contains ( var )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P15_Unwrap_Block]^reportError(t, n, name);^73^74^75^76^77^58^88^if  ( initializedConstants.contains ( var )  )  { reportError ( t, n, name ) ; } else { initializedConstants.add ( var ) ; }^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P16_Remove_Block]^^73^74^75^76^77^58^88^if  ( initializedConstants.contains ( var )  )  { reportError ( t, n, name ) ; } else { initializedConstants.add ( var ) ; }^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P13_Insert_Block]^if  ( isConstant ( var )  )  {     if  ( initializedConstants.contains ( var )  )  {         reportError ( t, n, name ) ;     }else {         initializedConstants.add ( var ) ;     } }^73^^^^^58^88^[Delete]^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^initializedConstants.contains ( var ) ;^76^^^^^73^77^initializedConstants.add ( var ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^76^^^^^73^77^initializedConstants.add ( var ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P12_Insert_Condition]^if  ( initializedConstants.contains ( var )  )  { initializedConstants.add ( var ) ; }^76^^^^^73^77^initializedConstants.add ( var ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( t, parent, name ) ;^74^^^^^59^89^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError (  n, name ) ;^74^^^^^59^89^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( t,  name ) ;^74^^^^^59^89^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( t, n ) ;^74^^^^^59^89^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( name, n, t ) ;^74^^^^^59^89^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( t, name, n ) ;^74^^^^^59^89^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^visit ( t, n, name ) ;^74^^^^^59^89^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P8_Replace_Mix]^visit ( t, parent, name ) ;^74^^^^^59^89^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^74^^^^^59^89^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^if  ( var.contains ( initializedConstants )  )  {^73^^^^^58^88^if  ( initializedConstants.contains ( var )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^initializedConstants.contains ( var ) ;^76^^^^^61^91^initializedConstants.add ( var ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^76^^^^^61^91^initializedConstants.add ( var ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P12_Insert_Condition]^if  ( initializedConstants.contains ( var )  )  { initializedConstants.add ( var ) ; }^76^^^^^61^91^initializedConstants.add ( var ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^initializedConstants.add ( null ) ;^76^^^^^73^77^initializedConstants.add ( var ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P2_Replace_Operator]^if  ( lhs.getType (  )  != Token.NAME )  {^95^^^^^80^110^if  ( lhs.getType (  )  == Token.NAME )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.NAME )  {^95^^^^^80^110^if  ( lhs.getType (  )  == Token.NAME )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P15_Unwrap_Block]^if (initializedConstants.contains(var)) {    reportError(t, n, name);}else {    initializedConstants.add(var);};^98^99^100^101^102^83^113^if  ( isConstant ( var )  )  { if  ( initializedConstants.contains ( var )  )  { reportError ( t, n, name ) ; } else { initializedConstants.add ( var ) ; }^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P16_Remove_Block]^^98^99^100^101^102^83^113^if  ( isConstant ( var )  )  { if  ( initializedConstants.contains ( var )  )  { reportError ( t, n, name ) ; } else { initializedConstants.add ( var ) ; }^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P13_Insert_Block]^if  ( initializedConstants.contains ( var )  )  {     reportError ( t, n, name ) ; }else {     initializedConstants.add ( var ) ; }^98^^^^^83^113^[Delete]^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^if  ( var.contains ( initializedConstants )  )  {^99^^^^^84^114^if  ( initializedConstants.contains ( var )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^if  ( initializedConstants.add ( var )  )  {^99^^^^^84^114^if  ( initializedConstants.contains ( var )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P15_Unwrap_Block]^reportError(t, n, name);^99^100^101^102^103^84^114^if  ( initializedConstants.contains ( var )  )  { reportError ( t, n, name ) ; } else { initializedConstants.add ( var ) ; }^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P16_Remove_Block]^^99^100^101^102^103^84^114^if  ( initializedConstants.contains ( var )  )  { reportError ( t, n, name ) ; } else { initializedConstants.add ( var ) ; }^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P13_Insert_Block]^if  ( isConstant ( var )  )  {     if  ( initializedConstants.contains ( var )  )  {         reportError ( t, n, name ) ;     }else {         initializedConstants.add ( var ) ;     } }^99^^^^^84^114^[Delete]^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^initializedConstants.contains ( var ) ;^102^^^^^99^103^initializedConstants.add ( var ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^102^^^^^99^103^initializedConstants.add ( var ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P12_Insert_Condition]^if  ( initializedConstants.contains ( var )  )  { initializedConstants.add ( var ) ; }^102^^^^^99^103^initializedConstants.add ( var ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError (  n, name ) ;^100^^^^^85^115^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( t,  name ) ;^100^^^^^85^115^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( t, n ) ;^100^^^^^85^115^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( name, n, t ) ;^100^^^^^85^115^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( t, name, n ) ;^100^^^^^85^115^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^visit ( t, n, name ) ;^100^^^^^85^115^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P8_Replace_Mix]^visit ( t, parent, name ) ;^100^^^^^85^115^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^100^^^^^85^115^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^if  ( initializedConstants.contains ( 3 )  )  {^99^^^^^84^114^if  ( initializedConstants.contains ( var )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( t, parent, name ) ;^100^^^^^85^115^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( n, t, name ) ;^100^^^^^85^115^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^initializedConstants.contains ( var ) ;^102^^^^^87^117^initializedConstants.add ( var ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^102^^^^^87^117^initializedConstants.add ( var ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P12_Insert_Condition]^if  ( initializedConstants.contains ( var )  )  { initializedConstants.add ( var ) ; }^102^^^^^87^117^initializedConstants.add ( var ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P1_Replace_Type]^char name = lhs.getchar (  ) ;^96^^^^^81^111^String name = lhs.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^String name = parent.getString (  ) ;^96^^^^^81^111^String name = lhs.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^String name = lhs .getFirstChild (  )  ;^96^^^^^81^111^String name = lhs.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P11_Insert_Donor_Statement]^String name = n.getString (  ) ;String name = lhs.getString (  ) ;^96^^^^^81^111^String name = lhs.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^Scope.Var var = name.getScope (  ) .getVar ( t ) ;^97^^^^^82^112^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^96^^^^^81^111^String name = lhs.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P11_Insert_Donor_Statement]^n.hasChildren (  )  )  { String name = n.getString (  ) ;String name = lhs.getString (  ) ;^96^^^^^81^111^String name = lhs.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^97^^^^^82^112^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P8_Replace_Mix]^if  ( isConstant ( 2 )  )  {^98^^^^^83^113^if  ( isConstant ( var )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^if  ( null.contains ( var )  )  {^99^^^^^84^114^if  ( initializedConstants.contains ( var )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P8_Replace_Mix]^if  ( 2.contains ( var )  )  {^99^^^^^84^114^if  ( initializedConstants.contains ( var )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P2_Replace_Operator]^if  ( lhs.getType (  )  <= Token.NAME )  {^112^^^^^97^127^if  ( lhs.getType (  )  == Token.NAME )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.NAME )  {^112^^^^^97^127^if  ( lhs.getType (  )  == Token.NAME )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P15_Unwrap_Block]^java.lang.String name = lhs.getString(); com.google.javascript.jscomp.Scope.Var var = t.getScope().getVar(name); if (isConstant(var)) {    reportError(t, n, name);};^112^113^114^115^116^97^127^if  ( lhs.getType (  )  == Token.NAME )  { String name = lhs.getString (  ) ; Scope.Var var = t.getScope (  ) .getVar ( name ) ; if  ( isConstant ( var )  )  { reportError ( t, n, name ) ; }^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P16_Remove_Block]^^112^113^114^115^116^97^127^if  ( lhs.getType (  )  == Token.NAME )  { String name = lhs.getString (  ) ; Scope.Var var = t.getScope (  ) .getVar ( name ) ; if  ( isConstant ( var )  )  { reportError ( t, n, name ) ; }^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P15_Unwrap_Block]^reportError(t, n, name);^115^116^117^^^100^130^if  ( isConstant ( var )  )  { reportError ( t, n, name ) ; }^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P16_Remove_Block]^^115^116^117^^^100^130^if  ( isConstant ( var )  )  { reportError ( t, n, name ) ; }^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( t, parent, name ) ;^116^^^^^101^131^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError (  n, name ) ;^116^^^^^101^131^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( t,  name ) ;^116^^^^^101^131^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( t, n ) ;^116^^^^^101^131^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( n, t, name ) ;^116^^^^^101^131^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( name, n, t ) ;^116^^^^^101^131^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^visit ( t, n, name ) ;^116^^^^^101^131^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^116^^^^^101^131^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P1_Replace_Type]^char name = lhs.getchar (  ) ;^113^^^^^98^128^String name = lhs.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P8_Replace_Mix]^String name = parent.getString (  ) ;^113^^^^^98^128^String name = lhs.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P11_Insert_Donor_Statement]^String name = n.getString (  ) ;String name = lhs.getString (  ) ;^113^^^^^98^128^String name = lhs.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^Scope.Var var = name.getScope (  ) .getVar ( t ) ;^114^^^^^99^129^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^String name = lhs .getFirstChild (  )  ;^113^^^^^98^128^String name = lhs.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^113^114^^^^98^128^String name = lhs.getString (  ) ; Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P11_Insert_Donor_Statement]^n.hasChildren (  )  )  { String name = n.getString (  ) ;String name = lhs.getString (  ) ;^113^^^^^98^128^String name = lhs.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^114^^^^^99^129^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P8_Replace_Mix]^Scope.Var var = t .traverse ( compiler , n , null )  .getVar ( name ) ;^114^^^^^99^129^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P1_Replace_Type]^char name = n.getchar (  ) ;^70^^^^^55^85^String name = n.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^String parentame = n.getString (  ) ;^70^^^^^55^85^String name = n.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^String name = n .getFirstChild (  )  ;^70^^^^^55^85^String name = n.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P11_Insert_Donor_Statement]^String name = lhs.getString (  ) ;String name = n.getString (  ) ;^70^^^^^55^85^String name = n.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^Scope.Var var = name.getScope (  ) .getVar ( t ) ;^71^^^^^56^86^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^Node lhs = parent.getFirstChild (  ) ;^94^^^^^79^109^Node lhs = n.getFirstChild (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^Node lhs = parent.getFirstChild (  ) ;^111^^^^^96^126^Node lhs = n.getFirstChild (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^Node lhs = n .getString (  )  ;^111^^^^^96^126^Node lhs = n.getFirstChild (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^switch  ( parent.getType (  )  )  {^65^^^^^50^80^switch  ( n.getType (  )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^switch  ( n .getString (  )   )  {^65^^^^^50^80^switch  ( n.getType (  )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P8_Replace_Mix]^parent .getString (  )   == Token.VAR && n.hasChildren (  )  )  {^68^69^^^^53^83^parent.getType (  )  == Token.VAR && n.hasChildren (  )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^68^69^70^^^53^83^parent.getType (  )  == Token.VAR && n.hasChildren (  )  )  { String name = n.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^n.hasChildreparent (  )  )  {^69^^^^^54^84^n.hasChildren (  )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^n .getFirstChild (  )   )  {^69^^^^^54^84^n.hasChildren (  )  )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^69^70^^^^54^84^n.hasChildren (  )  )  { String name = n.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^70^^^^^55^85^String name = n.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P11_Insert_Donor_Statement]^n.hasChildren (  )  )  { String name = n.getString (  ) ;String name = n.getString (  ) ;^70^^^^^55^85^String name = n.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^71^^^^^56^86^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P5_Replace_Variable]^reportError ( n, t, name ) ;^74^^^^^59^89^reportError ( t, n, name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P8_Replace_Mix]^initializedConstants.add ( 2 ) ;^76^^^^^61^91^initializedConstants.add ( var ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^94^^^^^79^109^Node lhs = n.getFirstChild (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^if  ( lhs .getString (  )   == Token.NAME )  {^95^^^^^80^110^if  ( lhs.getType (  )  == Token.NAME )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^96^97^^^^81^111^String name = lhs.getString (  ) ; Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P8_Replace_Mix]^Node lhs = parent .getString (  )  ;^111^^^^^96^126^Node lhs = n.getFirstChild (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P14_Delete_Statement]^^111^^^^^96^126^Node lhs = n.getFirstChild (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P7_Replace_Invocation]^if  ( lhs .getString (  )   == Token.NAME )  {^112^^^^^97^127^if  ( lhs.getType (  )  == Token.NAME )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P8_Replace_Mix]^if  ( parent .getString (  )   == Token.NAME )  {^112^^^^^97^127^if  ( lhs.getType (  )  == Token.NAME )  {^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P8_Replace_Mix]^String name = parent .getFirstChild (  )  ;^113^^^^^98^128^String name = lhs.getString (  ) ;^[CLASS] ConstCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  Node  lhs  n  parent  String  name  
[P2_Replace_Operator]^return var != null || var.isConst (  ) ;^129^^^^^128^130^return var != null && var.isConst (  ) ;^[CLASS] ConstCheck  [METHOD] isConstant [RETURN_TYPE] boolean   Var var [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  
[P2_Replace_Operator]^return var == null && var.isConst (  ) ;^129^^^^^128^130^return var != null && var.isConst (  ) ;^[CLASS] ConstCheck  [METHOD] isConstant [RETURN_TYPE] boolean   Var var [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  
[P8_Replace_Mix]^return   var.isConst (  ) ;^129^^^^^128^130^return var != null && var.isConst (  ) ;^[CLASS] ConstCheck  [METHOD] isConstant [RETURN_TYPE] boolean   Var var [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  
[P14_Delete_Statement]^^129^^^^^128^130^return var != null && var.isConst (  ) ;^[CLASS] ConstCheck  [METHOD] isConstant [RETURN_TYPE] boolean   Var var [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Var  var  
[P5_Replace_Variable]^compiler.report ( JSError.make (  n, CONST_REASSIGNED_VALUE_ERROR, name )  ) ;^136^^^^^135^137^compiler.report ( JSError.make ( t, n, CONST_REASSIGNED_VALUE_ERROR, name )  ) ;^[CLASS] ConstCheck  [METHOD] reportError [RETURN_TYPE] void   NodeTraversal t Node n String name [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Node  n  String  name  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t,  CONST_REASSIGNED_VALUE_ERROR, name )  ) ;^136^^^^^135^137^compiler.report ( JSError.make ( t, n, CONST_REASSIGNED_VALUE_ERROR, name )  ) ;^[CLASS] ConstCheck  [METHOD] reportError [RETURN_TYPE] void   NodeTraversal t Node n String name [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Node  n  String  name  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, CONST_REASSIGNED_VALUE_ERROR )  ) ;^136^^^^^135^137^compiler.report ( JSError.make ( t, n, CONST_REASSIGNED_VALUE_ERROR, name )  ) ;^[CLASS] ConstCheck  [METHOD] reportError [RETURN_TYPE] void   NodeTraversal t Node n String name [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Node  n  String  name  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n,  name )  ) ;^136^^^^^135^137^compiler.report ( JSError.make ( t, n, CONST_REASSIGNED_VALUE_ERROR, name )  ) ;^[CLASS] ConstCheck  [METHOD] reportError [RETURN_TYPE] void   NodeTraversal t Node n String name [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Node  n  String  name  
[P5_Replace_Variable]^compiler.report ( JSError.make ( CONST_REASSIGNED_VALUE_ERROR, n, t, name )  ) ;^136^^^^^135^137^compiler.report ( JSError.make ( t, n, CONST_REASSIGNED_VALUE_ERROR, name )  ) ;^[CLASS] ConstCheck  [METHOD] reportError [RETURN_TYPE] void   NodeTraversal t Node n String name [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Node  n  String  name  
[P5_Replace_Variable]^compiler.report ( JSError.make ( n, t, CONST_REASSIGNED_VALUE_ERROR, name )  ) ;^136^^^^^135^137^compiler.report ( JSError.make ( t, n, CONST_REASSIGNED_VALUE_ERROR, name )  ) ;^[CLASS] ConstCheck  [METHOD] reportError [RETURN_TYPE] void   NodeTraversal t Node n String name [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Node  n  String  name  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, name, CONST_REASSIGNED_VALUE_ERROR, n )  ) ;^136^^^^^135^137^compiler.report ( JSError.make ( t, n, CONST_REASSIGNED_VALUE_ERROR, name )  ) ;^[CLASS] ConstCheck  [METHOD] reportError [RETURN_TYPE] void   NodeTraversal t Node n String name [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Node  n  String  name  
[P14_Delete_Statement]^^136^^^^^135^137^compiler.report ( JSError.make ( t, n, CONST_REASSIGNED_VALUE_ERROR, name )  ) ;^[CLASS] ConstCheck  [METHOD] reportError [RETURN_TYPE] void   NodeTraversal t Node n String name [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Node  n  String  name  
[P5_Replace_Variable]^compiler.report ( JSError.make ( name, n, CONST_REASSIGNED_VALUE_ERROR, t )  ) ;^136^^^^^135^137^compiler.report ( JSError.make ( t, n, CONST_REASSIGNED_VALUE_ERROR, name )  ) ;^[CLASS] ConstCheck  [METHOD] reportError [RETURN_TYPE] void   NodeTraversal t Node n String name [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Node  n  String  name  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n, name, CONST_REASSIGNED_VALUE_ERROR )  ) ;^136^^^^^135^137^compiler.report ( JSError.make ( t, n, CONST_REASSIGNED_VALUE_ERROR, name )  ) ;^[CLASS] ConstCheck  [METHOD] reportError [RETURN_TYPE] void   NodeTraversal t Node n String name [VARIABLES] AbstractCompiler  compiler  Set  initializedConstants  boolean  NodeTraversal  t  DiagnosticType  CONST_REASSIGNED_VALUE_ERROR  Node  n  String  name  
