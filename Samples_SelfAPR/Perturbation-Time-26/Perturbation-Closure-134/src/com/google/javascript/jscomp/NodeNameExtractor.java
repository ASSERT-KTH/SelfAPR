[P1_Replace_Type]^private final int delimiter;^33^^^^^28^38^private final char delimiter;^[CLASS] NodeNameExtractor   [VARIABLES] 
[P1_Replace_Type]^private  short  nextUniqueInt = 0;^34^^^^^29^39^private int nextUniqueInt = 0;^[CLASS] NodeNameExtractor   [VARIABLES] 
[P3_Replace_Literal]^private int nextUniqueInt = -2;^34^^^^^29^39^private int nextUniqueInt = 0;^[CLASS] NodeNameExtractor   [VARIABLES] 
[P8_Replace_Mix]^private  short  nextUniqueInt = 0 / 0;^34^^^^^29^39^private int nextUniqueInt = 0;^[CLASS] NodeNameExtractor   [VARIABLES] 
[P8_Replace_Mix]^this.delimiter =  null;^37^^^^^36^38^this.delimiter = delimiter;^[CLASS] NodeNameExtractor  [METHOD] <init> [RETURN_TYPE] NodeNameExtractor(char)   char delimiter [VARIABLES] char  delimiter  int  nextUniqueInt  boolean  
[P3_Replace_Literal]^if  ( "prrototype".equals ( rhsOfDotName )  )  {^58^^^^^43^73^if  ( "prototype".equals ( rhsOfDotName )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^if  ( "prototype".equals ( nameOutsideBrackets )  )  {^58^^^^^43^73^if  ( "prototype".equals ( rhsOfDotName )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P6_Replace_Expression]^if  ( lhsOfDotName + delimiter + rhsOfDotName )  {^58^^^^^43^73^if  ( "prototype".equals ( rhsOfDotName )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P6_Replace_Expression]^if  ( lhsOfDotName + delimiter )  {^58^^^^^43^73^if  ( "prototype".equals ( rhsOfDotName )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P9_Replace_Statement]^if  ( "prototype".equals ( nameInsideBrackets )  )  {^58^^^^^43^73^if  ( "prototype".equals ( rhsOfDotName )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P15_Unwrap_Block]^return lhsOfDotName + (delimiter);^58^59^60^61^62^43^73^if  ( "prototype".equals ( rhsOfDotName )  )  { return lhsOfDotName + delimiter; } else { return lhsOfDotName + delimiter + rhsOfDotName; }^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P16_Remove_Block]^^58^59^60^61^62^43^73^if  ( "prototype".equals ( rhsOfDotName )  )  { return lhsOfDotName + delimiter; } else { return lhsOfDotName + delimiter + rhsOfDotName; }^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P13_Insert_Block]^if  ( "prototype".equals ( nameInsideBrackets )  )  {     return nameOutsideBrackets +  ( delimiter ) ; }else {     return  ( nameOutsideBrackets +  ( delimiter )  )  + nameInsideBrackets; }^58^^^^^43^73^[Delete]^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P2_Replace_Operator]^return lhsOfDotName  |  delimiter + rhsOfDotName;^61^^^^^58^62^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return nameOutsideBrackets + delimiter + rhsOfDotName;^61^^^^^58^62^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return lhsOfDotName + delimiter + nameOutsideBrackets;^61^^^^^58^62^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return rhsOfDotName + delimiter + lhsOfDotName;^61^^^^^58^62^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return delimiter + lhsOfDotName + rhsOfDotName;^61^^^^^58^62^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return rhsOfDotName + delimiter;^59^^^^^44^74^return lhsOfDotName + delimiter;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return delimiter + lhsOfDotName;^59^^^^^44^74^return lhsOfDotName + delimiter;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P3_Replace_Literal]^if  ( "rotorototype".equals ( nameInsideBrackets )  )  {^68^^^^^53^83^if  ( "prototype".equals ( nameInsideBrackets )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^if  ( "prototype".equals ( rhsOfDotName )  )  {^68^^^^^53^83^if  ( "prototype".equals ( nameInsideBrackets )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P6_Replace_Expression]^if  ( nameOutsideBrackets + delimiter + nameInsideBrackets )  {^68^^^^^53^83^if  ( "prototype".equals ( nameInsideBrackets )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P6_Replace_Expression]^if  ( nameOutsideBrackets + delimiter )  {^68^^^^^53^83^if  ( "prototype".equals ( nameInsideBrackets )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P15_Unwrap_Block]^return nameOutsideBrackets + (delimiter);^68^69^70^71^72^53^83^if  ( "prototype".equals ( nameInsideBrackets )  )  { return nameOutsideBrackets + delimiter; } else { return nameOutsideBrackets + delimiter + nameInsideBrackets; }^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P16_Remove_Block]^^68^69^70^71^72^53^83^if  ( "prototype".equals ( nameInsideBrackets )  )  { return nameOutsideBrackets + delimiter; } else { return nameOutsideBrackets + delimiter + nameInsideBrackets; }^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P13_Insert_Block]^if  ( "prototype".equals ( rhsOfDotName )  )  {     return lhsOfDotName +  ( delimiter ) ; }else {     return  ( lhsOfDotName +  ( delimiter )  )  + rhsOfDotName; }^68^^^^^53^83^[Delete]^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P2_Replace_Operator]^return nameOutsideBrackets  !=  delimiter + nameInsideBrackets;^71^^^^^68^72^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return rhsOfDotName + delimiter + nameInsideBrackets;^71^^^^^68^72^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return nameOutsideBrackets + delimiter + rhsOfDotName;^71^^^^^68^72^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return delimiter + nameOutsideBrackets + nameInsideBrackets;^71^^^^^68^72^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return nameInsideBrackets + delimiter + nameOutsideBrackets;^71^^^^^68^72^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^return nameOutsideBrackets  &&  delimiter  &&  nameInsideBrackets;^71^^^^^68^72^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return rhsOfDotName + delimiter;^69^^^^^54^84^return nameOutsideBrackets + delimiter;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return delimiter + nameOutsideBrackets;^69^^^^^54^84^return nameOutsideBrackets + delimiter;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^return nameOutsideBrackets +rhsOfDotName;^69^^^^^54^84^return nameOutsideBrackets + delimiter;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P2_Replace_Operator]^if  ( sb.length (  )  >= 0 )  {^88^^^^^73^103^if  ( sb.length (  )  > 0 )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P3_Replace_Literal]^if  ( sb.length (  )  > nextUniqueInt )  {^88^^^^^73^103^if  ( sb.length (  )  > 0 )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P3_Replace_Literal]^if  ( sb.length() + 3  > 0 )  {^88^^^^^73^103^if  ( sb.length (  )  > 0 )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^if  ( sb.length (  )  > 0  )  {^88^^^^^73^103^if  ( sb.length (  )  > 0 )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P15_Unwrap_Block]^sb.append(delimiter);^88^89^90^^^73^103^if  ( sb.length (  )  > 0 )  { sb.append ( delimiter ) ; }^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P16_Remove_Block]^^88^89^90^^^73^103^if  ( sb.length (  )  > 0 )  { sb.append ( delimiter ) ; }^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^89^^^^^74^104^sb.append ( delimiter ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^sb.append ( getName ( child )  ) ;sb.append ( delimiter ) ;^89^^^^^74^104^sb.append ( delimiter ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P2_Replace_Operator]^for  ( Node child = node.getFirstChild (  ) ; child == null;^86^^^^^71^101^for  ( Node child = node.getFirstChild (  ) ; child != null;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^for  ( Node child = rhsOfDot.getFirstChild (  ) ; child != null;^86^^^^^71^101^for  ( Node child = node.getFirstChild (  ) ; child != null;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^for  ( Node outsideBrackets = node.getFirstChild (  ) ; child != null;^86^^^^^71^101^for  ( Node child = node.getFirstChild (  ) ; child != null;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^for  ( Node node = child.getFirstChild (  ) ; child != null;^86^^^^^71^101^for  ( Node child = node.getFirstChild (  ) ; child != null;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^for  ( Node rhsOfDot = node.getFirstChild (  ) ; child != null;^86^^^^^71^101^for  ( Node child = node.getFirstChild (  ) ; child != null;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P2_Replace_Operator]^if  ( sb.length (  )  == 0 )  {^88^^^^^86^92^if  ( sb.length (  )  > 0 )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P3_Replace_Literal]^if  ( sb.length (  )  > 4 )  {^88^^^^^86^92^if  ( sb.length (  )  > 0 )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P3_Replace_Literal]^if  ( sb.length() + 4  > 0 )  {^88^^^^^86^92^if  ( sb.length (  )  > 0 )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^if  ( sb.length (  )  > 0  )  {^88^^^^^86^92^if  ( sb.length (  )  > 0 )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P15_Unwrap_Block]^sb.append(delimiter);^88^89^90^^^86^92^if  ( sb.length (  )  > 0 )  { sb.append ( delimiter ) ; }^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P16_Remove_Block]^^88^89^90^^^86^92^if  ( sb.length (  )  > 0 )  { sb.append ( delimiter ) ; }^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^sb .StringBuilder (  )  ;^89^^^^^86^92^sb.append ( delimiter ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^89^^^^^86^92^sb.append ( delimiter ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^sb.append ( getName ( child )  ) ;sb.append ( delimiter ) ;^89^^^^^86^92^sb.append ( delimiter ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P3_Replace_Literal]^if  ( sb.length() - 9  > 0 )  {^88^^^^^86^92^if  ( sb.length (  )  > 0 )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^sb.append ( getName ( node )  ) ;^91^^^^^86^92^sb.append ( getName ( child )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^sb.append ( getName ( rhsOfDot )  ) ;^91^^^^^86^92^sb.append ( getName ( child )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^91^^^^^86^92^sb.append ( getName ( child )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^sb.append ( delimiter ) ;sb.append ( getName ( child )  ) ;^91^^^^^86^92^sb.append ( getName ( child )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^sb.append ( getName ( outsideBrackets )  ) ;^91^^^^^86^92^sb.append ( getName ( child )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^child = rhsOfDot.getNext (  )  )  {^87^^^^^72^102^child = child.getNext (  )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return rhsOfDot.getString (  ) ;^52^^^^^37^67^return functionNameNode.getString (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^return node.getString (  ) ;^52^^^^^37^67^return functionNameNode.getString (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^return lhsOfDotName +rhsOfDotName;^59^^^^^44^74^return lhsOfDotName + delimiter;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P2_Replace_Operator]^return lhsOfDotName  &&  delimiter + rhsOfDotName;^61^^^^^46^76^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return nameOutsideBrackets + delimiter + rhsOfDotName;^61^^^^^46^76^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return lhsOfDotName + delimiter + nameOutsideBrackets;^61^^^^^46^76^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return rhsOfDotName + delimiter + lhsOfDotName;^61^^^^^46^76^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return delimiter + lhsOfDotName + rhsOfDotName;^61^^^^^46^76^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^return lhsOfDotName  ;^61^^^^^46^76^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P2_Replace_Operator]^return nameOutsideBrackets  &  delimiter + nameInsideBrackets;^71^^^^^56^86^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return rhsOfDotName + delimiter + nameInsideBrackets;^71^^^^^56^86^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return nameOutsideBrackets + delimiter + rhsOfDotName;^71^^^^^56^86^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return nameInsideBrackets + delimiter + nameOutsideBrackets;^71^^^^^56^86^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return nameOutsideBrackets + nameInsideBrackets + delimiter;^71^^^^^56^86^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^return nameOutsideBrackets  ^  delimiter  ^  rhsOfDotName;^71^^^^^56^86^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return outsideBrackets.getString (  ) ;^74^^^^^59^89^return node.getString (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P7_Replace_Invocation]^return node .getFirstChild (  )  ;^74^^^^^59^89^return node.getString (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^return lhsOfDot.getString (  ) ;^74^^^^^59^89^return node.getString (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P2_Replace_Operator]^return TokenStream.isJSIdentifier ( node.getString (  ^  )  )  ? node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^76^77^^^^61^91^return TokenStream.isJSIdentifier ( node.getString (  )  )  ? node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P3_Replace_Literal]^return TokenStream.isJSIdentifier ( node.getString (  )  )  ? node.getString (  )  :  ( "___" + nextUniqueInt++ ) ;^76^77^^^^61^91^return TokenStream.isJSIdentifier ( node.getString (  )  )  ? node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return TokenStream.isJSIdentifier ( rhsOfDot.getString (  )  )  ? node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^76^77^^^^61^91^return TokenStream.isJSIdentifier ( node.getString (  )  )  ? node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P7_Replace_Invocation]^return TokenStream.isJSIdentifier ( node .getFirstChild (  )   )  ? node^76^77^^^^61^91^return TokenStream.isJSIdentifier ( node.getString (  )  )  ? node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return NodeUtil.getStringValue ( outsideBrackets ) ;^79^^^^^64^94^return NodeUtil.getStringValue ( node ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P3_Replace_Literal]^return "thisth";^81^^^^^66^96^return "this";^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^return "null";^81^^^^^66^96^return "this";^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return getName ( lhsOfDot.getFirstChild (  )  ) ;^83^^^^^68^98^return getName ( node.getFirstChild (  )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P7_Replace_Invocation]^return getName ( node .getString (  )   ) ;^83^^^^^68^98^return getName ( node.getFirstChild (  )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^return getName ( outsideBrackets.getFirstChild (  )  ) ;^83^^^^^68^98^return getName ( node.getFirstChild (  )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P7_Replace_Invocation]^return sb.append (  ) ;^93^^^^^78^108^return sb.toString (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^Node functionNameNode = outsideBrackets.getFirstChild (  ) ;^51^^^^^36^66^Node functionNameNode = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^Node functionNameNode = rhsOfDot.getFirstChild (  ) ;^51^^^^^36^66^Node functionNameNode = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^Node lhsOfDot = node.getFirstChild (  ) ;Node functionNameNode = node.getFirstChild (  ) ;^51^^^^^36^66^Node functionNameNode = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^Node outsideBrackets = node.getFirstChild (  ) ;Node functionNameNode = node.getFirstChild (  ) ;^51^^^^^36^66^Node functionNameNode = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^Node lhsOfDot = rhsOfDot.getFirstChild (  ) ;^54^^^^^39^69^Node lhsOfDot = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^Node lhsOfDot = rhsOfDot .getString (  )  ;^54^^^^^39^69^Node lhsOfDot = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P7_Replace_Invocation]^Node rhsOfDot = lhsOfDot .getType (  )  ;^55^^^^^40^70^Node rhsOfDot = lhsOfDot.getNext (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^Node insideBrackets = outsideBrackets.getNext (  ) ;Node rhsOfDot = lhsOfDot.getNext (  ) ;^55^^^^^40^70^Node rhsOfDot = lhsOfDot.getNext (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^Node lhsOfDot = node.getFirstChild (  ) ;Node rhsOfDot = lhsOfDot.getNext (  ) ;^55^^^^^40^70^Node rhsOfDot = lhsOfDot.getNext (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P1_Replace_Type]^char lhsOfDotName = getName ( lhsOfDot ) ;^56^^^^^41^71^String lhsOfDotName = getName ( lhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^String rhsOfDotName = getName ( lhsOfDot ) ;^56^^^^^41^71^String lhsOfDotName = getName ( lhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^String outsideBracketsName = getName ( lhsOfDot ) ;^56^^^^^41^71^String lhsOfDotName = getName ( lhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^String rhsOfDotName = getName ( rhsOfDot ) ;String lhsOfDotName = getName ( lhsOfDot ) ;^56^^^^^41^71^String lhsOfDotName = getName ( lhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^String nameInsideBrackets = getName ( insideBrackets ) ;String lhsOfDotName = getName ( lhsOfDot ) ;^56^^^^^41^71^String lhsOfDotName = getName ( lhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^String nameOutsideBrackets = getName ( outsideBrackets ) ;String lhsOfDotName = getName ( lhsOfDot ) ;^56^^^^^41^71^String lhsOfDotName = getName ( lhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P1_Replace_Type]^char rhsOfDotName = getName ( rhsOfDot ) ;^57^^^^^42^72^String rhsOfDotName = getName ( rhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^String nodeName = getName ( rhsOfDot ) ;^57^^^^^42^72^String rhsOfDotName = getName ( rhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^String outsideBracketsName = getName ( rhsOfDot ) ;^57^^^^^42^72^String rhsOfDotName = getName ( rhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^String nameInsideBrackets = getName ( insideBrackets ) ;String rhsOfDotName = getName ( rhsOfDot ) ;^57^^^^^42^72^String rhsOfDotName = getName ( rhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^String nameOutsideBrackets = getName ( outsideBrackets ) ;String rhsOfDotName = getName ( rhsOfDot ) ;^57^^^^^42^72^String rhsOfDotName = getName ( rhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^String lhsOfDotName = getName ( lhsOfDot ) ;String rhsOfDotName = getName ( rhsOfDot ) ;^57^^^^^42^72^String rhsOfDotName = getName ( rhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^Node outsideBrackets = rhsOfDot.getFirstChild (  ) ;^64^^^^^49^79^Node outsideBrackets = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^Node insideBrackets = outsideBrackets.getNext (  ) ;Node outsideBrackets = node.getFirstChild (  ) ;^64^^^^^49^79^Node outsideBrackets = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^Node lhsOfDot = node.getFirstChild (  ) ;Node outsideBrackets = node.getFirstChild (  ) ;^64^^^^^49^79^Node outsideBrackets = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^Node functionNameNode = node.getFirstChild (  ) ;Node outsideBrackets = node.getFirstChild (  ) ;^64^^^^^49^79^Node outsideBrackets = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^Node insideBrackets = node.getNext (  ) ;^65^^^^^50^80^Node insideBrackets = outsideBrackets.getNext (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P7_Replace_Invocation]^Node insideBrackets = outsideBrackets .getType (  )  ;^65^^^^^50^80^Node insideBrackets = outsideBrackets.getNext (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^Node rhsOfDot = lhsOfDot.getNext (  ) ;Node insideBrackets = outsideBrackets.getNext (  ) ;^65^^^^^50^80^Node insideBrackets = outsideBrackets.getNext (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^Node outsideBrackets = node.getFirstChild (  ) ;Node insideBrackets = outsideBrackets.getNext (  ) ;^65^^^^^50^80^Node insideBrackets = outsideBrackets.getNext (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P1_Replace_Type]^char nameOutsideBrackets = getName ( outsideBrackets ) ;^66^^^^^51^81^String nameOutsideBrackets = getName ( outsideBrackets ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^String nameOutsideBrackets = getName ( rhsOfDot ) ;^66^^^^^51^81^String nameOutsideBrackets = getName ( outsideBrackets ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^String nameOutsideBrackets = getName ( node ) ;^66^^^^^51^81^String nameOutsideBrackets = getName ( outsideBrackets ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^String rhsOfDotName = getName ( rhsOfDot ) ;String nameOutsideBrackets = getName ( outsideBrackets ) ;^66^^^^^51^81^String nameOutsideBrackets = getName ( outsideBrackets ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^String nameInsideBrackets = getName ( insideBrackets ) ;String nameOutsideBrackets = getName ( outsideBrackets ) ;^66^^^^^51^81^String nameOutsideBrackets = getName ( outsideBrackets ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^String lhsOfDotName = getName ( lhsOfDot ) ;String nameOutsideBrackets = getName ( outsideBrackets ) ;^66^^^^^51^81^String nameOutsideBrackets = getName ( outsideBrackets ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P1_Replace_Type]^char nameInsideBrackets = getName ( insideBrackets ) ;^67^^^^^52^82^String nameInsideBrackets = getName ( insideBrackets ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^String nameInsideBrackets = getName ( node ) ;^67^^^^^52^82^String nameInsideBrackets = getName ( insideBrackets ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^String nameInsideBrackets = getName ( rhsOfDot ) ;^67^^^^^52^82^String nameInsideBrackets = getName ( insideBrackets ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^String rhsOfDotName = getName ( rhsOfDot ) ;String nameInsideBrackets = getName ( insideBrackets ) ;^67^^^^^52^82^String nameInsideBrackets = getName ( insideBrackets ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^String nameOutsideBrackets = getName ( outsideBrackets ) ;String nameInsideBrackets = getName ( insideBrackets ) ;^67^^^^^52^82^String nameInsideBrackets = getName ( insideBrackets ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^String lhsOfDotName = getName ( lhsOfDot ) ;String nameInsideBrackets = getName ( insideBrackets ) ;^67^^^^^52^82^String nameInsideBrackets = getName ( insideBrackets ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P7_Replace_Invocation]^for  ( Node child = node .getString (  )  ; child != null;^86^^^^^71^101^for  ( Node child = node.getFirstChild (  ) ; child != null;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^for  ( Node child = outsideBrackets.getFirstChild (  ) ; child != null;^86^^^^^71^101^for  ( Node child = node.getFirstChild (  ) ; child != null;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^Node lhsOfDot = node.getFirstChild (  ) ;for  ( Node child = node.getFirstChild (  ) ; child != null;^86^^^^^71^101^for  ( Node child = node.getFirstChild (  ) ; child != null;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^switch  ( rhsOfDot.getType (  )  )  {^49^^^^^34^64^switch  ( node.getType (  )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^switch  ( lhsOfDot.getType (  )  )  {^49^^^^^34^64^switch  ( node.getType (  )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^49^50^51^^^34^64^switch  ( node.getType (  )  )  { case Token.FUNCTION: Node functionNameNode = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^51^^^^^36^66^Node functionNameNode = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^return functionNameNode.getString (  ) ;Node functionNameNode = node.getFirstChild (  ) ;^51^^^^^36^66^Node functionNameNode = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^return getName ( node.getFirstChild (  )  ) ;Node functionNameNode = node.getFirstChild (  ) ;^51^^^^^36^66^Node functionNameNode = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return outsideBrackets.getString (  ) ;^52^^^^^37^67^return functionNameNode.getString (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P7_Replace_Invocation]^return functionNameNode .getFirstChild (  )  ;^52^^^^^37^67^return functionNameNode.getString (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^52^^^^^37^67^return functionNameNode.getString (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^Node lhsOfDot = lhsOfDot.getFirstChild (  ) ;^54^^^^^39^69^Node lhsOfDot = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^54^^^^^39^69^Node lhsOfDot = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^Node rhsOfDot = node.getNext (  ) ;^55^^^^^40^70^Node rhsOfDot = lhsOfDot.getNext (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^55^56^^^^40^70^Node rhsOfDot = lhsOfDot.getNext (  ) ; String lhsOfDotName = getName ( lhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^56^57^^^^41^71^String lhsOfDotName = getName ( lhsOfDot ) ; String rhsOfDotName = getName ( rhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^57^^^^^42^72^String rhsOfDotName = getName ( rhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P3_Replace_Literal]^if  ( "otrototype".equals ( rhsOfDotName )  )  {^58^^^^^43^73^if  ( "prototype".equals ( rhsOfDotName )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^Node outsideBrackets = lhsOfDot.getFirstChild (  ) ;^64^^^^^49^79^Node outsideBrackets = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P7_Replace_Invocation]^Node outsideBrackets = node .getString (  )  ;^64^^^^^49^79^Node outsideBrackets = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^64^65^^^^49^79^Node outsideBrackets = node.getFirstChild (  ) ; Node insideBrackets = outsideBrackets.getNext (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^return getName ( node.getFirstChild (  )  ) ;Node outsideBrackets = node.getFirstChild (  ) ;^64^^^^^49^79^Node outsideBrackets = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^Node insideBrackets = rhsOfDot.getNext (  ) ;^65^^^^^50^80^Node insideBrackets = outsideBrackets.getNext (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^65^^^^^50^80^Node insideBrackets = outsideBrackets.getNext (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^66^67^^^^51^81^String nameOutsideBrackets = getName ( outsideBrackets ) ; String nameInsideBrackets = getName ( insideBrackets ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^67^^^^^52^82^String nameInsideBrackets = getName ( insideBrackets ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P3_Replace_Literal]^if  ( "prototypeototy".equals ( nameInsideBrackets )  )  {^68^^^^^53^83^if  ( "prototype".equals ( nameInsideBrackets )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^return rhsOfDot.getString (  ) ;^74^^^^^59^89^return node.getString (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^74^^^^^59^89^return node.getString (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return TokenStream.isJSIdentifier ( lhsOfDot.getString (  )  )  ? node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^76^77^^^^61^91^return TokenStream.isJSIdentifier ( node.getString (  )  )  ? node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^return TokenStream.isJSIdentifier ( outsideBrackets.getString (  )  )  ? node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^76^77^^^^61^91^return TokenStream.isJSIdentifier ( node.getString (  )  )  ? node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P8_Replace_Mix]^node .getFirstChild (  )   :  ( "__" + nextUniqueInt++ ) ;^77^^^^^62^92^node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^77^^^^^62^92^node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return NodeUtil.getStringValue ( rhsOfDot ) ;^79^^^^^64^94^return NodeUtil.getStringValue ( node ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^79^^^^^64^94^return NodeUtil.getStringValue ( node ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^return getName ( rhsOfDot.getFirstChild (  )  ) ;^83^^^^^68^98^return getName ( node.getFirstChild (  )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^83^^^^^68^98^return getName ( node.getFirstChild (  )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^for  ( Node child = lhsOfDot.getFirstChild (  ) ; child != null;^86^^^^^71^101^for  ( Node child = node.getFirstChild (  ) ; child != null;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^86^87^88^89^90^71^101^for  ( Node child = node.getFirstChild (  ) ; child != null; child = child.getNext (  )  )  { if  ( sb.length (  )  > 0 )  { sb.append ( delimiter ) ; }^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^return getName ( node.getFirstChild (  )  ) ;for  ( Node child = node.getFirstChild (  ) ; child != null;^86^^^^^71^101^for  ( Node child = node.getFirstChild (  ) ; child != null;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^child = outsideBrackets.getNext (  )  )  {^87^^^^^72^102^child = child.getNext (  )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^87^88^89^^^72^102^child = child.getNext (  )  )  { if  ( sb.length (  )  > 0 )  { sb.append ( delimiter ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P3_Replace_Literal]^if  ( sb.length() + 4  > 0 )  {^88^^^^^73^103^if  ( sb.length (  )  > 0 )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^sb.append ( getName ( rhsOfDot )  ) ;^91^^^^^76^106^sb.append ( getName ( child )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P7_Replace_Invocation]^sb .append ( delimiter )  ;^91^^^^^76^106^sb.append ( getName ( child )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^91^^^^^76^106^sb.append ( getName ( child )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P11_Insert_Donor_Statement]^sb.append ( delimiter ) ;sb.append ( getName ( child )  ) ;^91^^^^^76^106^sb.append ( getName ( child )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P5_Replace_Variable]^sb.append ( getName ( node )  ) ;^91^^^^^76^106^sb.append ( getName ( child )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P7_Replace_Invocation]^return sb .StringBuilder (  )  ;^93^^^^^78^108^return sb.toString (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[P14_Delete_Statement]^^93^^^^^78^108^return sb.toString (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
