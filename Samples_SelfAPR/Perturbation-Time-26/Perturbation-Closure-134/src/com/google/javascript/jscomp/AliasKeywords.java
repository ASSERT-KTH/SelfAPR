[P7_Replace_Invocation]^private final Map<Node, Node> nodes = Maps.newLinkedHashMap (  ) ;^81^^^^^76^86^private final Map<Node, Node> nodes = Maps.newHashMap (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P8_Replace_Mix]^private  Map<Node, Node> nodes = Maps.newHashMap (  ) ;^81^^^^^76^86^private final Map<Node, Node> nodes = Maps.newHashMap (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P3_Replace_Literal]^private boolean isAliased = true;^87^^^^^82^92^private boolean isAliased = false;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P1_Replace_Type]^private char aliasName;^89^^^^^84^94^private String aliasName;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P1_Replace_Type]^private  short  tokenId;^91^^^^^86^96^private int tokenId;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P1_Replace_Type]^static final char ALIAS_NULL = "$$ALIAS_NULL";^256^^^^^251^261^static final String ALIAS_NULL = "$$ALIAS_NULL";^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P3_Replace_Literal]^static final String ALIAS_NULL = "U";^256^^^^^251^261^static final String ALIAS_NULL = "$$ALIAS_NULL";^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P1_Replace_Type]^static final char ALIAS_TRUE = "$$ALIAS_TRUE";^257^^^^^252^262^static final String ALIAS_TRUE = "$$ALIAS_TRUE";^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P3_Replace_Literal]^static final String ALIAS_TRUE = "";^257^^^^^252^262^static final String ALIAS_TRUE = "$$ALIAS_TRUE";^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P1_Replace_Type]^static final char ALIAS_FALSE = "$$ALIAS_FALSE";^258^^^^^253^263^static final String ALIAS_FALSE = "$$ALIAS_FALSE";^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P3_Replace_Literal]^static final String ALIAS_FALSE = "$$ALIAS_FALSEIAS";^258^^^^^253^263^static final String ALIAS_FALSE = "$$ALIAS_FALSE";^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P1_Replace_Type]^static final char ALIAS_THROW = "$$ALIAS_THROW";^259^^^^^254^264^static final String ALIAS_THROW = "$$ALIAS_THROW";^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P3_Replace_Literal]^static final String ALIAS_THROW = "$$ALIAS_THROWT";^259^^^^^254^264^static final String ALIAS_THROW = "$$ALIAS_THROW";^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P8_Replace_Mix]^static final String ALIAS_THROW ;^259^^^^^254^264^static final String ALIAS_THROW = "$$ALIAS_THROW";^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P1_Replace_Type]^static final  short  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL = 6;^283^^^^^278^288^static final int MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL = 6;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P3_Replace_Literal]^static final int MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL = ;^283^^^^^278^288^static final int MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL = 6;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P8_Replace_Mix]^static final int MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  = null ;^283^^^^^278^288^static final int MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL = 6;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P1_Replace_Type]^static final  short  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW = ThrowAliasSpecification.estimateMinOccurrencesRequriedToAlias (  ) ;^289^290^^^^289^290^static final int MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW = ThrowAliasSpecification.estimateMinOccurrencesRequriedToAlias (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P8_Replace_Mix]^static final int MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW ;^289^290^^^^289^290^static final int MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW = ThrowAliasSpecification.estimateMinOccurrencesRequriedToAlias (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P8_Replace_Mix]^private  List<AliasSpecification> aliasSpecifications;^298^^^^^293^303^private final List<AliasSpecification> aliasSpecifications;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification   [VARIABLES] 
[P5_Replace_Variable]^this.aliasName = ALIAS_TRUE;^98^^^^^97^100^this.aliasName = aliasName;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P8_Replace_Mix]^this.aliasName =  ALIAS_THROW;^98^^^^^97^100^this.aliasName = aliasName;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P5_Replace_Variable]^this.tokenId = MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW;^99^^^^^97^100^this.tokenId = tokenId;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P5_Replace_Variable]^super ( ALIAS_TRUE, Token.THROW ) ;^167^^^^^166^168^super ( aliasName, Token.THROW ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String)   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P14_Delete_Statement]^^167^^^^^166^168^super ( aliasName, Token.THROW ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String)   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P11_Insert_Donor_Statement]^super ( aliasName, tokenId ) ;super ( aliasName, Token.THROW ) ;^167^^^^^166^168^super ( aliasName, Token.THROW ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String)   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P5_Replace_Variable]^super ( ALIAS_TRUE, tokenId ) ;^226^^^^^225^227^super ( aliasName, tokenId ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P5_Replace_Variable]^super ( aliasName, MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW ) ;^226^^^^^225^227^super ( aliasName, tokenId ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P5_Replace_Variable]^super (  tokenId ) ;^226^^^^^225^227^super ( aliasName, tokenId ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P5_Replace_Variable]^super ( aliasName ) ;^226^^^^^225^227^super ( aliasName, tokenId ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P5_Replace_Variable]^super ( tokenId, aliasName ) ;^226^^^^^225^227^super ( aliasName, tokenId ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P14_Delete_Statement]^^226^^^^^225^227^super ( aliasName, tokenId ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P11_Insert_Donor_Statement]^super ( aliasName, Token.THROW ) ;super ( aliasName, tokenId ) ;^226^^^^^225^227^super ( aliasName, tokenId ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P8_Replace_Mix]^this.compiler =  null;^307^^^^^306^315^this.compiler = compiler;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  specification  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P7_Replace_Invocation]^aliasSpecifications = needsAliases (  ) ;^308^^^^^306^315^aliasSpecifications = createAliasSpecifications (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  specification  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P8_Replace_Mix]^aliasSpecifications  =  aliasSpecifications ;^308^^^^^306^315^aliasSpecifications = createAliasSpecifications (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  specification  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P7_Replace_Invocation]^aliasTypes = Maps.newHashMap (  ) ;^309^^^^^306^315^aliasTypes = Maps.newLinkedHashMap (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  specification  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P8_Replace_Mix]^aliasTypes ;^309^^^^^306^315^aliasTypes = Maps.newLinkedHashMap (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  specification  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P11_Insert_Donor_Statement]^aliasNames = Sets.newLinkedHashSet (  ) ;aliasTypes = Maps.newLinkedHashMap (  ) ;^309^^^^^306^315^aliasTypes = Maps.newLinkedHashMap (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  specification  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P14_Delete_Statement]^^309^310^^^^306^315^aliasTypes = Maps.newLinkedHashMap (  ) ; aliasNames = Sets.newLinkedHashSet (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  specification  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P8_Replace_Mix]^aliasNames  =  aliasNames ;^310^^^^^306^315^aliasNames = Sets.newLinkedHashSet (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  specification  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P11_Insert_Donor_Statement]^aliasTypes = Maps.newLinkedHashMap (  ) ;aliasNames = Sets.newLinkedHashSet (  ) ;^310^^^^^306^315^aliasNames = Sets.newLinkedHashSet (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  specification  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P14_Delete_Statement]^^310^^^^^306^315^aliasNames = Sets.newLinkedHashSet (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  specification  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P5_Replace_Variable]^aliasTypes.put ( specification.getTokenId (  )  ) ;^312^^^^^306^315^aliasTypes.put ( specification.getTokenId (  ) , specification ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  specification  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P7_Replace_Invocation]^aliasTypes.put ( specification.insertAliasDeclaration (  ) , specification ) ;^312^^^^^306^315^aliasTypes.put ( specification.getTokenId (  ) , specification ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  specification  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P8_Replace_Mix]^aliasTypes.put ( specification .getAliasName (  )  , specification ) ;^312^^^^^306^315^aliasTypes.put ( specification.getTokenId (  ) , specification ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  specification  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P14_Delete_Statement]^^312^313^314^^^306^315^aliasTypes.put ( specification.getTokenId (  ) , specification ) ; aliasNames.add ( specification.getAliasName (  )  ) ; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  specification  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P7_Replace_Invocation]^aliasNames.contains ( specification.getAliasName (  )  ) ;^313^^^^^306^315^aliasNames.add ( specification.getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  specification  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P7_Replace_Invocation]^aliasNames.add ( specification.doAlias (  )  ) ;^313^^^^^306^315^aliasNames.add ( specification.getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  specification  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P14_Delete_Statement]^^313^314^^^^306^315^aliasNames.add ( specification.getAliasName (  )  ) ; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  specification  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  
[P1_Replace_Type]^final  long  type = n.getType (  ) ;^44^^^^^43^50^final int type = n.getType (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^final int type = parent.getType (  ) ;^44^^^^^43^50^final int type = n.getType (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^final int type = n.Node (  ) ;^44^^^^^43^50^final int type = n.getType (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^final int type = n .getString (  )  ;^44^^^^^43^50^final int type = n.getType (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^44^^^^^43^50^final int type = n.getType (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^if  ( isAliasableType ( tokenId )  )  {^45^^^^^43^50^if  ( isAliasableType ( type )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^if  ( isAliasName ( type )  )  {^45^^^^^43^50^if  ( isAliasableType ( type )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^if  ( isAliasName ( tokenId )  )  {^45^^^^^43^50^if  ( isAliasableType ( type )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P15_Unwrap_Block]^visitAliasableNode(n, parent);^45^46^47^48^49^43^50^if  ( isAliasableType ( type )  )  { visitAliasableNode ( n, parent ) ; } else if  ( type == Token.NAME )  { visitNameNode ( n ) ; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P16_Remove_Block]^^45^46^47^48^49^43^50^if  ( isAliasableType ( type )  )  { visitAliasableNode ( n, parent ) ; } else if  ( type == Token.NAME )  { visitNameNode ( n ) ; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P2_Replace_Operator]^} else if  ( type <= Token.NAME )  {^47^^^^^43^50^} else if  ( type == Token.NAME )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^} else if  ( tokenId == Token.NAME )  {^47^^^^^43^50^} else if  ( type == Token.NAME )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P6_Replace_Expression]^} else {^47^^^^^43^50^} else if  ( type == Token.NAME )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P15_Unwrap_Block]^visitNameNode(n);^47^48^49^^^43^50^} else if  ( type == Token.NAME )  { visitNameNode ( n ) ; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P16_Remove_Block]^^47^48^49^^^43^50^} else if  ( type == Token.NAME )  { visitNameNode ( n ) ; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P13_Insert_Block]^if  (  ( n.getType (  )  )  !=  ( NAME )  )  {     return false; }^47^^^^^43^50^[Delete]^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^visitNameNode ( parent ) ;^48^^^^^43^50^visitNameNode ( n ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^48^^^^^43^50^visitNameNode ( n ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^visitAliasableNode ( n, parent ) ;visitNameNode ( n ) ;^48^^^^^43^50^visitNameNode ( n ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^visitAliasableNode (  parent ) ;^46^^^^^43^50^visitAliasableNode ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^visitAliasableNode ( n ) ;^46^^^^^43^50^visitAliasableNode ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^visitAliasableNode ( parent, n ) ;^46^^^^^43^50^visitAliasableNode ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^46^^^^^43^50^visitAliasableNode ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^aliasNode ( n, parent ) ;visitAliasableNode ( n, parent ) ;^46^^^^^43^50^visitAliasableNode ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^visitNameNode ( n ) ;visitAliasableNode ( n, parent ) ;^46^^^^^43^50^visitAliasableNode ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^aliasableNodes.visit ( n, parent ) ;visitAliasableNode ( n, parent ) ;^46^^^^^43^50^visitAliasableNode ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P2_Replace_Operator]^} else if  ( type != Token.NAME )  {^47^^^^^43^50^} else if  ( type == Token.NAME )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  NodeTraversal  t  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^AliasSpecification aliasableNodes = aliasTypes.get ( parent.getType (  )  ) ;^57^^^^^56^59^AliasSpecification aliasableNodes = aliasTypes.get ( n.getType (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^AliasSpecification aliasableNodes = n.get ( aliasTypes.getType (  )  ) ;^57^^^^^56^59^AliasSpecification aliasableNodes = aliasTypes.get ( n.getType (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^AliasSpecification aliasableNodes = aliasTypes.containsKey ( n.getType (  )  ) ;^57^^^^^56^59^AliasSpecification aliasableNodes = aliasTypes.get ( n.getType (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^AliasSpecification aliasableNodes = aliasTypes.get ( n.Node (  )  ) ;^57^^^^^56^59^AliasSpecification aliasableNodes = aliasTypes.get ( n.getType (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^AliasSpecification aliasableNodes = aliasTypes.get ( parent.Node (  )  ) ;^57^^^^^56^59^AliasSpecification aliasableNodes = aliasTypes.get ( n.getType (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^AliasSpecification aliasableNodes = aliasTypes.get ( n .getString (  )   ) ;^57^^^^^56^59^AliasSpecification aliasableNodes = aliasTypes.get ( n.getType (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^AliasSpecification aliasableNodes = aliasTypes.containsKey ( parent.getType (  )  ) ;^57^^^^^56^59^AliasSpecification aliasableNodes = aliasTypes.get ( n.getType (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^57^58^59^^^56^59^AliasSpecification aliasableNodes = aliasTypes.get ( n.getType (  )  ) ; aliasableNodes.visit ( n, parent ) ; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^aliasableNodes.visit ( n, n ) ;^58^^^^^56^59^aliasableNodes.visit ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^aliasableNodes.visit (  parent ) ;^58^^^^^56^59^aliasableNodes.visit ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^aliasableNodes.visit ( n ) ;^58^^^^^56^59^aliasableNodes.visit ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^58^^^^^56^59^aliasableNodes.visit ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^aliasNode ( n, parent ) ;aliasableNodes.visit ( n, parent ) ;^58^^^^^56^59^aliasableNodes.visit ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^visitAliasableNode ( n, parent ) ;aliasableNodes.visit ( n, parent ) ;^58^^^^^56^59^aliasableNodes.visit ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^nodes.put ( n, parent ) ;aliasableNodes.visit ( n, parent ) ;^58^^^^^56^59^aliasableNodes.visit ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  aliasableNodes  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^if  ( addAliasNodes ( n )  )  {^66^^^^^65^70^if  ( isAliasDefinition ( n )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(("Existing alias definition for " + (com.google.javascript.rhino.Node.tokenToName(n.getType()))));^66^67^68^69^^65^70^if  ( isAliasDefinition ( n )  )  { throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P16_Remove_Block]^^66^67^68^69^^65^70^if  ( isAliasDefinition ( n )  )  { throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P2_Replace_Operator]^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  >=  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^throw new IllegalStateException ( "inixisting alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^throw new IllegalStateException ( "Existing alias definition for " + Node.Node ( n.getType (  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^throw new IllegalStateException ( "Existing alias definition for " + Node .cloneNode (  )   ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.Node (  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P13_Insert_Block]^if  ( isAliasDefinition ( n )  )  {     throw new IllegalStateException (  ( "Existing alias definition for " +  ( tokenToName ( n.getType (  )  )  )  )  ) ; }^67^^^^^65^70^[Delete]^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P2_Replace_Operator]^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  ||  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^throw new IllegalStateException ( "efini" + Node.tokenToName ( n.getType (  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^"Existing alias definition for " + Node.Node ( n.getType (  )  )  ) ;^68^^^^^65^70^"Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^"Existing alias definition for " + Node .cloneNode (  )   ) ;^68^^^^^65^70^"Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^"Existing alias definition for " + Node.tokenToName ( n.Node (  )  )  ) ;^68^^^^^65^70^"Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^68^69^^^^65^70^"Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^"Existing alias definition for " + Node.tokenToName ( n .getString (  )   )  ) ;^68^^^^^65^70^"Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^throw new IllegalStateException ( "Exis" + Node.tokenToName ( n.getType (  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P2_Replace_Operator]^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  <=  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^throw new IllegalStateException ( "Existing alias definition for ting alias definiti" + Node.tokenToName ( n.getType (  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^return ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^nodes.put ( n, n ) ;^103^^^^^102^104^nodes.put ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^nodes.put (  parent ) ;^103^^^^^102^104^nodes.put ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^nodes.put ( n ) ;^103^^^^^102^104^nodes.put ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^nodes.put ( parent, n ) ;^103^^^^^102^104^nodes.put ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^103^^^^^102^104^nodes.put ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^aliasNode ( n, parent ) ;nodes.put ( n, parent ) ;^103^^^^^102^104^nodes.put ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^aliasableNodes.visit ( n, parent ) ;nodes.put ( n, parent ) ;^103^^^^^102^104^nodes.put ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] visit [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P2_Replace_Operator]^if  ( nodes.size (  )  > minOccurrencesRequiredToAlias (  )  )  {^114^^^^^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^if  ( nodes.size() - 9  >= minOccurrencesRequiredToAlias (  )  )  {^114^^^^^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^if  ( nodes.isEmpty (  )  >= minOccurrencesRequiredToAlias (  )  )  {^114^^^^^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^if  ( nodes.size (  )  >= getTokenId (  )  )  {^114^^^^^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P15_Unwrap_Block]^insertAliasDeclaration(codeRoot); isAliased = true; return true;^114^115^116^117^118^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  { insertAliasDeclaration ( codeRoot ) ; isAliased = true; return true; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P16_Remove_Block]^^114^115^116^117^118^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  { insertAliasDeclaration ( codeRoot ) ; isAliased = true; return true; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^isAliased = false;^116^^^^^113^120^isAliased = true;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^codeChanged = true;isAliased = true;^116^^^^^113^120^isAliased = true;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^return false;^117^^^^^113^120^return true;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^maybeInsertAliasDeclarationIntoParseTree ( codeRoot ) ;^115^^^^^113^120^insertAliasDeclaration ( codeRoot ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^115^^^^^113^120^insertAliasDeclaration ( codeRoot ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^if  ( nodes.size() + 6  >= minOccurrencesRequiredToAlias (  )  )  {^114^^^^^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^if  ( nodes.size() - 3  >= minOccurrencesRequiredToAlias (  )  )  {^114^^^^^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^115^116^^^^113^120^insertAliasDeclaration ( codeRoot ) ; isAliased = true;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P12_Insert_Condition]^if  ( spec.maybeInsertAliasDeclarationIntoParseTree ( codeRoot )  )  { insertAliasDeclaration ( codeRoot ) ; }^115^^^^^113^120^insertAliasDeclaration ( codeRoot ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^return true;^119^^^^^113^120^return false;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node parent = entry.getValue (  ) ;Node n = entry.getKey (  ) ;^129^^^^^126^135^Node n = entry.getKey (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^Node parent = this.getValue (  ) ;^130^^^^^126^135^Node parent = entry.getValue (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^Node parent = 2.getValue (  ) ;^130^^^^^126^135^Node parent = entry.getValue (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node n = entry.getKey (  ) ;Node parent = entry.getValue (  ) ;^130^^^^^126^135^Node parent = entry.getValue (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^for  ( Map.Entry<Node, Node> entry : nodes.size (  )  )  {^128^^^^^126^135^for  ( Map.Entry<Node, Node> entry : nodes.entrySet (  )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^for  ( Map.Entry<Node, Node> entry : this.size (  )  )  {^128^^^^^126^135^for  ( Map.Entry<Node, Node> entry : nodes.entrySet (  )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^128^129^130^131^132^126^135^for  ( Map.Entry<Node, Node> entry : nodes.entrySet (  )  )  { Node n = entry.getKey (  ) ; Node parent = entry.getValue (  ) ; aliasNode ( n, parent ) ; compiler.reportCodeChange (  ) ; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^Node n = entry .getValue (  )  ;^129^^^^^126^135^Node n = entry.getKey (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^129^130^^^^126^135^Node n = entry.getKey (  ) ; Node parent = entry.getValue (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^130^131^^^^126^135^Node parent = entry.getValue (  ) ; aliasNode ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^aliasNode (  parent ) ;^131^^^^^126^135^aliasNode ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^aliasNode ( n ) ;^131^^^^^126^135^aliasNode ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^aliasNode ( parent, n ) ;^131^^^^^126^135^aliasNode ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^visit ( n, parent ) ;^131^^^^^126^135^aliasNode ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^131^^^^^126^135^aliasNode ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^visitAliasableNode ( n, parent ) ;aliasNode ( n, parent ) ;^131^^^^^126^135^aliasNode ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^aliasableNodes.visit ( n, parent ) ;aliasNode ( n, parent ) ;^131^^^^^126^135^aliasNode ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^nodes.put ( n, parent ) ;aliasNode ( n, parent ) ;^131^^^^^126^135^aliasNode ( n, parent ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^compiler.getNodeForCodeInsertion (  ) ;^132^^^^^126^135^compiler.reportCodeChange (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^132^^^^^126^135^compiler.reportCodeChange (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^Node parent = entry .getKey (  )  ;^130^^^^^126^135^Node parent = entry.getValue (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^for  ( Map.Entry<Node, Node> entry : this.entrySet (  )  )  {^128^^^^^126^135^for  ( Map.Entry<Node, Node> entry : nodes.entrySet (  )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^130^^^^^126^135^Node parent = entry.getValue (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Set  aliasNames  Node  n  parent  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return type;^138^^^^^137^139^return tokenId;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] getTokenId [RETURN_TYPE] int   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return ALIAS_TRUE;^142^^^^^141^143^return aliasName;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] getAliasName [RETURN_TYPE] String   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^return ALIAS_THROW;^142^^^^^141^143^return aliasName;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] getAliasName [RETURN_TYPE] String   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^Node name = NodeUtil.newName ( getAliasName (  ) , parent, getAliasName (  )  ) ;^173^^^^^172^177^Node name = NodeUtil.newName ( getAliasName (  ) , throwNode, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^Node name = NodeUtil.newName ( getTokenId (  ) , throwNode, getAliasName (  )  ) ;^173^^^^^172^177^Node name = NodeUtil.newName ( getAliasName (  ) , throwNode, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ;Node name = NodeUtil.newName ( getAliasName (  ) , throwNode, getAliasName (  )  ) ;^173^^^^^172^177^Node name = NodeUtil.newName ( getAliasName (  ) , throwNode, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;Node name = NodeUtil.newName ( getAliasName (  ) , throwNode, getAliasName (  )  ) ;^173^^^^^172^177^Node name = NodeUtil.newName ( getAliasName (  ) , throwNode, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^173^^^^^172^177^Node name = NodeUtil.newName ( getAliasName (  ) , throwNode, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^173^174^^^^172^177^Node name = NodeUtil.newName ( getAliasName (  ) , throwNode, getAliasName (  )  ) ; Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P4_Replace_Constructor]^Node aliasCall = new Node ( Token.CALL,  throwNode.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P4_Replace_Constructor]^Node aliasCall = new Node ( Token.CALL, name.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^Node aliasCall = new Node ( Token.CALL, throwNode, throwNode.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^Node aliasCall = new Node ( Token.CALL, name, parent.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^Node aliasCall = new Node ( Token. name, throwNode.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^Node aliasCall = new Node ( Token.CALL, throwNode, name.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^Node aliasCall = new Node ( Token.CALL, name, throwNode.Node (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^Node aliasCall = new Node ( Token.CALL, name, throwNode .getFirstChild (  )   ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^174^175^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ; Node exprResult = new Node ( Token.EXPR_RESULT, aliasCall ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^Node exprResult = new Node ( Token.EXPR_RESULT ) ;^175^^^^^172^177^Node exprResult = new Node ( Token.EXPR_RESULT, aliasCall ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^Node exprResult = new Node ( Token. aliasCall ) ;^175^^^^^172^177^Node exprResult = new Node ( Token.EXPR_RESULT, aliasCall ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^Node exprResult = new Node ( Token.EXPR_RESULT, throwNode ) ;^175^^^^^172^177^Node exprResult = new Node ( Token.EXPR_RESULT, aliasCall ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR ) ;Node exprResult = new Node ( Token.EXPR_RESULT, aliasCall ) ;^175^^^^^172^177^Node exprResult = new Node ( Token.EXPR_RESULT, aliasCall ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^parent.replaceChild ( name, exprResult ) ;^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^parent.replaceChild ( throwNode, parent ) ;^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^parent.replaceChild (  exprResult ) ;^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^parent.replaceChild ( throwNode ) ;^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^parent.replaceChild ( exprResult, throwNode ) ;^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^parent .getFirstChild (  )  ;^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^parent.replaceChild ( n, aliasNode ) ;parent.replaceChild ( throwNode, exprResult ) ;^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasCall  exprResult  name  parent  throwNode  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^codeRoot.addChildrenToFront ( createAliasFunctionNode ( getAliasName (  )  )  ) ;^184^^^^^183^185^codeRoot.addChildToFront ( createAliasFunctionNode ( getAliasName (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^codeRoot.addChildToFront ( estimateMinOccurrencesRequriedToAlias ( getAliasName (  )  )  ) ;^184^^^^^183^185^codeRoot.addChildToFront ( createAliasFunctionNode ( getAliasName (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^codeRoot.addChildToFront ( createAliasFunctionNode ( getTokenId (  )  )  ) ;^184^^^^^183^185^codeRoot.addChildToFront ( createAliasFunctionNode ( getAliasName (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^184^^^^^183^185^codeRoot.addChildToFront ( createAliasFunctionNode ( getAliasName (  )  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return type;^190^^^^^189^191^return MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] minOccurrencesRequiredToAlias [RETURN_TYPE] int   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^Node alias = createAliasFunctionNode ( "T" ) ;^206^^^^^197^208^Node alias = createAliasFunctionNode ( "TT" ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  alias  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^Node alias = ThrowAliasSpecification ( "TT" ) ;^206^^^^^197^208^Node alias = createAliasFunctionNode ( "TT" ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  alias  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^206^^^^^197^208^Node alias = createAliasFunctionNode ( "TT" ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  alias  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P2_Replace_Operator]^return InlineCostEstimator.getCost ( alias )  ||  / 2 + 1;^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  alias  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P2_Replace_Operator]^return InlineCostEstimator.getCost ( alias )  - 2 + 1;^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  alias  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^return InlineCostEstimator.getCost ( alias )  / 7 + 1;^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  alias  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^return InlineCostEstimator.getCost ( alias )  / 2 ;^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  alias  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^return InlineCostEstimator.getCost ( alias )  / 2  |  1;^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  alias  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  alias  List  aliasSpecifications  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^Node parameterName = Node.newString ( Token.NAME, "" ) ;^215^^^^^214^220^Node parameterName = Node.newString ( Token.NAME, "t" ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^Node parameterName = Node.Node ( Token.NAME, "t" ) ;^215^^^^^214^220^Node parameterName = Node.newString ( Token.NAME, "t" ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^Node parameterName = Node .getString (  )  ;^215^^^^^214^220^Node parameterName = Node.newString ( Token.NAME, "t" ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR ) ;Node parameterName = Node.newString ( Token.NAME, "t" ) ;^215^^^^^214^220^Node parameterName = Node.newString ( Token.NAME, "t" ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^215^216^^^^214^220^Node parameterName = Node.newString ( Token.NAME, "t" ) ; List<Node> parameters = Lists.newArrayList ( parameterName.cloneNode (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^List<Node> parameters = Lists.newArrayList ( parameterName.Node (  )  ) ;^216^^^^^214^220^List<Node> parameters = Lists.newArrayList ( parameterName.cloneNode (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^List<Node> parameters = Lists.newArrayList ( throwStatement.Node (  )  ) ;^216^^^^^214^220^List<Node> parameters = Lists.newArrayList ( parameterName.cloneNode (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^List<Node> parameters = Lists.newArrayList ( parameterName .Node ( tokenId )   ) ;^216^^^^^214^220^List<Node> parameters = Lists.newArrayList ( parameterName.cloneNode (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^216^^^^^214^220^List<Node> parameters = Lists.newArrayList ( parameterName.cloneNode (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^List<Node> parameters = Lists.newArrayList ( throwStatement.cloneNode (  )  ) ;^216^^^^^214^220^List<Node> parameters = Lists.newArrayList ( parameterName.cloneNode (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^216^217^^^^214^220^List<Node> parameters = Lists.newArrayList ( parameterName.cloneNode (  )  ) ; Node throwStatement = new Node ( Token.THROW, parameterName ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^Node throwStatement = new Node ( Token.THROW, throwStatement ) ;^217^^^^^214^220^Node throwStatement = new Node ( Token.THROW, parameterName ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^Node throwStatement = new Node ( Token.THROW ) ;^217^^^^^214^220^Node throwStatement = new Node ( Token.THROW, parameterName ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^Node throwStatement = new Node ( Token. parameterName ) ;^217^^^^^214^220^Node throwStatement = new Node ( Token.THROW, parameterName ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^Node throwStatement = new Node ( Token.THROW, body ) ;^217^^^^^214^220^Node throwStatement = new Node ( Token.THROW, parameterName ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR ) ;Node throwStatement = new Node ( Token.THROW, parameterName ) ;^217^^^^^214^220^Node throwStatement = new Node ( Token.THROW, parameterName ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node body = new Node ( Token.BLOCK, throwStatement ) ;Node throwStatement = new Node ( Token.THROW, parameterName ) ;^217^^^^^214^220^Node throwStatement = new Node ( Token.THROW, parameterName ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^Node body = new Node ( Token.BLOCK, parameterName ) ;^218^^^^^214^220^Node body = new Node ( Token.BLOCK, throwStatement ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^Node body = new Node ( Token.BLOCK ) ;^218^^^^^214^220^Node body = new Node ( Token.BLOCK, throwStatement ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^Node body = new Node ( Token. throwStatement ) ;^218^^^^^214^220^Node body = new Node ( Token.BLOCK, throwStatement ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR ) ;Node body = new Node ( Token.BLOCK, throwStatement ) ;^218^^^^^214^220^Node body = new Node ( Token.BLOCK, throwStatement ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node throwStatement = new Node ( Token.THROW, parameterName ) ;Node body = new Node ( Token.BLOCK, throwStatement ) ;^218^^^^^214^220^Node body = new Node ( Token.BLOCK, throwStatement ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^return NodeUtil.newFunctionNode ( aliasName, parameters, body, --1, --1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -4, -4 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return NodeUtil.newFunctionNode ( ALIAS_TRUE, parameters, body, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return NodeUtil.newFunctionNode ( aliasName, parameters, throwStatement, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return NodeUtil.newFunctionNode (  parameters, body, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return NodeUtil.newFunctionNode ( aliasName,  body, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return NodeUtil.newFunctionNode ( aliasName, parameters,  -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return NodeUtil.newFunctionNode ( body, parameters, aliasName, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return NodeUtil.newFunctionNode ( aliasName, body, parameters, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -0, -0 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -tokenId, -tokenId ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -5, -5 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return NodeUtil.newFunctionNode ( aliasName, 1, body, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return NodeUtil.newFunctionNode ( parameters, aliasName, body, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^return NodeUtil .newName ( ALIAS_THROW , parameterName , aliasName )  ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  body  parameterName  throwStatement  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return type;^232^^^^^231^233^return MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] minOccurrencesRequiredToAlias [RETURN_TYPE] int   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , parent, getAliasName (  )  ) ;^238^^^^^237^240^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasNode  n  parent  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^Node aliasNode = NodeUtil.newName ( getTokenId (  ) , n, getAliasName (  )  ) ;^238^^^^^237^240^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasNode  n  parent  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ;^238^^^^^237^240^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasNode  n  parent  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node name = NodeUtil.newName ( getAliasName (  ) , throwNode, getAliasName (  )  ) ;Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ;^238^^^^^237^240^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasNode  n  parent  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^238^239^^^^237^240^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ; parent.replaceChild ( n, aliasNode ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasNode  n  parent  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^238^^^^^237^240^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasNode  n  parent  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^parent.replaceChild ( parent, aliasNode ) ;^239^^^^^237^240^parent.replaceChild ( n, aliasNode ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasNode  n  parent  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^parent.replaceChild ( n, parent ) ;^239^^^^^237^240^parent.replaceChild ( n, aliasNode ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasNode  n  parent  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^parent.replaceChild (  aliasNode ) ;^239^^^^^237^240^parent.replaceChild ( n, aliasNode ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasNode  n  parent  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^parent.replaceChild ( n ) ;^239^^^^^237^240^parent.replaceChild ( n, aliasNode ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasNode  n  parent  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^239^^^^^237^240^parent.replaceChild ( n, aliasNode ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasNode  n  parent  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^parent.replaceChild ( throwNode, exprResult ) ;parent.replaceChild ( n, aliasNode ) ;^239^^^^^237^240^parent.replaceChild ( n, aliasNode ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  aliasNode  n  parent  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^Node varNode = new Node ( Token.null ) ;^247^^^^^246^253^Node varNode = new Node ( Token.VAR ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node body = new Node ( Token.BLOCK, throwStatement ) ;Node varNode = new Node ( Token.VAR ) ;^247^^^^^246^253^Node varNode = new Node ( Token.VAR ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node exprResult = new Node ( Token.EXPR_RESULT, aliasCall ) ;Node varNode = new Node ( Token.VAR ) ;^247^^^^^246^253^Node varNode = new Node ( Token.VAR ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node throwStatement = new Node ( Token.THROW, parameterName ) ;Node varNode = new Node ( Token.VAR ) ;^247^^^^^246^253^Node varNode = new Node ( Token.VAR ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node parameterName = Node.newString ( Token.NAME, "t" ) ;Node varNode = new Node ( Token.VAR ) ;^247^^^^^246^253^Node varNode = new Node ( Token.VAR ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node value = new Node ( getTokenId (  )  ) ;Node varNode = new Node ( Token.VAR ) ;^247^^^^^246^253^Node varNode = new Node ( Token.VAR ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^Node value = new Node ( getAliasName (  )  ) ;^248^^^^^246^253^Node value = new Node ( getTokenId (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR ) ;Node value = new Node ( getTokenId (  )  ) ;^248^^^^^246^253^Node value = new Node ( getTokenId (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^248^^^^^246^253^Node value = new Node ( getTokenId (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^Node name = NodeUtil.newName ( getAliasName (  ) , value, getAliasName (  )  ) ;^249^^^^^246^253^Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^Node name = NodeUtil.newName ( getTokenId (  ) , varNode, getAliasName (  )  ) ;^249^^^^^246^253^Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ;Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;^249^^^^^246^253^Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^Node name = NodeUtil.newName ( getAliasName (  ) , throwNode, getAliasName (  )  ) ;Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;^249^^^^^246^253^Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^Node name = NodeUtil .newFunctionNode ( ALIAS_FALSE , 4 , codeRoot , type , type )   ) ;^249^^^^^246^253^Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^Node name = NodeUtil.newName ( getTokenId (  ) , value, getAliasName (  )  ) ;^249^^^^^246^253^Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^249^^^^^246^253^Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^249^250^^^^246^253^Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ; name.addChildToBack ( value ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^name.addChildToBack ( varNode ) ;^250^^^^^246^253^name.addChildToBack ( value ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^name.replaceChild ( value ) ;^250^^^^^246^253^name.addChildToBack ( value ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^name .addChildToFront ( varNode )  ;^250^^^^^246^253^name.addChildToBack ( value ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^name.replaceChild ( varNode ) ;^250^^^^^246^253^name.addChildToBack ( value ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^250^251^^^^246^253^name.addChildToBack ( value ) ; varNode.addChildToBack ( name ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^codeRoot.addChildrenToFront ( varNode ) ;name.addChildToBack ( value ) ;^250^^^^^246^253^name.addChildToBack ( value ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^varNode.addChildToBack ( name ) ;name.addChildToBack ( value ) ;^250^^^^^246^253^name.addChildToBack ( value ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^varNode.addChildToBack ( value ) ;^251^^^^^246^253^varNode.addChildToBack ( name ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^varNode.replaceChild ( name ) ;^251^^^^^246^253^varNode.addChildToBack ( name ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^varNode .addChildToFront ( value )  ;^251^^^^^246^253^varNode.addChildToBack ( name ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^varNode .addChildToFront ( codeRoot )  ;^251^^^^^246^253^varNode.addChildToBack ( name ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^251^^^^^246^253^varNode.addChildToBack ( name ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^codeRoot.addChildrenToFront ( varNode ) ;varNode.addChildToBack ( name ) ;^251^^^^^246^253^varNode.addChildToBack ( name ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^name.addChildToBack ( value ) ;varNode.addChildToBack ( name ) ;^251^^^^^246^253^varNode.addChildToBack ( name ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^codeRoot.addChildrenToFront ( value ) ;^252^^^^^246^253^codeRoot.addChildrenToFront ( varNode ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^codeRoot.replaceChild ( varNode ) ;^252^^^^^246^253^codeRoot.addChildrenToFront ( varNode ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^252^^^^^246^253^codeRoot.addChildrenToFront ( varNode ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^varNode.addChildToBack ( name ) ;codeRoot.addChildrenToFront ( varNode ) ;^252^^^^^246^253^codeRoot.addChildrenToFront ( varNode ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^name.addChildToBack ( value ) ;codeRoot.addChildrenToFront ( varNode ) ;^252^^^^^246^253^codeRoot.addChildrenToFront ( varNode ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  Node  codeRoot  name  value  varNode  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler, externs, new FindAliasableNodes (  )  ) ;^322^^^^^320^333^NodeTraversal.traverse ( compiler, root, new FindAliasableNodes (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  Node  externs  root  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler,  new FindAliasableNodes (  )  ) ;^322^^^^^320^333^NodeTraversal.traverse ( compiler, root, new FindAliasableNodes (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  Node  externs  root  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^NodeTraversal.traverse (  root, new FindAliasableNodes (  )  ) ;^322^^^^^320^333^NodeTraversal.traverse ( compiler, root, new FindAliasableNodes (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  Node  externs  root  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^NodeTraversal.traverse ( root, compiler, new FindAliasableNodes (  )  ) ;^322^^^^^320^333^NodeTraversal.traverse ( compiler, root, new FindAliasableNodes (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  Node  externs  root  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^322^^^^^320^333^NodeTraversal.traverse ( compiler, root, new FindAliasableNodes (  )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  Node  externs  root  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^if  ( createAliasSpecifications (  )  )  {^324^^^^^320^333^if  ( needsAliases (  )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  Node  externs  root  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^isAliasDefinition ( compiler.getNodeForCodeInsertion ( null )  ) ;^326^^^^^320^333^addAliasNodes ( compiler.getNodeForCodeInsertion ( null )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  Node  externs  root  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^326^^^^^320^333^addAliasNodes ( compiler.getNodeForCodeInsertion ( null )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  Node  externs  root  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^addAliasNodes ( compiler .reportCodeChange (  )   ) ;^326^^^^^320^333^addAliasNodes ( compiler.getNodeForCodeInsertion ( null )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  Node  externs  root  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^spec.insertAliasDeclaration ( compiler ) ;^330^^^^^320^333^spec.doAlias ( compiler ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  Node  externs  root  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^spec .getAliasName (  )  ;^330^^^^^320^333^spec.doAlias ( compiler ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  Node  externs  root  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^330^^^^^320^333^spec.doAlias ( compiler ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  Node  externs  root  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^if  ( !spec.nodes.get (  )  )  {^337^^^^^335^343^if  ( !spec.nodes.isEmpty (  )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] needsAliases [RETURN_TYPE] boolean   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^if  ( !spec.nodes .get ( null )   )  {^337^^^^^335^343^if  ( !spec.nodes.isEmpty (  )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] needsAliases [RETURN_TYPE] boolean   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P15_Unwrap_Block]^return true;^337^338^339^^^335^343^if  ( !spec.nodes.isEmpty (  )  )  { return true; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] needsAliases [RETURN_TYPE] boolean   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P16_Remove_Block]^^337^338^339^^^335^343^if  ( !spec.nodes.isEmpty (  )  )  { return true; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] needsAliases [RETURN_TYPE] boolean   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P13_Insert_Block]^if  ( ! ( isAliasName ( n.getString (  )  )  )  )  {     return false; }^337^^^^^335^343^[Delete]^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] needsAliases [RETURN_TYPE] boolean   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^return false;^338^^^^^335^343^return true;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] needsAliases [RETURN_TYPE] boolean   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^return true;^342^^^^^335^343^return false;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] needsAliases [RETURN_TYPE] boolean   [VARIABLES] AbstractCompiler  compiler  boolean  isAliased  Set  aliasNames  AliasSpecification  spec  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^boolean codeChanged = true;^350^^^^^349^361^boolean codeChanged = false;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] addAliasNodes [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  AliasSpecification  spec  Node  codeRoot  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^if  ( codeRoot.maybeInsertAliasDeclarationIntoParseTree ( spec )  )  {^353^^^^^349^361^if  ( spec.maybeInsertAliasDeclarationIntoParseTree ( codeRoot )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] addAliasNodes [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  AliasSpecification  spec  Node  codeRoot  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^if  ( spec.visit ( codeRoot )  )  {^353^^^^^349^361^if  ( spec.maybeInsertAliasDeclarationIntoParseTree ( codeRoot )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] addAliasNodes [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  AliasSpecification  spec  Node  codeRoot  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P15_Unwrap_Block]^codeChanged = true;^353^354^355^^^349^361^if  ( spec.maybeInsertAliasDeclarationIntoParseTree ( codeRoot )  )  { codeChanged = true; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] addAliasNodes [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  AliasSpecification  spec  Node  codeRoot  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P16_Remove_Block]^^353^354^355^^^349^361^if  ( spec.maybeInsertAliasDeclarationIntoParseTree ( codeRoot )  )  { codeChanged = true; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] addAliasNodes [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  AliasSpecification  spec  Node  codeRoot  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^codeChanged = false;^354^^^^^349^361^codeChanged = true;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] addAliasNodes [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  AliasSpecification  spec  Node  codeRoot  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P11_Insert_Donor_Statement]^isAliased = true;codeChanged = true;^354^^^^^349^361^codeChanged = true;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] addAliasNodes [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  AliasSpecification  spec  Node  codeRoot  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P13_Insert_Block]^if  ( spec.maybeInsertAliasDeclarationIntoParseTree ( codeRoot )  )  {     codeChanged = true; }^353^^^^^349^361^[Delete]^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] addAliasNodes [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  AliasSpecification  spec  Node  codeRoot  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^if  ( isAliased )  {^358^^^^^349^361^if  ( codeChanged )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] addAliasNodes [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  AliasSpecification  spec  Node  codeRoot  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P15_Unwrap_Block]^compiler.reportCodeChange();^358^359^360^^^349^361^if  ( codeChanged )  { compiler.reportCodeChange (  ) ; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] addAliasNodes [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  AliasSpecification  spec  Node  codeRoot  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P16_Remove_Block]^^358^359^360^^^349^361^if  ( codeChanged )  { compiler.reportCodeChange (  ) ; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] addAliasNodes [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  AliasSpecification  spec  Node  codeRoot  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^359^^^^^349^361^compiler.reportCodeChange (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] addAliasNodes [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  AliasSpecification  spec  Node  codeRoot  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P13_Insert_Block]^if  ( codeChanged )  {     compiler.reportCodeChange (  ) ; }^359^^^^^349^361^[Delete]^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] addAliasNodes [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  AliasSpecification  spec  Node  codeRoot  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^compiler .getNodeForCodeInsertion ( null )  ;^359^^^^^349^361^compiler.reportCodeChange (  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] addAliasNodes [RETURN_TYPE] void   Node codeRoot [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  AliasSpecification  spec  Node  codeRoot  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P2_Replace_Operator]^if  ( n.getType (  )  < Token.NAME )  {^367^^^^^366^381^if  ( n.getType (  )  != Token.NAME )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^if  ( n.Node (  )  != Token.NAME )  {^367^^^^^366^381^if  ( n.getType (  )  != Token.NAME )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^if  ( n .getString (  )   != Token.NAME )  {^367^^^^^366^381^if  ( n.getType (  )  != Token.NAME )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P15_Unwrap_Block]^return false;^367^368^369^^^366^381^if  ( n.getType (  )  != Token.NAME )  { return false; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P16_Remove_Block]^^367^368^369^^^366^381^if  ( n.getType (  )  != Token.NAME )  { return false; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P13_Insert_Block]^if  ( type ==  ( NAME )  )  {     visitNameNode ( n ) ; }^367^^^^^366^381^[Delete]^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^return true;^368^^^^^366^381^return false;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^if  ( !isAliasableType ( n.getString (  )  )  )  {^371^^^^^366^381^if  ( !isAliasName ( n.getString (  )  )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^if  ( !isAliasName ( n.Node (  )  )  )  {^371^^^^^366^381^if  ( !isAliasName ( n.getString (  )  )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P15_Unwrap_Block]^return false;^371^372^373^374^^366^381^if  ( !isAliasName ( n.getString (  )  )  )  {  return false; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P16_Remove_Block]^^371^372^373^374^^366^381^if  ( !isAliasName ( n.getString (  )  )  )  {  return false; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P13_Insert_Block]^if  ( ! ( isEmpty (  )  )  )  {     return true; }^371^^^^^366^381^[Delete]^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P3_Replace_Literal]^return true;^373^^^^^366^381^return false;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^if  ( !isAliasName ( n .newString ( ALIAS_THROW )   )  )  {^371^^^^^366^381^if  ( !isAliasName ( n.getString (  )  )  )  {^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P2_Replace_Operator]^return n.getFirstChild (  )  == null;^380^^^^^366^381^return n.getFirstChild (  )  != null;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^return n.Node (  )  != null;^380^^^^^366^381^return n.getFirstChild (  )  != null;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^return n .removeFirstChild (  )   != null;^380^^^^^366^381^return n.getFirstChild (  )  != null;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^380^^^^^366^381^return n.getFirstChild (  )  != null;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasDefinition [RETURN_TYPE] boolean   Node n [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  Node  n  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return aliasTypes.containsKey ( tokenId ) ;^387^^^^^386^388^return aliasTypes.containsKey ( type ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasableType [RETURN_TYPE] boolean   int type [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return type.containsKey ( aliasTypes ) ;^387^^^^^386^388^return aliasTypes.containsKey ( type ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasableType [RETURN_TYPE] boolean   int type [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^return aliasTypes.get ( type ) ;^387^^^^^386^388^return aliasTypes.containsKey ( type ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasableType [RETURN_TYPE] boolean   int type [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^387^^^^^386^388^return aliasTypes.containsKey ( type ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasableType [RETURN_TYPE] boolean   int type [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return name.contains ( aliasNames ) ;^394^^^^^393^395^return aliasNames.contains ( name ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasName [RETURN_TYPE] boolean   String name [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P7_Replace_Invocation]^return aliasNames.add ( name ) ;^394^^^^^393^395^return aliasNames.contains ( name ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasName [RETURN_TYPE] boolean   String name [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return aliasNames.contains ( aliasName ) ;^394^^^^^393^395^return aliasNames.contains ( name ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasName [RETURN_TYPE] boolean   String name [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return 3.contains ( name ) ;^394^^^^^393^395^return aliasNames.contains ( name ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasName [RETURN_TYPE] boolean   String name [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^return aliasNames.add ( aliasName ) ;^394^^^^^393^395^return aliasNames.contains ( name ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasName [RETURN_TYPE] boolean   String name [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^394^^^^^393^395^return aliasNames.contains ( name ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] isAliasName [RETURN_TYPE] boolean   String name [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P4_Replace_Constructor]^l.add ( l.add (  new KeywordAliasSpecification ( ALIAS_TRUE, TRUE )   ) ;^404^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_FALSE, Token.FALSE )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^l.add ( new KeywordAliasSpecification ( name, Token.FALSE )  ) ;^404^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_FALSE, Token.FALSE )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^l.add ( new KeywordAliasSpecification (  Token.FALSE )  ) ;^404^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_FALSE, Token.FALSE )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^l.add ( new KeywordAliasSpecification ( ALIAS_ Token.FALSE )  ) ;^404^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_FALSE, Token.FALSE )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^l.add ( new KeywordAliasSpecification ( aliasName, Token.FALSE )  ) ;^404^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_FALSE, Token.FALSE )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P4_Replace_Constructor]^l.add ( l.add (  new KeywordAliasSpecification ( ALIAS_TRUE, TRUE )   ) ;^405^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_NULL, Token.NULL )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^l.add ( new KeywordAliasSpecification ( name, Token.NULL )  ) ;^405^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_NULL, Token.NULL )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^l.add ( new KeywordAliasSpecification ( ALIAS_NULL, Token.null )  ) ;^405^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_NULL, Token.NULL )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^l.add ( new KeywordAliasSpecification (  Token.NULL )  ) ;^405^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_NULL, Token.NULL )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^l.add ( new KeywordAliasSpecification ( ALIAS_ Token.NULL )  ) ;^405^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_NULL, Token.NULL )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^l.add ( new KeywordAliasSpecification ( aliasName, Token.NULL )  ) ;^405^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_NULL, Token.NULL )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P4_Replace_Constructor]^l.add ( l.add (  new KeywordAliasSpecification ( ALIAS_FALSE, FALSE )   ) ;^406^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_TRUE, Token.TRUE )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^l.add ( new KeywordAliasSpecification ( aliasName, Token.TRUE )  ) ;^406^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_TRUE, Token.TRUE )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^l.add ( new KeywordAliasSpecification (  Token.TRUE )  ) ;^406^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_TRUE, Token.TRUE )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^l.add ( new KeywordAliasSpecification ( ALIAS_ Token.TRUE )  ) ;^406^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_TRUE, Token.TRUE )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P8_Replace_Mix]^l.add ( new KeywordAliasSpecification ( name, Token.TRUE )  ) ;^406^^^^^402^415^l.add ( new KeywordAliasSpecification ( ALIAS_TRUE, Token.TRUE )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P4_Replace_Constructor]^l.add ( l.add (  new KeywordAliasSpecification ( ALIAS_TRUE, TRUE )   ) ;^413^^^^^402^415^l.add ( new ThrowAliasSpecification ( ALIAS_THROW )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^l.add ( new ThrowAliasSpecification ( name )  ) ;^413^^^^^402^415^l.add ( new ThrowAliasSpecification ( ALIAS_THROW )  ) ;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P14_Delete_Statement]^^413^414^415^^^402^415^l.add ( new ThrowAliasSpecification ( ALIAS_THROW )  ) ; return l; }^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P5_Replace_Variable]^return this;^414^^^^^402^415^return l;^[CLASS] AliasKeywords FindAliasableNodes AliasSpecification ThrowAliasSpecification KeywordAliasSpecification  [METHOD] createAliasSpecifications [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  boolean  codeChanged  isAliased  Set  aliasNames  List  aliasSpecifications  l  parameters  String  ALIAS_FALSE  ALIAS_NULL  ALIAS_THROW  ALIAS_TRUE  aliasName  name  Map  aliasTypes  nodes  int  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_LITERAL  MIN_OCCURRENCES_REQUIRED_TO_ALIAS_THROW  tokenId  type  
[P1_Replace_Type]^final  short  type = n.getType (  ) ;^44^^^^^43^50^final int type = n.getType (  ) ;^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P5_Replace_Variable]^final int type = parent.getType (  ) ;^44^^^^^43^50^final int type = n.getType (  ) ;^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P7_Replace_Invocation]^final int type = n .tokenToName (  )  ;^44^^^^^43^50^final int type = n.getType (  ) ;^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P14_Delete_Statement]^^44^^^^^43^50^final int type = n.getType (  ) ;^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P7_Replace_Invocation]^if  ( isAliasDefinition ( type )  )  {^45^^^^^43^50^if  ( isAliasableType ( type )  )  {^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P15_Unwrap_Block]^visitAliasableNode(n, parent);^45^46^47^48^49^43^50^if  ( isAliasableType ( type )  )  { visitAliasableNode ( n, parent ) ; } else if  ( type == Token.NAME )  { visitNameNode ( n ) ; }^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P16_Remove_Block]^^45^46^47^48^49^43^50^if  ( isAliasableType ( type )  )  { visitAliasableNode ( n, parent ) ; } else if  ( type == Token.NAME )  { visitNameNode ( n ) ; }^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P2_Replace_Operator]^} else if  ( type != Token.NAME )  {^47^^^^^43^50^} else if  ( type == Token.NAME )  {^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P6_Replace_Expression]^} else {^47^^^^^43^50^} else if  ( type == Token.NAME )  {^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P8_Replace_Mix]^}  if  ( type == Token.NAME )  {^47^^^^^43^50^} else if  ( type == Token.NAME )  {^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P15_Unwrap_Block]^visitNameNode(n);^47^48^49^^^43^50^} else if  ( type == Token.NAME )  { visitNameNode ( n ) ; }^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P16_Remove_Block]^^47^48^49^^^43^50^} else if  ( type == Token.NAME )  { visitNameNode ( n ) ; }^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P5_Replace_Variable]^visitNameNode ( parent ) ;^48^^^^^43^50^visitNameNode ( n ) ;^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P14_Delete_Statement]^^48^^^^^43^50^visitNameNode ( n ) ;^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P11_Insert_Donor_Statement]^visitAliasableNode ( n, parent ) ;visitNameNode ( n ) ;^48^^^^^43^50^visitNameNode ( n ) ;^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P5_Replace_Variable]^visitAliasableNode (  parent ) ;^46^^^^^43^50^visitAliasableNode ( n, parent ) ;^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P5_Replace_Variable]^visitAliasableNode ( n ) ;^46^^^^^43^50^visitAliasableNode ( n, parent ) ;^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P5_Replace_Variable]^visitAliasableNode ( parent, n ) ;^46^^^^^43^50^visitAliasableNode ( n, parent ) ;^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P14_Delete_Statement]^^46^^^^^43^50^visitAliasableNode ( n, parent ) ;^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P11_Insert_Donor_Statement]^visitNameNode ( n ) ;visitAliasableNode ( n, parent ) ;^46^^^^^43^50^visitAliasableNode ( n, parent ) ;^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P11_Insert_Donor_Statement]^aliasableNodes.visit ( n, parent ) ;visitAliasableNode ( n, parent ) ;^46^^^^^43^50^visitAliasableNode ( n, parent ) ;^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P2_Replace_Operator]^} else if  ( type <= Token.NAME )  {^47^^^^^43^50^} else if  ( type == Token.NAME )  {^[CLASS] FindAliasableNodes  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  int  type  
[P5_Replace_Variable]^AliasSpecification aliasableNodes = aliasTypes.get ( parent.getType (  )  ) ;^57^^^^^56^59^AliasSpecification aliasableNodes = aliasTypes.get ( n.getType (  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  AliasSpecification  aliasableNodes  Node  n  parent  
[P5_Replace_Variable]^AliasSpecification aliasableNodes = n.get ( aliasTypes.getType (  )  ) ;^57^^^^^56^59^AliasSpecification aliasableNodes = aliasTypes.get ( n.getType (  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  AliasSpecification  aliasableNodes  Node  n  parent  
[P7_Replace_Invocation]^AliasSpecification aliasableNodes = aliasTypes.get ( n .tokenToName (  )   ) ;^57^^^^^56^59^AliasSpecification aliasableNodes = aliasTypes.get ( n.getType (  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  AliasSpecification  aliasableNodes  Node  n  parent  
[P14_Delete_Statement]^^57^58^59^^^56^59^AliasSpecification aliasableNodes = aliasTypes.get ( n.getType (  )  ) ; aliasableNodes.visit ( n, parent ) ; }^[CLASS] FindAliasableNodes  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  AliasSpecification  aliasableNodes  Node  n  parent  
[P5_Replace_Variable]^aliasableNodes.visit (  parent ) ;^58^^^^^56^59^aliasableNodes.visit ( n, parent ) ;^[CLASS] FindAliasableNodes  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  AliasSpecification  aliasableNodes  Node  n  parent  
[P5_Replace_Variable]^aliasableNodes.visit ( n ) ;^58^^^^^56^59^aliasableNodes.visit ( n, parent ) ;^[CLASS] FindAliasableNodes  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  AliasSpecification  aliasableNodes  Node  n  parent  
[P5_Replace_Variable]^aliasableNodes.visit ( parent, n ) ;^58^^^^^56^59^aliasableNodes.visit ( n, parent ) ;^[CLASS] FindAliasableNodes  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  AliasSpecification  aliasableNodes  Node  n  parent  
[P7_Replace_Invocation]^aliasableNodes .visit ( n , n )  ;^58^^^^^56^59^aliasableNodes.visit ( n, parent ) ;^[CLASS] FindAliasableNodes  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  AliasSpecification  aliasableNodes  Node  n  parent  
[P14_Delete_Statement]^^58^^^^^56^59^aliasableNodes.visit ( n, parent ) ;^[CLASS] FindAliasableNodes  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  AliasSpecification  aliasableNodes  Node  n  parent  
[P11_Insert_Donor_Statement]^visitAliasableNode ( n, parent ) ;aliasableNodes.visit ( n, parent ) ;^58^^^^^56^59^aliasableNodes.visit ( n, parent ) ;^[CLASS] FindAliasableNodes  [METHOD] visitAliasableNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  AliasSpecification  aliasableNodes  Node  n  parent  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException(("Existing alias definition for " + (com.google.javascript.rhino.Node.tokenToName(n.getType()))));^66^67^68^69^^65^70^if  ( isAliasDefinition ( n )  )  { throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ; }^[CLASS] FindAliasableNodes  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P16_Remove_Block]^^66^67^68^69^^65^70^if  ( isAliasDefinition ( n )  )  { throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ; }^[CLASS] FindAliasableNodes  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P2_Replace_Operator]^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  &  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P3_Replace_Literal]^throw new IllegalStateException ( "ias defixisting alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P7_Replace_Invocation]^throw new IllegalStateException ( "Existing alias definition for " + Node .getType (  )   ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P7_Replace_Invocation]^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n .tokenToName (  )   )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P13_Insert_Block]^if  ( isAliasDefinition ( n )  )  {     throw new IllegalStateException (  ( "Existing alias definition for " +  ( tokenToName ( n.getType (  )  )  )  )  ) ; }^67^^^^^65^70^[Delete]^[CLASS] FindAliasableNodes  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P2_Replace_Operator]^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  <<  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P3_Replace_Literal]^throw new IllegalStateException ( "efinitxisting alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P14_Delete_Statement]^^68^69^^^^65^70^"Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ; }^[CLASS] FindAliasableNodes  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P2_Replace_Operator]^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  >  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P3_Replace_Literal]^throw new IllegalStateException ( "Existing alias definition for g" + Node.tokenToName ( n.getType (  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P2_Replace_Operator]^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  !=  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P3_Replace_Literal]^throw new IllegalStateException ( " defixisting alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^67^68^^^^65^70^throw new IllegalStateException ( "Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P7_Replace_Invocation]^"Existing alias definition for " + Node.tokenToName ( n .tokenToName (  )   )  ) ;^68^^^^^65^70^"Existing alias definition for " + Node.tokenToName ( n.getType (  )  )  ) ;^[CLASS] FindAliasableNodes  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P8_Replace_Mix]^private final Map<Node, Node> nodes ;^81^^^^^76^86^private final Map<Node, Node> nodes = Maps.newHashMap (  ) ;^[CLASS] AliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P3_Replace_Literal]^private boolean isAliased = true;^87^^^^^82^92^private boolean isAliased = false;^[CLASS] AliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P1_Replace_Type]^private char aliasName;^89^^^^^84^94^private String aliasName;^[CLASS] AliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P1_Replace_Type]^private  long  tokenId;^91^^^^^86^96^private int tokenId;^[CLASS] AliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P8_Replace_Mix]^private  short  tokenId;^91^^^^^86^96^private int tokenId;^[CLASS] AliasSpecification  [METHOD] visitNameNode [RETURN_TYPE] void   Node n [VARIABLES] boolean  Node  n  
[P8_Replace_Mix]^this.aliasName =  null;^98^^^^^97^100^this.aliasName = aliasName;^[CLASS] AliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  
[P8_Replace_Mix]^this.tokenId =  null;^99^^^^^97^100^this.tokenId = tokenId;^[CLASS] AliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  
[P5_Replace_Variable]^nodes.put ( n, n ) ;^103^^^^^102^104^nodes.put ( n, parent ) ;^[CLASS] AliasSpecification  [METHOD] visit [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  n  parent  
[P5_Replace_Variable]^nodes.put (  parent ) ;^103^^^^^102^104^nodes.put ( n, parent ) ;^[CLASS] AliasSpecification  [METHOD] visit [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  n  parent  
[P5_Replace_Variable]^nodes.put ( n ) ;^103^^^^^102^104^nodes.put ( n, parent ) ;^[CLASS] AliasSpecification  [METHOD] visit [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  n  parent  
[P5_Replace_Variable]^nodes.put ( parent, n ) ;^103^^^^^102^104^nodes.put ( n, parent ) ;^[CLASS] AliasSpecification  [METHOD] visit [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  n  parent  
[P8_Replace_Mix]^nodes .entrySet (  )  ;^103^^^^^102^104^nodes.put ( n, parent ) ;^[CLASS] AliasSpecification  [METHOD] visit [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  n  parent  
[P14_Delete_Statement]^^103^^^^^102^104^nodes.put ( n, parent ) ;^[CLASS] AliasSpecification  [METHOD] visit [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  n  parent  
[P11_Insert_Donor_Statement]^aliasNode ( n, parent ) ;nodes.put ( n, parent ) ;^103^^^^^102^104^nodes.put ( n, parent ) ;^[CLASS] AliasSpecification  [METHOD] visit [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  n  parent  
[P2_Replace_Operator]^if  ( nodes.size (  )  > minOccurrencesRequiredToAlias (  )  )  {^114^^^^^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  {^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[P3_Replace_Literal]^if  ( nodes.size() - 2  >= minOccurrencesRequiredToAlias (  )  )  {^114^^^^^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  {^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[P5_Replace_Variable]^if  ( 1.size (  )  >= minOccurrencesRequiredToAlias (  )  )  {^114^^^^^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  {^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[P7_Replace_Invocation]^if  ( nodes.entrySet (  )  >= minOccurrencesRequiredToAlias (  )  )  {^114^^^^^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  {^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[P15_Unwrap_Block]^insertAliasDeclaration(codeRoot); isAliased = true; return true;^114^115^116^117^118^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  { insertAliasDeclaration ( codeRoot ) ; isAliased = true; return true; }^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[P16_Remove_Block]^^114^115^116^117^118^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  { insertAliasDeclaration ( codeRoot ) ; isAliased = true; return true; }^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[P3_Replace_Literal]^isAliased = false;^116^^^^^113^120^isAliased = true;^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[P3_Replace_Literal]^return false;^117^^^^^113^120^return true;^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[P7_Replace_Invocation]^maybeInsertAliasDeclarationIntoParseTree ( codeRoot ) ;^115^^^^^113^120^insertAliasDeclaration ( codeRoot ) ;^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[P14_Delete_Statement]^^115^116^^^^113^120^insertAliasDeclaration ( codeRoot ) ; isAliased = true;^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[P3_Replace_Literal]^if  ( nodes.size() + 4  >= minOccurrencesRequiredToAlias (  )  )  {^114^^^^^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  {^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[P8_Replace_Mix]^if  ( null .entrySet (  )   >= minOccurrencesRequiredToAlias (  )  )  {^114^^^^^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  {^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[P3_Replace_Literal]^if  ( nodes.size() + 3  >= minOccurrencesRequiredToAlias (  )  )  {^114^^^^^113^120^if  ( nodes.size (  )  >= minOccurrencesRequiredToAlias (  )  )  {^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[P14_Delete_Statement]^^115^^^^^113^120^insertAliasDeclaration ( codeRoot ) ;^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[P3_Replace_Literal]^return true;^119^^^^^113^120^return false;^[CLASS] AliasSpecification  [METHOD] maybeInsertAliasDeclarationIntoParseTree [RETURN_TYPE] boolean   Node codeRoot [VARIABLES] boolean  isAliased  String  aliasName  Map  nodes  int  tokenId  Node  codeRoot  
[P7_Replace_Invocation]^Node n = entry .getValue (  )  ;^129^^^^^126^135^Node n = entry.getKey (  ) ;^[CLASS] AliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Node  n  parent  String  aliasName  Map  nodes  int  tokenId  
[P11_Insert_Donor_Statement]^Node parent = entry.getValue (  ) ;Node n = entry.getKey (  ) ;^129^^^^^126^135^Node n = entry.getKey (  ) ;^[CLASS] AliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Node  n  parent  String  aliasName  Map  nodes  int  tokenId  
[P8_Replace_Mix]^Node parent = entry .getKey (  )  ;^130^^^^^126^135^Node parent = entry.getValue (  ) ;^[CLASS] AliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Node  n  parent  String  aliasName  Map  nodes  int  tokenId  
[P11_Insert_Donor_Statement]^Node n = entry.getKey (  ) ;Node parent = entry.getValue (  ) ;^130^^^^^126^135^Node parent = entry.getValue (  ) ;^[CLASS] AliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Node  n  parent  String  aliasName  Map  nodes  int  tokenId  
[P7_Replace_Invocation]^for  ( Map.Entry<Node, Node> entry : nodes.size (  )  )  {^128^^^^^126^135^for  ( Map.Entry<Node, Node> entry : nodes.entrySet (  )  )  {^[CLASS] AliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Node  n  parent  String  aliasName  Map  nodes  int  tokenId  
[P14_Delete_Statement]^^128^129^130^131^132^126^135^for  ( Map.Entry<Node, Node> entry : nodes.entrySet (  )  )  { Node n = entry.getKey (  ) ; Node parent = entry.getValue (  ) ; aliasNode ( n, parent ) ; compiler.reportCodeChange (  ) ; }^[CLASS] AliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Node  n  parent  String  aliasName  Map  nodes  int  tokenId  
[P14_Delete_Statement]^^129^^^^^126^135^Node n = entry.getKey (  ) ;^[CLASS] AliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Node  n  parent  String  aliasName  Map  nodes  int  tokenId  
[P14_Delete_Statement]^^130^131^^^^126^135^Node parent = entry.getValue (  ) ; aliasNode ( n, parent ) ;^[CLASS] AliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Node  n  parent  String  aliasName  Map  nodes  int  tokenId  
[P5_Replace_Variable]^aliasNode (  parent ) ;^131^^^^^126^135^aliasNode ( n, parent ) ;^[CLASS] AliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Node  n  parent  String  aliasName  Map  nodes  int  tokenId  
[P5_Replace_Variable]^aliasNode ( n ) ;^131^^^^^126^135^aliasNode ( n, parent ) ;^[CLASS] AliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Node  n  parent  String  aliasName  Map  nodes  int  tokenId  
[P5_Replace_Variable]^aliasNode ( parent, n ) ;^131^^^^^126^135^aliasNode ( n, parent ) ;^[CLASS] AliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Node  n  parent  String  aliasName  Map  nodes  int  tokenId  
[P7_Replace_Invocation]^visit ( n, parent ) ;^131^^^^^126^135^aliasNode ( n, parent ) ;^[CLASS] AliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Node  n  parent  String  aliasName  Map  nodes  int  tokenId  
[P14_Delete_Statement]^^131^132^^^^126^135^aliasNode ( n, parent ) ; compiler.reportCodeChange (  ) ;^[CLASS] AliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Node  n  parent  String  aliasName  Map  nodes  int  tokenId  
[P11_Insert_Donor_Statement]^nodes.put ( n, parent ) ;aliasNode ( n, parent ) ;^131^^^^^126^135^aliasNode ( n, parent ) ;^[CLASS] AliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Node  n  parent  String  aliasName  Map  nodes  int  tokenId  
[P14_Delete_Statement]^^132^^^^^126^135^compiler.reportCodeChange (  ) ;^[CLASS] AliasSpecification  [METHOD] doAlias [RETURN_TYPE] void   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Entry  entry  boolean  isAliased  Node  n  parent  String  aliasName  Map  nodes  int  tokenId  
[P14_Delete_Statement]^^167^^^^^166^168^super ( aliasName, Token.THROW ) ;^[CLASS] ThrowAliasSpecification  [METHOD] <init> [RETURN_TYPE] String)   String aliasName [VARIABLES] boolean  String  aliasName  
[P5_Replace_Variable]^Node name = NodeUtil.newName ( getAliasName (  ) , parent, getAliasName (  )  ) ;^173^^^^^172^177^Node name = NodeUtil.newName ( getAliasName (  ) , throwNode, getAliasName (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P14_Delete_Statement]^^173^^^^^172^177^Node name = NodeUtil.newName ( getAliasName (  ) , throwNode, getAliasName (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P14_Delete_Statement]^^173^174^^^^172^177^Node name = NodeUtil.newName ( getAliasName (  ) , throwNode, getAliasName (  )  ) ; Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P4_Replace_Constructor]^Node aliasCall = new Node ( Token.CALL,  throwNode.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P4_Replace_Constructor]^Node aliasCall = new Node ( Token.CALL, name.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P5_Replace_Variable]^Node aliasCall = new Node ( Token.CALL, throwNode, throwNode.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P5_Replace_Variable]^Node aliasCall = new Node ( Token.CALL, name, parent.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P5_Replace_Variable]^Node aliasCall = new Node ( Token. name, throwNode.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P5_Replace_Variable]^Node aliasCall = new Node ( Token.CALL, throwNode, name.removeFirstChild (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P7_Replace_Invocation]^Node aliasCall = new Node ( Token.CALL, name, throwNode.newString (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P8_Replace_Mix]^Node aliasCall = new Node ( Token.CALL, name, parent.newString (  )  ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P7_Replace_Invocation]^Node aliasCall = new Node ( Token.CALL, name, throwNode .replaceChild ( throwNode , aliasCall )   ) ;^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P14_Delete_Statement]^^174^^^^^172^177^Node aliasCall = new Node ( Token.CALL, name, throwNode.removeFirstChild (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P5_Replace_Variable]^Node exprResult = new Node ( Token.EXPR_RESULT, throwNode ) ;^175^^^^^172^177^Node exprResult = new Node ( Token.EXPR_RESULT, aliasCall ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P5_Replace_Variable]^Node exprResult = new Node ( Token.EXPR_RESULT ) ;^175^^^^^172^177^Node exprResult = new Node ( Token.EXPR_RESULT, aliasCall ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P5_Replace_Variable]^Node exprResult = new Node ( Token. aliasCall ) ;^175^^^^^172^177^Node exprResult = new Node ( Token.EXPR_RESULT, aliasCall ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P8_Replace_Mix]^Node exprResult = new Node ( Token.EXPR_RESULT, parent ) ;^175^^^^^172^177^Node exprResult = new Node ( Token.EXPR_RESULT, aliasCall ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P5_Replace_Variable]^parent.replaceChild ( parent, exprResult ) ;^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P5_Replace_Variable]^parent.replaceChild ( throwNode, parent ) ;^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P5_Replace_Variable]^parent.replaceChild (  exprResult ) ;^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P5_Replace_Variable]^parent.replaceChild ( throwNode ) ;^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P5_Replace_Variable]^parent.replaceChild ( exprResult, throwNode ) ;^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P14_Delete_Statement]^^176^^^^^172^177^parent.replaceChild ( throwNode, exprResult ) ;^[CLASS] ThrowAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node throwNode Node parent [VARIABLES] boolean  Node  aliasCall  exprResult  name  parent  throwNode  
[P7_Replace_Invocation]^codeRoot.newString ( createAliasFunctionNode ( getAliasName (  )  )  ) ;^184^^^^^183^185^codeRoot.addChildToFront ( createAliasFunctionNode ( getAliasName (  )  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  
[P14_Delete_Statement]^^184^^^^^183^185^codeRoot.addChildToFront ( createAliasFunctionNode ( getAliasName (  )  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  
[P7_Replace_Invocation]^Node alias = insertAliasDeclaration ( "TT" ) ;^206^^^^^197^208^Node alias = createAliasFunctionNode ( "TT" ) ;^[CLASS] ThrowAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] boolean  Node  alias  
[P3_Replace_Literal]^Node alias = createAliasFunctionNode ( "T" ) ;^206^^^^^197^208^Node alias = createAliasFunctionNode ( "TT" ) ;^[CLASS] ThrowAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] boolean  Node  alias  
[P14_Delete_Statement]^^206^^^^^197^208^Node alias = createAliasFunctionNode ( "TT" ) ;^[CLASS] ThrowAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] boolean  Node  alias  
[P2_Replace_Operator]^return InlineCostEstimator.getCost ( alias )  |  / 2 + 1;^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] ThrowAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] boolean  Node  alias  
[P2_Replace_Operator]^return InlineCostEstimator.getCost ( alias )  + 2 + 1;^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] ThrowAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] boolean  Node  alias  
[P3_Replace_Literal]^return InlineCostEstimator.getCost ( alias )  / 11 + 1;^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] ThrowAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] boolean  Node  alias  
[P3_Replace_Literal]^return InlineCostEstimator.getCost ( alias )  / 2 ;^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] ThrowAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] boolean  Node  alias  
[P8_Replace_Mix]^return true ;^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] ThrowAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] boolean  Node  alias  
[P14_Delete_Statement]^^207^^^^^197^208^return InlineCostEstimator.getCost ( alias )  / 2 + 1;^[CLASS] ThrowAliasSpecification  [METHOD] estimateMinOccurrencesRequriedToAlias [RETURN_TYPE] int   [VARIABLES] boolean  Node  alias  
[P7_Replace_Invocation]^Node parameterName = Node.addChildToFront ( Token.NAME, "t" ) ;^215^^^^^214^220^Node parameterName = Node.newString ( Token.NAME, "t" ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P3_Replace_Literal]^Node parameterName = Node.newString ( Token.NAME, "" ) ;^215^^^^^214^220^Node parameterName = Node.newString ( Token.NAME, "t" ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P14_Delete_Statement]^^215^^^^^214^220^Node parameterName = Node.newString ( Token.NAME, "t" ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P5_Replace_Variable]^List<Node> parameters = Lists.newArrayList ( throwStatement.cloneNode (  )  ) ;^216^^^^^214^220^List<Node> parameters = Lists.newArrayList ( parameterName.cloneNode (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P7_Replace_Invocation]^List<Node> parameters = Lists.newArrayList ( parameterName.newString (  )  ) ;^216^^^^^214^220^List<Node> parameters = Lists.newArrayList ( parameterName.cloneNode (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P8_Replace_Mix]^List<Node> parameters = Lists.newArrayList ( throwStatement.newString (  )  ) ;^216^^^^^214^220^List<Node> parameters = Lists.newArrayList ( parameterName.cloneNode (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P7_Replace_Invocation]^List<Node> parameters = Lists.newArrayList ( parameterName .addChildToFront ( parameterName )   ) ;^216^^^^^214^220^List<Node> parameters = Lists.newArrayList ( parameterName.cloneNode (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P14_Delete_Statement]^^216^^^^^214^220^List<Node> parameters = Lists.newArrayList ( parameterName.cloneNode (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P7_Replace_Invocation]^List<Node> parameters = Lists.newArrayList ( parameterName .addChildToFront ( throwStatement )   ) ;^216^^^^^214^220^List<Node> parameters = Lists.newArrayList ( parameterName.cloneNode (  )  ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P5_Replace_Variable]^Node throwStatement = new Node ( Token.THROW, throwStatement ) ;^217^^^^^214^220^Node throwStatement = new Node ( Token.THROW, parameterName ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P5_Replace_Variable]^Node throwStatement = new Node ( Token.THROW ) ;^217^^^^^214^220^Node throwStatement = new Node ( Token.THROW, parameterName ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P5_Replace_Variable]^Node throwStatement = new Node ( Token. parameterName ) ;^217^^^^^214^220^Node throwStatement = new Node ( Token.THROW, parameterName ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P5_Replace_Variable]^Node throwStatement = new Node ( Token.THROW, body ) ;^217^^^^^214^220^Node throwStatement = new Node ( Token.THROW, parameterName ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P11_Insert_Donor_Statement]^Node body = new Node ( Token.BLOCK, throwStatement ) ;Node throwStatement = new Node ( Token.THROW, parameterName ) ;^217^^^^^214^220^Node throwStatement = new Node ( Token.THROW, parameterName ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P5_Replace_Variable]^Node body = new Node ( Token.BLOCK, parameterName ) ;^218^^^^^214^220^Node body = new Node ( Token.BLOCK, throwStatement ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P5_Replace_Variable]^Node body = new Node ( Token.BLOCK ) ;^218^^^^^214^220^Node body = new Node ( Token.BLOCK, throwStatement ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P5_Replace_Variable]^Node body = new Node ( Token. throwStatement ) ;^218^^^^^214^220^Node body = new Node ( Token.BLOCK, throwStatement ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P11_Insert_Donor_Statement]^Node throwStatement = new Node ( Token.THROW, parameterName ) ;Node body = new Node ( Token.BLOCK, throwStatement ) ;^218^^^^^214^220^Node body = new Node ( Token.BLOCK, throwStatement ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P3_Replace_Literal]^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -6, -6 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P3_Replace_Literal]^return NodeUtil.newFunctionNode ( aliasName, parameters, body, --8, --8 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P5_Replace_Variable]^return NodeUtil.newFunctionNode ( aliasName, parameters, throwStatement, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P5_Replace_Variable]^return NodeUtil.newFunctionNode (  parameters, body, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P5_Replace_Variable]^return NodeUtil.newFunctionNode ( aliasName,  body, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P5_Replace_Variable]^return NodeUtil.newFunctionNode ( aliasName, parameters,  -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P5_Replace_Variable]^return NodeUtil.newFunctionNode ( parameters, aliasName, body, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P5_Replace_Variable]^return NodeUtil.newFunctionNode ( aliasName, body, parameters, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P8_Replace_Mix]^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -4, -4 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P3_Replace_Literal]^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -10, -10 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P3_Replace_Literal]^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -2, -2 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P5_Replace_Variable]^return NodeUtil.newFunctionNode ( body, parameters, aliasName, -1, -1 ) ;^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P14_Delete_Statement]^^219^^^^^214^220^return NodeUtil.newFunctionNode ( aliasName, parameters, body, -1, -1 ) ;^[CLASS] ThrowAliasSpecification  [METHOD] createAliasFunctionNode [RETURN_TYPE] Node   String aliasName [VARIABLES] boolean  Node  body  parameterName  throwStatement  List  parameters  String  aliasName  
[P5_Replace_Variable]^super (  tokenId ) ;^226^^^^^225^227^super ( aliasName, tokenId ) ;^[CLASS] KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] boolean  String  aliasName  int  tokenId  
[P5_Replace_Variable]^super ( aliasName ) ;^226^^^^^225^227^super ( aliasName, tokenId ) ;^[CLASS] KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] boolean  String  aliasName  int  tokenId  
[P5_Replace_Variable]^super ( tokenId, aliasName ) ;^226^^^^^225^227^super ( aliasName, tokenId ) ;^[CLASS] KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] boolean  String  aliasName  int  tokenId  
[P14_Delete_Statement]^^226^^^^^225^227^super ( aliasName, tokenId ) ;^[CLASS] KeywordAliasSpecification  [METHOD] <init> [RETURN_TYPE] String,int)   String aliasName int tokenId [VARIABLES] boolean  String  aliasName  int  tokenId  
[P5_Replace_Variable]^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , parent, getAliasName (  )  ) ;^238^^^^^237^240^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ;^[CLASS] KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  Node  aliasNode  n  parent  
[P7_Replace_Invocation]^Node aliasNode = NodeUtil.newName ( getTokenId (  ) , n, getAliasName (  )  ) ;^238^^^^^237^240^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ;^[CLASS] KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  Node  aliasNode  n  parent  
[P8_Replace_Mix]^Node aliasNode = NodeUtil.newName ( getTokenId (  ) , parent, getAliasName (  )  ) ;^238^^^^^237^240^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ;^[CLASS] KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  Node  aliasNode  n  parent  
[P11_Insert_Donor_Statement]^Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ;^238^^^^^237^240^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ;^[CLASS] KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  Node  aliasNode  n  parent  
[P14_Delete_Statement]^^238^239^^^^237^240^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ; parent.replaceChild ( n, aliasNode ) ;^[CLASS] KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  Node  aliasNode  n  parent  
[P14_Delete_Statement]^^238^^^^^237^240^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ;^[CLASS] KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  Node  aliasNode  n  parent  
[P5_Replace_Variable]^parent.replaceChild ( parent, aliasNode ) ;^239^^^^^237^240^parent.replaceChild ( n, aliasNode ) ;^[CLASS] KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  Node  aliasNode  n  parent  
[P5_Replace_Variable]^parent.replaceChild (  aliasNode ) ;^239^^^^^237^240^parent.replaceChild ( n, aliasNode ) ;^[CLASS] KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  Node  aliasNode  n  parent  
[P5_Replace_Variable]^parent.replaceChild ( n ) ;^239^^^^^237^240^parent.replaceChild ( n, aliasNode ) ;^[CLASS] KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  Node  aliasNode  n  parent  
[P5_Replace_Variable]^parent.replaceChild ( aliasNode, n ) ;^239^^^^^237^240^parent.replaceChild ( n, aliasNode ) ;^[CLASS] KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  Node  aliasNode  n  parent  
[P8_Replace_Mix]^parent.replaceChild ( aliasNode, aliasNode ) ;^239^^^^^237^240^parent.replaceChild ( n, aliasNode ) ;^[CLASS] KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  Node  aliasNode  n  parent  
[P14_Delete_Statement]^^239^^^^^237^240^parent.replaceChild ( n, aliasNode ) ;^[CLASS] KeywordAliasSpecification  [METHOD] aliasNode [RETURN_TYPE] void   Node n Node parent [VARIABLES] boolean  Node  aliasNode  n  parent  
[P11_Insert_Donor_Statement]^Node value = new Node ( getTokenId (  )  ) ;Node varNode = new Node ( Token.VAR ) ;^247^^^^^246^253^Node varNode = new Node ( Token.VAR ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P7_Replace_Invocation]^Node value = new Node ( getAliasName (  )  ) ;^248^^^^^246^253^Node value = new Node ( getTokenId (  )  ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P11_Insert_Donor_Statement]^Node varNode = new Node ( Token.VAR ) ;Node value = new Node ( getTokenId (  )  ) ;^248^^^^^246^253^Node value = new Node ( getTokenId (  )  ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P14_Delete_Statement]^^248^^^^^246^253^Node value = new Node ( getTokenId (  )  ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P5_Replace_Variable]^Node name = NodeUtil.newName ( getAliasName (  ) , value, getAliasName (  )  ) ;^249^^^^^246^253^Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P7_Replace_Invocation]^Node name = NodeUtil.newName ( getTokenId (  ) , varNode, getAliasName (  )  ) ;^249^^^^^246^253^Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P11_Insert_Donor_Statement]^Node aliasNode = NodeUtil.newName ( getAliasName (  ) , n, getAliasName (  )  ) ;Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;^249^^^^^246^253^Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P14_Delete_Statement]^^249^250^^^^246^253^Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ; name.addChildToBack ( value ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P14_Delete_Statement]^^249^^^^^246^253^Node name = NodeUtil.newName ( getAliasName (  ) , varNode, getAliasName (  )  ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P5_Replace_Variable]^name.addChildToBack ( varNode ) ;^250^^^^^246^253^name.addChildToBack ( value ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P7_Replace_Invocation]^name.replaceChild ( value ) ;^250^^^^^246^253^name.addChildToBack ( value ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P8_Replace_Mix]^name .addChildrenToFront ( varNode )  ;^250^^^^^246^253^name.addChildToBack ( value ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P14_Delete_Statement]^^250^^^^^246^253^name.addChildToBack ( value ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P11_Insert_Donor_Statement]^codeRoot.addChildrenToFront ( varNode ) ;name.addChildToBack ( value ) ;^250^^^^^246^253^name.addChildToBack ( value ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P11_Insert_Donor_Statement]^varNode.addChildToBack ( name ) ;name.addChildToBack ( value ) ;^250^^^^^246^253^name.addChildToBack ( value ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P5_Replace_Variable]^varNode.addChildToBack ( value ) ;^251^^^^^246^253^varNode.addChildToBack ( name ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P7_Replace_Invocation]^varNode.replaceChild ( name ) ;^251^^^^^246^253^varNode.addChildToBack ( name ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P7_Replace_Invocation]^varNode .addChildrenToFront ( codeRoot )  ;^251^^^^^246^253^varNode.addChildToBack ( name ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P14_Delete_Statement]^^251^252^^^^246^253^varNode.addChildToBack ( name ) ; codeRoot.addChildrenToFront ( varNode ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P11_Insert_Donor_Statement]^codeRoot.addChildrenToFront ( varNode ) ;varNode.addChildToBack ( name ) ;^251^^^^^246^253^varNode.addChildToBack ( name ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P11_Insert_Donor_Statement]^name.addChildToBack ( value ) ;varNode.addChildToBack ( name ) ;^251^^^^^246^253^varNode.addChildToBack ( name ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P5_Replace_Variable]^codeRoot.addChildrenToFront ( value ) ;^252^^^^^246^253^codeRoot.addChildrenToFront ( varNode ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P7_Replace_Invocation]^codeRoot.replaceChild ( varNode ) ;^252^^^^^246^253^codeRoot.addChildrenToFront ( varNode ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P7_Replace_Invocation]^codeRoot .addChildToBack ( varNode )  ;^252^^^^^246^253^codeRoot.addChildrenToFront ( varNode ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P14_Delete_Statement]^^252^^^^^246^253^codeRoot.addChildrenToFront ( varNode ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P11_Insert_Donor_Statement]^name.addChildToBack ( value ) ;codeRoot.addChildrenToFront ( varNode ) ;^252^^^^^246^253^codeRoot.addChildrenToFront ( varNode ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
[P11_Insert_Donor_Statement]^varNode.addChildToBack ( name ) ;codeRoot.addChildrenToFront ( varNode ) ;^252^^^^^246^253^codeRoot.addChildrenToFront ( varNode ) ;^[CLASS] KeywordAliasSpecification  [METHOD] insertAliasDeclaration [RETURN_TYPE] void   Node codeRoot [VARIABLES] boolean  Node  codeRoot  name  value  varNode  
